{"version":3,"file":"libpag.min.js","sources":["../../../dev/libpag/web/src/utils/polyfills.ts","../../../dev/libpag/web/src/pag-module.ts","../../../dev/libpag/web/src/utils/decorators.ts","../../../dev/libpag/web/src/types.ts","../../../dev/libpag/web/src/core/matrix.ts","../../../dev/libpag/web/src/utils/type-utils.ts","../../../dev/libpag/web/src/pag-layer.ts","../../../dev/libpag/web/src/pag-composition.ts","../../../dev/libpag/web/src/utils/common.ts","../../../dev/libpag/web/src/utils/buffer.ts","../../../dev/libpag/web/src/pag-file.ts","../../../dev/libpag/web/src/pag-surface.ts","../../../dev/libpag/web/src/pag-player.ts","../../../dev/libpag/web/src/pag-image.ts","../../../dev/libpag/web/src/utils/event-manager.ts","../../../dev/libpag/web/src/constant.ts","../../../dev/libpag/web/src/utils/ua.ts","../../../dev/libpag/web/src/utils/canvas.ts","../../../dev/libpag/web/src/core/backend-context.ts","../../../dev/libpag/web/src/core/render-canvas.ts","../../../dev/libpag/web/src/utils/clock.ts","../../../dev/libpag/web/src/pag-view.ts","../../../dev/libpag/web/src/utils/font-family.ts","../../../dev/libpag/web/src/pag-font.ts","../../../dev/libpag/web/src/utils/video-listener.ts","../../../dev/libpag/web/src/worker/events.ts","../../../dev/libpag/web/src/worker/utils.ts","../../../dev/libpag/web/src/core/bitmap-image.ts","../../../dev/libpag/web/src/worker/video-reader.ts","../../../dev/libpag/web/src/core/video-reader.ts","../../../dev/libpag/web/src/utils/measure-text.ts","../../../dev/libpag/web/src/core/scaler-context.ts","../../../dev/libpag/web/src/core/web-mask.ts","../../../dev/libpag/web/src/core/global-canvas.ts","../../../dev/libpag/web/src/pag-text-layer.ts","../../../dev/libpag/web/src/pag-image-layer.ts","../../../dev/libpag/web/src/pag-solid-layer.ts","../../../dev/libpag/web/src/tgfx.ts","../../../dev/libpag/web/src/utils/mixin.ts","../../../dev/libpag/web/src/binding.ts","../../../dev/libpag/web/src/wasm/libpag.js","../../../dev/libpag/web/src/utils/queue.ts","../../../dev/libpag/web/src/worker/worker.ts","../../../dev/libpag/web/src/pag.ts"],"sourcesContent":["const getGlobalObject = (): typeof globalThis => {\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  }\n  if (typeof window !== 'undefined') {\n    return window as unknown as typeof globalThis;\n  }\n  if (typeof global !== 'undefined') {\n    return global as unknown as typeof globalThis;\n  }\n  if (typeof self !== 'undefined') {\n    return self as unknown as typeof globalThis;\n  }\n  throw new Error('unable to locate global object');\n};\n\nconst globalObject = getGlobalObject();\n\nif (typeof globalObject.globalThis === 'undefined') {\n  Object.defineProperty(globalObject, 'globalThis', {\n    get() {\n      return globalObject;\n    },\n  });\n}\n","import type { PAG } from './types';\n\nexport let PAGModule: PAG;\n\nexport const setPAGModule = (module: PAG) => {\n  PAGModule = module;\n};\n\nexport const getPAGModule = () => PAGModule;\n","import { PAGModule } from '../pag-module';\n\nexport function wasmAwaitRewind(constructor: any) {\n  const ignoreStaticFunctions = ['length', 'name', 'prototype', 'wasmAsyncMethods'];\n  let staticFunctions = Object.getOwnPropertyNames(constructor).filter(\n    (name) => ignoreStaticFunctions.indexOf(name) === -1,\n  );\n  if (constructor.wasmAsyncMethods && constructor.wasmAsyncMethods.length > 0) {\n    staticFunctions = staticFunctions.filter((name) => constructor.wasmAsyncMethods.indexOf(name) === -1);\n  }\n\n  let functions = Object.getOwnPropertyNames(constructor.prototype).filter(\n    (name) => name !== 'constructor' && typeof constructor.prototype[name] === 'function',\n  );\n  if (constructor.prototype.wasmAsyncMethods && constructor.prototype.wasmAsyncMethods.length > 0) {\n    functions = functions.filter((name) => constructor.prototype.wasmAsyncMethods.indexOf(name) === -1);\n  }\n\n  const proxyFn = (target: { [prop: string]: (...args: any[]) => any }, methodName: string) => {\n    const fn = target[methodName];\n    target[methodName] = function (...args) {\n      if (PAGModule.Asyncify.currData !== null) {\n        const currData = PAGModule.Asyncify.currData;\n        PAGModule.Asyncify.currData = null;\n        const ret = fn.call(this, ...args);\n        PAGModule.Asyncify.currData = currData;\n        return ret;\n      } else {\n        return fn.call(this, ...args);\n      }\n    };\n  };\n\n  staticFunctions.forEach((name) => proxyFn(constructor, name));\n  functions.forEach((name) => proxyFn(constructor.prototype, name));\n}\n\nexport function wasmAsyncMethod(target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n  if (!target.wasmAsyncMethods) {\n    target.wasmAsyncMethods = [];\n  }\n  target.wasmAsyncMethods.push(propertyKey);\n}\n\nexport function destroyVerify(constructor: any) {\n  let functions = Object.getOwnPropertyNames(constructor.prototype).filter(\n    (name) => name !== 'constructor' && typeof constructor.prototype[name] === 'function',\n  );\n\n  const proxyFn = (target: { [prop: string]: any }, methodName: string) => {\n    const fn = target[methodName];\n    target[methodName] = function (...args: any[]) {\n      if (this['isDestroyed']) {\n        console.error(`Don't call ${methodName} of the ${constructor.name} that is destroyed.`);\n        return;\n      }\n      return fn.call(this, ...args);\n    };\n  };\n  functions.forEach((name) => proxyFn(constructor.prototype, name));\n}\n","/* global EmscriptenModule */\n\nimport { PAGFile } from './pag-file';\nimport { PAGImage } from './pag-image';\nimport { PAGSurface } from './pag-surface';\nimport { WebAssemblyQueue } from './utils/queue';\nimport { PAGView } from './pag-view';\nimport { PAGFont } from './pag-font';\nimport { PAGPlayer } from './pag-player';\nimport { PAGLayer } from './pag-layer';\nimport { PAGComposition } from './pag-composition';\nimport { PAGTextLayer } from './pag-text-layer';\nimport { GlobalCanvas } from './core/global-canvas';\nimport { BackendContext } from './core/backend-context';\nimport { PAGImageLayer } from './pag-image-layer';\nimport { PAGSolidLayer } from './pag-solid-layer';\nimport { Matrix as ClassMatrix } from './core/matrix';\nimport { RenderCanvas } from './core/render-canvas';\n\nimport type { ScalerContextConstructor, VideoDecoderConstructor, WebMaskConstructor } from './interfaces';\nimport type { ArrayBufferImage } from './wechat/array-buffer-image';\n\ndeclare global {\n  interface Window {\n    WeixinJSBridge?: any;\n  }\n}\n\nexport interface PAG extends EmscriptenModule {\n  _PAGFile: {\n    _Load: (bytes: number, length: number) => any;\n    _MaxSupportedTagLevel: () => number;\n  };\n  _PAGImage: {\n    _FromNativeImage: (source: TexImageSource | ArrayBufferImage) => any;\n    _FromPixels: (\n      pixels: number,\n      width: number,\n      height: number,\n      rowBytes: number,\n      colorType: ColorType,\n      alphaType: AlphaType,\n    ) => any;\n    _FromTexture: (textureID: number, width: number, height: number, flipY: boolean) => any;\n  };\n  _PAGPlayer: any;\n  _PAGSurface: {\n    _FromCanvas: (canvasID: string) => any;\n    _FromTexture: (textureID: number, width: number, height: number, flipY: boolean) => any;\n    _FromRenderTarget: (framebufferID: number, width: number, height: number, flipY: boolean) => any;\n  };\n  _PAGComposition: {\n    _Make: (width: number, height: number) => any;\n  };\n  _PAGTextLayer: {\n    _Make: ((duration: number, text: string, fontSize: number, fontFamily: string, fontStyle: string) => any) &\n      ((duration: number, textDocumentHandle: TextDocument) => any);\n  };\n  _PAGImageLayer: {\n    _Make: (width: number, height: number, duration: number) => any;\n  };\n  _PAGSolidLayer: {\n    _Make: (duration: number, width: number, height: number, solidColor: Color, opacity: number) => any;\n  };\n  _PAGFont: {\n    _create: (fontFamily: string, fontStyle: string) => any;\n    _SetFallbackFontNames: (fontName: any) => void;\n  };\n  _Matrix: {\n    _MakeAll: (\n      scaleX: number,\n      skewX: number,\n      transX: number,\n      skewY: number,\n      scaleY: number,\n      transY: number,\n      pers0: number,\n      pers1: number,\n      pers2: number,\n    ) => any;\n    _MakeScale: ((sx: number, sy: number) => any) & ((scale: number) => any);\n    _MakeTrans: (dx: number, dy: number) => any;\n  };\n  _registerSoftwareDecoderFactory: (factory: SoftwareDecoderFactory | null) => void;\n  VectorString: any;\n  webAssemblyQueue: WebAssemblyQueue;\n  GL: EmscriptenGL;\n  TGFXPathFillType: TGFXPathFillType;\n  TGFXLineCap: TGFXLineCap;\n  TGFXLineJoin: TGFXLineJoin;\n  globalCanvas: GlobalCanvas;\n  module: PAG;\n  PAGPlayer: typeof PAGPlayer;\n  PAGFile: typeof PAGFile;\n  PAGView: typeof PAGView;\n  PAGFont: typeof PAGFont;\n  PAGImage: typeof PAGImage;\n  PAGLayer: typeof PAGLayer;\n  PAGComposition: typeof PAGComposition;\n  PAGSurface: typeof PAGSurface;\n  PAGTextLayer: typeof PAGTextLayer;\n  PAGImageLayer: typeof PAGImageLayer;\n  PAGSolidLayer: typeof PAGSolidLayer;\n  WebMask: WebMaskConstructor;\n  ScalerContext: ScalerContextConstructor;\n  VideoReader: VideoDecoderConstructor;\n  GlobalCanvas: typeof GlobalCanvas;\n  BackendContext: typeof BackendContext;\n  Matrix: typeof ClassMatrix;\n  RenderCanvas: typeof RenderCanvas;\n  traceImage: (info: { width: number; height: number }, pixels: Uint8Array, tag: string) => void;\n  registerSoftwareDecoderFactory: (factory: SoftwareDecoderFactory | null) => void;\n  SDKVersion: () => string;\n  currentPlayer: PAGPlayer | null;\n  [key: string]: any;\n}\n\nexport interface EmscriptenGL {\n  contexts: (EmscriptenGLContext | null)[];\n  createContext: (\n    canvas: HTMLCanvasElement | OffscreenCanvas,\n    webGLContextAttributes: EmscriptenGLContextAttributes,\n  ) => number;\n  currentContext?: EmscriptenGLContext;\n  deleteContext: (contextHandle: number) => void;\n  framebuffers: (WebGLFramebuffer | null)[];\n  getContext: (contextHandle: number) => EmscriptenGLContext;\n  getNewId: (array: any[]) => number;\n  makeContextCurrent: (contextHandle: number) => boolean;\n  registerContext: (ctx: WebGLRenderingContext, webGLContextAttributes: EmscriptenGLContextAttributes) => number;\n  textures: (WebGLTexture | null)[];\n}\n\nexport interface EmscriptenGLContext {\n  handle: number;\n  GLctx: WebGLRenderingContext;\n  attributes: EmscriptenGLContextAttributes;\n  initExtensionsDone: boolean;\n  version: number;\n}\n\nexport type EmscriptenGLContextAttributes = { majorVersion: number; minorVersion: number } & WebGLContextAttributes;\n\n/**\n * Defines the rules on how to scale the content to fit the specified area.\n */\nexport const enum PAGScaleMode {\n  /**\n   * The content is not scaled.\n   */\n  None = 0,\n  /**\n   * The content is stretched to fit.\n   */\n  Stretch = 1,\n  /**\n   * The content is scaled with respect to the original unscaled image's aspect ratio.\n   * This is the default value.\n   */\n  LetterBox = 2,\n  /**\n   * The content is scaled to fit with respect to the original unscaled image's aspect ratio.\n   * This results in cropping on one axis.\n   */\n  Zoom = 3,\n}\n\n// [Deprecated]\nexport const enum PAGViewListenerEvent {\n  /**\n   * Notifies the start of the animation.\n   */\n  onAnimationStart = 'onAnimationStart',\n  /**\n   * Notifies the end of the animation.\n   */\n  onAnimationEnd = 'onAnimationEnd',\n  /**\n   * Notifies the cancellation of the animation.\n   */\n  onAnimationCancel = 'onAnimationCancel',\n  /**\n   * Notifies the repetition of the animation.\n   */\n  onAnimationRepeat = 'onAnimationRepeat',\n  /**\n   * Notifies the update of the animation.\n   */\n  onAnimationUpdate = 'onAnimationUpdate',\n  /**\n   * Notifies the play of the animation.\n   */\n  onAnimationPlay = 'onAnimationPlay',\n  /**\n   * Notifies the pause of the animation.\n   */\n  onAnimationPause = 'onAnimationPause',\n  /**\n   * [Deprecated]\n   * Notifies the flushed of the animation.\n   */\n  onAnimationFlushed = 'onAnimationFlushed',\n}\n\nexport interface PAGViewEventMap {\n  /**\n   * Notifies the start of the animation.\n   */\n  onAnimationStart: PAGView;\n  /**\n   * Notifies the end of the animation.\n   */\n  onAnimationEnd: PAGView;\n  /**\n   * Notifies the cancellation of the animation.\n   */\n  onAnimationCancel: PAGView;\n  /**\n   * Notifies the repetition of the animation.\n   */\n  onAnimationRepeat: PAGView;\n  /**\n   * Notifies the update of the animation.\n   */\n  onAnimationUpdate: PAGView;\n  /**\n   * [Deprecated]\n   * Notifies the play of the animation.\n   */\n  onAnimationPlay: PAGView;\n  /**\n   * Notifies the pause of the animation.\n   */\n  onAnimationPause: PAGView;\n  /**\n   * [Deprecated]\n   * Notifies the flushed of the animation.\n   */\n  onAnimationFlushed: PAGView;\n}\n\nexport const enum ParagraphJustification {\n  LeftJustify = 0,\n  CenterJustify = 1,\n  RightJustify = 2,\n  FullJustifyLastLineLeft = 3,\n  FullJustifyLastLineRight = 4,\n  FullJustifyLastLineCenter = 5,\n  FullJustifyLastLineFull = 6,\n}\n\nexport const enum TextDirection {\n  Default = 0,\n  Horizontal = 1,\n  Vertical = 2,\n}\n\n/**\n * Layers are always one of the following types.\n */\nexport const enum LayerType {\n  Unknown,\n  Null,\n  Solid,\n  Text,\n  Shape,\n  Image,\n  PreCompose,\n}\n\n/**\n * Defines the rules on how to stretch the timeline of content to fit the specified duration.\n */\nexport const enum PAGTimeStretchMode {\n  /**\n   * Keep the original playing speed, and display the last frame if the content's duration is less\n   * than target duration.\n   */\n  None = 0,\n  /*\n   * Change the playing speed of the content to fit target duration.\n   */\n  Scale = 1,\n  /**\n   * Keep the original playing speed, but repeat the content if the content's duration is less than\n   * target duration. This is the default mode.\n   */\n  Repeat = 2,\n  /**\n   * Keep the original playing speed, but repeat the content in reversed if the content's duration\n   * is less than target duration.\n   */\n  RepeatInverted = 3,\n}\n\nexport const enum MatrixIndex {\n  a,\n  c,\n  tx,\n  b,\n  d,\n  ty,\n}\n\nexport const enum DecoderResult {\n  /**\n   * The calling is successful.\n   */\n  Success = 0,\n  /**\n   * Output is not available in this state, need more input buffers.\n   */\n  TryAgainLater = -1,\n  /**\n   * The calling fails.\n   */\n  Error = -2,\n}\n\n/**\n * Describes how pixel bits encode color. These values match up with the enum in Bitmap.Config on\n * Android platform.\n */\nexport const enum ColorType {\n  /**\n   * uninitialized.\n   */\n  Unknown,\n  /**\n   * Each pixel is stored as a single translucency (alpha) channel. This is very useful to\n   * efficiently store masks for instance. No color information is stored. With this configuration,\n   * each pixel requires 1 byte of memory.\n   */\n  ALPHA_8,\n  /**\n   * Each pixel is stored on 4 bytes. Each channel (RGB and alpha for translucency) is stored with 8\n   * bits of precision (256 possible values). The channel order is: red, green, blue, alpha.\n   */\n  RGBA_8888,\n  /**\n   * Each pixel is stored on 4 bytes. Each channel (RGB and alpha for translucency) is stored with 8\n   * bits of precision (256 possible values). The channel order is: blue, green, red, alpha.\n   */\n  BGRA_8888,\n}\n\n/**\n * Describes how to interpret the alpha component of a pixel.\n */\nexport const enum AlphaType {\n  /**\n   * uninitialized.\n   */\n  Unknown,\n  /**\n   * pixel is opaque.\n   */\n  Opaque,\n  /**\n   * pixel components are premultiplied by alpha.\n   */\n  Premultiplied,\n  /**\n   * pixel components are independent of alpha.\n   */\n  Unpremultiplied,\n}\n\nexport interface Point {\n  x: number;\n  y: number;\n}\n\n/**\n * Marker stores comments and other metadata and mark important times in a composition or layer.\n */\nexport interface Marker {\n  startTime: number;\n  duration: number;\n  comment: string;\n}\n\nexport interface Color {\n  red: number;\n  green: number;\n  blue: number;\n}\n\nexport interface ctor {\n  value: number;\n}\n\nexport interface TGFXPathFillType {\n  /**\n   * Enclosed by a non-zero sum of contour directions.\n   */\n  Winding: ctor;\n  /**\n   * Enclosed by an odd number of contours.\n   */\n  EvenOdd: ctor;\n  /**\n   * Enclosed by a zero sum of contour directions.\n   */\n  InverseWinding: ctor;\n  /**\n   * Enclosed by an even number of contours.\n   */\n  InverseEvenOdd: ctor;\n}\n\nexport interface TGFXLineCap {\n  /**\n   * No stroke extension.\n   */\n  Butt: ctor;\n  /**\n   * Adds circle\n   */\n  Round: ctor;\n  /**\n   * Adds square\n   */\n  Square: ctor;\n}\n\nexport interface TGFXLineJoin {\n  /**\n   * Extends to miter limit.\n   */\n  Miter: ctor;\n  /**\n   * Adds circle.\n   */\n  Round: ctor;\n  /**\n   * Connects outside edges.\n   */\n  Bevel: ctor;\n}\n\nexport interface YUVBuffer {\n  data: number[];\n  lineSize: number[];\n}\n\nexport interface DebugData {\n  FPS?: number;\n  flushTime?: number;\n}\n\nexport interface PAGVideoRange {\n  /**\n   * The start time of the source video, in microseconds.\n   */\n  startTime: number;\n  /**\n   * The end time of the source video (not included), in microseconds.\n   */\n  endTime: number;\n  /**\n   * The duration for playing after applying speed.\n   */\n  playDuration: number;\n  /**\n   * Indicates whether the video should play backward.\n   */\n  reversed: boolean;\n}\n\nexport declare class Matrix {\n  /**\n   * The entry at position [1,1] in the matrix.\n   */\n  public a: number;\n  /**\n   * The entry at position [1,2] in the matrix.\n   */\n  public b: number;\n  /**\n   * The entry at position [2,1] in the matrix.\n   */\n  public c: number;\n  /**\n   * The entry at position [2,2] in the matrix.\n   */\n  public d: number;\n  /**\n   * The entry at position [3,1] in the matrix.\n   */\n  public tx: number;\n  /**\n   * The entry at position [3,2] in the matrix.\n   */\n  public ty: number;\n  /**\n   * Sets Matrix value.\n   */\n  public set: (index: number, value: number) => {};\n  public setAffine: (a: number, b: number, c: number, d: number, tx: number, ty: number) => {};\n\n  private constructor();\n}\n\nexport declare class Rect {\n  /**\n   * smaller x-axis bounds.\n   */\n  public left: number;\n  /**\n   * smaller y-axis bounds.\n   */\n  public top: number;\n  /**\n   * larger x-axis bounds.\n   */\n  public right: number;\n  /**\n   * larger y-axis bounds.\n   */\n  public bottom: number;\n\n  private constructor();\n}\n\nexport declare class TextDocument {\n  /**\n   * When true, the text layer shows a fill.\n   */\n  public applyFill: boolean;\n  /**\n   * When true, the text layer shows a stroke.\n   */\n  public applyStroke: boolean;\n\n  public baselineShift: number;\n  /**\n   * When true, the text layer is paragraph (bounded) text.\n   */\n  public boxText: boolean;\n\n  public boxTextPos: Readonly<Point>;\n  /**\n   * For box text, the pixel dimensions for the text bounds.\n   */\n  public boxTextSize: Readonly<Point>;\n\n  public firstBaseLine: number;\n\n  public fauxBold: boolean;\n\n  public fauxItalic: boolean;\n  /**\n   * The text layer’s fill color.\n   */\n  public fillColor: Readonly<Color>;\n  /**\n   * A string with the name of the font family.\n   **/\n  public fontFamily: string;\n  /**\n   * A string with the style information — e.g., “bold”, “italic”.\n   **/\n  public fontStyle: string;\n  /**\n   * The text layer’s font size in pixels.\n   */\n  public fontSize: number;\n  /**\n   * The text layer’s stroke color.\n   */\n  public strokeColor: Readonly<Color>;\n  /**\n   * Indicates the rendering order for the fill and stroke of a text layer.\n   */\n  public strokeOverFill: boolean;\n  /**\n   * The text layer’s stroke thickness.\n   */\n  public strokeWidth: number;\n  /**\n   * The text layer’s Source Text value.\n   */\n  public text: string;\n  /**\n   * The paragraph justification for the text layer.\n   */\n  public justification: ParagraphJustification;\n  /**\n   * The space between lines, 0 indicates 'auto', which is fontSize * 1.2\n   */\n  public leading: number;\n  /**\n   * The text layer’s spacing between characters.\n   */\n  public tracking: number;\n  /**\n   *  The text layer’s background color\n   */\n  public backgroundColor: Readonly<Color>;\n  /**\n   *  The text layer’s background alpha. 0 = 100% transparent, 255 = 100% opaque.\n   */\n  public backgroundAlpha: number;\n\n  public direction: TextDirection;\n\n  public delete: () => void;\n\n  private constructor();\n}\n\nexport declare class Vector<T> {\n  private constructor();\n\n  /**\n   * Get item from Vector by index.\n   */\n  public get(index: number): T;\n\n  /**\n   * Push item into Vector.\n   */\n  public push_back(value: T): void;\n\n  /**\n   * Get item number in Vector.\n   */\n  public size(): number;\n\n  /**\n   * Delete Vector instance.\n   */\n  public delete(): void;\n}\n\nexport declare class SoftwareDecoder {\n  public onConfigure(headers: Uint8Array[], mimeType: string, width: number, height: number): boolean;\n  public onSendBytes(bytes: Uint8Array, timestamp: number): number; // 0:Success -1:TryAgainLater -2:Error\n  public onDecodeFrame(): number; // 0:Success -1:TryAgainLater -2:Error\n  public onEndOfStream(): number; // 0:Success -1:TryAgainLater -2:Error\n  public onFlush(): void;\n  public onRenderFrame(): YUVBuffer | null;\n  public onRelease(): void;\n}\n\nexport declare class SoftwareDecoderFactory {\n  public createSoftwareDecoder(pag: PAG): SoftwareDecoder | null;\n}\n","import { PAGModule } from '../pag-module';\nimport { destroyVerify, wasmAwaitRewind } from '../utils/decorators';\nimport { MatrixIndex } from '../types';\n\n@destroyVerify\n@wasmAwaitRewind\nexport class Matrix {\n  /**\n   * Sets Matrix to:\n   *\n   *      | scaleX  skewX transX |\n   *      |  skewY scaleY transY |\n   *      |  pers0  pers1  pers2 |\n   *\n   * @param scaleX  horizontal scale factor\n   * @param skewX   horizontal skew factor\n   * @param transX  horizontal translation\n   * @param skewY   vertical skew factor\n   * @param scaleY  vertical scale factor\n   * @param transY  vertical translation\n   * @param pers0   input x-axis perspective factor\n   * @param pers1   input y-axis perspective factor\n   * @param pers2   perspective scale factor\n   * @return        Matrix constructed from parameters\n   */\n  public static makeAll(\n    scaleX: number,\n    skewX: number,\n    transX: number,\n    skewY: number,\n    scaleY: number,\n    transY: number,\n    pers0 = 0,\n    pers1 = 0,\n    pers2 = 1,\n  ): Matrix {\n    const wasmIns = PAGModule._Matrix._MakeAll(scaleX, skewX, transX, skewY, scaleY, transY, pers0, pers1, pers2);\n    if (!wasmIns) throw new Error('Matrix.makeAll fail, please check parameters valid!');\n    return new Matrix(wasmIns);\n  }\n  /**\n   * Sets Matrix to scale by (sx, sy). Returned matrix is:\n   *\n   *       | sx  0  0 |\n   *       |  0 sy  0 |\n   *       |  0  0  1 |\n   *\n   *  @param scaleX  horizontal scale factor\n   *  @param scaleY  [optionals] vertical scale factor, default equal scaleX.\n   *  @return    Matrix with scale\n   */\n  public static makeScale(scaleX: number, scaleY?: number): Matrix {\n    let wasmIns;\n    if (scaleY !== undefined) {\n      wasmIns = PAGModule._Matrix._MakeScale(scaleX, scaleY);\n    } else {\n      wasmIns = PAGModule._Matrix._MakeScale(scaleX);\n    }\n    if (!wasmIns) throw new Error('Matrix.makeScale fail, please check parameters valid!');\n    return new Matrix(wasmIns);\n  }\n  /**\n   * Sets Matrix to translate by (dx, dy). Returned matrix is:\n   *\n   *       | 1 0 dx |\n   *       | 0 1 dy |\n   *       | 0 0  1 |\n   *\n   * @param dx  horizontal translation\n   * @param dy  vertical translation\n   * @return    Matrix with translation\n   */\n  public static makeTrans(dx: number, dy: number): Matrix {\n    const wasmIns = PAGModule._Matrix._MakeTrans(dx, dy);\n    if (!wasmIns) throw new Error('Matrix.makeTrans fail, please check parameters valid!');\n    return new Matrix(wasmIns);\n  }\n\n  public wasmIns;\n  public isDestroyed = false;\n\n  public constructor(wasmIns: any) {\n    this.wasmIns = wasmIns;\n  }\n\n  /**\n   * scaleX; horizontal scale factor to store\n   */\n  public get a(): number {\n    return this.wasmIns ? this.wasmIns._get(MatrixIndex.a) : 0;\n  }\n  public set a(value: number) {\n    this.wasmIns?._set(MatrixIndex.a, value);\n  }\n  /**\n   * skewY; vertical skew factor to store\n   */\n  public get b(): number {\n    return this.wasmIns ? this.wasmIns._get(MatrixIndex.b) : 0;\n  }\n  public set b(value: number) {\n    this.wasmIns?._set(MatrixIndex.b, value);\n  }\n  /**\n   * skewX; horizontal skew factor to store\n   */\n  public get c(): number {\n    return this.wasmIns ? this.wasmIns._get(MatrixIndex.c) : 0;\n  }\n  public set c(value: number) {\n    this.wasmIns?._set(MatrixIndex.c, value);\n  }\n  /**\n   * scaleY; vertical scale factor to store\n   */\n  public get d(): number {\n    return this.wasmIns ? this.wasmIns._get(MatrixIndex.d) : 0;\n  }\n  public set d(value: number) {\n    this.wasmIns?._set(MatrixIndex.d, value);\n  }\n  /**\n   * transX; horizontal translation to store\n   */\n  public get tx(): number {\n    return this.wasmIns ? this.wasmIns._get(MatrixIndex.tx) : 0;\n  }\n  public set tx(value: number) {\n    this.wasmIns?._set(MatrixIndex.tx, value);\n  }\n  /**\n   * transY; vertical translation to store\n   */\n  public get ty(): number {\n    return this.wasmIns ? this.wasmIns._get(MatrixIndex.ty) : 0;\n  }\n  public set ty(value: number) {\n    this.wasmIns?._set(MatrixIndex.ty, value);\n  }\n\n  /**\n   * Returns one matrix value.\n   */\n  public get(index: MatrixIndex): number {\n    return this.wasmIns ? this.wasmIns._get(index) : 0;\n  }\n  /**\n   * Sets Matrix value.\n   */\n  public set(index: MatrixIndex, value: number) {\n    this.wasmIns?._set(index, value);\n  }\n  /**\n   * Sets all values from parameters. Sets matrix to:\n   *\n   *      | scaleX  skewX transX |\n   *      |  skewY scaleY transY |\n   *      | persp0 persp1 persp2 |\n   *\n   * @param scaleX  horizontal scale factor to store\n   * @param skewX   horizontal skew factor to store\n   * @param transX  horizontal translation to store\n   * @param skewY   vertical skew factor to store\n   * @param scaleY  vertical scale factor to store\n   * @param transY  vertical translation to store\n   */\n  public setAll(scaleX: number, skewX: number, transX: number, skewY: number, scaleY: number, transY: number) {\n    this.wasmIns?._setAll(scaleX, skewX, transX, skewY, scaleY, transY, 0, 0, 1);\n  }\n\n  public setAffine(a: number, b: number, c: number, d: number, tx: number, ty: number) {\n    this.wasmIns?._setAffine(a, b, c, d, tx, ty);\n  }\n  /**\n   * Sets Matrix to identity; which has no effect on mapped Point. Sets Matrix to:\n   *\n   *       | 1 0 0 |\n   *       | 0 1 0 |\n   *       | 0 0 1 |\n   *\n   * Also called setIdentity(); use the one that provides better inline documentation.\n   */\n  public reset() {\n    this.wasmIns?._reset();\n  }\n  /**\n   * Sets Matrix to translate by (dx, dy).\n   * @param dx  horizontal translation\n   * @param dy  vertical translation\n   */\n  public setTranslate(dx: number, dy: number) {\n    this.wasmIns?._setTranslate(dx, dy);\n  }\n  /**\n   * Sets Matrix to scale by sx and sy, about a pivot point at (px, py). The pivot point is\n   * unchanged when mapped with Matrix.\n   * @param sx  horizontal scale factor\n   * @param sy  vertical scale factor\n   * @param px  pivot on x-axis\n   * @param py  pivot on y-axis\n   */\n  public setScale(sx: number, sy: number, px = 0, py = 0) {\n    this.wasmIns?._setScale(sx, sy, px, py);\n  }\n  /**\n   * Sets Matrix to rotate by degrees about a pivot point at (px, py). The pivot point is\n   * unchanged when mapped with Matrix. Positive degrees rotates clockwise.\n   *  @param degrees  angle of axes relative to upright axes\n   *  @param px       pivot on x-axis\n   *  @param py       pivot on y-axis\n   */\n  public setRotate(degrees: number, px = 0, py = 0) {\n    this.wasmIns?._setRotate(degrees, px, py);\n  }\n  /**\n   * Sets Matrix to rotate by sinValue and cosValue, about a pivot point at (px, py).\n   * The pivot point is unchanged when mapped with Matrix.\n   * Vector (sinValue, cosValue) describes the angle of rotation relative to (0, 1).\n   * Vector length specifies scale.\n   */\n  public setSinCos(sinV: number, cosV: number, px = 0, py = 0) {\n    this.wasmIns?._setSinCos(sinV, cosV, px, py);\n  }\n  /**\n   * Sets Matrix to skew by kx and ky, about a pivot point at (px, py). The pivot point is\n   * unchanged when mapped with Matrix.\n   * @param kx  horizontal skew factor\n   * @param ky  vertical skew factor\n   * @param px  pivot on x-axis\n   * @param py  pivot on y-axis\n   */\n  public setSkew(kx: number, ky: number, px = 0, py = 0) {\n    this.wasmIns?._setSkew(kx, ky, px, py);\n  }\n  /**\n   * Sets Matrix to Matrix a multiplied by Matrix b. Either a or b may be this.\n   *\n   * Given:\n   *\n   *          | A B C |      | J K L |\n   *      a = | D E F |, b = | M N O |\n   *          | G H I |      | P Q R |\n   *\n   * sets Matrix to:\n   *\n   *              | A B C |   | J K L |   | AJ+BM+CP AK+BN+CQ AL+BO+CR |\n   *      a * b = | D E F | * | M N O | = | DJ+EM+FP DK+EN+FQ DL+EO+FR |\n   *              | G H I |   | P Q R |   | GJ+HM+IP GK+HN+IQ GL+HO+IR |\n   *\n   * @param a  Matrix on left side of multiply expression\n   * @param b  Matrix on right side of multiply expression\n   */\n  public setConcat(a: Matrix, b: Matrix) {\n    this.wasmIns?._setConcat(a.wasmIns, b.wasmIns);\n  }\n  /**\n   * Preconcats the matrix with the specified scale. M' = M * S(sx, sy)\n   */\n  public preTranslate(dx: number, dy: number) {\n    this.wasmIns?._preTranslate(dx, dy);\n  }\n  /**\n   * Postconcats the matrix with the specified scale. M' = S(sx, sy, px, py) * M\n   */\n  public preScale(sx: number, sy: number, px = 0, py = 0) {\n    this.wasmIns?._preScale(sx, sy, px, py);\n  }\n  /**\n   * Preconcats the matrix with the specified rotation. M' = M * R(degrees, px, py)\n   */\n  public preRotate(degrees: number, px = 0, py = 0) {\n    this.wasmIns?._preRotate(degrees, px, py);\n  }\n  /**\n   * Preconcats the matrix with the specified skew. M' = M * K(kx, ky, px, py)\n   */\n  public preSkew(kx: number, ky: number, px = 0, py = 0) {\n    this.wasmIns?._preSkew(kx, ky, px, py);\n  }\n  /**\n   * Preconcats the matrix with the specified matrix. M' = M * other\n   */\n  public preConcat(other: Matrix) {\n    this.wasmIns?._preConcat(other.wasmIns);\n  }\n  /**\n   * Postconcats the matrix with the specified translation. M' = T(dx, dy) * M\n   */\n  public postTranslate(dx: number, dy: number) {\n    this.wasmIns?._postTranslate(dx, dy);\n  }\n  /**\n   * Postconcats the matrix with the specified scale. M' = S(sx, sy, px, py) * M\n   */\n  public postScale(sx: number, sy: number, px = 0, py = 0) {\n    this.wasmIns?._postScale(sx, sy, px, py);\n  }\n  /**\n   * Postconcats the matrix with the specified rotation. M' = R(degrees, px, py) * M\n   */\n  public postRotate(degrees: number, px = 0, py = 0) {\n    this.wasmIns?._postRotate(degrees, px, py);\n  }\n  /**\n   * Postconcats the matrix with the specified skew. M' = K(kx, ky, px, py) * M\n   */\n  public postSkew(kx: number, ky: number, px = 0, py = 0) {\n    this.wasmIns?._postSkew(kx, ky, px, py);\n  }\n  /**\n   * Postconcats the matrix with the specified matrix. M' = other * M\n   */\n  public postConcat(other: Matrix) {\n    this.wasmIns?._postConcat(other.wasmIns);\n  }\n\n  public destroy() {\n    this.wasmIns.delete();\n  }\n}\n","import { PAGModule } from '../pag-module';\nimport { LayerType, Vector } from '../types';\n\nimport type { PAGLayer } from '../pag-layer';\nimport type { PAGImageLayer } from '../pag-image-layer';\nimport type { PAGSolidLayer } from '../pag-solid-layer';\nimport type { PAGTextLayer } from '../pag-text-layer';\n\nconst rewindData = (fn: (...args: any[]) => any, scope: any, ...args: any[]) => {\n  if (PAGModule.Asyncify.currData !== null) {\n    const currData = PAGModule.Asyncify.currData;\n    PAGModule.Asyncify.currData = null;\n    const ret = fn.call(scope, ...args);\n    PAGModule.Asyncify.currData = currData;\n    return ret;\n  } else {\n    return fn.call(scope, ...args);\n  }\n};\n\nexport const proxyVector = <T extends (...args: any) => any>(\n  vector: Vector<any>,\n  process: T,\n): Vector<ReturnType<T>> => {\n  const proxy = new Proxy(vector, {\n    get(target, property, receiver) {\n      switch (property) {\n        case 'get':\n          return (index: number) => {\n            const wasmIns = rewindData(target.get, target, index);\n            return !wasmIns ? wasmIns : process(wasmIns);\n          };\n        case 'push_back':\n          return (value: ReturnType<T>) => {\n            rewindData(target.push_back, target, value.wasmIns || value);\n            return undefined;\n          };\n        case 'size':\n          return () => {\n            return rewindData(target.size, target);\n          };\n        default:\n          return Reflect.get(target, property, receiver);\n      }\n    },\n  });\n  return proxy;\n};\n\nexport const layer2typeLayer = (wasmIns: any): PAGSolidLayer | PAGTextLayer | PAGImageLayer | PAGLayer => {\n  switch (rewindData(wasmIns._layerType, wasmIns)) {\n    case LayerType.Solid:\n      return new PAGModule.PAGSolidLayer(wasmIns);\n    case LayerType.Text:\n      return new PAGModule.PAGTextLayer(wasmIns);\n    case LayerType.Image:\n      return new PAGModule.PAGImageLayer(wasmIns);\n    default:\n      return new PAGModule.PAGLayer(wasmIns);\n  }\n};\n\nexport const getLayerTypeName = (layerType: LayerType) => {\n  switch (layerType) {\n    case LayerType.Solid:\n      return 'Solid';\n    case LayerType.Text:\n      return 'Text';\n    case LayerType.Shape:\n      return 'Shape';\n    case LayerType.Image:\n      return 'Image';\n    case LayerType.PreCompose:\n      return 'PreCompose';\n    default:\n      return 'Unknown';\n  }\n};\n\nexport const getWasmIns = (value: any) => {\n  if (value?.wasmIns) {\n    return value.wasmIns;\n  }\n  return value;\n};\n\nexport const isInstanceOf = (value: any, type: any) => typeof type !== 'undefined' && value instanceof type;\n","import { PAGComposition } from './pag-composition';\nimport { destroyVerify, wasmAwaitRewind } from './utils/decorators';\nimport { Matrix } from './core/matrix';\nimport { layer2typeLayer, proxyVector } from './utils/type-utils';\n\nimport type { LayerType, Marker, Rect } from './types';\n\n@destroyVerify\n@wasmAwaitRewind\nexport class PAGLayer {\n  public wasmIns: any;\n  public isDestroyed = false;\n\n  public constructor(wasmIns: any) {\n    this.wasmIns = wasmIns;\n  }\n  /**\n   * Returns a globally unique id for this object.\n   */\n  public uniqueID(): number {\n    return this.wasmIns._uniqueID() as number;\n  }\n  /**\n   * Returns the type of layer.\n   */\n  public layerType(): LayerType {\n    return this.wasmIns._layerType() as LayerType;\n  }\n  /**\n   * Returns the name of the layer.\n   */\n  public layerName(): string {\n    return this.wasmIns._layerName() as string;\n  }\n  /**\n   * A matrix object containing values that alter the scaling, rotation, and translation of the\n   * layer. Altering it does not change the animation matrix, and it will be concatenated to current\n   * animation matrix for displaying.\n   */\n  public matrix(): Matrix {\n    const wasmIns = this.wasmIns._matrix();\n    if (!wasmIns) throw new Error('Get matrix fail!');\n    return new Matrix(wasmIns);\n  }\n\n  public setMatrix(matrix: Matrix) {\n    this.wasmIns._setMatrix(matrix.wasmIns);\n  }\n  /**\n   * Resets the matrix to its default value.\n   */\n  public resetMatrix() {\n    this.wasmIns._resetMatrix();\n  }\n  /**\n   * The final matrix for displaying, it is the combination of the matrix property and current\n   * matrix from animation.\n   */\n  public getTotalMatrix(): Matrix {\n    const wasmIns = this.wasmIns._getTotalMatrix();\n    if (!wasmIns) throw new Error('Get total matrix fail!');\n    return new Matrix(this.wasmIns._getTotalMatrix());\n  }\n  /**\n   * Returns the current alpha of the layer if previously set.\n   */\n  public alpha(): number {\n    return this.wasmIns._alpha() as number;\n  }\n  /**\n   * Set the alpha of the layer, which will be concatenated to the current animation opacity for\n   * displaying.\n   */\n  public setAlpha(opacity: Number): void {\n    this.wasmIns._setAlpha(opacity);\n  }\n  /**\n   * Whether or not the layer is visible.\n   */\n\n  public visible(): boolean {\n    return this.wasmIns._visible() as boolean;\n  }\n  /**\n   * Set the visible of the layer.\n   */\n  public setVisible(visible: boolean): void {\n    this.wasmIns._setVisible(visible);\n  }\n  /**\n   * Ranges from 0 to PAGFile.numTexts - 1 if the layer type is text, or from 0 to PAGFile.numImages\n   * -1 if the layer type is image, otherwise returns -1.\n   */\n  public editableIndex(): number {\n    return this.wasmIns._editableIndex() as number;\n  }\n  /**\n   * Returns the parent PAGComposition of current PAGLayer.\n   */\n  public parent(): PAGComposition {\n    const wasmIns = this.wasmIns._parent();\n    if (!wasmIns) throw new Error('Get total matrix fail!');\n    return new PAGComposition(wasmIns);\n  }\n  /**\n   * Returns the markers of this layer.\n   */\n  public markers() {\n    const wasmIns = this.wasmIns._markers();\n    if (!wasmIns) throw new Error('Get markers fail!');\n    return proxyVector(wasmIns, (wasmIns: any) => wasmIns as Marker);\n  }\n  /**\n   * Converts the time from the PAGLayer's (local) timeline to the PAGSurface (global) timeline. The\n   * time is in microseconds.\n   */\n  public localTimeToGlobal(localTime: number): number {\n    return this.wasmIns._localTimeToGlobal(localTime) as number;\n  }\n  /**\n   * Converts the time from the PAGSurface (global) to the PAGLayer's (local) timeline timeline. The\n   * time is in microseconds.\n   */\n  public globalToLocalTime(globalTime: number): number {\n    return this.wasmIns._globalToLocalTime(globalTime) as number;\n  }\n  /**\n   * The duration of the layer in microseconds, indicates the length of the visible range.\n   */\n  public duration(): number {\n    return this.wasmIns._duration() as number;\n  }\n  /**\n   * Returns the frame rate of this layer.\n   */\n  public frameRate(): number {\n    return this.wasmIns._frameRate() as number;\n  }\n  /**\n   * The start time of the layer in microseconds, indicates the start position of the visible range\n   * in parent composition. It could be negative value.\n   */\n  public startTime(): number {\n    return this.wasmIns._startTime() as number;\n  }\n  /**\n   * Set the start time of the layer, in microseconds.\n   */\n  public setStartTime(time: number) {\n    this.wasmIns._setStartTime(time);\n  }\n  /**\n   * The current time of the layer in microseconds, the layer is invisible if currentTime is not in\n   * the visible range (startTime <= currentTime < startTime + duration).\n   */\n  public currentTime(): number {\n    return this.wasmIns._currentTime() as number;\n  }\n  /**\n   * Set the current time of the layer, in microseconds.\n   */\n  public setCurrentTime(time: number) {\n    this.wasmIns._setCurrentTime(time);\n  }\n  /**\n   * Returns the current progress of play position, the value ranges from 0.0 to 1.0.\n   */\n  public getProgress(): number {\n    return this.wasmIns._getProgress() as number;\n  }\n  /**\n   * Set the progress of play position, the value ranges from 0.0 to 1.0. A value of 0.0 represents\n   * the frame at startTime. A value of 1.0 represents the frame at the end of duration.\n   */\n  public setProgress(percent: number) {\n    this.wasmIns._setProgress(percent);\n  }\n  /**\n   * Set the progress of play position to the previous frame.\n   */\n  public preFrame() {\n    this.wasmIns._preFrame();\n  }\n  /**\n   * Set the progress of play position to the next frame.\n   */\n  public nextFrame() {\n    this.wasmIns._nextFrame();\n  }\n  /**\n   * Returns a rectangle that defines the original area of the layer, which is not transformed by\n   * the matrix.\n   */\n  public getBounds(): Rect {\n    return this.wasmIns._getBounds() as Rect;\n  }\n  /**\n   * Returns trackMatte layer of this layer.\n   */\n  public trackMatteLayer(): PAGLayer {\n    const wasmIns = this.wasmIns._trackMatteLayer();\n    if (!wasmIns) throw new Error('Get track matte layer fail!');\n    return layer2typeLayer(wasmIns);\n  }\n  /**\n   * Indicate whether this layer is excluded from parent's timeline. If set to true, this layer's\n   * current time will not change when parent's current time changes.\n   */\n  public excludedFromTimeline(): boolean {\n    return this.wasmIns._excludedFromTimeline() as boolean;\n  }\n  /**\n   * Set the excludedFromTimeline flag of this layer.\n   */\n  public setExcludedFromTimeline(value: boolean): void {\n    this.wasmIns._setExcludedFromTimeline(value);\n  }\n  /**\n   * Returns true if this layer is a PAGFile.\n   */\n  public isPAGFile(): boolean {\n    return this.wasmIns._isPAGFile() as boolean;\n  }\n  /**\n   * Returns this layer as a type layer.\n   */\n  public asTypeLayer() {\n    return layer2typeLayer(this);\n  }\n\n  public isDelete(): boolean {\n    return this.wasmIns.isDelete();\n  }\n\n  public destroy(): void {\n    this.wasmIns.delete();\n    this.isDestroyed = true;\n  }\n}\n","import { PAGModule } from './pag-module';\nimport { PAGLayer } from './pag-layer';\nimport { destroyVerify, wasmAwaitRewind } from './utils/decorators';\nimport { layer2typeLayer, proxyVector } from './utils/type-utils';\n\nimport type { Marker } from './types';\n\n@destroyVerify\n@wasmAwaitRewind\nexport class PAGComposition extends PAGLayer {\n  /**\n   * Make a empty PAGComposition with specified size.\n   */\n  public static make(width: number, height: number): PAGComposition {\n    const wasmIns = PAGModule._PAGComposition._Make(width, height);\n    if (!wasmIns) throw new Error('Make PAGComposition fail!');\n    return new PAGComposition(wasmIns);\n  }\n  /**\n   * Returns the width of the Composition.\n   */\n  public width(): number {\n    return this.wasmIns._width() as number;\n  }\n  /**\n   * Returns the height of the Composition.\n   */\n  public height(): number {\n    return this.wasmIns._height() as number;\n  }\n  /**\n   * Set the width and height of the Composition.\n   */\n  public setContentSize(width: number, height: number): void {\n    this.wasmIns._setContentSize(width, height);\n  }\n  /**\n   * Returns the number of child layers of this composition.\n   */\n  public numChildren(): number {\n    return this.wasmIns._numChildren() as number;\n  }\n  /**\n   * Returns the child layer that exists at the specified index.\n   * @param index The index position of the child layer.\n   * @returns The child layer at the specified index position.\n   */\n  public getLayerAt(index: number) {\n    const wasmIns = this.wasmIns._getLayerAt(index);\n    if (!wasmIns) throw new Error(`Get layer at ${index} fail!`);\n    return layer2typeLayer(wasmIns);\n  }\n  /**\n   * Returns the index position of a child layer.\n   * @param pagLayer The layer instance to identify.\n   * @returns The index position of the child layer to identify.\n   */\n  public getLayerIndex(pagLayer: PAGLayer): number {\n    return this.wasmIns._getLayerIndex(pagLayer.wasmIns) as number;\n  }\n  /**\n   * Changes the position of an existing child layer in the composition. This affects the layering\n   * of child layers.\n   * @param pagLayer The child layer for which you want to change the index number.\n   * @param index The resulting index number for the child layer.\n   */\n  public setLayerIndex(pagLayer: PAGLayer, index: number): number {\n    return this.wasmIns._setLayerIndex(pagLayer.wasmIns, index) as number;\n  }\n  /**\n   * Add a PAGLayer to current PAGComposition at the top. If you add a layer that already has a\n   * different PAGComposition object as a parent, the layer is removed from the other PAGComposition\n   * object.\n   */\n  public addLayer(pagLayer: PAGLayer): boolean {\n    return this.wasmIns._addLayer(pagLayer.wasmIns) as boolean;\n  }\n  /**\n   * Add a PAGLayer to current PAGComposition at the top. If you add a layer that already has a\n   * different PAGComposition object as a parent, the layer is removed from the other PAGComposition\n   * object.\n   */\n  public addLayerAt(pagLayer: PAGLayer, index: number): boolean {\n    return this.wasmIns._addLayerAt(pagLayer.wasmIns, index) as boolean;\n  }\n  /**\n   * Check whether current PAGComposition contains the specified pagLayer.\n   */\n  public contains(pagLayer: PAGLayer): boolean {\n    return this.wasmIns._contains(pagLayer.wasmIns) as boolean;\n  }\n  /**\n   * Remove the specified PAGLayer from current PAGComposition.\n   */\n  public removeLayer(pagLayer: PAGLayer) {\n    const wasmIns = this.wasmIns._removeLayer(pagLayer.wasmIns);\n    if (!wasmIns) throw new Error('Remove layer fail!');\n    return layer2typeLayer(wasmIns);\n  }\n  /**\n   * Remove the specified PAGLayer from current PAGComposition.\n   */\n  public removeLayerAt(index: number) {\n    const wasmIns = this.wasmIns._removeLayerAt(index);\n    if (!wasmIns) throw new Error(`Remove layer at ${index} fail!`);\n    return layer2typeLayer(wasmIns);\n  }\n  /**\n   * Remove all PAGLayers from current PAGComposition.\n   */\n  public removeAllLayers(): void {\n    this.wasmIns._removeAllLayers();\n  }\n  /**\n   * Swap the layers at the specified index.\n   */\n  public swapLayer(pagLayer1: PAGLayer, pagLayer2: PAGLayer): void {\n    this.wasmIns._swapLayer(pagLayer1.wasmIns, pagLayer2.wasmIns);\n  }\n  /**\n   * Swap the layers at the specified index.\n   */\n  public swapLayerAt(index1: number, index2: number): void {\n    this.wasmIns._swapLayerAt(index1, index2);\n  }\n  /**\n   * The audio data of this composition, which is an AAC audio in an MPEG-4 container.\n   */\n  public audioBytes(): Uint8Array | null {\n    return this.wasmIns._audioBytes();\n  }\n  /**\n   * Returns the audio markers of this composition.\n   */\n  public audioMarkers() {\n    const wasmIns = this.wasmIns._audioMarkers();\n    if (!wasmIns) throw new Error(`Get audioMarkers fail!`);\n    return proxyVector(wasmIns, (wasmIns: any) => wasmIns as Marker);\n  }\n  /**\n   * Indicates when the first frame of the audio plays in the composition's timeline.\n   */\n  public audioStartTime(): number {\n    return this.wasmIns._audioStartTime() as number;\n  }\n  /**\n   * Returns an array of layers that match the specified layer name.\n   */\n  public getLayersByName(layerName: string) {\n    const wasmIns = this.wasmIns._getLayersByName(layerName);\n    if (!wasmIns) throw new Error(`Get layers by ${layerName} fail!`);\n    return proxyVector(wasmIns, layer2typeLayer);\n  }\n  /**\n   * Returns an array of layers that lie under the specified point. The point is in pixels and from\n   * this PAGComposition's local coordinates.\n   */\n  public getLayersUnderPoint(localX: number, localY: number) {\n    const wasmIns = this.wasmIns._getLayersUnderPoint(localX, localY);\n    if (!wasmIns) throw new Error(`Get layers under point ${localX},${localY} fail!`);\n    return proxyVector(wasmIns, layer2typeLayer);\n  }\n}\n","import { isInstanceOf } from './type-utils';\n\nexport const readFile = (file: File) =>\n  new Promise<ArrayBuffer | null>((resolve) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      resolve(reader.result as ArrayBuffer | null);\n    };\n    reader.onerror = () => {\n      console.error((reader.error as DOMException).message);\n    };\n    reader.readAsArrayBuffer(file);\n  });\n\nexport const transferToArrayBuffer = (data: File | Blob | ArrayBuffer) => {\n  if (isInstanceOf(data, globalThis.File)) {\n    return readFile(data as File);\n  } else if (isInstanceOf(data, globalThis.Blob)) {\n    return readFile(new File([data as Blob], ''));\n  } else if (isInstanceOf(data, globalThis.ArrayBuffer)) {\n    return Promise.resolve(data as ArrayBuffer);\n  }\n  return Promise.resolve(null);\n};\n\nexport const concatUint8Arrays = (arrays: Array<Uint8Array>) => {\n  let totalLength = 0;\n  for (const arr of arrays) {\n    totalLength += arr.byteLength;\n  }\n  const result = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const arr of arrays) {\n    result.set(arr, offset);\n    offset += arr.byteLength;\n  }\n  return result;\n};\n","import type { PAG } from '../types';\n\nexport const writeBufferToWasm = (module: PAG, data: ArrayLike<number> | ArrayBufferLike) => {\n  const uint8Array = new Uint8Array(data);\n  const numBytes = uint8Array.byteLength;\n  const dataPtr = module._malloc(numBytes);\n  const dataOnHeap = new Uint8Array(module.HEAPU8.buffer, dataPtr, numBytes);\n  dataOnHeap.set(uint8Array);\n  return { byteOffset: dataPtr, length: numBytes, free: () => module._free(dataPtr) };\n};\n\nexport const readBufferFromWasm = (\n  module: PAG,\n  data: ArrayLike<number> | ArrayBufferLike,\n  handle: (byteOffset: number, length: number) => boolean,\n) => {\n  const uint8Array = new Uint8Array(data);\n  const dataPtr = module._malloc(uint8Array.byteLength);\n  if (!handle(dataPtr, uint8Array.byteLength)) return { data: null, free: () => module._free(dataPtr) };\n  const dataOnHeap = new Uint8Array(module.HEAPU8.buffer, dataPtr, uint8Array.byteLength);\n  uint8Array.set(dataOnHeap);\n  return { data: uint8Array, free: () => module._free(dataPtr) };\n};\n","import { PAGModule } from './pag-module';\nimport { PAGComposition } from './pag-composition';\nimport { transferToArrayBuffer } from './utils/common';\nimport { wasmAwaitRewind, wasmAsyncMethod, destroyVerify } from './utils/decorators';\nimport { getLayerTypeName, layer2typeLayer, proxyVector } from './utils/type-utils';\n\nimport type { PAGImage } from './pag-image';\nimport { LayerType, PAGTimeStretchMode, TextDocument } from './types';\nimport { writeBufferToWasm } from './utils/buffer';\n\n@destroyVerify\n@wasmAwaitRewind\nexport class PAGFile extends PAGComposition {\n  /**\n   * Load pag file from file.\n   */\n  @wasmAsyncMethod\n  public static async load(data: File | Blob | ArrayBuffer) {\n    const buffer = await transferToArrayBuffer(data);\n    if (!buffer)\n      throw new Error(\n        'Initialize PAGFile data type error, please put check data type must to be File ｜ Blob | ArrayBuffer!',\n      );\n    return PAGFile.loadFromBuffer(buffer);\n  }\n  /**\n   * Load pag file from arrayBuffer\n   */\n  public static loadFromBuffer(buffer: ArrayBuffer) {\n    if (!buffer || !(buffer.byteLength > 0)) throw new Error('Initialize PAGFile data not be empty!');\n    const { byteOffset, length, free } = writeBufferToWasm(PAGModule, buffer);\n    const wasmIns = PAGModule._PAGFile._Load(byteOffset, length);\n    free();\n    if (!wasmIns) throw new Error('Load PAGFile fail!');\n    const pagFile = new PAGFile(wasmIns);\n    return pagFile;\n  }\n  /**\n   * The maximum tag level current SDK supports.\n   */\n  public static maxSupportedTagLevel(): number {\n    return PAGModule._PAGFile._MaxSupportedTagLevel() as number;\n  }\n\n  /**\n   * The tag level this pag file requires.\n   */\n  public tagLevel(): number {\n    return this.wasmIns._tagLevel() as number;\n  }\n  /**\n   * The number of replaceable texts.\n   */\n  public numTexts(): number {\n    return this.wasmIns._numTexts() as number;\n  }\n  /**\n   * The number of replaceable images.\n   */\n  public numImages(): number {\n    return this.wasmIns._numImages() as number;\n  }\n  /**\n   * The number of video compositions.\n   */\n  public numVideos(): number {\n    return this.wasmIns._numVideos() as number;\n  }\n  /**\n   * Get a text data of the specified index. The index ranges from 0 to numTexts - 1.\n   * Note: It always returns the default text data.\n   */\n  public getTextData(editableTextIndex: number): TextDocument {\n    return this.wasmIns._getTextData(editableTextIndex) as TextDocument;\n  }\n  /**\n   * Replace the text data of the specified index. The index ranges from 0 to PAGFile.numTexts - 1.\n   * Passing in null for the textData parameter will reset it to default text data.\n   */\n  public replaceText(editableTextIndex: number, textData: TextDocument): void {\n    this.wasmIns._replaceText(editableTextIndex, textData);\n  }\n  /**\n   * Replace the image content of the specified index with a PAGImage object. The index ranges from\n   * 0 to PAGFile.numImages - 1. Passing in null for the image parameter will reset it to default\n   * image content.\n   */\n  public replaceImage(editableImageIndex: number, pagImage: PAGImage): void {\n    this.wasmIns._replaceImage(editableImageIndex, pagImage.wasmIns);\n  }\n  /**\n   * Return an array of layers by specified editable index and layer type.\n   */\n  public getLayersByEditableIndex(editableIndex: Number, layerType: LayerType) {\n    const wasmIns = this.wasmIns._getLayersByEditableIndex(editableIndex, layerType);\n    if (!wasmIns) throw new Error(`Get ${getLayerTypeName(layerType)} layers by ${editableIndex} fail!`);\n    return proxyVector(wasmIns, layer2typeLayer);\n  }\n  /**\n   * Returns the indices of the editable layers in this PAGFile.\n   * If the editableIndex of a PAGLayer is not present in the returned indices, the PAGLayer should\n   * not be treated as editable.\n   */\n  public getEditableIndices(layerType: LayerType): Array<number> {\n    return this.wasmIns._getEditableIndices(layerType);\n  }\n  /**\n   * Indicate how to stretch the original duration to fit target duration when file's duration is\n   * changed. The default value is PAGTimeStretchMode::Repeat.\n   */\n  public timeStretchMode(): PAGTimeStretchMode {\n    return this.wasmIns._timeStretchMode() as PAGTimeStretchMode;\n  }\n  /**\n   * Set the timeStretchMode of this file.\n   */\n  public setTimeStretchMode(value: PAGTimeStretchMode): void {\n    this.wasmIns._setTimeStretchMode(value);\n  }\n  /**\n   * Set the duration of this PAGFile. Passing a value less than or equal to 0 resets the duration\n   * to its default value.\n   */\n  public setDuration(duration: number): void {\n    this.wasmIns._setDuration(duration);\n  }\n  /**\n   * Set the duration of this PAGFile. Passing a value less than or equal to 0 resets the duration\n   * to its default value.\n   */\n  public copyOriginal(): PAGFile {\n    const wasmIns = this.wasmIns._copyOriginal();\n    if (!wasmIns) throw new Error(`Copy original fail!`);\n    return new PAGFile(wasmIns);\n  }\n}\n","import { PAGModule } from './pag-module';\nimport { AlphaType, ColorType } from './types';\nimport { readBufferFromWasm } from './utils/buffer';\nimport { destroyVerify, wasmAwaitRewind } from './utils/decorators';\n\n@destroyVerify\n@wasmAwaitRewind\nexport class PAGSurface {\n  /**\n   * Make a PAGSurface from canvas.\n   */\n  public static fromCanvas(canvasID: string): PAGSurface {\n    const wasmIns = PAGModule._PAGSurface._FromCanvas(canvasID);\n    if (!wasmIns) throw new Error(`Make PAGSurface from canvas ${canvasID} fail!`);\n    return new PAGSurface(wasmIns);\n  }\n  /**\n   * Make a PAGSurface from texture.\n   */\n  public static fromTexture(textureID: number, width: number, height: number, flipY: boolean): PAGSurface {\n    const wasmIns = PAGModule._PAGSurface._FromTexture(textureID, width, height, flipY);\n    if (!wasmIns) throw new Error(`Make PAGSurface from texture ${textureID} fail!`);\n    return new PAGSurface(wasmIns);\n  }\n  /**\n   * Make a PAGSurface from frameBuffer.\n   */\n  public static fromRenderTarget(frameBufferID: number, width: number, height: number, flipY: boolean): PAGSurface {\n    const wasmIns = PAGModule._PAGSurface._FromRenderTarget(frameBufferID, width, height, flipY);\n    if (!wasmIns) throw new Error(`Make PAGSurface from frameBuffer ${frameBufferID} fail!`);\n    return new PAGSurface(wasmIns);\n  }\n\n  public wasmIns;\n  public isDestroyed = false;\n\n  public constructor(wasmIns: any) {\n    this.wasmIns = wasmIns;\n  }\n  /**\n   * The width of surface in pixels.\n   */\n  public width(): number {\n    return this.wasmIns._width() as number;\n  }\n  /**\n   * The height of surface in pixels.\n   */\n  public height(): number {\n    return this.wasmIns._height() as number;\n  }\n  /**\n   * Update the size of surface, and reset the internal surface.\n   */\n  public updateSize(): void {\n    this.wasmIns._updateSize();\n  }\n  /**\n   * Erases all pixels of this surface with transparent color. Returns true if the content has\n   * changed.\n   */\n  public clearAll(): boolean {\n    return this.wasmIns._clearAll() as boolean;\n  }\n  /**\n   * Free the cache created by the surface immediately. Can be called to reduce memory pressure.\n   */\n  public freeCache(): void {\n    this.wasmIns._freeCache();\n  }\n  /**\n   * Copies pixels from current PAGSurface to dstPixels with specified color type, alpha type and\n   * row bytes. Returns true if pixels are copied to dstPixels.\n   */\n  public readPixels(colorType: ColorType, alphaType: AlphaType): Uint8Array | null {\n    if (colorType === ColorType.Unknown) return null;\n    const rowBytes = this.width() * (colorType === ColorType.ALPHA_8 ? 1 : 4);\n    const length = rowBytes * this.height();\n    const dataUint8Array = new Uint8Array(length);\n    const { data, free } = readBufferFromWasm(PAGModule, dataUint8Array, (dataPtr) => {\n      return this.wasmIns._readPixels(colorType, alphaType, dataPtr, rowBytes) as boolean;\n    });\n    free();\n    return data;\n  }\n\n  public destroy(): void {\n    this.wasmIns.delete();\n    this.isDestroyed = true;\n  }\n}\n","import { PAGModule } from './pag-module';\nimport { PAGFile } from './pag-file';\nimport { PAGSurface } from './pag-surface';\nimport { wasmAwaitRewind, wasmAsyncMethod, destroyVerify } from './utils/decorators';\nimport { getWasmIns, layer2typeLayer, proxyVector } from './utils/type-utils';\nimport { Matrix } from './core/matrix';\n\nimport { PAGComposition } from './pag-composition';\nimport type { PAGLayer } from './pag-layer';\nimport type { PAGScaleMode, Rect } from './types';\nimport type { VideoReader } from './interfaces';\n\n@destroyVerify\n@wasmAwaitRewind\nexport class PAGPlayer {\n  public static create(): PAGPlayer {\n    const wasmIns = new PAGModule._PAGPlayer();\n    if (!wasmIns) throw new Error('Create PAGPlayer fail!');\n    return new PAGPlayer(wasmIns);\n  }\n\n  public wasmIns;\n  public isDestroyed = false;\n  public videoReaders: VideoReader[] = [];\n\n  public constructor(wasmIns: any) {\n    this.wasmIns = wasmIns;\n  }\n  /**\n   * Set the progress of play position, the value is from 0.0 to 1.0.\n   */\n  public setProgress(progress: number): void {\n    this.wasmIns._setProgress(progress);\n  }\n  /**\n   * Apply all pending changes to the target surface immediately. Returns true if the content has\n   * changed.\n   */\n  @wasmAsyncMethod\n  public async flush() {\n    return PAGModule.webAssemblyQueue.exec<boolean>(this.wasmIns._flush, this.wasmIns);\n  }\n  /**\n   * [Internal] Apply all pending changes to the target surface immediately. Returns true if the content has\n   * changed.\n   */\n  @wasmAsyncMethod\n  public async flushInternal(callback: (res: boolean) => void) {\n    const res = await PAGModule.webAssemblyQueue.exec<boolean>(async () => {\n      PAGModule.currentPlayer = this;\n      const res = await this.wasmIns._flush();\n      PAGModule.currentPlayer = null;\n      callback(res);\n      return res;\n    }, this.wasmIns);\n    // Check if any video reader has error.\n    for (const videoReader of this.videoReaders) {\n      const error = await videoReader.getError();\n      if (error !== null) {\n        throw error;\n      }\n    }\n    return res;\n  }\n  /**\n   * The duration of current composition in microseconds.\n   */\n  public duration(): number {\n    return this.wasmIns._duration() as number;\n  }\n  /**\n   * Returns the current progress of play position, the value is from 0.0 to 1.0.\n   */\n  public getProgress(): number {\n    return this.wasmIns._getProgress() as number;\n  }\n  /**\n   * Returns the current frame.\n   */\n  public currentFrame(): number {\n    return this.wasmIns._currentFrame() as number;\n  }\n  /**\n   * If set to false, the player skips rendering for video composition.\n   */\n  public videoEnabled(): boolean {\n    return this.wasmIns._videoEnabled() as boolean;\n  }\n  /**\n   * Set the value of videoEnabled property.\n   */\n  public setVideoEnabled(enabled: boolean): void {\n    this.wasmIns._setVideoEnabled(enabled);\n  }\n  /**\n   * If set to true, PAGPlayer caches an internal bitmap representation of the static content for each\n   * layer. This caching can increase performance for layers that contain complex vector content. The\n   * execution speed can be significantly faster depending on the complexity of the content, but it\n   * requires extra graphics memory. The default value is true.\n   */\n  public cacheEnabled(): boolean {\n    return this.wasmIns._cacheEnabled() as boolean;\n  }\n  /**\n   * Set the value of cacheEnabled property.\n   */\n  public setCacheEnabled(enabled: boolean): void {\n    this.wasmIns._setCacheEnabled(enabled);\n  }\n  /**\n   * This value defines the scale factor for internal graphics caches, ranges from 0.0 to 1.0. The\n   * scale factors less than 1.0 may result in blurred output, but it can reduce the usage of graphics\n   * memory which leads to better performance. The default value is 1.0.\n   */\n  public cacheScale(): number {\n    return this.wasmIns._cacheScale() as number;\n  }\n  /**\n   * Set the value of cacheScale property.\n   */\n  public setCacheScale(value: number): void {\n    this.wasmIns._setCacheScale(value);\n  }\n  /**\n   * The maximum frame rate for rendering, ranges from 1 to 60. If set to a value less than the actual\n   * frame rate from composition, it drops frames but increases performance. Otherwise, it has no\n   * effect. The default value is 60.\n   */\n  public maxFrameRate(): number {\n    return this.wasmIns._maxFrameRate() as number;\n  }\n  /**\n   * Set the maximum frame rate for rendering.\n   */\n  public setMaxFrameRate(value: number): void {\n    this.wasmIns._setMaxFrameRate(value);\n  }\n  /**\n   * Returns the current scale mode.\n   */\n  public scaleMode(): PAGScaleMode {\n    return this.wasmIns._scaleMode() as PAGScaleMode;\n  }\n  /**\n   * Specifies the rule of how to scale the pag content to fit the surface size. The matrix\n   * changes when this method is called.\n   */\n  public setScaleMode(value: PAGScaleMode): void {\n    this.wasmIns._setScaleMode(value);\n  }\n  /**\n   * Set the PAGSurface object for PAGPlayer to render onto.\n   */\n  public setSurface(pagSurface: PAGSurface | null): void {\n    this.wasmIns._setSurface(getWasmIns(pagSurface));\n  }\n  /**\n   *\n   * Returns the current PAGComposition for PAGPlayer to render as content.\n   */\n  public getComposition(): PAGComposition {\n    const wasmIns = this.wasmIns._getComposition();\n    if (!wasmIns) throw new Error('Get composition fail!');\n    if (wasmIns._isPAGFile()) {\n      return new PAGFile(wasmIns);\n    }\n    return new PAGComposition(wasmIns);\n  }\n  /**\n   *\n   * Sets a new PAGComposition for PAGPlayer to render as content.\n   */\n\n  public setComposition(pagComposition: PAGComposition | null) {\n    this.wasmIns._setComposition(getWasmIns(pagComposition));\n  }\n  /**\n   * Returns the PAGSurface object for PAGPlayer to render onto.\n   */\n  public getSurface(): PAGSurface {\n    const wasmIns = this.wasmIns._getSurface();\n    if (!wasmIns) throw new Error('Get surface fail!');\n    return new PAGSurface(wasmIns);\n  }\n  /**\n   * Returns a copy of current matrix.\n   */\n  public matrix(): Matrix {\n    const wasmIns = this.wasmIns._matrix();\n    if (!wasmIns) throw new Error('Get matrix fail!');\n    return new Matrix(wasmIns);\n  }\n  /**\n   * Set the transformation which will be applied to the composition. The scaleMode property\n   * will be set to PAGScaleMode::None when this method is called.\n   */\n  public setMatrix(matrix: Matrix) {\n    this.wasmIns._setMatrix(matrix.wasmIns);\n  }\n  /**\n   * Set the progress of play position to next frame. It is applied only when the composition is not\n   * null.\n   */\n  public nextFrame() {\n    this.wasmIns._nextFrame();\n  }\n  /**\n   * Set the progress of play position to previous frame. It is applied only when the composition is\n   * not null.\n   */\n  public preFrame() {\n    this.wasmIns._preFrame();\n  }\n  /**\n   * If true, PAGPlayer clears the whole content of PAGSurface before drawing anything new to it.\n   * The default value is true.\n   */\n  public autoClear(): boolean {\n    return this.wasmIns._autoClear() as boolean;\n  }\n  /**\n   * Sets the autoClear property.\n   */\n  public setAutoClear(value: boolean) {\n    this.wasmIns._setAutoClear(value);\n  }\n  /**\n   * Returns a rectangle that defines the original area of the layer, which is not transformed by\n   * the matrix.\n   */\n  public getBounds(pagLayer: PAGLayer): Rect {\n    return this.wasmIns._getBounds(pagLayer.wasmIns) as Rect;\n  }\n  /**\n   * Returns an array of layers that lie under the specified point. The point is in pixels and from\n   *\n   * this PAGComposition's local coordinates.\n   */\n  public getLayersUnderPoint(localX: number, localY: number) {\n    const wasmIns = this.wasmIns._getLayersUnderPoint(localX, localY);\n    if (!wasmIns) throw new Error(`Get layers under point, x: ${localX} y:${localY} fail!`);\n    return proxyVector(wasmIns, layer2typeLayer);\n  }\n  /**\n   * Evaluates the PAGLayer to see if it overlaps or intersects with the specified point. The point\n   *\n   * is in the coordinate space of the PAGSurface, not the PAGComposition that contains the\n   * PAGLayer. It always returns false if the PAGLayer or its parent (or parent's parent...) has not\n   * been added to this PAGPlayer. The pixelHitTest parameter indicates whether or not to check\n   * against the actual pixels of the object (true) or the bounding box (false). Returns true if the\n   * PAGLayer overlaps or intersects with the specified point.\n   */\n  public hitTestPoint(pagLayer: PAGLayer, surfaceX: number, surfaceY: number, pixelHitTest = false): boolean {\n    return this.wasmIns._hitTestPoint(pagLayer.wasmIns, surfaceX, surfaceY, pixelHitTest) as boolean;\n  }\n  /**\n   * The time cost by rendering in microseconds.\n   */\n  public renderingTime(): number {\n    return this.wasmIns._renderingTime() as number;\n  }\n  /**\n   * The time cost by image decoding in microseconds.\n   */\n  public imageDecodingTime(): number {\n    return this.wasmIns._imageDecodingTime() as number;\n  }\n  /**\n   * The time cost by presenting in microseconds.\n   */\n  public presentingTime(): number {\n    return this.wasmIns._presentingTime() as number;\n  }\n  /**\n   * The memory cost by graphics in bytes.\n   */\n  public graphicsMemory(): number {\n    return this.wasmIns._graphicsMemory() as number;\n  }\n  /**\n   * Prepares the player for the next flush() call. It collects all CPU tasks from the current\n   * progress of the composition and runs them asynchronously in parallel. It is usually used for\n   * speeding up the first frame rendering.\n   */\n  public prepare(): Promise<void> {\n    return PAGModule.webAssemblyQueue.exec(async () => {\n      PAGModule.currentPlayer = this;\n      await this.wasmIns._prepare();\n      PAGModule.currentPlayer = null;\n    }, this.wasmIns);\n  }\n\n  public destroy() {\n    this.wasmIns.delete();\n    this.isDestroyed = true;\n  }\n  /**\n   * Link VideoReader to PAGPlayer.\n   */\n  public linkVideoReader(videoReader: VideoReader) {\n    this.videoReaders.push(videoReader);\n  }\n  /**\n   * Unlink VideoReader from PAGPlayer.\n   */\n  public unlinkVideoReader(videoReader: VideoReader) {\n    const index = this.videoReaders.indexOf(videoReader);\n    if (index !== -1) {\n      this.videoReaders.splice(index, 1);\n    }\n  }\n}\n","import { AlphaType, ColorType, PAGScaleMode } from './types';\nimport { wasmAwaitRewind, wasmAsyncMethod, destroyVerify } from './utils/decorators';\nimport { PAGModule } from './pag-module';\nimport { Matrix } from './core/matrix';\nimport { writeBufferToWasm } from './utils/buffer';\n\n@destroyVerify\n@wasmAwaitRewind\nexport class PAGImage {\n  /**\n   * Create pag image from image file.\n   */\n  @wasmAsyncMethod\n  public static async fromFile(data: File): Promise<PAGImage> {\n    return new Promise((resolve, reject) => {\n      const image = new Image();\n      image.onload = async () => {\n        resolve(PAGImage.fromSource(image));\n      };\n      image.onerror = (error) => {\n        reject(error);\n      };\n      image.src = URL.createObjectURL(data);\n    });\n  }\n  /**\n   * Create pag image from image source or video source.\n   * Make sure the target pixel is shown on the screen.\n   * Like\n   * ``` javascript\n   * Image.onload = async () => {\n   *   return await PAGImage.fromSource(Image)\n   * }\n   * ```\n   */\n  public static fromSource(source: TexImageSource): PAGImage {\n    const wasmIns = PAGModule._PAGImage._FromNativeImage(source);\n    if (!wasmIns) throw new Error('Make PAGImage from source fail!');\n    return new PAGImage(wasmIns);\n  }\n  /**\n   *  Creates a PAGImage object from an array of pixel data, return null if it's not valid pixels.\n   */\n  public static fromPixels(\n    pixels: Uint8Array,\n    width: number,\n    height: number,\n    colorType: ColorType,\n    alphaType: AlphaType,\n  ): PAGImage {\n    const rowBytes = width * (colorType === ColorType.ALPHA_8 ? 1 : 4);\n    const { byteOffset, free } = writeBufferToWasm(PAGModule, pixels);\n    const wasmIns = PAGModule._PAGImage._FromPixels(byteOffset, width, height, rowBytes, colorType, alphaType);\n    free();\n    if (!wasmIns) throw new Error('Make PAGImage from pixels fail!');\n    return new PAGImage(wasmIns);\n  }\n  /**\n   * Creates a PAGImage object from the specified backend texture, return null if the texture is\n   * invalid.\n   */\n  public static fromTexture(textureID: number, width: number, height: number, flipY: boolean) {\n    const wasmIns = PAGModule._PAGImage._FromTexture(textureID, width, height, flipY);\n    if (!wasmIns) throw new Error('Make PAGImage from texture fail!');\n    return new PAGImage(wasmIns);\n  }\n\n  public wasmIns;\n  public isDestroyed = false;\n\n  public constructor(wasmIns: any) {\n    this.wasmIns = wasmIns;\n  }\n  /**\n   * Returns the width in pixels.\n   */\n  public width(): number {\n    return this.wasmIns._width() as number;\n  }\n  /**\n   * Returns the height in pixels.\n   */\n  public height(): number {\n    return this.wasmIns._height() as number;\n  }\n  /**\n   * Returns the current scale mode. The default value is PAGScaleMode::LetterBox.\n   */\n  public scaleMode(): PAGScaleMode {\n    return this.wasmIns._scaleMode() as PAGScaleMode;\n  }\n  /**\n   * Specifies the rule of how to scale the content to fit the image layer's original size.\n   * The matrix changes when this method is called.\n   */\n  public setScaleMode(scaleMode: PAGScaleMode) {\n    this.wasmIns._setScaleMode(scaleMode);\n  }\n  /**\n   * Returns a copy of current matrix.\n   */\n  public matrix(): Matrix {\n    const wasmIns = this.wasmIns._matrix();\n    if (!wasmIns) throw new Error('Get matrix fail!');\n    return new Matrix(wasmIns);\n  }\n  /**\n   * Set the transformation which will be applied to the content.\n   * The scaleMode property will be set to PAGScaleMode::None when this method is called.\n   */\n  public setMatrix(matrix: Matrix) {\n    this.wasmIns._setMatrix(matrix.wasmIns);\n  }\n  /**\n   * Destroy the pag image.\n   */\n  public destroy(): void {\n    this.wasmIns.delete();\n    this.isDestroyed = true;\n  }\n}\n","export type Listener<K> = (event: K) => void;\n\nexport class EventManager<K, V> {\n  private listenerMap: Map<keyof K, Array<(event: V) => void>>;\n\n  public constructor() {\n    this.listenerMap = new Map();\n  }\n\n  public on(eventName: keyof K, listener: Listener<V>) {\n    let listenerList: Listener<V>[] = [];\n    if (this.listenerMap.has(eventName)) {\n      listenerList = this.listenerMap.get(eventName) as Array<(event: V) => void>;\n    }\n    listenerList.push(listener);\n    this.listenerMap.set(eventName, listenerList);\n  }\n\n  public off(eventName: keyof K, listener?: Listener<V>): boolean {\n    if (!this.listenerMap.has(eventName)) return false;\n    const listenerList: Listener<V>[] = this.listenerMap.get(eventName) as Listener<V>[];\n    if (listenerList.length === 0) return false;\n    if (!listener) {\n      this.listenerMap.delete(eventName);\n      return true;\n    }\n    const index = listenerList.indexOf(listener);\n    if (index === -1) return false;\n    listenerList.splice(index, 1);\n    return true;\n  }\n\n  public emit(eventName: keyof K, event: V): boolean {\n    if (!this.listenerMap.has(eventName)) return false;\n    const listenerList: Listener<V>[] = this.listenerMap.get(eventName) as Listener<V>[];\n    if (listenerList.length === 0) return false;\n    listenerList.forEach((listener: Listener<V>) => listener(event));\n    return true;\n  }\n}\n","/**\n * VideoDecode wait frame num.\n */\nexport const VIDEO_DECODE_WAIT_FRAME = 3;\n/**\n * VideoDecode seek timeout frame num.\n */\nexport const VIDEO_DECODE_SEEK_TIMEOUT_FRAME = 12;\n/**\n * NAL unit length. [ 0, 0, 0, 1 ]\n */\nexport const NALU_HEADER_LENGTH = 4;\n/**\n * Web safe font.\n */\nexport const WEB_SAFE_FONT = 'Arial';\n/**\n * Default render canvas size.\n */\nexport const DEFAULT_CANVAS_SIZE = 2560;\n/**\n * Default WebGL ContextAttributes\n */\nexport const WEBGL_CONTEXT_ATTRIBUTES = {\n  depth: false,\n  stencil: false,\n  antialias: false,\n};\n\nexport const VIDEO_PLAYBACK_RATE_MIN = 0.125;\nexport const VIDEO_PLAYBACK_RATE_MAX = 4;\n\nexport const CANVAS_POOL_MAX_SIZE = 10;\n","const nav = navigator?.userAgent || '';\nexport const ANDROID = /android|adr/i.test(nav);\nexport const MOBILE = /(mobile)/i.test(nav) && ANDROID;\nexport const MACOS = !(/(mobile)/i.test(nav) || MOBILE) && /Mac OS X/i.test(nav);\nexport const IPHONE = /(iphone|ipad|ipod)/i.test(nav);\nexport const WECHAT = /MicroMessenger/i.test(nav);\nexport const SAFARI_OR_IOS_WEBVIEW =  /^((?!chrome|android).)*safari/i.test(nav) || IPHONE;\nexport const WORKER = typeof globalThis.importScripts === 'function';\n","import { CANVAS_POOL_MAX_SIZE } from '../constant';\nimport { isInstanceOf } from './type-utils';\nimport { SAFARI_OR_IOS_WEBVIEW, WORKER } from './ua';\n\nconst canvasPool = new Array<HTMLCanvasElement | OffscreenCanvas>();\n\nexport const isOffscreenCanvas = (element: any) => isInstanceOf(element, globalThis.OffscreenCanvas);\n\nexport const isCanvas = (element: any) =>\n  isOffscreenCanvas(element) || isInstanceOf(element, globalThis.HTMLCanvasElement);\n\nexport const getCanvas2D = (width: number, height: number) => {\n  let canvas = canvasPool.pop() || createCanvas2D();\n  if (canvas !== null) {\n    canvas.width = width;\n    canvas.height = height;\n  }\n  return canvas;\n};\n\nexport const releaseCanvas2D = (canvas: HTMLCanvasElement | OffscreenCanvas) => {\n  if (canvasPool.length < CANVAS_POOL_MAX_SIZE) {\n    canvasPool.push(canvas);\n  }\n};\n\nconst createCanvas2D = () => {\n  /**\n   * Safari browser does not support OffscreenCanvas before version 16.4.\n   * After version 16.4, OffscreenCanvas is supported, but type checking errors still exist for WebGL interfaces on OffscreenCanvas.\n   * Therefore, HTMLCanvas Element is used uniformly in Safari.\n   */\n  if (SAFARI_OR_IOS_WEBVIEW && !WORKER) {\n    return document.createElement('canvas');\n  }\n  try {\n    const offscreenCanvas = new OffscreenCanvas(0, 0);\n    const context = offscreenCanvas.getContext('2d') as OffscreenCanvasRenderingContext2D;\n    if (typeof context.measureText === 'function') return offscreenCanvas;\n    return document.createElement('canvas');\n  } catch (err) {\n    return document.createElement('canvas');\n  }\n};\n\nexport const calculateDisplaySize = (canvas: HTMLCanvasElement) => {\n  const styleDeclaration = globalThis.getComputedStyle(canvas, null);\n  const computedSize = {\n    width: Number(styleDeclaration.width.replace('px', '')),\n    height: Number(styleDeclaration.height.replace('px', '')),\n  };\n  if (computedSize.width > 0 && computedSize.height > 0) {\n    return computedSize;\n  } else {\n    const styleSize = {\n      width: Number(canvas.style.width.replace('px', '')),\n      height: Number(canvas.style.height.replace('px', '')),\n    };\n    if (styleSize.width > 0 && styleSize.height > 0) {\n      return styleSize;\n    } else {\n      return {\n        width: canvas.width,\n        height: canvas.height,\n      };\n    }\n  }\n};\n","import { PAGModule } from '../pag-module';\nimport { WEBGL_CONTEXT_ATTRIBUTES } from '../constant';\nimport { isInstanceOf } from '../utils/type-utils';\n\nexport class BackendContext {\n  public static from(gl: WebGLRenderingContext | WebGL2RenderingContext | BackendContext): BackendContext {\n    if (gl instanceof BackendContext) {\n      return new BackendContext(gl.handle, true);\n    } else {\n      const majorVersion = isInstanceOf(gl, globalThis.WebGL2RenderingContext) ? 2 : 1;\n      const { GL } = PAGModule;\n      let id = 0;\n      if (GL.contexts.length > 0) {\n        id = GL.contexts.findIndex((context) => context?.GLctx === gl);\n      }\n      if (id < 1) {\n        id = GL.registerContext(gl, {\n          majorVersion: majorVersion,\n          minorVersion: 0,\n          ...WEBGL_CONTEXT_ATTRIBUTES,\n        });\n        return new BackendContext(id);\n      }\n      return new BackendContext(id, true);\n    }\n  }\n\n  public handle: number;\n\n  private adopted: boolean;\n  private isDestroyed = false;\n  private oldHandle = 0;\n\n  public constructor(handle: number, adopted = false) {\n    this.handle = handle;\n    this.adopted = adopted;\n  }\n\n  public getContext(): WebGLRenderingContext | null {\n    return PAGModule.GL.getContext(this.handle)!.GLctx;\n  }\n\n  public makeCurrent(): boolean {\n    if (this.isDestroyed) return false;\n    this.oldHandle = PAGModule.GL.currentContext?.handle || 0;\n    if (this.oldHandle === this.handle) return true;\n    return PAGModule.GL.makeContextCurrent(this.handle);\n  }\n\n  public clearCurrent() {\n    if (this.isDestroyed) return;\n    if (this.oldHandle === this.handle) return;\n    PAGModule.GL.makeContextCurrent(0);\n    if (this.oldHandle) {\n      PAGModule.GL.makeContextCurrent(this.oldHandle);\n    }\n  }\n  /**\n   * Register WebGLTexture in EmscriptenGL, And return handle.\n   */\n  public registerTexture(texture: WebGLTexture) {\n    return this.register(PAGModule.GL.textures, texture);\n  }\n  /**\n   * Get WebGLTexture by handle.\n   */\n  public getTexture(handled: number): WebGLTexture | null {\n    return PAGModule.GL.textures[handled];\n  }\n  /**\n   * Unregister WebGLTexture reference in EmscriptenGL.\n   */\n  public unregisterTexture(handle: number) {\n    PAGModule.GL.textures[handle] = null;\n  }\n  /**\n   * Register WebGLFramebuffer in EmscriptenGL, And return handle.\n   */\n  public registerRenderTarget(framebuffer: WebGLFramebuffer) {\n    return this.register(PAGModule.GL.framebuffers, framebuffer);\n  }\n  /**\n   * Get WebGLFramebuffer by handle.\n   */\n  public getRenderTarget(handle: number): WebGLFramebuffer | null {\n    return PAGModule.GL.framebuffers[handle];\n  }\n  /**\n   * Unregister WebGLTexture reference in EmscriptenGL.\n   */\n  public unregisterRenderTarget(handle: number) {\n    PAGModule.GL.framebuffers[handle] = null;\n  }\n\n  public destroy(): void {\n    if (this.adopted) return;\n    PAGModule.GL.deleteContext(this.handle);\n  }\n\n  private register<T>(table: (T | null)[], item: T): number {\n    const handle = PAGModule.GL.getNewId(table);\n    table[handle] = item;\n    return handle;\n  }\n}\n","import { WEBGL_CONTEXT_ATTRIBUTES } from '../constant';\nimport { BackendContext } from './backend-context';\n\nconst renderCanvasList: RenderCanvas[] = [];\n\nexport class RenderCanvas {\n  public static from(canvas: HTMLCanvasElement | OffscreenCanvas, contextAttributes?: WebGLContextAttributes) {\n    let renderCanvas = renderCanvasList.find((targetCanvas) => targetCanvas.canvas === canvas);\n    if (renderCanvas) return renderCanvas;\n    renderCanvas = new RenderCanvas(canvas, contextAttributes);\n    renderCanvasList.push(renderCanvas);\n    return renderCanvas;\n  }\n\n  private _canvas: HTMLCanvasElement | OffscreenCanvas | null = null;\n  private _glContext: BackendContext | null = null;\n  private retainCount = 0;\n\n  public constructor(canvas: HTMLCanvasElement | OffscreenCanvas, contextAttributes?: WebGLContextAttributes) {\n    this._canvas = canvas;\n    const gl = canvas.getContext('webgl', {\n      ...WEBGL_CONTEXT_ATTRIBUTES,\n      ...contextAttributes,\n    }) as WebGLRenderingContext;\n    if (!gl) throw new Error('Canvas context is not WebGL!');\n    this._glContext = BackendContext.from(gl);\n  }\n\n  public retain() {\n    this.retainCount += 1;\n  }\n\n  public release() {\n    this.retainCount -= 1;\n    if (this.retainCount === 0) {\n      if (!this._glContext) return;\n      this._glContext.destroy();\n      this._glContext = null;\n      this._canvas = null;\n    }\n  }\n\n  public get canvas() {\n    return this._canvas;\n  }\n\n  public get glContext() {\n    return this._glContext;\n  }\n}\n","let getTime: () => number;\ntry {\n  getTime = performance.now.bind(performance);\n} catch (e) {\n  getTime = Date.now.bind(Date);\n}\n\nexport class Clock {\n  private startTime: number;\n  private markers: { [key: string]: number };\n\n  public constructor() {\n    this.startTime = getTime();\n    this.markers = {};\n  }\n\n  public reset() {\n    this.startTime = getTime();\n    this.markers = {};\n  }\n\n  public mark(key: string) {\n    if (!key) {\n      console.log('Clock.mark(): An empty marker name was specified!');\n      return;\n    }\n    if (Object.keys(this.markers).find((markerKey) => markerKey === key)) {\n      console.log(`Clock.mark(): The specified marker name '${key}' already exists!`);\n      return;\n    }\n    this.markers[key] = getTime();\n  }\n\n  public measure(makerFrom: string, makerTo: string) {\n    let start;\n    let end;\n    if (!makerFrom) {\n      start = this.startTime;\n    } else {\n      if (!Object.keys(this.markers).find((markerKey) => markerKey === makerFrom)) {\n        console.log(`Clock.measure(): The specified makerFrom '${makerFrom}' does not exist!`);\n        return 0;\n      }\n      start = this.markers[makerFrom];\n    }\n    if (!makerTo) {\n      end = getTime();\n    } else {\n      if (!Object.keys(this.markers).find((markerKey) => markerKey === makerTo)) {\n        console.log(`Clock.measure(): The specified makerTo '${makerTo}' does not exist!`);\n        return 0;\n      }\n      end = this.markers[makerTo];\n    }\n    return end - start;\n  }\n}\n","import { DebugData, PAGScaleMode, PAGViewEventMap, PAGViewListenerEvent } from './types';\nimport { PAGPlayer } from './pag-player';\nimport { EventManager, Listener } from './utils/event-manager';\nimport { PAGSurface } from './pag-surface';\nimport { destroyVerify } from './utils/decorators';\nimport { calculateDisplaySize, isOffscreenCanvas } from './utils/canvas';\nimport { BackendContext } from './core/backend-context';\nimport { PAGModule } from './pag-module';\nimport { RenderCanvas } from './core/render-canvas';\nimport { Clock } from './utils/clock';\nimport { WORKER } from './utils/ua';\nimport { isInstanceOf } from './utils/type-utils';\n\nimport type { PAGComposition } from './pag-composition';\nimport type { Matrix } from './core/matrix';\n\nexport interface PAGViewOptions {\n  /**\n   * Use style to scale canvas. default false.\n   * When target canvas is offscreen canvas, useScale is false.\n   */\n  useScale?: boolean;\n  /**\n   * Can choose Canvas2D mode in chrome. default false.\n   */\n  useCanvas2D?: boolean;\n  /**\n   * Render first frame when pag view init. default true.\n   */\n  firstFrame?: boolean;\n}\n\n@destroyVerify\nexport class PAGView {\n  /**\n   * Create pag view.\n   * @param file pag file.\n   * @param canvas target render canvas.\n   * @param initOptions pag view options\n   * @returns\n   */\n  public static async init(\n    file: PAGComposition,\n    canvas: string | HTMLCanvasElement | OffscreenCanvas,\n    initOptions: PAGViewOptions = {},\n  ): Promise<PAGView | undefined> {\n    let canvasElement: HTMLCanvasElement | OffscreenCanvas | null = null;\n    if (typeof canvas === 'string') {\n      canvasElement = document.getElementById(canvas.substr(1)) as HTMLCanvasElement;\n    } else if (typeof window !== 'undefined' && isInstanceOf(canvas, globalThis.HTMLCanvasElement)) {\n      canvasElement = canvas;\n    } else if (isOffscreenCanvas(canvas)) {\n      canvasElement = canvas;\n    }\n    if (!canvasElement) throw new Error('Canvas is not found!');\n\n    const pagPlayer = PAGModule.PAGPlayer.create();\n    const pagView = new PAGView(pagPlayer, canvasElement);\n    pagView.pagViewOptions = { ...pagView.pagViewOptions, ...initOptions };\n\n    if (pagView.pagViewOptions.useCanvas2D) {\n      PAGModule.globalCanvas.retain();\n      pagView.pagGlContext = BackendContext.from(PAGModule.globalCanvas.glContext as BackendContext);\n    } else {\n      pagView.renderCanvas = RenderCanvas.from(canvasElement);\n      pagView.renderCanvas.retain();\n      pagView.pagGlContext = BackendContext.from(pagView.renderCanvas.glContext as BackendContext);\n    }\n    pagView.resetSize(pagView.pagViewOptions.useScale);\n    pagView.frameRate = file.frameRate();\n    pagView.pagSurface = this.makePAGSurface(pagView.pagGlContext, pagView.rawWidth, pagView.rawHeight);\n    pagView.player.setSurface(pagView.pagSurface);\n    pagView.player.setComposition(file);\n    pagView.setProgress(0);\n    if (pagView.pagViewOptions.firstFrame) {\n      await pagView.flush();\n      pagView.playFrame = 0;\n    }\n    return pagView;\n  }\n\n  protected static makePAGSurface(pagGlContext: BackendContext, width: number, height: number): PAGSurface {\n    if (!pagGlContext.makeCurrent()) throw new Error('Make context current fail!');\n    const pagSurface = PAGSurface.fromRenderTarget(0, width, height, true);\n    pagGlContext.clearCurrent();\n    return pagSurface;\n  }\n\n  /**\n   * The repeat count of player.\n   */\n  public repeatCount = 0;\n  /**\n   * Indicates whether or not this pag view is playing.\n   */\n  public isPlaying = false;\n  /**\n   * Indicates whether or not this pag view is destroyed.\n   */\n  public isDestroyed = false;\n\n  protected pagViewOptions: PAGViewOptions = {\n    useScale: true,\n    useCanvas2D: false,\n    firstFrame: true,\n  };\n  protected renderCanvas: RenderCanvas | null = null;\n  protected pagGlContext: BackendContext | null = null;\n  protected frameRate = 0;\n  protected pagSurface: PAGSurface | null = null;\n  protected player: PAGPlayer;\n  protected playFrame = -1;\n  protected canvasElement: HTMLCanvasElement | OffscreenCanvas | null;\n  protected timer: number | null = null;\n  protected flushingNextFrame = false;\n  protected playTime = 0;\n  protected startTime = 0;\n  protected repeatedTimes = 0;\n  protected eventManager: EventManager<PAGViewEventMap, PAGView> = new EventManager();\n\n  private canvasContext: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D | null | undefined;\n  private rawWidth = 0;\n  private rawHeight = 0;\n  private debugData: DebugData = {\n    FPS: 0,\n    flushTime: 0,\n  };\n  private fpsBuffer: number[] = [];\n\n  public constructor(pagPlayer: PAGPlayer, canvasElement: HTMLCanvasElement | OffscreenCanvas) {\n    this.player = pagPlayer;\n    this.canvasElement = canvasElement;\n  }\n\n  /**\n   * The duration of current composition in microseconds.\n   */\n  public duration() {\n    return this.player.duration();\n  }\n  /**\n   * Adds a listener to the set of listeners that are sent events through the life of an animation,\n   * such as start, repeat, and end.\n   */\n  public addListener<K extends keyof PAGViewEventMap>(eventName: K, listener: Listener<PAGViewEventMap[K]>) {\n    return this.eventManager.on(eventName, listener);\n  }\n  /**\n   * Removes a listener from the set listening to this animation.\n   */\n  public removeListener<K extends keyof PAGViewEventMap>(eventName: K, listener?: Listener<PAGViewEventMap[K]>) {\n    return this.eventManager.off(eventName, listener);\n  }\n  /**\n   * Start the animation.\n   */\n  public async play() {\n    if (this.isPlaying) return;\n    this.isPlaying = true;\n    this.startTime = this.getNowTime() * 1000 - this.playTime;\n    for (const videoReader of this.player.videoReaders) {\n      videoReader.isPlaying = true;\n    }\n    const playTime = this.playTime;\n    await this.flushLoop(true);\n    if (playTime === 0) {\n      this.eventManager.emit('onAnimationStart', this);\n    }\n    this.eventManager.emit('onAnimationPlay', this);\n    if (this.playFrame === 0) {\n      this.eventManager.emit('onAnimationUpdate', this);\n    }\n  }\n  /**\n   * Pause the animation.\n   */\n  public pause() {\n    if (!this.isPlaying) return;\n    this.clearTimer();\n    for (const videoReader of this.player.videoReaders) {\n      videoReader.pause();\n    }\n    this.isPlaying = false;\n    this.eventManager.emit('onAnimationPause', this);\n  }\n  /**\n   * Stop the animation.\n   */\n  public async stop(notification = true) {\n    this.clearTimer();\n    this.playTime = 0;\n    this.player.setProgress(0);\n    this.playFrame = 0;\n    await this.flush();\n    for (const videoReader of this.player.videoReaders) {\n      videoReader.stop();\n    }\n    this.isPlaying = false;\n    if (notification) {\n      this.eventManager.emit('onAnimationCancel', this);\n    }\n  }\n  /**\n   * Set the number of times the animation will repeat. The default is 1, which means the animation\n   * will play only once. 0 means the animation will play infinity times.\n   */\n  public setRepeatCount(repeatCount: number) {\n    this.repeatCount = repeatCount < 0 ? 0 : repeatCount - 1;\n  }\n  /**\n   * Returns the current progress of play position, the value is from 0.0 to 1.0. It is applied only\n   * when the composition is not null.\n   */\n  public getProgress(): number {\n    return this.player.getProgress();\n  }\n  /**\n   * Returns the current frame.\n   */\n  public currentFrame(): number {\n    return this.player.currentFrame();\n  }\n  /**\n   * Set the progress of play position, the value is from 0.0 to 1.0.\n   */\n  public setProgress(progress: number): number {\n    this.playTime = progress * this.duration();\n    this.startTime = this.getNowTime() * 1000 - this.playTime;\n    if (!this.isPlaying) {\n      this.player.setProgress(progress);\n    }\n    return progress;\n  }\n  /**\n   * Return the value of videoEnabled property.\n   */\n  public videoEnabled(): boolean {\n    return this.player.videoEnabled();\n  }\n  /**\n   * If set false, will skip video layer drawing.\n   */\n  public setVideoEnabled(enable: boolean) {\n    this.player.setVideoEnabled(enable);\n  }\n  /**\n   * If set to true, PAG renderer caches an internal bitmap representation of the static content for\n   * each layer. This caching can increase performance for layers that contain complex vector content.\n   * The execution speed can be significantly faster depending on the complexity of the content, but\n   * it requires extra graphics memory. The default value is true.\n   */\n  public cacheEnabled(): boolean {\n    return this.player.cacheEnabled();\n  }\n  /**\n   * Set the value of cacheEnabled property.\n   */\n  public setCacheEnabled(enable: boolean) {\n    this.player.setCacheEnabled(enable);\n  }\n  /**\n   * This value defines the scale factor for internal graphics caches, ranges from 0.0 to 1.0. The\n   * scale factors less than 1.0 may result in blurred output, but it can reduce the usage of graphics\n   * memory which leads to better performance. The default value is 1.0.\n   */\n  public cacheScale(): number {\n    return this.player.cacheScale();\n  }\n  /**\n   * Set the value of cacheScale property.\n   */\n  public setCacheScale(value: number) {\n    this.player.setCacheScale(value);\n  }\n  /**\n   * The maximum frame rate for rendering. If set to a value less than the actual frame rate from\n   * PAGFile, it drops frames but increases performance. Otherwise, it has no effect. The default\n   * value is 60.\n   */\n  public maxFrameRate(): number {\n    return this.player.maxFrameRate();\n  }\n  /**\n   * Set the maximum frame rate for rendering.\n   */\n  public setMaxFrameRate(value: number) {\n    this.player.setMaxFrameRate(value);\n  }\n  /**\n   * Returns the current scale mode.\n   */\n  public scaleMode(): PAGScaleMode {\n    return this.player.scaleMode();\n  }\n  /**\n   * Specifies the rule of how to scale the pag content to fit the surface size. The matrix\n   * changes when this method is called.\n   */\n  public setScaleMode(value: PAGScaleMode) {\n    this.player.setScaleMode(value);\n  }\n  /**\n   * Call this method to render current position immediately. If the play() method is already\n   * called, there is no need to call it. Returns true if the content has changed.\n   */\n  public async flush() {\n    const clock = new Clock();\n    const res = await this.player.flushInternal((res) => {\n      if (this.pagViewOptions.useCanvas2D && res && PAGModule.globalCanvas.canvas) {\n        if (!this.canvasContext) this.canvasContext = this.canvasElement?.getContext('2d') as CanvasRenderingContext2D;\n        const compositeOperation = this.canvasContext!.globalCompositeOperation;\n        this.canvasContext!.globalCompositeOperation = 'copy';\n        this.canvasContext?.drawImage(\n          PAGModule.globalCanvas.canvas,\n          0,\n          PAGModule.globalCanvas.canvas.height - this.rawHeight,\n          this.rawWidth,\n          this.rawHeight,\n          0,\n          0,\n          this.canvasContext.canvas.width,\n          this.canvasContext.canvas.height,\n        );\n        this.canvasContext!.globalCompositeOperation = compositeOperation;\n      }\n      clock.mark('flush');\n      this.setDebugData({ flushTime: clock.measure('', 'flush') });\n      this.updateFPS();\n    });\n    this.eventManager.emit('onAnimationUpdate', this);\n    if (res) {\n      this.eventManager.emit('onAnimationFlushed', this);\n    }\n    return res;\n  }\n  /**\n   * Free the cache created by the pag view immediately. Can be called to reduce memory pressure.\n   */\n  public freeCache() {\n    this.pagSurface?.freeCache();\n  }\n  /**\n   * Returns the current PAGComposition for PAGView to render as content.\n   */\n  public getComposition() {\n    return this.player.getComposition();\n  }\n  /**\n   * Sets a new PAGComposition for PAGView to render as content.\n   * Note: If the composition is already added to another PAGView, it will be removed from\n   * the previous PAGView.\n   */\n  public setComposition(pagComposition: PAGComposition) {\n    this.player.setComposition(pagComposition);\n  }\n  /**\n   * Returns a copy of current matrix.\n   */\n  public matrix() {\n    return this.player.matrix();\n  }\n  /**\n   * Set the transformation which will be applied to the composition. The scaleMode property\n   * will be set to PAGScaleMode::None when this method is called.\n   */\n  public setMatrix(matrix: Matrix) {\n    this.player.setMatrix(matrix);\n  }\n\n  public getLayersUnderPoint(localX: number, localY: number) {\n    return this.player.getLayersUnderPoint(localX, localY);\n  }\n  /**\n   * Update size when changed canvas size.\n   */\n  public updateSize() {\n    if (!this.canvasElement) {\n      throw new Error('Canvas element is not found!');\n    }\n    this.rawWidth = this.canvasElement.width;\n    this.rawHeight = this.canvasElement.height;\n    if (!this.pagGlContext) return;\n    const pagSurface = PAGView.makePAGSurface(this.pagGlContext, this.rawWidth, this.rawHeight);\n    this.player.setSurface(pagSurface);\n    this.pagSurface?.destroy();\n    this.pagSurface = pagSurface;\n  }\n  /**\n   * Prepares the player for the next flush() call. It collects all CPU tasks from the current\n   * progress of the composition and runs them asynchronously in parallel. It is usually used for\n   * speeding up the first frame rendering.\n   */\n  public prepare() {\n    return this.player.prepare();\n  }\n  /**\n   * Returns a ImageBitmap object capturing the contents of the PAGView. Subsequent rendering of\n   * the PAGView will not be captured. Returns null if the PAGView hasn't been presented yet.\n   */\n  public makeSnapshot() {\n    return createImageBitmap(this.canvasElement!);\n  }\n\n  public destroy() {\n    this.clearTimer();\n    this.player.destroy();\n    this.pagSurface?.destroy();\n    if (this.pagViewOptions.useCanvas2D) {\n      PAGModule.globalCanvas.release();\n    } else {\n      this.renderCanvas?.release();\n    }\n    this.pagGlContext?.destroy();\n    this.pagGlContext = null;\n    this.canvasContext = null;\n    this.canvasElement = null;\n    this.isDestroyed = true;\n  }\n\n  public getDebugData() {\n    return this.debugData;\n  }\n\n  public setDebugData(data: DebugData) {\n    this.debugData = { ...this.debugData, ...data };\n  }\n\n  protected async flushLoop(force = false) {\n    if (!this.isPlaying) {\n      return;\n    }\n    this.setTimer();\n    if (this.flushingNextFrame) return;\n    try {\n      this.flushingNextFrame = true;\n      await this.flushNextFrame(force);\n      this.flushingNextFrame = false;\n    } catch (e: any) {\n      this.flushingNextFrame = false;\n      if (e.message !== 'The play() request was interrupted because the document was hidden!') {\n        this.clearTimer();\n      }\n      throw e;\n    }\n  }\n\n  protected async flushNextFrame(force = false) {\n    const duration = this.duration();\n    this.playTime = this.getNowTime() * 1000 - this.startTime;\n    const playFrame = Math.floor((this.playTime / 1000000) * this.frameRate);\n    const count = Math.floor(this.playTime / duration);\n    if (!force && this.repeatCount >= 0 && count > this.repeatCount) {\n      this.clearTimer();\n      this.player.setProgress(1);\n      await this.flush();\n      this.playTime = 0;\n      this.isPlaying = false;\n      this.repeatedTimes = 0;\n      this.eventManager.emit('onAnimationEnd', this);\n      return true;\n    }\n    if (!force && this.repeatedTimes === count && this.playFrame === playFrame) {\n      return false;\n    }\n    if (this.repeatedTimes < count) {\n      this.eventManager.emit('onAnimationRepeat', this);\n    }\n    this.player.setProgress((this.playTime % duration) / duration);\n    const res = await this.flush();\n    if (this.needResetStartTime()) {\n      // Decoding BMP takes too much time and makes the video reader seek repeatedly.\n      this.startTime = this.getNowTime() * 1000 - this.playTime;\n    }\n    this.playFrame = playFrame;\n    this.repeatedTimes = count;\n    return res;\n  }\n\n  protected getNowTime() {\n    try {\n      return performance.now();\n    } catch (e) {\n      return Date.now();\n    }\n  }\n\n  protected setTimer() {\n    if (WORKER) {\n      this.timer = self.setTimeout(() => {\n        this.flushLoop();\n      }, (1 / this.frameRate) * 1000);\n    } else {\n      this.timer = globalThis.requestAnimationFrame(() => {\n        this.flushLoop();\n      });\n    }\n  }\n\n  protected clearTimer(): void {\n    if (this.timer) {\n      if (WORKER) {\n        self.clearTimeout(this.timer);\n      } else {\n        globalThis.cancelAnimationFrame(this.timer);\n      }\n      this.timer = null;\n    }\n  }\n\n  protected resetSize(useScale = true) {\n    if (!this.canvasElement) {\n      throw new Error('Canvas element is not found!');\n    }\n    if (!useScale || isOffscreenCanvas(this.canvasElement)) {\n      this.rawWidth = this.canvasElement.width;\n      this.rawHeight = this.canvasElement.height;\n      return;\n    }\n    const canvas = this.canvasElement as HTMLCanvasElement;\n    const displaySize = calculateDisplaySize(canvas);\n    canvas.style.width = `${displaySize.width}px`;\n    canvas.style.height = `${displaySize.height}px`;\n    this.rawWidth = displaySize.width * globalThis.devicePixelRatio;\n    this.rawHeight = displaySize.height * globalThis.devicePixelRatio;\n    canvas.width = this.rawWidth;\n    canvas.height = this.rawHeight;\n  }\n\n  private updateFPS() {\n    let now: number;\n    try {\n      now = performance.now();\n    } catch (e) {\n      now = Date.now();\n    }\n    this.fpsBuffer = this.fpsBuffer.filter((value) => now - value <= 1000);\n    this.fpsBuffer.push(now);\n    this.setDebugData({ FPS: this.fpsBuffer.length });\n  }\n\n  private needResetStartTime() {\n    for (const VideoReader of this.player.videoReaders) {\n      if (VideoReader.isSought) return true;\n    }\n    return false;\n  }\n}\n","const fontNames = ['Arial', '\"Courier New\"', 'Georgia', '\"Times New Roman\"', '\"Trebuchet MS\"', 'Verdana'];\n\nexport const defaultFontNames = (() => {\n  return ['emoji'].concat(...fontNames);\n})();\n\nexport const getFontFamilies = (name: string, style = ''): string[] => {\n  if (!name) return [];\n  const nameChars = name.split(' ');\n  let names = [];\n  if (nameChars.length === 1) {\n    names.push(name);\n  } else {\n    names.push(nameChars.join(''));\n    names.push(nameChars.join(' '));\n  }\n  const fontFamilies = names.reduce((pre: string[], cur: string) => {\n    if (!style) {\n      pre.push(`\"${cur}\"`);\n    } else {\n      pre.push(`\"${cur} ${style}\"`);\n      pre.push(`\"${cur}-${style}\"`);\n    }\n    return pre;\n  }, []);\n  // Fallback font when style is not found.\n  if (style !== '') {\n    fontFamilies.push(`\"${name}\"`);\n  }\n  return fontFamilies;\n};\n","import { readFile } from './utils/common';\nimport { defaultFontNames } from './utils/font-family';\nimport { wasmAwaitRewind, wasmAsyncMethod, destroyVerify } from './utils/decorators';\nimport { PAGModule } from './pag-module';\n\n@destroyVerify\n@wasmAwaitRewind\nexport class PAGFont {\n  /**\n   * Create PAGFont instance.\n   */\n  public static create(fontFamily: string, fontStyle: string) {\n    const wasmIns = PAGModule._PAGFont._create(fontFamily, fontStyle);\n    if (!wasmIns) throw new Error('Create PAGFont fail!');\n    return new PAGFont(wasmIns);\n  }\n\n  /**\n   * Register custom font family in the browser.\n   */\n  @wasmAsyncMethod\n  public static async registerFont(family: string, data: File) {\n    const buffer = (await readFile(data)) as ArrayBuffer;\n    if (!buffer || !(buffer.byteLength > 0)) {\n      throw new Error('Initialize PAGFont data not be empty!');\n    }\n    const dataUint8Array = new Uint8Array(buffer);\n    const fontFace = new FontFace(family, dataUint8Array);\n    document.fonts.add(fontFace);\n    await fontFace.load();\n  }\n\n  /**\n   * Register fallback font names from pag.\n   */\n  public static registerFallbackFontNames(fontNames: String[] = []) {\n    /**\n     * Cannot determine whether a certain word exists in the font on the web environment.\n     * Because the canvas has font fallback when drawing.\n     * The fonts registered here are mainly used to put words in a list in order, and the list can put up to UINT16_MAX words.\n     * The emoji font family also has emoji words.\n     */\n    const vectorNames = new PAGModule.VectorString();\n    const names = fontNames.concat(defaultFontNames);\n    for (const name of names) {\n      vectorNames.push_back(name);\n    }\n    PAGModule._PAGFont._SetFallbackFontNames(vectorNames);\n    vectorNames.delete();\n  }\n\n  public wasmIns: any;\n  public isDestroyed = false;\n\n  public readonly fontFamily: string;\n  public readonly fontStyle: string;\n\n  public constructor(wasmIns: any) {\n    this.wasmIns = wasmIns;\n    this.fontFamily = this.wasmIns.fontFamily;\n    this.fontStyle = this.wasmIns.fontStyle;\n  }\n\n  public destroy() {\n    this.wasmIns.delete();\n    this.isDestroyed = true;\n  }\n}\n","type K = keyof HTMLVideoElementEventMap;\n\nlet eventHandlers: {\n  [key in K]?: {\n    node: HTMLVideoElement;\n    handler: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any;\n    capture: boolean;\n  }[];\n} = {};\n\nexport const addListener = (\n  node: HTMLVideoElement,\n  event: K,\n  handler: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any,\n  capture = false,\n) => {\n  if (!(event in eventHandlers)) {\n    eventHandlers[event] = [];\n  }\n  eventHandlers[event]?.push({ node: node, handler: handler, capture: capture });\n  node.addEventListener(event, handler, capture);\n};\n\nexport const removeListener = (\n  targetNode: HTMLElement,\n  event: K,\n  targetHandler: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any,\n) => {\n  if (!(event in eventHandlers)) return;\n  eventHandlers[event]\n    ?.filter(({ node, handler }) => node === targetNode && handler === targetHandler)\n    .forEach(({ node, handler, capture }) => node.removeEventListener(event, handler, capture));\n};\n\nexport const removeAllListeners = (targetNode: HTMLElement, event: K) => {\n  if (!(event in eventHandlers)) return;\n  eventHandlers[event]\n    ?.filter(({ node }) => node === targetNode)\n    .forEach(({ node, handler, capture }) => node.removeEventListener(event, handler, capture));\n\n  eventHandlers[event] = eventHandlers[event]?.filter(({ node }) => node !== targetNode);\n};\n","export enum WorkerMessageType {\n  PAGInit = 'PAGInit',\n  // PAGView static methods\n  PAGView_init = 'PAGView.init',\n  // PAGView instance methods\n  PAGView_duration = 'PAGView.duration',\n  PAGView_play = 'PAGView.play',\n  PAGView_pause = 'PAGView.pause',\n  PAGView_stop = 'PAGView.stop',\n  PAGView_setRepeatCount = 'PAGView.setRepeatCount',\n  PAGView_getProgress = 'PAGView.getProgress',\n  PAGView_currentFrame = 'PAGView.currentFrame',\n  PAGView_setProgress = 'PAGView.setProgress',\n  PAGView_scaleMode = 'PAGView.scaleMode',\n  PAGView_setScaleMode = 'PAGView.setScaleMode',\n  PAGView_flush = 'PAGView.flush',\n  PAGView_getDebugData = 'PAGView.getDebugData',\n  PAGView_destroy = 'PAGView.destroy',\n  // PAGFile static methods\n  PAGFile_load = 'PAGFile.load',\n  // PAGFile instance methods\n  PAGFile_getTextData = 'PAGFile.getTextData',\n  PAGFile_replaceText = 'PAGFile.replaceText',\n  PAGFile_replaceImage = 'PAGFile.replaceImage',\n  PAGFile_destroy = 'PAGFile.destroy',\n  // PAGImage static methods\n  PAGImage_fromSource = 'PAGImage.fromSource',\n  PAGImage_destroy = 'PAGImage.destroy',\n  // VideoReader static methods\n  VideoReader_constructor = 'VideoReader.constructor',\n  // VideoReader instance methods\n  VideoReader_prepare = 'VideoReader.prepare',\n  VideoReader_play = 'VideoReader.play',\n  VideoReader_pause = 'VideoReader.pause',\n  VideoReader_stop = 'VideoReader.stop',\n  VideoReader_getError = 'VideoReader.getError',\n  // Binding video reader\n  PAGModule_linkVideoReader = 'PAGModule.linkVideoReader',\n  // TextDocument instance methods\n  TextDocument_delete = 'TextDocument.delete',\n}\n","import type { WorkerMessage } from './worker';\n\nlet messageCount = 0;\nconst generateMessageName = (name: string) => `${name}_${messageCount++}`;\n\nexport interface WorkerInterface {\n  postMessage: (message: any, transfer: Transferable[]) => void;\n  addEventListener: (type: string, listener: (event: MessageEvent) => void) => void;\n  removeEventListener: (type: string, listener: (event: MessageEvent) => void) => void;\n}\n\nexport const postMessage = <T>(\n  worker: WorkerInterface,\n  message: WorkerMessage,\n  callback: (...args: any[]) => T,\n  transfer: (OffscreenCanvas | Transferable)[] = [],\n): Promise<T> => {\n  return new Promise((resolve) => {\n    if (!message) return;\n    const name = generateMessageName(message.name);\n    const handle = (event: MessageEvent<WorkerMessage>) => {\n      if (event.data.name === name) {\n        worker.removeEventListener('message', handle);\n        resolve(callback(...event.data.args));\n      }\n    };\n    worker.addEventListener('message', handle);\n    worker.postMessage({ name, args: message.args }, transfer);\n  });\n};\n","export class BitmapImage {\n  public bitmap: ImageBitmap | null;\n\n  public constructor(bitmap: ImageBitmap | null) {\n    this.bitmap = bitmap;\n  }\n\n  public setBitmap(bitmap: ImageBitmap) {\n    if (this.bitmap) {\n      this.bitmap.close();\n    }\n    this.bitmap = bitmap;\n  }\n}\n","import { WorkerMessageType } from './events';\nimport { postMessage } from './utils';\n\nimport type { EmscriptenGL } from '../types';\nimport { BitmapImage } from '../core/bitmap-image';\n\nexport class WorkerVideoReader {\n  public bitmap: ImageBitmap | null = null;\n  public isSought = false;\n  public isPlaying = false;\n\n  private proxyId: number;\n  private bitmapImage: BitmapImage = new BitmapImage(null);\n\n  public constructor(proxyId: number) {\n    this.proxyId = proxyId;\n  }\n\n  public prepare(targetFrame: number, playbackRate: number) {\n    return new Promise<void>((resolve) => {\n      postMessage(\n        self,\n        { name: WorkerMessageType.VideoReader_prepare, args: [this.proxyId, targetFrame, playbackRate] },\n        (res) => {\n          this.bitmapImage.setBitmap(res);\n          resolve();\n        },\n      );\n    });\n  }\n\n  public getVideo() {\n    return this.bitmapImage;\n  }\n\n  public onDestroy() {\n    self.postMessage({ name: 'VideoReader.onDestroy', args: [this.proxyId] });\n  }\n\n  public play() {\n    return new Promise<void>((resolve) => {\n      postMessage(self, { name: WorkerMessageType.VideoReader_play, args: [this.proxyId] }, () => {\n        resolve();\n      });\n    });\n  }\n\n  public pause() {\n    postMessage(self, { name: WorkerMessageType.VideoReader_pause, args: [this.proxyId] }, () => {});\n  }\n\n  public stop() {\n    postMessage(self, { name: WorkerMessageType.VideoReader_stop, args: [this.proxyId] }, () => {});\n  }\n\n  public getError() {\n    return new Promise<any>((resolve) => {\n      postMessage(self, { name: WorkerMessageType.VideoReader_getError, args: [this.proxyId] }, (res) => {\n        resolve(res);\n      });\n    });\n  }\n}\n","import {\n  VIDEO_DECODE_WAIT_FRAME,\n  VIDEO_DECODE_SEEK_TIMEOUT_FRAME,\n  VIDEO_PLAYBACK_RATE_MAX,\n  VIDEO_PLAYBACK_RATE_MIN,\n} from '../constant';\nimport { addListener, removeListener, removeAllListeners } from '../utils/video-listener';\nimport { IPHONE, WECHAT, SAFARI_OR_IOS_WEBVIEW, WORKER } from '../utils/ua';\nimport { PAGModule } from '../pag-module';\nimport { WorkerMessageType } from '../worker/events';\nimport { WorkerVideoReader } from '../worker/video-reader';\nimport { postMessage } from '../worker/utils';\n\nimport type { TimeRange, VideoReader as VideoReaderInterfaces } from '../interfaces';\nimport type { PAGPlayer } from '../pag-player';\nimport { isInstanceOf } from '../utils/type-utils';\nimport { Clock } from '../utils/clock';\n\nconst UHD_RESOLUTION = 3840;\n\n// Get video initiated token on Wechat browser.\nconst getWechatNetwork = () => {\n  return new Promise<void>((resolve) => {\n    window.WeixinJSBridge.invoke(\n      'getNetworkType',\n      {},\n      () => {\n        resolve();\n      },\n      () => {\n        resolve();\n      },\n    );\n  });\n};\n\nconst waitVideoCanPlay = (videoElement: HTMLVideoElement) => {\n  return new Promise((resolve) => {\n    const canplayHandle = () => {\n      removeListener(videoElement, 'canplay', canplayHandle);\n      clearTimeout(timer);\n      resolve(true);\n    };\n    addListener(videoElement, 'canplay', canplayHandle);\n    const timer = setTimeout(() => {\n      removeListener(videoElement, 'canplay', canplayHandle);\n      resolve(false);\n    }, 1000);\n  });\n};\n\nexport class VideoReader {\n  public static async create(\n    source: Uint8Array | HTMLVideoElement,\n    width: number,\n    height: number,\n    frameRate: number,\n    staticTimeRanges: TimeRange[],\n  ): Promise<VideoReaderInterfaces> {\n    if (WORKER) {\n      const proxyId = await new Promise<number>((resolve) => {\n        // TODO: source as HTMLVideoElement in WebWorker version.\n        const uint8Array = source as Uint8Array;\n        const buffer = uint8Array.buffer.slice(uint8Array.byteOffset, uint8Array.byteOffset + uint8Array.byteLength);\n        postMessage(\n          self,\n          {\n            name: WorkerMessageType.VideoReader_constructor,\n            args: [buffer, width, height, frameRate, staticTimeRanges, true],\n          },\n          (res) => {\n            resolve(res);\n          },\n          [buffer],\n        );\n      });\n      const videoReader = new WorkerVideoReader(proxyId);\n      PAGModule.currentPlayer?.linkVideoReader(videoReader);\n      return videoReader;\n    }\n    return new VideoReader(source, width, height, frameRate, staticTimeRanges);\n  }\n\n  public isSought = false;\n  public isPlaying = false;\n  public bitmap: ImageBitmap | null = null;\n\n  private videoEl: HTMLVideoElement | null = null;\n  private frameRate = 0;\n  private canplay = false;\n  private staticTimeRanges: StaticTimeRanges | null = null;\n  private disablePlaybackRate = false;\n  private error: any = null;\n  private player: PAGPlayer | null = null;\n  private width = 0;\n  private height = 0;\n  private bitmapCanvas: OffscreenCanvas | null = null;\n  private bitmapCtx: OffscreenCanvasRenderingContext2D | null = null;\n\n  public constructor(\n    source: Uint8Array | HTMLVideoElement,\n    width: number,\n    height: number,\n    frameRate: number,\n    staticTimeRanges: TimeRange[],\n    isWorker = false,\n  ) {\n    if (isInstanceOf(source, globalThis.HTMLVideoElement)) {\n      this.videoEl = source as HTMLVideoElement;\n      this.canplay = true;\n    } else {\n      this.videoEl = document.createElement('video');\n      this.videoEl.style.display = 'block';\n      this.videoEl.controls = true;\n      this.videoEl.muted = true;\n      this.videoEl.playsInline = true;\n      this.videoEl.preload = 'auto'; // use load() will make a bug on Chrome.\n      this.videoEl.width = width;\n      this.videoEl.height = height;\n      document.getElementById('videoContainer').appendChild(this.videoEl);\n      waitVideoCanPlay(this.videoEl).then(() => {\n        this.canplay = true;\n      });\n      const blob = new Blob([source as Uint8Array], { type: 'video/mp4' });\n      this.videoEl.src = URL.createObjectURL(blob);\n      if (IPHONE) {\n        // use load() will make a bug on Chrome.\n        this.videoEl.load();\n      }\n    }\n    this.frameRate = frameRate;\n    this.width = width;\n    this.height = height;\n    this.staticTimeRanges = new StaticTimeRanges(staticTimeRanges);\n    if (UHD_RESOLUTION < width || UHD_RESOLUTION < height) {\n      this.disablePlaybackRate = true;\n    }\n    if (!isWorker) {\n      this.linkPlayer(PAGModule.currentPlayer);\n    }\n  }\n\n  public async prepare(targetFrame: number, playbackRate: number) {\n    this.setError(null); // reset error\n    this.isSought = false; // reset seek status\n    const { currentTime } = this.videoEl!;\n    const targetTime = targetFrame / this.frameRate;\n    if (currentTime === 0 && targetTime === 0) {\n      console.log('aaa targetFrame prepare 1: ',targetFrame);\n      if (!this.canplay && !SAFARI_OR_IOS_WEBVIEW) {\n        console.log('aaa targetFrame prepare 2: ',targetFrame);\n        await waitVideoCanPlay(this.videoEl!);\n      } else {\n        console.log('aaa targetFrame prepare 3: ',targetFrame);\n        try {\n          console.log(\"bbb 调用 play 1 方法: targetFrame\", targetFrame)\n          await this.play();\n        } catch (e) {\n          this.setError(e);\n        }\n        await new Promise<void>((resolve) => {\n          requestAnimationFrame(() => {\n            console.log('aaa targetFrame prepare 4: ',targetFrame);\n            this.pause();\n            resolve();\n          });\n        });\n      }\n    } else {\n      console.log('aaa targetFrame prepare 5: ',targetFrame, currentTime);\n      console.log('aaa this.videoEl!.paused: '+ JSON.stringify(this.videoEl!.paused));\n      console.log('aaa Math.abs(currentTime - targetTime) < (1 / this.frameRate) * VIDEO_DECODE_WAIT_FRAME: '+ JSON.stringify(Math.abs(currentTime - targetTime) < (1 / this.frameRate) * VIDEO_DECODE_WAIT_FRAME));\n      if (Math.round(targetTime * this.frameRate) === Math.round(currentTime * this.frameRate)) {\n        console.log('aaa targetFrame prepare 6: ',targetFrame);\n        // Current frame\n      } else if (this.staticTimeRanges?.contains(targetFrame)) {\n        console.log('aaa targetFrame prepare 7: ',targetFrame);\n        console.log('aaa seek 1 targetTime , targetFrame: '+ JSON.stringify(targetFrame));\n        // Static frame\n        await this.seek(targetTime, false, targetFrame);\n        return;\n      } else if (Math.abs(currentTime - targetTime) < (1 / this.frameRate) * VIDEO_DECODE_WAIT_FRAME) {\n        // Within tolerable frame rate deviation\n        console.log('aaa targetFrame prepare 8: ',targetFrame);\n        if (targetFrame === 53 && this.videoEl?.width === 1200) {\n          this.isSought = true;\n          await this.seek(targetTime, true, targetFrame);\n          console.log('aaa seek 2 targetTime , targetFrame: '+ JSON.stringify(targetFrame));\n          return;\n        }\n      } else {\n        console.log('aaa targetFrame prepare 9: ',targetFrame);\n        // Seek and play\n        this.isSought = true;\n        console.log('aaa seek 2 targetTime , targetFrame: '+ JSON.stringify(targetFrame));\n        await this.seek(targetTime, true, targetFrame);\n        return;\n      }\n    }\n    console.log('aaa targetFrame prepare 10: ',targetFrame);\n\n    const targetPlaybackRate = Math.min(Math.max(playbackRate, VIDEO_PLAYBACK_RATE_MIN), VIDEO_PLAYBACK_RATE_MAX);\n    if (!this.disablePlaybackRate && this.videoEl!.playbackRate !== targetPlaybackRate) {\n      this.videoEl!.playbackRate = targetPlaybackRate;\n    }\n    console.log('aaa targetFrame prepare 11: ',targetFrame);\n    console.log('aaa this.isPlaying: '+ JSON.stringify(this.isPlaying));\n    console.log('aaa this.videoEl!.paused: '+ JSON.stringify(this.videoEl!.paused));\n    if (this.isPlaying && this.videoEl!.paused) {\n      try {\n        console.log(\"bbb 调用 play 2 方法: targetFrame\", targetFrame)\n        await this.play();\n      } catch (e) {\n        this.setError(e);\n      }\n    }\n  }\n\n  public getVideo() {\n    return this.videoEl;\n  }\n\n  // Only work in web worker version\n  public async generateBitmap() {\n    // Batter than createImageBitmap from video element in benchmark\n    if (!this.bitmapCanvas) {\n      this.bitmapCanvas = new OffscreenCanvas(this.width, this.height);\n      this.bitmapCanvas!.width = this.width;\n      this.bitmapCanvas!.height = this.height;\n      this.bitmapCtx = this.bitmapCanvas.getContext('2d') as OffscreenCanvasRenderingContext2D | null;\n    }\n    this.bitmapCtx?.fillRect(0, 0, this.width, this.height);\n    this.bitmapCtx?.drawImage(this.videoEl as HTMLVideoElement, 0, 0, this.width, this.height);\n    this.bitmap = await createImageBitmap(this.bitmapCanvas);\n    return this.bitmap;\n  }\n\n  public async play() {\n    console.log('document.visibilityState  play ', document.visibilityState)\n\n    if (!this.videoEl!.paused) return;\n    if (WECHAT && window.WeixinJSBridge) {\n      await getWechatNetwork();\n    }\n    if (document.visibilityState !== 'visible') {\n      console.log('document.visibilityState document.visibilityState ', document.visibilityState)\n      const visibilityHandle = () => {\n        console.log('document.visibilityState  visibilityHandle play ', document.visibilityState)\n        if (document.visibilityState === 'visible') {\n          if (this.videoEl) this.videoEl.play();\n          window.removeEventListener('visibilitychange', visibilityHandle);\n        }\n      };\n      window.addEventListener('visibilitychange', visibilityHandle);\n      throw new Error('The play() request was interrupted because the document was hidden!');\n    }\n    await this.videoEl?.play();\n  }\n\n  public pause() {\n    this.isPlaying = false;\n    if (this.videoEl!.paused) return;\n    this.videoEl?.pause();\n  }\n\n  public stop() {\n    this.isPlaying = false;\n    if (!this.videoEl!.paused) {\n      this.videoEl?.pause();\n    }\n    this.videoEl!.currentTime = 0;\n  }\n\n  public getError() {\n    return this.error;\n  }\n\n  public onDestroy() {\n    if (this.player) {\n      this.player.unlinkVideoReader(this);\n    }\n    removeAllListeners(this.videoEl!, 'playing');\n    removeAllListeners(this.videoEl!, 'timeupdate');\n    this.videoEl = null;\n    this.bitmapCanvas = null;\n    this.bitmapCtx = null;\n  }\n\n  private seek(targetTime: number, play = true, targetFrame: number) {\n    return new Promise<void>((resolve) => {\n      // const clock = new Clock();\n      console.log('seek targetTime:', targetTime, targetFrame);\n      // const pagFile = PAGFile.fromArrayBuffer(data);\n      // clock.mark(`seek targetFrame: ${targetFrame}`);\n      console.log('play: ', play)\n      console.log('this.videoEl!.paused: ', this.videoEl!.paused)\n      let isCallback = false;\n      let timer: any = null;\n      const setVideoState = async () => {\n        console.log('seek targetTime 10:', targetTime, targetFrame);\n        if (play && this.videoEl!.paused) {\n          console.log('seek targetTime 11:', targetTime, targetFrame);\n          try {\n            console.log(\"bbb 调用 play 3 方法: targetFrame\", targetFrame)\n            await this.play();\n          } catch (e) {\n            console.log('seek targetTime 12:', targetTime, targetFrame);\n\n            this.setError(e);\n          }\n        } else if (!play && !this.videoEl!.paused) {\n          console.log('seek targetTime 13:', targetTime, targetFrame);\n          this.videoEl?.pause();\n        }\n      };\n      const seekCallback = async () => {\n        if (!this.videoEl) {\n          console.log('seek targetTime 7:', targetTime, targetFrame);\n          this.setError(new Error(\"Video element doesn't exist!\"));\n          console.log(1);\n          \n          resolve();\n          return;\n        }\n        console.log('seek targetTime 8:', targetTime, targetFrame);\n        removeListener(this.videoEl, 'seeked', seekCallback);\n        await setVideoState();\n        isCallback = true;\n        clearTimeout(timer);\n        timer = null;\n        console.log('seek targetTime 9:', targetTime, targetFrame);\n        console.log(2);\n        \n        resolve();\n      };\n      if (!this.videoEl) {\n        this.setError(new Error(\"Video element doesn't exist!\"));\n        console.log(3);\n        \n        resolve();\n        return;\n      }\n      console.log('seek targetTime 1:', targetTime, targetFrame);\n      addListener(this.videoEl, 'seeked', seekCallback);\n      console.log('seek targetTime 2:', targetTime, targetFrame);\n      this.videoEl!.currentTime = targetTime;\n      console.log('seek targetTime 3:', targetTime, targetFrame);\n      // Timeout\n      timer = setTimeout(() => {\n        console.log('seek targetTime 4:', targetTime, targetFrame);\n        if (!isCallback) {\n          if (!this.videoEl) {\n            console.log('seek targetTime 5:', targetTime, targetFrame);\n            this.setError(new Error(\"Video element doesn't exist!\"));\n            console.log(4);\n            resolve();\n            return;\n          } else {\n            console.log('seek targetTime 6:', targetTime, targetFrame);\n            removeListener(this.videoEl, 'seeked', seekCallback);\n            setVideoState();\n            console.log(5);\n            resolve();\n          }\n        }\n      }, (1000 / this.frameRate) * VIDEO_DECODE_SEEK_TIMEOUT_FRAME);\n    });\n  }\n\n  private setError(e: any) {\n    this.error = e;\n  }\n\n  private linkPlayer(player: PAGPlayer | null) {\n    this.player = player;\n    if (player) {\n      player.linkVideoReader(this);\n    }\n  }\n}\n\nexport class StaticTimeRanges {\n  private timeRanges: TimeRange[];\n\n  public constructor(timeRanges: TimeRange[]) {\n    this.timeRanges = timeRanges;\n  }\n\n  public contains(targetFrame: number) {\n    if (this.timeRanges.length === 0) return false;\n    for (let timeRange of this.timeRanges) {\n      if (timeRange.start <= targetFrame && targetFrame < timeRange.end) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","export const measureText = (imageData: ImageData) => {\n  const imageDataInt32Array = new Int32Array(imageData.data.buffer);\n  let left = getLeftPixel(imageDataInt32Array, imageData.width, imageData.height);\n  let top = getTopPixel(imageDataInt32Array, imageData.width, imageData.height);\n  let right = getRightPixel(imageDataInt32Array, imageData.width, imageData.height);\n  let bottom = getBottomPixel(imageDataInt32Array, imageData.width, imageData.height);\n  return { left, top, right, bottom };\n};\n\nexport const getLeftPixel = (imageDataArray: Int32Array, width: number, height: number) => {\n  const verticalCount = imageDataArray.length / width;\n  const acrossCount = imageDataArray.length / height;\n  for (let i = 0; i < acrossCount; i++) {\n    for (let j = 0; j < verticalCount; j++) {\n      if (imageDataArray[i + j * width] !== 0) return i;\n    }\n  }\n  return acrossCount;\n};\n\nexport const getTopPixel = (imageDataArray: Int32Array, width: number, height: number) => {\n  const verticalCount = imageDataArray.length / width;\n  const acrossCount = imageDataArray.length / height;\n  for (let i = 0; i < verticalCount; i++) {\n    for (let j = 0; j < acrossCount; j++) {\n      if (imageDataArray[i * width + j] !== 0) return i;\n    }\n  }\n  return verticalCount;\n};\n\nexport const getRightPixel = (imageDataArray: Int32Array, width: number, height: number) => {\n  const verticalCount = imageDataArray.length / width;\n  const acrossCount = imageDataArray.length / height;\n  for (let i = acrossCount - 1; i > 0; i--) {\n    for (let j = verticalCount - 1; j > 0; j--) {\n      if (imageDataArray[i + width * j] !== 0) return i;\n    }\n  }\n  return 0;\n};\n\nexport const getBottomPixel = (imageDataArray: Int32Array, width: number, height: number) => {\n  const verticalCount = imageDataArray.length / width;\n  const acrossCount = imageDataArray.length / height;\n  for (let i = verticalCount - 1; i > 0; i--) {\n    for (let j = acrossCount - 1; j > 0; j--) {\n      if (imageDataArray[i * width + j] !== 0) return i;\n    }\n  }\n  return 0;\n};\n","import { measureText } from '../utils/measure-text';\nimport { defaultFontNames, getFontFamilies } from '../utils/font-family';\nimport { getCanvas2D } from '../utils/canvas';\n\nimport type { Rect } from '../types';\n\nexport class ScalerContext {\n  public static canvas: HTMLCanvasElement | OffscreenCanvas;\n  public static context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D;\n\n  public static setCanvas(canvas: HTMLCanvasElement | OffscreenCanvas) {\n    ScalerContext.canvas = canvas;\n  }\n\n  public static setContext(context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D) {\n    ScalerContext.context = context;\n  }\n\n  public static isUnicodePropertyEscapeSupported(): boolean {\n    try {\n      // eslint-disable-next-line prefer-regex-literals\n      const regex = new RegExp(\"\\\\p{L}\", \"u\");\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  public static isEmoji(text: string): boolean {\n    let emojiRegExp;\n    if (this.isUnicodePropertyEscapeSupported()) {\n      emojiRegExp = /\\p{Extended_Pictographic}|[#*0-9]\\uFE0F?\\u20E3|[\\uD83C\\uDDE6-\\uD83C\\uDDFF]/u;\n    } else {\n      // eslint-disable-next-line no-misleading-character-class\n      emojiRegExp = /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/;\n      // /(?:[\\u{1F300}-\\u{1F6FF}\\u{1F900}-\\u{1F9FF}\\u{2600}-\\u{26FF}\\u{2700}-\\u{27BF}\\u{1F1E6}-\\u{1F1FF}\\u{1F170}-\\u{1F171}\\u{FE0F}\\u{20E3}]|[#*0-9]\\uFE0F?\\u20E3|[\\uD83C\\uDDE6-\\uD83C\\uDDFF])/ug;\n    }\n    return emojiRegExp.test(text);\n  }\n  \n\n  private readonly fontName: string;\n  private readonly fontStyle: string;\n  private readonly size: number;\n  private readonly fauxBold: boolean;\n  private readonly fauxItalic: boolean;\n\n  private fontBoundingBoxMap: { key: string; value: Rect }[] = [];\n\n  public constructor(fontName: string, fontStyle: string, size: number, fauxBold = false, fauxItalic = false) {\n    this.fontName = fontName;\n    this.fontStyle = fontStyle;\n    this.size = size;\n    this.fauxBold = fauxBold;\n    this.fauxItalic = fauxItalic;\n    this.loadCanvas();\n  }\n\n  public fontString() {\n    const attributes = [];\n    // css font-style\n    if (this.fauxItalic) {\n      attributes.push('italic');\n    }\n    // css font-weight\n    if (this.fauxBold) {\n      attributes.push('bold');\n    }\n    // css font-size\n    attributes.push(`${this.size}px`);\n    // css font-family\n    const fallbackFontNames = defaultFontNames.concat();\n    fallbackFontNames.unshift(...getFontFamilies(this.fontName, this.fontStyle));\n    attributes.push(`${fallbackFontNames.join(',')}`);\n    return attributes.join(' ');\n  }\n\n  public getTextAdvance(text: string) {\n    const { context } = ScalerContext;\n    context.font = this.fontString();\n    return context.measureText(text).width;\n  }\n\n  public getTextBounds(text: string) {\n    const { context } = ScalerContext;\n    context.font = this.fontString();\n    const metrics = this.measureText(context, text);\n\n    const bounds: Rect = {\n      left: Math.floor(-metrics.actualBoundingBoxLeft),\n      top: Math.floor(-metrics.actualBoundingBoxAscent),\n      right: Math.ceil(metrics.actualBoundingBoxRight),\n      bottom: Math.ceil(metrics.actualBoundingBoxDescent),\n    };\n    return bounds;\n  }\n\n  public generateFontMetrics() {\n    const { context } = ScalerContext;\n    context.font = this.fontString();\n    const metrics = this.measureText(context, '中');\n    const capHeight = metrics.actualBoundingBoxAscent;\n    const xMetrics = this.measureText(context, 'x');\n    const xHeight = xMetrics.actualBoundingBoxAscent;\n    return {\n      ascent: -metrics.fontBoundingBoxAscent,\n      descent: metrics.fontBoundingBoxDescent,\n      xHeight,\n      capHeight,\n    };\n  }\n\n  public generateImage(text: string, bounds: Rect) {\n    const canvas = getCanvas2D(bounds.right - bounds.left, bounds.bottom - bounds.top);\n    const context = canvas.getContext('2d') as CanvasRenderingContext2D;\n    context.font = this.fontString();\n    context.fillText(text, -bounds.left, -bounds.top);\n    return canvas;\n  }\n\n  protected loadCanvas() {\n    if (!ScalerContext.canvas) {\n      ScalerContext.setCanvas(getCanvas2D(10, 10));\n      // https://html.spec.whatwg.org/multipage/canvas.html#concept-canvas-will-read-frequently\n      ScalerContext.setContext(\n        (ScalerContext.canvas as HTMLCanvasElement | OffscreenCanvas).getContext('2d', { willReadFrequently: true }) as\n          | CanvasRenderingContext2D\n          | OffscreenCanvasRenderingContext2D,\n      );\n    }\n  }\n\n  private measureText(ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D, text: string): TextMetrics {\n    const metrics = ctx.measureText(text);\n    if (metrics?.actualBoundingBoxAscent) return metrics;\n    ctx.canvas.width = this.size * 1.5;\n    ctx.canvas.height = this.size * 1.5;\n    const pos = [0, this.size];\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.font = this.fontString();\n    ctx.fillText(text, pos[0], pos[1]);\n    const imageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n    const { left, top, right, bottom } = measureText(imageData);\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n    let fontMeasure: Rect;\n    const fontBoundingBox = this.fontBoundingBoxMap.find((item) => item.key === this.fontName);\n    if (fontBoundingBox) {\n      fontMeasure = fontBoundingBox.value;\n    } else {\n      ctx.font = this.fontString();\n      ctx.fillText('测', pos[0], pos[1]);\n      const fontImageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n      fontMeasure = measureText(fontImageData);\n      this.fontBoundingBoxMap.push({ key: this.fontName, value: fontMeasure });\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    }\n\n    return {\n      actualBoundingBoxAscent: pos[1] - top,\n      actualBoundingBoxRight: right - pos[0],\n      actualBoundingBoxDescent: bottom - pos[1],\n      actualBoundingBoxLeft: pos[0] - left,\n      fontBoundingBoxAscent: fontMeasure.bottom - fontMeasure.top,\n      fontBoundingBoxDescent: 0,\n      width: fontMeasure.right - fontMeasure.left,\n    };\n  }\n}\n","import { PAGModule } from '../pag-module';\nimport { ctor, Point, Vector } from '../types';\nimport { ScalerContext } from './scaler-context';\nimport { Matrix } from './matrix';\n\nexport interface WebFont {\n  name: string;\n  style: string;\n  size: number;\n  bold: boolean;\n  italic: boolean;\n}\n\nexport class WebMask {\n  public static create(canvas: HTMLCanvasElement | OffscreenCanvas) {\n    return new WebMask(canvas);\n  }\n\n  private static getLineCap(cap: ctor): CanvasLineCap {\n    switch (cap) {\n      case PAGModule.TGFXLineCap.Round:\n        return 'round';\n      case PAGModule.TGFXLineCap.Square:\n        return 'square';\n      default:\n        return 'butt';\n    }\n  }\n\n  private static getLineJoin(join: ctor): CanvasLineJoin {\n    switch (join) {\n      case PAGModule.TGFXLineJoin.Round:\n        return 'round';\n      case PAGModule.TGFXLineJoin.Bevel:\n        return 'bevel';\n      default:\n        return 'miter';\n    }\n  }\n\n  protected canvas: HTMLCanvasElement | OffscreenCanvas;\n  private context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D;\n\n  public constructor(canvas: HTMLCanvasElement | OffscreenCanvas) {\n    this.canvas = canvas;\n    this.context = this.canvas.getContext('2d') as CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D;\n  }\n\n  public updateCanvas(canvas: HTMLCanvasElement | OffscreenCanvas) {\n    this.canvas = canvas;\n  }\n\n  public fillPath(path: Path2D, fillType: ctor) {\n    this.context.setTransform(1, 0, 0, 1, 0, 0);\n    if (\n      fillType === PAGModule.TGFXPathFillType.InverseWinding ||\n      fillType === PAGModule.TGFXPathFillType.InverseEvenOdd\n    ) {\n      this.context.clip(path, fillType === PAGModule.TGFXPathFillType.InverseEvenOdd ? 'evenodd' : 'nonzero');\n      this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    } else {\n      this.context.fill(path, fillType === PAGModule.TGFXPathFillType.EvenOdd ? 'evenodd' : 'nonzero');\n    }\n  }\n\n  public fillText(webFont: WebFont, texts: Vector<string>, positions: Vector<Point>, matrixWasmIns: any) {\n    const scalerContext = new ScalerContext(webFont.name, webFont.style, webFont.size, webFont.bold, webFont.italic);\n    const matrix = new Matrix(matrixWasmIns);\n    this.context.setTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n    this.context.font = scalerContext.fontString();\n    for (let i = 0; i < texts.size(); i++) {\n      const position = positions.get(i);\n      this.context.fillText(texts.get(i), position.x, position.y);\n    }\n  }\n\n  public strokeText(\n    webFont: WebFont,\n    stroke: { width: number; cap: ctor; join: ctor; miterLimit: number },\n    texts: Vector<string>,\n    positions: Vector<Point>,\n    matrixWasmIns: any,\n  ) {\n    if (stroke.width < 0.5) {\n      return;\n    }\n    const scalerContext = new ScalerContext(webFont.name, webFont.style, webFont.size, webFont.bold, webFont.italic);\n    const matrix = new Matrix(matrixWasmIns);\n    this.context.setTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n    this.context.font = scalerContext.fontString();\n    this.context.lineJoin = WebMask.getLineJoin(stroke.join);\n    this.context.miterLimit = stroke.miterLimit;\n    this.context.lineCap = WebMask.getLineCap(stroke.cap);\n    this.context.lineWidth = stroke.width;\n    for (let i = 0; i < texts.size(); i++) {\n      const position = positions.get(i);\n      this.context.strokeText(texts.get(i), position.x, position.y);\n    }\n  }\n\n  public clear() {\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n}\n","import { DEFAULT_CANVAS_SIZE, WEBGL_CONTEXT_ATTRIBUTES } from '../constant';\nimport { BackendContext } from './backend-context';\n\nexport class GlobalCanvas {\n  private _canvas: HTMLCanvasElement | OffscreenCanvas | null = null;\n  private _glContext: BackendContext | null = null;\n  private width = DEFAULT_CANVAS_SIZE;\n  private height = DEFAULT_CANVAS_SIZE;\n  private retainCount = 0;\n\n  public retain() {\n    if (this.retainCount === 0) {\n      try {\n        this._canvas = new OffscreenCanvas(0, 0);\n      } catch (error) {\n        this._canvas = document.createElement('canvas');\n      }\n      this._canvas.width = this.width;\n      this._canvas.height = this.height;\n\n      const gl = this._canvas.getContext('webgl', WEBGL_CONTEXT_ATTRIBUTES) as WebGLRenderingContext;\n      if (!gl) throw new Error('Canvas context is not WebGL!');\n      this._glContext = BackendContext.from(gl);\n    }\n    this.retainCount += 1;\n  }\n\n  public release() {\n    this.retainCount -= 1;\n    if (this.retainCount === 0) {\n      if (!this._glContext) return;\n      this._glContext.destroy();\n      this._glContext = null;\n      this._canvas = null;\n    }\n  }\n\n  public get canvas() {\n    return this._canvas;\n  }\n\n  public get glContext() {\n    return this._glContext;\n  }\n\n  public setCanvasSize(width = DEFAULT_CANVAS_SIZE, height = DEFAULT_CANVAS_SIZE) {\n    this.width = width;\n    this.height = height;\n    if (this._glContext && this._canvas) {\n      this._canvas.width = width;\n      this._canvas.height = height;\n    }\n  }\n}\n","import { PAGModule } from './pag-module';\nimport { PAGFont } from './pag-font';\nimport { PAGLayer } from './pag-layer';\nimport { destroyVerify, wasmAwaitRewind } from './utils/decorators';\n\nimport type { Color, TextDocument } from './types';\n\n@destroyVerify\n@wasmAwaitRewind\nexport class PAGTextLayer extends PAGLayer {\n  public static make(\n    duration: number,\n    text: string,\n    fontSize: number,\n    fontFamily: string,\n    fontStyle: string,\n  ): PAGTextLayer;\n  public static make(duration: number, textDocumentHandle: TextDocument): PAGTextLayer;\n  public static make(\n    duration: number,\n    text: string | TextDocument,\n    fontSize = 0,\n    fontFamily = '',\n    fontStyle = '',\n  ): PAGTextLayer {\n    if (typeof text === 'string') {\n      return new PAGTextLayer(PAGModule._PAGTextLayer._Make(duration, text, fontSize, fontFamily, fontStyle));\n    } else {\n      return new PAGTextLayer(PAGModule._PAGTextLayer._Make(duration, text));\n    }\n  }\n\n  /**\n   * Returns the text layer’s fill color.\n   */\n  public fillColor(): Color {\n    return this.wasmIns._fillColor() as Color;\n  }\n  /**\n   * Set the text layer’s fill color.\n   */\n  public setFillColor(value: Color) {\n    this.wasmIns._setFillColor(value);\n  }\n  /**\n   * Returns the text layer's font.\n   */\n  public font(): PAGFont {\n    return new PAGFont(this.wasmIns._font());\n  }\n  /**\n   * Set the text layer's font.\n   */\n  public setFont(pagFont: PAGFont) {\n    this.wasmIns._setFont(pagFont.wasmIns);\n  }\n  /**\n   * Returns the text layer's font size.\n   */\n  public fontSize(): number {\n    return this.wasmIns._fontSize() as number;\n  }\n  /**\n   * Set the text layer's font size.\n   */\n  public setFontSize(size: number) {\n    this.wasmIns._setFontSize(size);\n  }\n  /**\n   * Returns the text layer's stroke color.\n   */\n  public strokeColor(): Color {\n    return this.wasmIns._strokeColor() as Color;\n  }\n  /**\n   * Set the text layer's stroke color.\n   */\n  public setStrokeColor(value: Color) {\n    this.wasmIns._setStrokeColor(value);\n  }\n  /**\n   * Returns the text layer's text.\n   */\n  public text(): string {\n    return this.wasmIns._text() as string;\n  }\n  /**\n   * Set the text layer's text.\n   */\n  public setText(text: string) {\n    this.wasmIns._setText(text);\n  }\n  /**\n   * Reset the text layer to its default text data.\n   */\n  public reset() {\n    this.wasmIns._reset();\n  }\n}\n","import { PAGModule } from './pag-module';\nimport { PAGLayer } from './pag-layer';\nimport { destroyVerify, wasmAwaitRewind } from './utils/decorators';\nimport { proxyVector } from './utils/type-utils';\n\nimport type { PAGImage } from './pag-image';\nimport type { PAGVideoRange } from './types';\n\n@destroyVerify\n@wasmAwaitRewind\nexport class PAGImageLayer extends PAGLayer {\n  /**\n   * Make a empty PAGImageLayer with specified size.\n   */\n  public static make(width: number, height: number, duration: number): PAGImageLayer {\n    const wasmIns = PAGModule._PAGImageLayer._Make(width, height, duration);\n    if (!wasmIns) throw new Error('Make PAGImageLayer fail!');\n    return new PAGImageLayer(wasmIns);\n  }\n\n  /**\n   * Returns the content duration in microseconds, which indicates the minimal length required for\n   * replacement.\n   */\n  public contentDuration(): number {\n    return this.wasmIns._contentDuration() as number;\n  }\n  /**\n   * Returns the time ranges of the source video for replacement.\n   */\n  public getVideoRanges(): PAGVideoRange[] {\n    return this.wasmIns._getVideoRanges();\n  }\n  /**\n   * [Deprecated]\n   * Replace the original image content with the specified PAGImage object.\n   * Passing in null for the image parameter resets the layer to its default image content.\n   * The replaceImage() method modifies all associated PAGImageLayers that have the same\n   * editableIndex to this layer.\n   *\n   * @param image The PAGImage object to replace with.\n   */\n  public replaceImage(pagImage: PAGImage) {\n    this.wasmIns._replaceImage(pagImage.wasmIns);\n  }\n  /**\n   * Replace the original image content with the specified PAGImage object.\n   * Passing in null for the image parameter resets the layer to its default image content.\n   * The setImage() method only modifies the content of the calling PAGImageLayer.\n   *\n   * @param image The PAGImage object to replace with.\n   */\n  public setImage(pagImage: PAGImage) {\n    this.wasmIns._setImage(pagImage.wasmIns);\n  }\n  /**\n   * Converts the time from the PAGImageLayer's timeline to the replacement content's timeline. The\n   * time is in microseconds.\n   */\n  public layerTimeToContent(layerTime: number): number {\n    return this.wasmIns._layerTimeToContent(layerTime) as number;\n  }\n  /**\n   * Converts the time from the replacement content's timeline to the PAGLayer's timeline. The time\n   * is in microseconds.\n   */\n  public contentTimeToLayer(contentTime: number): number {\n    return this.wasmIns._contentTimeToLayer(contentTime) as number;\n  }\n  /**\n   * The default image data of this layer, which is webp format.\n   */\n  public imageBytes(): Uint8Array | null {\n    return this.wasmIns._imageBytes();\n  }\n}\n","import { PAGModule } from './pag-module';\nimport { PAGLayer } from './pag-layer';\nimport { destroyVerify, wasmAwaitRewind } from './utils/decorators';\n\nimport type { Color } from './types';\n\n@destroyVerify\n@wasmAwaitRewind\nexport class PAGSolidLayer extends PAGLayer {\n  /**\n   * Make a empty PAGSolidLayer with specified size.\n   */\n  public static make(duration: number, width: number, height: number, solidColor: Color, opacity: number) {\n    const wasmIns = PAGModule._PAGSolidLayer._Make(duration, width, height, solidColor, opacity);\n    if (!wasmIns) throw new Error('Make PAGSolidLayer fail!');\n    return new PAGSolidLayer(wasmIns);\n  }\n  /**\n   * Returns the layer's solid color.\n   */\n  public solidColor(): Color {\n    return this.wasmIns._solidColor() as Color;\n  }\n  /**\n   * Set the the layer's solid color.\n   */\n  public setSolidColor(color: Color) {\n    this.wasmIns._setSolidColor(color);\n  }\n}\n","import { getCanvas2D, releaseCanvas2D, isCanvas } from './utils/canvas';\nimport { writeBufferToWasm } from './utils/buffer';\nimport { BitmapImage } from './core/bitmap-image';\nimport { isInstanceOf } from './utils/type-utils';\n\nimport type { EmscriptenGL, PAG } from './types';\nimport type { wx } from './wechat/interfaces';\n\ndeclare const wx: wx;\n\nexport const createImage = (source: string) => {\n  return new Promise<HTMLImageElement | null>((resolve) => {\n    const image = new Image();\n    image.onload = function () {\n      resolve(image);\n    };\n    image.onerror = function () {\n      console.error('image create from bytes error.');\n      resolve(null);\n    };\n    image.src = source;\n  });\n};\n\nexport const createImageFromBytes = (bytes: ArrayBuffer) => {\n  const blob = new Blob([bytes], { type: 'image/*' });\n  return createImage(URL.createObjectURL(blob));\n};\n\nexport const readImagePixels = (module: PAG, image: CanvasImageSource, width: number, height: number) => {\n  if (!image) {\n    return null;\n  }\n  const canvas = getCanvas2D(width, height);\n  const ctx = canvas.getContext('2d') as CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D | null;\n  if (!ctx) {\n    return null;\n  }\n  ctx.drawImage(image, 0, 0, width, height);\n  const { data } = ctx.getImageData(0, 0, width, height);\n  releaseCanvas2D(canvas);\n  if (data.length === 0) {\n    return null;\n  }\n  return writeBufferToWasm(module, data);\n};\n\nexport const hasWebpSupport = () => {\n  try {\n    return document.createElement('canvas').toDataURL('image/webp', 0.5).indexOf('data:image/webp') === 0;\n  } catch (err) {\n    return false;\n  }\n};\n\nexport const getSourceSize = (source: TexImageSource | OffscreenCanvas) => {\n  if (isInstanceOf(source, globalThis.HTMLVideoElement)) {\n    return {\n      width: (source as HTMLVideoElement).videoWidth,\n      height: (source as HTMLVideoElement).videoHeight,\n    };\n  }\n  return { width: source.width, height: source.height };\n};\n\nexport const uploadToTexture = (\n  GL: EmscriptenGL,\n  source: TexImageSource | OffscreenCanvas | BitmapImage,\n  textureID: number,\n  alphaOnly: boolean,\n) => {\n  let renderSource = source instanceof BitmapImage ? source.bitmap : source;\n  if (!renderSource) return;\n  const gl = GL.currentContext?.GLctx as WebGLRenderingContext;\n  gl.bindTexture(gl.TEXTURE_2D, GL.textures[textureID]);\n  if (alphaOnly) {\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, gl.ALPHA, gl.UNSIGNED_BYTE, renderSource);\n  } else {\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, gl.RGBA, gl.UNSIGNED_BYTE, renderSource);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n  }\n};\n\nexport const isAndroidMiniprogram = () => {\n  if (typeof wx !== 'undefined' && wx.getSystemInfoSync) {\n    return wx.getSystemInfoSync().platform === 'android';\n  }\n};\n\nexport const releaseNativeImage = (source: TexImageSource | OffscreenCanvas) => {\n  if (isInstanceOf(source, globalThis.ImageBitmap)) {\n    (source as ImageBitmap).close();\n  } else if (isCanvas(source)) {\n    releaseCanvas2D(source as OffscreenCanvas | HTMLCanvasElement);\n  }\n};\n\nexport const getBytesFromPath = async (module: PAG, path: string) => {\n  const buffer = await fetch(path).then((res) => res.arrayBuffer());\n  return writeBufferToWasm(module, buffer);\n};\n\nexport { getCanvas2D as createCanvas2D };\n","import { IPHONE } from './ua';\n\nimport type { PAG } from '../types';\n\nexport const setMixin = (module: PAG) => {\n  module.traceImage = function (info, pixels) {\n    const canvas = document.createElement('canvas');\n    canvas.width = info.width;\n    canvas.height = info.height;\n    const context = canvas.getContext('2d') as CanvasRenderingContext2D;\n    const imageData = new ImageData(new Uint8ClampedArray(pixels), canvas.width, canvas.height);\n    context.putImageData(imageData, 0, 0);\n    document.body.appendChild(canvas);\n  };\n  module.registerSoftwareDecoderFactory = function (factory = null) {\n    module._registerSoftwareDecoderFactory(factory);\n  };\n  module.SDKVersion = function () {\n    return module._SDKVersion();\n  };\n  module.isIPhone = () => IPHONE;\n};\n","import { PAG } from './types';\nimport { setPAGModule } from './pag-module';\nimport { PAGFile } from './pag-file';\nimport { PAGSurface } from './pag-surface';\nimport { PAGPlayer } from './pag-player';\nimport { PAGImage } from './pag-image';\nimport { PAGView } from './pag-view';\nimport { PAGFont } from './pag-font';\nimport { PAGLayer } from './pag-layer';\nimport { VideoReader } from './core/video-reader';\nimport { ScalerContext } from './core/scaler-context';\nimport { WebMask } from './core/web-mask';\nimport { GlobalCanvas } from './core/global-canvas';\nimport { BackendContext } from './core/backend-context';\nimport { PAGComposition } from './pag-composition';\nimport { PAGTextLayer } from './pag-text-layer';\nimport { PAGImageLayer } from './pag-image-layer';\nimport { PAGSolidLayer } from './pag-solid-layer';\nimport { Matrix } from './core/matrix';\nimport { RenderCanvas } from './core/render-canvas';\nimport * as tgfx from './tgfx';\nimport { setMixin } from './utils/mixin';\n\n/**\n * Binding pag js module on pag webassembly module.\n */\nexport const binding = (module: PAG) => {\n  setPAGModule(module);\n  module.module = module;\n  module.PAGFile = PAGFile;\n  module.PAGPlayer = PAGPlayer;\n  module.PAGView = PAGView;\n  module.PAGFont = PAGFont;\n  module.PAGImage = PAGImage;\n  module.PAGLayer = PAGLayer;\n  module.PAGComposition = PAGComposition;\n  module.PAGSurface = PAGSurface;\n  module.PAGTextLayer = PAGTextLayer;\n  module.PAGImageLayer = PAGImageLayer;\n  module.PAGSolidLayer = PAGSolidLayer;\n  module.VideoReader = VideoReader;\n  module.ScalerContext = ScalerContext;\n  module.WebMask = WebMask;\n  module.GlobalCanvas = GlobalCanvas;\n  module.BackendContext = BackendContext;\n  module.Matrix = Matrix;\n  module.RenderCanvas = RenderCanvas;\n  setMixin(module);\n  module.tgfx = { ...tgfx };\n};\n","\nvar PAGInit = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  \n  return (\nfunction(PAGInit) {\n  PAGInit = PAGInit || {};\n\nvar Module = typeof PAGInit != \"undefined\" ? PAGInit : {};\n\nvar readyPromiseResolve, readyPromiseReject;\n\nModule[\"ready\"] = new Promise(function(resolve, reject) {\n readyPromiseResolve = resolve;\n readyPromiseReject = reject;\n});\n\n[ \"___getTypeName\", \"__embind_initialize_bindings\", \"_fflush\", \"onRuntimeInitialized\" ].forEach(prop => {\n if (!Object.getOwnPropertyDescriptor(Module[\"ready\"], prop)) {\n  Object.defineProperty(Module[\"ready\"], prop, {\n   get: () => abort(\"You are getting \" + prop + \" on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\"),\n   set: () => abort(\"You are setting \" + prop + \" on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\")\n  });\n }\n});\n\nvar moduleOverrides = Object.assign({}, Module);\n\nvar arguments_ = [];\n\nvar thisProgram = \"./this.program\";\n\nvar quit_ = (status, toThrow) => {\n throw toThrow;\n};\n\nvar ENVIRONMENT_IS_WEB = typeof window == \"object\";\n\nvar ENVIRONMENT_IS_WORKER = typeof importScripts == \"function\";\n\nvar ENVIRONMENT_IS_NODE = typeof process == \"object\" && typeof process.versions == \"object\" && typeof process.versions.node == \"string\";\n\nvar ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\nif (Module[\"ENVIRONMENT\"]) {\n throw new Error(\"Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)\");\n}\n\nvar scriptDirectory = \"\";\n\nfunction locateFile(path) {\n if (Module[\"locateFile\"]) {\n  return Module[\"locateFile\"](path, scriptDirectory);\n }\n return scriptDirectory + path;\n}\n\nvar read_, readAsync, readBinary, setWindowTitle;\n\nfunction logExceptionOnExit(e) {\n if (e instanceof ExitStatus) return;\n let toLog = e;\n if (e && typeof e == \"object\" && e.stack) {\n  toLog = [ e, e.stack ];\n }\n err(\"exiting due to exception: \" + toLog);\n}\n\nif (ENVIRONMENT_IS_SHELL) {\n if (typeof process == \"object\" && typeof require === \"function\" || typeof window == \"object\" || typeof importScripts == \"function\") throw new Error(\"not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)\");\n if (typeof read != \"undefined\") {\n  read_ = function shell_read(f) {\n   return read(f);\n  };\n }\n readBinary = function readBinary(f) {\n  let data;\n  if (typeof readbuffer == \"function\") {\n   return new Uint8Array(readbuffer(f));\n  }\n  data = read(f, \"binary\");\n  assert(typeof data == \"object\");\n  return data;\n };\n readAsync = function readAsync(f, onload, onerror) {\n  setTimeout(() => onload(readBinary(f)), 0);\n };\n if (typeof scriptArgs != \"undefined\") {\n  arguments_ = scriptArgs;\n } else if (typeof arguments != \"undefined\") {\n  arguments_ = arguments;\n }\n if (typeof quit == \"function\") {\n  quit_ = (status, toThrow) => {\n   logExceptionOnExit(toThrow);\n   quit(status);\n  };\n }\n if (typeof print != \"undefined\") {\n  if (typeof console == \"undefined\") console = {};\n  console.log = print;\n  console.warn = console.error = typeof printErr != \"undefined\" ? printErr : print;\n }\n} else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n if (ENVIRONMENT_IS_WORKER) {\n  scriptDirectory = self.location.href;\n } else if (typeof document != \"undefined\" && document.currentScript) {\n  scriptDirectory = document.currentScript.src;\n }\n if (_scriptDir) {\n  scriptDirectory = _scriptDir;\n }\n if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n  scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1);\n } else {\n  scriptDirectory = \"\";\n }\n if (!(typeof window == \"object\" || typeof importScripts == \"function\")) throw new Error(\"not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)\");\n {\n  read_ = url => {\n   var xhr = new XMLHttpRequest();\n   xhr.open(\"GET\", url, false);\n   xhr.send(null);\n   return xhr.responseText;\n  };\n  if (ENVIRONMENT_IS_WORKER) {\n   readBinary = url => {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, false);\n    xhr.responseType = \"arraybuffer\";\n    xhr.send(null);\n    return new Uint8Array(xhr.response);\n   };\n  }\n  readAsync = (url, onload, onerror) => {\n   var xhr = new XMLHttpRequest();\n   xhr.open(\"GET\", url, true);\n   xhr.responseType = \"arraybuffer\";\n   xhr.onload = () => {\n    if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n     onload(xhr.response);\n     return;\n    }\n    onerror();\n   };\n   xhr.onerror = onerror;\n   xhr.send(null);\n  };\n }\n setWindowTitle = title => document.title = title;\n} else {\n throw new Error(\"environment detection error\");\n}\n\nvar out = Module[\"print\"] || console.log.bind(console);\n\nvar err = Module[\"printErr\"] || console.warn.bind(console);\n\nObject.assign(Module, moduleOverrides);\n\nmoduleOverrides = null;\n\ncheckIncomingModuleAPI();\n\nif (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n\nlegacyModuleProp(\"arguments\", \"arguments_\");\n\nif (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n\nlegacyModuleProp(\"thisProgram\", \"thisProgram\");\n\nif (Module[\"quit\"]) quit_ = Module[\"quit\"];\n\nlegacyModuleProp(\"quit\", \"quit_\");\n\nassert(typeof Module[\"memoryInitializerPrefixURL\"] == \"undefined\", \"Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead\");\n\nassert(typeof Module[\"pthreadMainPrefixURL\"] == \"undefined\", \"Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead\");\n\nassert(typeof Module[\"cdInitializerPrefixURL\"] == \"undefined\", \"Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead\");\n\nassert(typeof Module[\"filePackagePrefixURL\"] == \"undefined\", \"Module.filePackagePrefixURL option was removed, use Module.locateFile instead\");\n\nassert(typeof Module[\"read\"] == \"undefined\", \"Module.read option was removed (modify read_ in JS)\");\n\nassert(typeof Module[\"readAsync\"] == \"undefined\", \"Module.readAsync option was removed (modify readAsync in JS)\");\n\nassert(typeof Module[\"readBinary\"] == \"undefined\", \"Module.readBinary option was removed (modify readBinary in JS)\");\n\nassert(typeof Module[\"setWindowTitle\"] == \"undefined\", \"Module.setWindowTitle option was removed (modify setWindowTitle in JS)\");\n\nassert(typeof Module[\"TOTAL_MEMORY\"] == \"undefined\", \"Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY\");\n\nlegacyModuleProp(\"read\", \"read_\");\n\nlegacyModuleProp(\"readAsync\", \"readAsync\");\n\nlegacyModuleProp(\"readBinary\", \"readBinary\");\n\nlegacyModuleProp(\"setWindowTitle\", \"setWindowTitle\");\n\nvar IDBFS = \"IDBFS is no longer included by default; build with -lidbfs.js\";\n\nvar PROXYFS = \"PROXYFS is no longer included by default; build with -lproxyfs.js\";\n\nvar WORKERFS = \"WORKERFS is no longer included by default; build with -lworkerfs.js\";\n\nvar NODEFS = \"NODEFS is no longer included by default; build with -lnodefs.js\";\n\nassert(!ENVIRONMENT_IS_NODE, \"node environment detected but not enabled at build time.  Add 'node' to `-sENVIRONMENT` to enable.\");\n\nassert(!ENVIRONMENT_IS_SHELL, \"shell environment detected but not enabled at build time.  Add 'shell' to `-sENVIRONMENT` to enable.\");\n\nvar STACK_ALIGN = 16;\n\nvar POINTER_SIZE = 4;\n\nfunction getNativeTypeSize(type) {\n switch (type) {\n case \"i1\":\n case \"i8\":\n case \"u8\":\n  return 1;\n\n case \"i16\":\n case \"u16\":\n  return 2;\n\n case \"i32\":\n case \"u32\":\n  return 4;\n\n case \"i64\":\n case \"u64\":\n  return 8;\n\n case \"float\":\n  return 4;\n\n case \"double\":\n  return 8;\n\n default:\n  {\n   if (type[type.length - 1] === \"*\") {\n    return POINTER_SIZE;\n   }\n   if (type[0] === \"i\") {\n    const bits = Number(type.substr(1));\n    assert(bits % 8 === 0, \"getNativeTypeSize invalid bits \" + bits + \", type \" + type);\n    return bits / 8;\n   }\n   return 0;\n  }\n }\n}\n\nfunction legacyModuleProp(prop, newName) {\n if (!Object.getOwnPropertyDescriptor(Module, prop)) {\n  Object.defineProperty(Module, prop, {\n   configurable: true,\n   get: function() {\n    abort(\"Module.\" + prop + \" has been replaced with plain \" + newName + \" (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)\");\n   }\n  });\n }\n}\n\nfunction ignoredModuleProp(prop) {\n if (Object.getOwnPropertyDescriptor(Module, prop)) {\n  abort(\"`Module.\" + prop + \"` was supplied but `\" + prop + \"` not included in INCOMING_MODULE_JS_API\");\n }\n}\n\nfunction isExportedByForceFilesystem(name) {\n return name === \"FS_createPath\" || name === \"FS_createDataFile\" || name === \"FS_createPreloadedFile\" || name === \"FS_unlink\" || name === \"addRunDependency\" || name === \"FS_createLazyFile\" || name === \"FS_createDevice\" || name === \"removeRunDependency\";\n}\n\nfunction missingLibrarySymbol(sym) {\n if (typeof globalThis !== \"undefined\" && !Object.getOwnPropertyDescriptor(globalThis, sym)) {\n  Object.defineProperty(globalThis, sym, {\n   configurable: true,\n   get: function() {\n    var msg = \"`\" + sym + \"` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line\";\n    if (isExportedByForceFilesystem(sym)) {\n     msg += \". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you\";\n    }\n    warnOnce(msg);\n    return undefined;\n   }\n  });\n }\n}\n\nfunction unexportedRuntimeSymbol(sym) {\n if (!Object.getOwnPropertyDescriptor(Module, sym)) {\n  Object.defineProperty(Module, sym, {\n   configurable: true,\n   get: function() {\n    var msg = \"'\" + sym + \"' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\";\n    if (isExportedByForceFilesystem(sym)) {\n     msg += \". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you\";\n    }\n    abort(msg);\n   }\n  });\n }\n}\n\nvar wasmBinary;\n\nif (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n\nlegacyModuleProp(\"wasmBinary\", \"wasmBinary\");\n\nvar noExitRuntime = Module[\"noExitRuntime\"] || true;\n\nlegacyModuleProp(\"noExitRuntime\", \"noExitRuntime\");\n\nif (typeof WebAssembly != \"object\") {\n abort(\"no native wasm support detected\");\n}\n\nfunction getSafeHeapType(bytes, isFloat) {\n switch (bytes) {\n case 1:\n  return \"i8\";\n\n case 2:\n  return \"i16\";\n\n case 4:\n  return isFloat ? \"float\" : \"i32\";\n\n case 8:\n  return isFloat ? \"double\" : \"i64\";\n\n default:\n  assert(0);\n }\n}\n\nfunction SAFE_HEAP_STORE(dest, value, bytes, isFloat) {\n if (dest <= 0) abort(\"segmentation fault storing \" + bytes + \" bytes to address \" + dest);\n if (dest % bytes !== 0) abort(\"alignment error storing to address \" + dest + \", which was expected to be aligned to a multiple of \" + bytes);\n if (runtimeInitialized) {\n  var brk = _sbrk() >>> 0;\n  if (dest + bytes > brk) abort(\"segmentation fault, exceeded the top of the available dynamic heap when storing \" + bytes + \" bytes to address \" + dest + \". DYNAMICTOP=\" + brk);\n  assert(brk >= _emscripten_stack_get_base());\n  assert(brk <= HEAP8.length);\n }\n setValue_safe(dest, value, getSafeHeapType(bytes, isFloat));\n return value;\n}\n\nfunction SAFE_HEAP_STORE_D(dest, value, bytes) {\n return SAFE_HEAP_STORE(dest, value, bytes, true);\n}\n\nfunction SAFE_HEAP_LOAD(dest, bytes, unsigned, isFloat) {\n if (dest <= 0) abort(\"segmentation fault loading \" + bytes + \" bytes from address \" + dest);\n if (dest % bytes !== 0) abort(\"alignment error loading from address \" + dest + \", which was expected to be aligned to a multiple of \" + bytes);\n if (runtimeInitialized) {\n  var brk = _sbrk() >>> 0;\n  if (dest + bytes > brk) abort(\"segmentation fault, exceeded the top of the available dynamic heap when loading \" + bytes + \" bytes from address \" + dest + \". DYNAMICTOP=\" + brk);\n  assert(brk >= _emscripten_stack_get_base());\n  assert(brk <= HEAP8.length);\n }\n var type = getSafeHeapType(bytes, isFloat);\n var ret = getValue_safe(dest, type);\n if (unsigned) ret = unSign(ret, parseInt(type.substr(1), 10));\n return ret;\n}\n\nfunction SAFE_HEAP_LOAD_D(dest, bytes, unsigned) {\n return SAFE_HEAP_LOAD(dest, bytes, unsigned, true);\n}\n\nfunction SAFE_FT_MASK(value, mask) {\n var ret = value & mask;\n if (ret !== value) {\n  abort(\"Function table mask error: function pointer is \" + value + \" which is masked by \" + mask + \", the likely cause of this is that the function pointer is being called by the wrong type.\");\n }\n return ret;\n}\n\nfunction segfault() {\n abort(\"segmentation fault\");\n}\n\nfunction alignfault() {\n abort(\"alignment fault\");\n}\n\nvar wasmMemory;\n\nvar ABORT = false;\n\nvar EXITSTATUS;\n\nfunction assert(condition, text) {\n if (!condition) {\n  abort(\"Assertion failed\" + (text ? \": \" + text : \"\"));\n }\n}\n\nvar UTF8Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n\nfunction UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n var endIdx = idx + maxBytesToRead;\n var endPtr = idx;\n while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n  return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n }\n var str = \"\";\n while (idx < endPtr) {\n  var u0 = heapOrArray[idx++];\n  if (!(u0 & 128)) {\n   str += String.fromCharCode(u0);\n   continue;\n  }\n  var u1 = heapOrArray[idx++] & 63;\n  if ((u0 & 224) == 192) {\n   str += String.fromCharCode((u0 & 31) << 6 | u1);\n   continue;\n  }\n  var u2 = heapOrArray[idx++] & 63;\n  if ((u0 & 240) == 224) {\n   u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n  } else {\n   if ((u0 & 248) != 240) warnOnce(\"Invalid UTF-8 leading byte 0x\" + u0.toString(16) + \" encountered when deserializing a UTF-8 string in wasm memory to a JS string!\");\n   u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;\n  }\n  if (u0 < 65536) {\n   str += String.fromCharCode(u0);\n  } else {\n   var ch = u0 - 65536;\n   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n  }\n }\n return str;\n}\n\nfunction UTF8ToString(ptr, maxBytesToRead) {\n return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n}\n\nfunction stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n if (!(maxBytesToWrite > 0)) return 0;\n var startIdx = outIdx;\n var endIdx = outIdx + maxBytesToWrite - 1;\n for (var i = 0; i < str.length; ++i) {\n  var u = str.charCodeAt(i);\n  if (u >= 55296 && u <= 57343) {\n   var u1 = str.charCodeAt(++i);\n   u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n  }\n  if (u <= 127) {\n   if (outIdx >= endIdx) break;\n   heap[outIdx++] = u;\n  } else if (u <= 2047) {\n   if (outIdx + 1 >= endIdx) break;\n   heap[outIdx++] = 192 | u >> 6;\n   heap[outIdx++] = 128 | u & 63;\n  } else if (u <= 65535) {\n   if (outIdx + 2 >= endIdx) break;\n   heap[outIdx++] = 224 | u >> 12;\n   heap[outIdx++] = 128 | u >> 6 & 63;\n   heap[outIdx++] = 128 | u & 63;\n  } else {\n   if (outIdx + 3 >= endIdx) break;\n   if (u > 1114111) warnOnce(\"Invalid Unicode code point 0x\" + u.toString(16) + \" encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).\");\n   heap[outIdx++] = 240 | u >> 18;\n   heap[outIdx++] = 128 | u >> 12 & 63;\n   heap[outIdx++] = 128 | u >> 6 & 63;\n   heap[outIdx++] = 128 | u & 63;\n  }\n }\n heap[outIdx] = 0;\n return outIdx - startIdx;\n}\n\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\n assert(typeof maxBytesToWrite == \"number\", \"stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\");\n return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n}\n\nfunction lengthBytesUTF8(str) {\n var len = 0;\n for (var i = 0; i < str.length; ++i) {\n  var c = str.charCodeAt(i);\n  if (c <= 127) {\n   len++;\n  } else if (c <= 2047) {\n   len += 2;\n  } else if (c >= 55296 && c <= 57343) {\n   len += 4;\n   ++i;\n  } else {\n   len += 3;\n  }\n }\n return len;\n}\n\nvar HEAP, buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n\nfunction updateGlobalBufferAndViews(buf) {\n buffer = buf;\n Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n}\n\nvar TOTAL_STACK = 5242880;\n\nif (Module[\"TOTAL_STACK\"]) assert(TOTAL_STACK === Module[\"TOTAL_STACK\"], \"the stack size can no longer be determined at runtime\");\n\nvar INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\n\nlegacyModuleProp(\"INITIAL_MEMORY\", \"INITIAL_MEMORY\");\n\nassert(INITIAL_MEMORY >= TOTAL_STACK, \"INITIAL_MEMORY should be larger than TOTAL_STACK, was \" + INITIAL_MEMORY + \"! (TOTAL_STACK=\" + TOTAL_STACK + \")\");\n\nassert(typeof Int32Array != \"undefined\" && typeof Float64Array !== \"undefined\" && Int32Array.prototype.subarray != undefined && Int32Array.prototype.set != undefined, \"JS engine does not provide full typed array support\");\n\nassert(!Module[\"wasmMemory\"], \"Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally\");\n\nassert(INITIAL_MEMORY == 16777216, \"Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically\");\n\nvar wasmTable;\n\nfunction writeStackCookie() {\n var max = _emscripten_stack_get_end();\n assert((max & 3) == 0);\n SAFE_HEAP_STORE((max >> 2) * 4, 34821223, 4);\n SAFE_HEAP_STORE((max + 4 >> 2) * 4, 2310721022, 4);\n}\n\nfunction checkStackCookie() {\n if (ABORT) return;\n var max = _emscripten_stack_get_end();\n var cookie1 = SAFE_HEAP_LOAD((max >> 2) * 4, 4, 1);\n var cookie2 = SAFE_HEAP_LOAD((max + 4 >> 2) * 4, 4, 1);\n if (cookie1 != 34821223 || cookie2 != 2310721022) {\n  abort(\"Stack overflow! Stack cookie has been overwritten at 0x\" + max.toString(16) + \", expected hex dwords 0x89BACDFE and 0x2135467, but received 0x\" + cookie2.toString(16) + \" 0x\" + cookie1.toString(16));\n }\n}\n\n(function() {\n var h16 = new Int16Array(1);\n var h8 = new Int8Array(h16.buffer);\n h16[0] = 25459;\n if (h8[0] !== 115 || h8[1] !== 99) throw \"Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)\";\n})();\n\nvar __ATPRERUN__ = [];\n\nvar __ATINIT__ = [];\n\nvar __ATEXIT__ = [];\n\nvar __ATPOSTRUN__ = [];\n\nvar runtimeInitialized = false;\n\nfunction keepRuntimeAlive() {\n return noExitRuntime;\n}\n\nfunction preRun() {\n if (Module[\"preRun\"]) {\n  if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [ Module[\"preRun\"] ];\n  while (Module[\"preRun\"].length) {\n   addOnPreRun(Module[\"preRun\"].shift());\n  }\n }\n callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n assert(!runtimeInitialized);\n runtimeInitialized = true;\n checkStackCookie();\n if (!Module[\"noFSInit\"] && !FS.init.initialized) FS.init();\n FS.ignorePermissions = false;\n TTY.init();\n callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction postRun() {\n checkStackCookie();\n if (Module[\"postRun\"]) {\n  if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [ Module[\"postRun\"] ];\n  while (Module[\"postRun\"].length) {\n   addOnPostRun(Module[\"postRun\"].shift());\n  }\n }\n callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n __ATINIT__.unshift(cb);\n}\n\nfunction addOnExit(cb) {}\n\nfunction addOnPostRun(cb) {\n __ATPOSTRUN__.unshift(cb);\n}\n\nassert(Math.imul, \"This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");\n\nassert(Math.fround, \"This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");\n\nassert(Math.clz32, \"This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");\n\nassert(Math.trunc, \"This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");\n\nvar runDependencies = 0;\n\nvar runDependencyWatcher = null;\n\nvar dependenciesFulfilled = null;\n\nvar runDependencyTracking = {};\n\nfunction getUniqueRunDependency(id) {\n var orig = id;\n while (1) {\n  if (!runDependencyTracking[id]) return id;\n  id = orig + Math.random();\n }\n}\n\nfunction addRunDependency(id) {\n runDependencies++;\n if (Module[\"monitorRunDependencies\"]) {\n  Module[\"monitorRunDependencies\"](runDependencies);\n }\n if (id) {\n  assert(!runDependencyTracking[id]);\n  runDependencyTracking[id] = 1;\n  if (runDependencyWatcher === null && typeof setInterval != \"undefined\") {\n   runDependencyWatcher = setInterval(function() {\n    if (ABORT) {\n     clearInterval(runDependencyWatcher);\n     runDependencyWatcher = null;\n     return;\n    }\n    var shown = false;\n    for (var dep in runDependencyTracking) {\n     if (!shown) {\n      shown = true;\n      err(\"still waiting on run dependencies:\");\n     }\n     err(\"dependency: \" + dep);\n    }\n    if (shown) {\n     err(\"(end of list)\");\n    }\n   }, 1e4);\n  }\n } else {\n  err(\"warning: run dependency added without ID\");\n }\n}\n\nfunction removeRunDependency(id) {\n runDependencies--;\n if (Module[\"monitorRunDependencies\"]) {\n  Module[\"monitorRunDependencies\"](runDependencies);\n }\n if (id) {\n  assert(runDependencyTracking[id]);\n  delete runDependencyTracking[id];\n } else {\n  err(\"warning: run dependency removed without ID\");\n }\n if (runDependencies == 0) {\n  if (runDependencyWatcher !== null) {\n   clearInterval(runDependencyWatcher);\n   runDependencyWatcher = null;\n  }\n  if (dependenciesFulfilled) {\n   var callback = dependenciesFulfilled;\n   dependenciesFulfilled = null;\n   callback();\n  }\n }\n}\n\nfunction abort(what) {\n {\n  if (Module[\"onAbort\"]) {\n   Module[\"onAbort\"](what);\n  }\n }\n what = \"Aborted(\" + what + \")\";\n err(what);\n ABORT = true;\n EXITSTATUS = 1;\n var e = new WebAssembly.RuntimeError(what);\n readyPromiseReject(e);\n throw e;\n}\n\nvar dataURIPrefix = \"data:application/octet-stream;base64,\";\n\nfunction isDataURI(filename) {\n return filename.startsWith(dataURIPrefix);\n}\n\nfunction isFileURI(filename) {\n return filename.startsWith(\"file://\");\n}\n\nfunction createExportWrapper(name, fixedasm) {\n return function() {\n  var displayName = name;\n  var asm = fixedasm;\n  if (!fixedasm) {\n   asm = Module[\"asm\"];\n  }\n  assert(runtimeInitialized, \"native function `\" + displayName + \"` called before runtime initialization\");\n  if (!asm[name]) {\n   assert(asm[name], \"exported native function `\" + displayName + \"` not found\");\n  }\n  return asm[name].apply(null, arguments);\n };\n}\n\nvar wasmBinaryFile;\n\nwasmBinaryFile = \"libpag.wasm\";\n\nif (!isDataURI(wasmBinaryFile)) {\n wasmBinaryFile = locateFile(wasmBinaryFile);\n}\n\nfunction getBinary(file) {\n try {\n  if (file == wasmBinaryFile && wasmBinary) {\n   return new Uint8Array(wasmBinary);\n  }\n  if (readBinary) {\n   return readBinary(file);\n  }\n  throw \"both async and sync fetching of the wasm failed\";\n } catch (err) {\n  abort(err);\n }\n}\n\nfunction getBinaryPromise() {\n if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n  if (typeof fetch == \"function\") {\n   return fetch(wasmBinaryFile, {\n    credentials: \"same-origin\"\n   }).then(function(response) {\n    if (!response[\"ok\"]) {\n     throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n    }\n    return response[\"arrayBuffer\"]();\n   }).catch(function() {\n    return getBinary(wasmBinaryFile);\n   });\n  }\n }\n return Promise.resolve().then(function() {\n  return getBinary(wasmBinaryFile);\n });\n}\n\nfunction createWasm() {\n var info = {\n  \"env\": asmLibraryArg,\n  \"wasi_snapshot_preview1\": asmLibraryArg\n };\n function receiveInstance(instance, module) {\n  var exports = instance.exports;\n  exports = Asyncify.instrumentWasmExports(exports);\n  Module[\"asm\"] = exports;\n  wasmMemory = Module[\"asm\"][\"memory\"];\n  assert(wasmMemory, \"memory not found in wasm exports\");\n  updateGlobalBufferAndViews(wasmMemory.buffer);\n  wasmTable = Module[\"asm\"][\"__indirect_function_table\"];\n  assert(wasmTable, \"table not found in wasm exports\");\n  addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);\n  removeRunDependency(\"wasm-instantiate\");\n }\n addRunDependency(\"wasm-instantiate\");\n var trueModule = Module;\n function receiveInstantiationResult(result) {\n  assert(Module === trueModule, \"the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?\");\n  trueModule = null;\n  receiveInstance(result[\"instance\"]);\n }\n function instantiateArrayBuffer(receiver) {\n  return getBinaryPromise().then(function(binary) {\n   return WebAssembly.instantiate(binary, info);\n  }).then(function(instance) {\n   return instance;\n  }).then(receiver, function(reason) {\n   err(\"failed to asynchronously prepare wasm: \" + reason);\n   if (isFileURI(wasmBinaryFile)) {\n    err(\"warning: Loading from a file URI (\" + wasmBinaryFile + \") is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing\");\n   }\n   abort(reason);\n  });\n }\n function instantiateAsync() {\n  if (!wasmBinary && typeof WebAssembly.instantiateStreaming == \"function\" && !isDataURI(wasmBinaryFile) && typeof fetch == \"function\") {\n   return fetch(wasmBinaryFile, {\n    credentials: \"same-origin\"\n   }).then(function(response) {\n    var result = WebAssembly.instantiateStreaming(response, info);\n    return result.then(receiveInstantiationResult, function(reason) {\n     err(\"wasm streaming compile failed: \" + reason);\n     err(\"falling back to ArrayBuffer instantiation\");\n     return instantiateArrayBuffer(receiveInstantiationResult);\n    });\n   });\n  } else {\n   return instantiateArrayBuffer(receiveInstantiationResult);\n  }\n }\n if (Module[\"instantiateWasm\"]) {\n  try {\n   var exports = Module[\"instantiateWasm\"](info, receiveInstance);\n   exports = Asyncify.instrumentWasmExports(exports);\n   return exports;\n  } catch (e) {\n   err(\"Module.instantiateWasm callback failed with error: \" + e);\n   return false;\n  }\n }\n instantiateAsync().catch(readyPromiseReject);\n return {};\n}\n\nvar tempDouble;\n\nvar tempI64;\n\nvar ASM_CONSTS = {};\n\nfunction ExitStatus(status) {\n this.name = \"ExitStatus\";\n this.message = \"Program terminated with exit(\" + status + \")\";\n this.status = status;\n}\n\nfunction callRuntimeCallbacks(callbacks) {\n while (callbacks.length > 0) {\n  callbacks.shift()(Module);\n }\n}\n\nfunction withStackSave(f) {\n var stack = stackSave();\n var ret = f();\n stackRestore(stack);\n return ret;\n}\n\nfunction demangle(func) {\n warnOnce(\"warning: build with -sDEMANGLE_SUPPORT to link in libcxxabi demangling\");\n return func;\n}\n\nfunction demangleAll(text) {\n var regex = /\\b_Z[\\w\\d_]+/g;\n return text.replace(regex, function(x) {\n  var y = demangle(x);\n  return x === y ? x : y + \" [\" + x + \"]\";\n });\n}\n\nfunction getValue(ptr, type = \"i8\") {\n if (type.endsWith(\"*\")) type = \"*\";\n switch (type) {\n case \"i1\":\n  return SAFE_HEAP_LOAD(ptr >> 0, 1, 0);\n\n case \"i8\":\n  return SAFE_HEAP_LOAD(ptr >> 0, 1, 0);\n\n case \"i16\":\n  return SAFE_HEAP_LOAD((ptr >> 1) * 2, 2, 0);\n\n case \"i32\":\n  return SAFE_HEAP_LOAD((ptr >> 2) * 4, 4, 0);\n\n case \"i64\":\n  return SAFE_HEAP_LOAD((ptr >> 2) * 4, 4, 0);\n\n case \"float\":\n  return SAFE_HEAP_LOAD_D((ptr >> 2) * 4, 4, 0);\n\n case \"double\":\n  return SAFE_HEAP_LOAD_D((ptr >> 3) * 8, 8, 0);\n\n case \"*\":\n  return SAFE_HEAP_LOAD((ptr >> 2) * 4, 4, 1);\n\n default:\n  abort(\"invalid type for getValue: \" + type);\n }\n return null;\n}\n\nfunction getValue_safe(ptr, type) {\n switch (type) {\n case \"i1\":\n  return HEAP8[ptr >> 0];\n\n case \"i8\":\n  return HEAP8[ptr >> 0];\n\n case \"i16\":\n  return HEAP16[ptr >> 1];\n\n case \"i32\":\n  return HEAP32[ptr >> 2];\n\n case \"i64\":\n  return HEAP32[ptr >> 2];\n\n case \"float\":\n  return HEAPF32[ptr >> 2];\n\n case \"double\":\n  return HEAPF64[ptr >> 3];\n\n default:\n  abort(\"invalid type for getValue: \" + type);\n }\n}\n\nfunction handleException(e) {\n if (e instanceof ExitStatus || e == \"unwind\") {\n  return EXITSTATUS;\n }\n quit_(1, e);\n}\n\nfunction jsStackTrace() {\n var error = new Error();\n if (!error.stack) {\n  try {\n   throw new Error();\n  } catch (e) {\n   error = e;\n  }\n  if (!error.stack) {\n   return \"(no stack trace available)\";\n  }\n }\n return error.stack.toString();\n}\n\nfunction setValue(ptr, value, type = \"i8\") {\n if (type.endsWith(\"*\")) type = \"*\";\n switch (type) {\n case \"i1\":\n  SAFE_HEAP_STORE(ptr >> 0, value, 1);\n  break;\n\n case \"i8\":\n  SAFE_HEAP_STORE(ptr >> 0, value, 1);\n  break;\n\n case \"i16\":\n  SAFE_HEAP_STORE((ptr >> 1) * 2, value, 2);\n  break;\n\n case \"i32\":\n  SAFE_HEAP_STORE((ptr >> 2) * 4, value, 4);\n  break;\n\n case \"i64\":\n  tempI64 = [ value >>> 0, (tempDouble = value, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], \n  SAFE_HEAP_STORE((ptr >> 2) * 4, tempI64[0], 4), SAFE_HEAP_STORE((ptr + 4 >> 2) * 4, tempI64[1], 4);\n  break;\n\n case \"float\":\n  SAFE_HEAP_STORE_D((ptr >> 2) * 4, value, 4);\n  break;\n\n case \"double\":\n  SAFE_HEAP_STORE_D((ptr >> 3) * 8, value, 8);\n  break;\n\n case \"*\":\n  SAFE_HEAP_STORE((ptr >> 2) * 4, value, 4);\n  break;\n\n default:\n  abort(\"invalid type for setValue: \" + type);\n }\n}\n\nfunction setValue_safe(ptr, value, type) {\n switch (type) {\n case \"i1\":\n  HEAP8[ptr >> 0] = value;\n  break;\n\n case \"i8\":\n  HEAP8[ptr >> 0] = value;\n  break;\n\n case \"i16\":\n  HEAP16[ptr >> 1] = value;\n  break;\n\n case \"i32\":\n  HEAP32[ptr >> 2] = value;\n  break;\n\n case \"i64\":\n  tempI64 = [ value >>> 0, (tempDouble = value, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], \n  HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];\n  break;\n\n case \"float\":\n  HEAPF32[ptr >> 2] = value;\n  break;\n\n case \"double\":\n  HEAPF64[ptr >> 3] = value;\n  break;\n\n default:\n  abort(\"invalid type for setValue: \" + type);\n }\n}\n\nfunction stackTrace() {\n var js = jsStackTrace();\n if (Module[\"extraStackTrace\"]) js += \"\\n\" + Module[\"extraStackTrace\"]();\n return demangleAll(js);\n}\n\nfunction unSign(value, bits) {\n if (value >= 0) {\n  return value;\n }\n return bits <= 32 ? 2 * Math.abs(1 << bits - 1) + value : Math.pow(2, bits) + value;\n}\n\nfunction warnOnce(text) {\n if (!warnOnce.shown) warnOnce.shown = {};\n if (!warnOnce.shown[text]) {\n  warnOnce.shown[text] = 1;\n  err(text);\n }\n}\n\nfunction writeArrayToMemory(array, buffer) {\n assert(array.length >= 0, \"writeArrayToMemory array must have a length (should be an array or typed array)\");\n HEAP8.set(array, buffer);\n}\n\nfunction ___assert_fail(condition, filename, line, func) {\n abort(\"Assertion failed: \" + UTF8ToString(condition) + \", at: \" + [ filename ? UTF8ToString(filename) : \"unknown filename\", line, func ? UTF8ToString(func) : \"unknown function\" ]);\n}\n\nfunction ___cxa_allocate_exception(size) {\n return _malloc(size + 24) + 24;\n}\n\nfunction ExceptionInfo(excPtr) {\n this.excPtr = excPtr;\n this.ptr = excPtr - 24;\n this.set_type = function(type) {\n  SAFE_HEAP_STORE((this.ptr + 4 >> 2) * 4, type, 4);\n };\n this.get_type = function() {\n  return SAFE_HEAP_LOAD((this.ptr + 4 >> 2) * 4, 4, 1);\n };\n this.set_destructor = function(destructor) {\n  SAFE_HEAP_STORE((this.ptr + 8 >> 2) * 4, destructor, 4);\n };\n this.get_destructor = function() {\n  return SAFE_HEAP_LOAD((this.ptr + 8 >> 2) * 4, 4, 1);\n };\n this.set_refcount = function(refcount) {\n  SAFE_HEAP_STORE((this.ptr >> 2) * 4, refcount, 4);\n };\n this.set_caught = function(caught) {\n  caught = caught ? 1 : 0;\n  SAFE_HEAP_STORE(this.ptr + 12 >> 0, caught, 1);\n };\n this.get_caught = function() {\n  return SAFE_HEAP_LOAD(this.ptr + 12 >> 0, 1, 0) != 0;\n };\n this.set_rethrown = function(rethrown) {\n  rethrown = rethrown ? 1 : 0;\n  SAFE_HEAP_STORE(this.ptr + 13 >> 0, rethrown, 1);\n };\n this.get_rethrown = function() {\n  return SAFE_HEAP_LOAD(this.ptr + 13 >> 0, 1, 0) != 0;\n };\n this.init = function(type, destructor) {\n  this.set_adjusted_ptr(0);\n  this.set_type(type);\n  this.set_destructor(destructor);\n  this.set_refcount(0);\n  this.set_caught(false);\n  this.set_rethrown(false);\n };\n this.add_ref = function() {\n  var value = SAFE_HEAP_LOAD((this.ptr >> 2) * 4, 4, 0);\n  SAFE_HEAP_STORE((this.ptr >> 2) * 4, value + 1, 4);\n };\n this.release_ref = function() {\n  var prev = SAFE_HEAP_LOAD((this.ptr >> 2) * 4, 4, 0);\n  SAFE_HEAP_STORE((this.ptr >> 2) * 4, prev - 1, 4);\n  assert(prev > 0);\n  return prev === 1;\n };\n this.set_adjusted_ptr = function(adjustedPtr) {\n  SAFE_HEAP_STORE((this.ptr + 16 >> 2) * 4, adjustedPtr, 4);\n };\n this.get_adjusted_ptr = function() {\n  return SAFE_HEAP_LOAD((this.ptr + 16 >> 2) * 4, 4, 1);\n };\n this.get_exception_ptr = function() {\n  var isPointer = ___cxa_is_pointer_type(this.get_type());\n  if (isPointer) {\n   return SAFE_HEAP_LOAD((this.excPtr >> 2) * 4, 4, 1);\n  }\n  var adjusted = this.get_adjusted_ptr();\n  if (adjusted !== 0) return adjusted;\n  return this.excPtr;\n };\n}\n\nvar exceptionLast = 0;\n\nvar uncaughtExceptionCount = 0;\n\nfunction ___cxa_throw(ptr, type, destructor) {\n var info = new ExceptionInfo(ptr);\n info.init(type, destructor);\n exceptionLast = ptr;\n uncaughtExceptionCount++;\n throw ptr + \" - Exception catching is disabled, this exception cannot be caught. Compile with -sNO_DISABLE_EXCEPTION_CATCHING or -sEXCEPTION_CATCHING_ALLOWED=[..] to catch.\";\n}\n\nfunction setErrNo(value) {\n SAFE_HEAP_STORE((___errno_location() >> 2) * 4, value, 4);\n return value;\n}\n\nvar PATH = {\n isAbs: path => path.charAt(0) === \"/\",\n splitPath: filename => {\n  var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n  return splitPathRe.exec(filename).slice(1);\n },\n normalizeArray: (parts, allowAboveRoot) => {\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n   var last = parts[i];\n   if (last === \".\") {\n    parts.splice(i, 1);\n   } else if (last === \"..\") {\n    parts.splice(i, 1);\n    up++;\n   } else if (up) {\n    parts.splice(i, 1);\n    up--;\n   }\n  }\n  if (allowAboveRoot) {\n   for (;up; up--) {\n    parts.unshift(\"..\");\n   }\n  }\n  return parts;\n },\n normalize: path => {\n  var isAbsolute = PATH.isAbs(path), trailingSlash = path.substr(-1) === \"/\";\n  path = PATH.normalizeArray(path.split(\"/\").filter(p => !!p), !isAbsolute).join(\"/\");\n  if (!path && !isAbsolute) {\n   path = \".\";\n  }\n  if (path && trailingSlash) {\n   path += \"/\";\n  }\n  return (isAbsolute ? \"/\" : \"\") + path;\n },\n dirname: path => {\n  var result = PATH.splitPath(path), root = result[0], dir = result[1];\n  if (!root && !dir) {\n   return \".\";\n  }\n  if (dir) {\n   dir = dir.substr(0, dir.length - 1);\n  }\n  return root + dir;\n },\n basename: path => {\n  if (path === \"/\") return \"/\";\n  path = PATH.normalize(path);\n  path = path.replace(/\\/$/, \"\");\n  var lastSlash = path.lastIndexOf(\"/\");\n  if (lastSlash === -1) return path;\n  return path.substr(lastSlash + 1);\n },\n join: function() {\n  var paths = Array.prototype.slice.call(arguments);\n  return PATH.normalize(paths.join(\"/\"));\n },\n join2: (l, r) => {\n  return PATH.normalize(l + \"/\" + r);\n }\n};\n\nfunction getRandomDevice() {\n if (typeof crypto == \"object\" && typeof crypto[\"getRandomValues\"] == \"function\") {\n  var randomBuffer = new Uint8Array(1);\n  return () => {\n   crypto.getRandomValues(randomBuffer);\n   return randomBuffer[0];\n  };\n } else return () => abort(\"no cryptographic support found for randomDevice. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: function(array) { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };\");\n}\n\nvar PATH_FS = {\n resolve: function() {\n  var resolvedPath = \"\", resolvedAbsolute = false;\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n   var path = i >= 0 ? arguments[i] : FS.cwd();\n   if (typeof path != \"string\") {\n    throw new TypeError(\"Arguments to path.resolve must be strings\");\n   } else if (!path) {\n    return \"\";\n   }\n   resolvedPath = path + \"/\" + resolvedPath;\n   resolvedAbsolute = PATH.isAbs(path);\n  }\n  resolvedPath = PATH.normalizeArray(resolvedPath.split(\"/\").filter(p => !!p), !resolvedAbsolute).join(\"/\");\n  return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\";\n },\n relative: (from, to) => {\n  from = PATH_FS.resolve(from).substr(1);\n  to = PATH_FS.resolve(to).substr(1);\n  function trim(arr) {\n   var start = 0;\n   for (;start < arr.length; start++) {\n    if (arr[start] !== \"\") break;\n   }\n   var end = arr.length - 1;\n   for (;end >= 0; end--) {\n    if (arr[end] !== \"\") break;\n   }\n   if (start > end) return [];\n   return arr.slice(start, end - start + 1);\n  }\n  var fromParts = trim(from.split(\"/\"));\n  var toParts = trim(to.split(\"/\"));\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n   if (fromParts[i] !== toParts[i]) {\n    samePartsLength = i;\n    break;\n   }\n  }\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n   outputParts.push(\"..\");\n  }\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n  return outputParts.join(\"/\");\n }\n};\n\nfunction intArrayFromString(stringy, dontAddNull, length) {\n var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n var u8array = new Array(len);\n var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n if (dontAddNull) u8array.length = numBytesWritten;\n return u8array;\n}\n\nvar TTY = {\n ttys: [],\n init: function() {},\n shutdown: function() {},\n register: function(dev, ops) {\n  TTY.ttys[dev] = {\n   input: [],\n   output: [],\n   ops: ops\n  };\n  FS.registerDevice(dev, TTY.stream_ops);\n },\n stream_ops: {\n  open: function(stream) {\n   var tty = TTY.ttys[stream.node.rdev];\n   if (!tty) {\n    throw new FS.ErrnoError(43);\n   }\n   stream.tty = tty;\n   stream.seekable = false;\n  },\n  close: function(stream) {\n   stream.tty.ops.fsync(stream.tty);\n  },\n  fsync: function(stream) {\n   stream.tty.ops.fsync(stream.tty);\n  },\n  read: function(stream, buffer, offset, length, pos) {\n   if (!stream.tty || !stream.tty.ops.get_char) {\n    throw new FS.ErrnoError(60);\n   }\n   var bytesRead = 0;\n   for (var i = 0; i < length; i++) {\n    var result;\n    try {\n     result = stream.tty.ops.get_char(stream.tty);\n    } catch (e) {\n     throw new FS.ErrnoError(29);\n    }\n    if (result === undefined && bytesRead === 0) {\n     throw new FS.ErrnoError(6);\n    }\n    if (result === null || result === undefined) break;\n    bytesRead++;\n    buffer[offset + i] = result;\n   }\n   if (bytesRead) {\n    stream.node.timestamp = Date.now();\n   }\n   return bytesRead;\n  },\n  write: function(stream, buffer, offset, length, pos) {\n   if (!stream.tty || !stream.tty.ops.put_char) {\n    throw new FS.ErrnoError(60);\n   }\n   try {\n    for (var i = 0; i < length; i++) {\n     stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\n    }\n   } catch (e) {\n    throw new FS.ErrnoError(29);\n   }\n   if (length) {\n    stream.node.timestamp = Date.now();\n   }\n   return i;\n  }\n },\n default_tty_ops: {\n  get_char: function(tty) {\n   if (!tty.input.length) {\n    var result = null;\n    if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\n     result = window.prompt(\"Input: \");\n     if (result !== null) {\n      result += \"\\n\";\n     }\n    } else if (typeof readline == \"function\") {\n     result = readline();\n     if (result !== null) {\n      result += \"\\n\";\n     }\n    }\n    if (!result) {\n     return null;\n    }\n    tty.input = intArrayFromString(result, true);\n   }\n   return tty.input.shift();\n  },\n  put_char: function(tty, val) {\n   if (val === null || val === 10) {\n    out(UTF8ArrayToString(tty.output, 0));\n    tty.output = [];\n   } else {\n    if (val != 0) tty.output.push(val);\n   }\n  },\n  fsync: function(tty) {\n   if (tty.output && tty.output.length > 0) {\n    out(UTF8ArrayToString(tty.output, 0));\n    tty.output = [];\n   }\n  }\n },\n default_tty1_ops: {\n  put_char: function(tty, val) {\n   if (val === null || val === 10) {\n    err(UTF8ArrayToString(tty.output, 0));\n    tty.output = [];\n   } else {\n    if (val != 0) tty.output.push(val);\n   }\n  },\n  fsync: function(tty) {\n   if (tty.output && tty.output.length > 0) {\n    err(UTF8ArrayToString(tty.output, 0));\n    tty.output = [];\n   }\n  }\n }\n};\n\nfunction zeroMemory(address, size) {\n HEAPU8.fill(0, address, address + size);\n return address;\n}\n\nfunction alignMemory(size, alignment) {\n assert(alignment, \"alignment argument is required\");\n return Math.ceil(size / alignment) * alignment;\n}\n\nfunction mmapAlloc(size) {\n abort(\"internal error: mmapAlloc called but `emscripten_builtin_memalign` native symbol not exported\");\n}\n\nvar MEMFS = {\n ops_table: null,\n mount: function(mount) {\n  return MEMFS.createNode(null, \"/\", 16384 | 511, 0);\n },\n createNode: function(parent, name, mode, dev) {\n  if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n   throw new FS.ErrnoError(63);\n  }\n  if (!MEMFS.ops_table) {\n   MEMFS.ops_table = {\n    dir: {\n     node: {\n      getattr: MEMFS.node_ops.getattr,\n      setattr: MEMFS.node_ops.setattr,\n      lookup: MEMFS.node_ops.lookup,\n      mknod: MEMFS.node_ops.mknod,\n      rename: MEMFS.node_ops.rename,\n      unlink: MEMFS.node_ops.unlink,\n      rmdir: MEMFS.node_ops.rmdir,\n      readdir: MEMFS.node_ops.readdir,\n      symlink: MEMFS.node_ops.symlink\n     },\n     stream: {\n      llseek: MEMFS.stream_ops.llseek\n     }\n    },\n    file: {\n     node: {\n      getattr: MEMFS.node_ops.getattr,\n      setattr: MEMFS.node_ops.setattr\n     },\n     stream: {\n      llseek: MEMFS.stream_ops.llseek,\n      read: MEMFS.stream_ops.read,\n      write: MEMFS.stream_ops.write,\n      allocate: MEMFS.stream_ops.allocate,\n      mmap: MEMFS.stream_ops.mmap,\n      msync: MEMFS.stream_ops.msync\n     }\n    },\n    link: {\n     node: {\n      getattr: MEMFS.node_ops.getattr,\n      setattr: MEMFS.node_ops.setattr,\n      readlink: MEMFS.node_ops.readlink\n     },\n     stream: {}\n    },\n    chrdev: {\n     node: {\n      getattr: MEMFS.node_ops.getattr,\n      setattr: MEMFS.node_ops.setattr\n     },\n     stream: FS.chrdev_stream_ops\n    }\n   };\n  }\n  var node = FS.createNode(parent, name, mode, dev);\n  if (FS.isDir(node.mode)) {\n   node.node_ops = MEMFS.ops_table.dir.node;\n   node.stream_ops = MEMFS.ops_table.dir.stream;\n   node.contents = {};\n  } else if (FS.isFile(node.mode)) {\n   node.node_ops = MEMFS.ops_table.file.node;\n   node.stream_ops = MEMFS.ops_table.file.stream;\n   node.usedBytes = 0;\n   node.contents = null;\n  } else if (FS.isLink(node.mode)) {\n   node.node_ops = MEMFS.ops_table.link.node;\n   node.stream_ops = MEMFS.ops_table.link.stream;\n  } else if (FS.isChrdev(node.mode)) {\n   node.node_ops = MEMFS.ops_table.chrdev.node;\n   node.stream_ops = MEMFS.ops_table.chrdev.stream;\n  }\n  node.timestamp = Date.now();\n  if (parent) {\n   parent.contents[name] = node;\n   parent.timestamp = node.timestamp;\n  }\n  return node;\n },\n getFileDataAsTypedArray: function(node) {\n  if (!node.contents) return new Uint8Array(0);\n  if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);\n  return new Uint8Array(node.contents);\n },\n expandFileStorage: function(node, newCapacity) {\n  var prevCapacity = node.contents ? node.contents.length : 0;\n  if (prevCapacity >= newCapacity) return;\n  var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n  newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);\n  if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\n  var oldContents = node.contents;\n  node.contents = new Uint8Array(newCapacity);\n  if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n },\n resizeFileStorage: function(node, newSize) {\n  if (node.usedBytes == newSize) return;\n  if (newSize == 0) {\n   node.contents = null;\n   node.usedBytes = 0;\n  } else {\n   var oldContents = node.contents;\n   node.contents = new Uint8Array(newSize);\n   if (oldContents) {\n    node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));\n   }\n   node.usedBytes = newSize;\n  }\n },\n node_ops: {\n  getattr: function(node) {\n   var attr = {};\n   attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n   attr.ino = node.id;\n   attr.mode = node.mode;\n   attr.nlink = 1;\n   attr.uid = 0;\n   attr.gid = 0;\n   attr.rdev = node.rdev;\n   if (FS.isDir(node.mode)) {\n    attr.size = 4096;\n   } else if (FS.isFile(node.mode)) {\n    attr.size = node.usedBytes;\n   } else if (FS.isLink(node.mode)) {\n    attr.size = node.link.length;\n   } else {\n    attr.size = 0;\n   }\n   attr.atime = new Date(node.timestamp);\n   attr.mtime = new Date(node.timestamp);\n   attr.ctime = new Date(node.timestamp);\n   attr.blksize = 4096;\n   attr.blocks = Math.ceil(attr.size / attr.blksize);\n   return attr;\n  },\n  setattr: function(node, attr) {\n   if (attr.mode !== undefined) {\n    node.mode = attr.mode;\n   }\n   if (attr.timestamp !== undefined) {\n    node.timestamp = attr.timestamp;\n   }\n   if (attr.size !== undefined) {\n    MEMFS.resizeFileStorage(node, attr.size);\n   }\n  },\n  lookup: function(parent, name) {\n   throw FS.genericErrors[44];\n  },\n  mknod: function(parent, name, mode, dev) {\n   return MEMFS.createNode(parent, name, mode, dev);\n  },\n  rename: function(old_node, new_dir, new_name) {\n   if (FS.isDir(old_node.mode)) {\n    var new_node;\n    try {\n     new_node = FS.lookupNode(new_dir, new_name);\n    } catch (e) {}\n    if (new_node) {\n     for (var i in new_node.contents) {\n      throw new FS.ErrnoError(55);\n     }\n    }\n   }\n   delete old_node.parent.contents[old_node.name];\n   old_node.parent.timestamp = Date.now();\n   old_node.name = new_name;\n   new_dir.contents[new_name] = old_node;\n   new_dir.timestamp = old_node.parent.timestamp;\n   old_node.parent = new_dir;\n  },\n  unlink: function(parent, name) {\n   delete parent.contents[name];\n   parent.timestamp = Date.now();\n  },\n  rmdir: function(parent, name) {\n   var node = FS.lookupNode(parent, name);\n   for (var i in node.contents) {\n    throw new FS.ErrnoError(55);\n   }\n   delete parent.contents[name];\n   parent.timestamp = Date.now();\n  },\n  readdir: function(node) {\n   var entries = [ \".\", \"..\" ];\n   for (var key in node.contents) {\n    if (!node.contents.hasOwnProperty(key)) {\n     continue;\n    }\n    entries.push(key);\n   }\n   return entries;\n  },\n  symlink: function(parent, newname, oldpath) {\n   var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n   node.link = oldpath;\n   return node;\n  },\n  readlink: function(node) {\n   if (!FS.isLink(node.mode)) {\n    throw new FS.ErrnoError(28);\n   }\n   return node.link;\n  }\n },\n stream_ops: {\n  read: function(stream, buffer, offset, length, position) {\n   var contents = stream.node.contents;\n   if (position >= stream.node.usedBytes) return 0;\n   var size = Math.min(stream.node.usedBytes - position, length);\n   assert(size >= 0);\n   if (size > 8 && contents.subarray) {\n    buffer.set(contents.subarray(position, position + size), offset);\n   } else {\n    for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\n   }\n   return size;\n  },\n  write: function(stream, buffer, offset, length, position, canOwn) {\n   assert(!(buffer instanceof ArrayBuffer));\n   if (buffer.buffer === HEAP8.buffer) {\n    canOwn = false;\n   }\n   if (!length) return 0;\n   var node = stream.node;\n   node.timestamp = Date.now();\n   if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n    if (canOwn) {\n     assert(position === 0, \"canOwn must imply no weird position inside the file\");\n     node.contents = buffer.subarray(offset, offset + length);\n     node.usedBytes = length;\n     return length;\n    } else if (node.usedBytes === 0 && position === 0) {\n     node.contents = buffer.slice(offset, offset + length);\n     node.usedBytes = length;\n     return length;\n    } else if (position + length <= node.usedBytes) {\n     node.contents.set(buffer.subarray(offset, offset + length), position);\n     return length;\n    }\n   }\n   MEMFS.expandFileStorage(node, position + length);\n   if (node.contents.subarray && buffer.subarray) {\n    node.contents.set(buffer.subarray(offset, offset + length), position);\n   } else {\n    for (var i = 0; i < length; i++) {\n     node.contents[position + i] = buffer[offset + i];\n    }\n   }\n   node.usedBytes = Math.max(node.usedBytes, position + length);\n   return length;\n  },\n  llseek: function(stream, offset, whence) {\n   var position = offset;\n   if (whence === 1) {\n    position += stream.position;\n   } else if (whence === 2) {\n    if (FS.isFile(stream.node.mode)) {\n     position += stream.node.usedBytes;\n    }\n   }\n   if (position < 0) {\n    throw new FS.ErrnoError(28);\n   }\n   return position;\n  },\n  allocate: function(stream, offset, length) {\n   MEMFS.expandFileStorage(stream.node, offset + length);\n   stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n  },\n  mmap: function(stream, length, position, prot, flags) {\n   if (!FS.isFile(stream.node.mode)) {\n    throw new FS.ErrnoError(43);\n   }\n   var ptr;\n   var allocated;\n   var contents = stream.node.contents;\n   if (!(flags & 2) && contents.buffer === buffer) {\n    allocated = false;\n    ptr = contents.byteOffset;\n   } else {\n    if (position > 0 || position + length < contents.length) {\n     if (contents.subarray) {\n      contents = contents.subarray(position, position + length);\n     } else {\n      contents = Array.prototype.slice.call(contents, position, position + length);\n     }\n    }\n    allocated = true;\n    ptr = mmapAlloc(length);\n    if (!ptr) {\n     throw new FS.ErrnoError(48);\n    }\n    HEAP8.set(contents, ptr);\n   }\n   return {\n    ptr: ptr,\n    allocated: allocated\n   };\n  },\n  msync: function(stream, buffer, offset, length, mmapFlags) {\n   if (!FS.isFile(stream.node.mode)) {\n    throw new FS.ErrnoError(43);\n   }\n   if (mmapFlags & 2) {\n    return 0;\n   }\n   var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n   return 0;\n  }\n }\n};\n\nfunction asyncLoad(url, onload, onerror, noRunDep) {\n var dep = !noRunDep ? getUniqueRunDependency(\"al \" + url) : \"\";\n readAsync(url, arrayBuffer => {\n  assert(arrayBuffer, 'Loading data file \"' + url + '\" failed (no arrayBuffer).');\n  onload(new Uint8Array(arrayBuffer));\n  if (dep) removeRunDependency(dep);\n }, event => {\n  if (onerror) {\n   onerror();\n  } else {\n   throw 'Loading data file \"' + url + '\" failed.';\n  }\n });\n if (dep) addRunDependency(dep);\n}\n\nvar ERRNO_MESSAGES = {\n 0: \"Success\",\n 1: \"Arg list too long\",\n 2: \"Permission denied\",\n 3: \"Address already in use\",\n 4: \"Address not available\",\n 5: \"Address family not supported by protocol family\",\n 6: \"No more processes\",\n 7: \"Socket already connected\",\n 8: \"Bad file number\",\n 9: \"Trying to read unreadable message\",\n 10: \"Mount device busy\",\n 11: \"Operation canceled\",\n 12: \"No children\",\n 13: \"Connection aborted\",\n 14: \"Connection refused\",\n 15: \"Connection reset by peer\",\n 16: \"File locking deadlock error\",\n 17: \"Destination address required\",\n 18: \"Math arg out of domain of func\",\n 19: \"Quota exceeded\",\n 20: \"File exists\",\n 21: \"Bad address\",\n 22: \"File too large\",\n 23: \"Host is unreachable\",\n 24: \"Identifier removed\",\n 25: \"Illegal byte sequence\",\n 26: \"Connection already in progress\",\n 27: \"Interrupted system call\",\n 28: \"Invalid argument\",\n 29: \"I/O error\",\n 30: \"Socket is already connected\",\n 31: \"Is a directory\",\n 32: \"Too many symbolic links\",\n 33: \"Too many open files\",\n 34: \"Too many links\",\n 35: \"Message too long\",\n 36: \"Multihop attempted\",\n 37: \"File or path name too long\",\n 38: \"Network interface is not configured\",\n 39: \"Connection reset by network\",\n 40: \"Network is unreachable\",\n 41: \"Too many open files in system\",\n 42: \"No buffer space available\",\n 43: \"No such device\",\n 44: \"No such file or directory\",\n 45: \"Exec format error\",\n 46: \"No record locks available\",\n 47: \"The link has been severed\",\n 48: \"Not enough core\",\n 49: \"No message of desired type\",\n 50: \"Protocol not available\",\n 51: \"No space left on device\",\n 52: \"Function not implemented\",\n 53: \"Socket is not connected\",\n 54: \"Not a directory\",\n 55: \"Directory not empty\",\n 56: \"State not recoverable\",\n 57: \"Socket operation on non-socket\",\n 59: \"Not a typewriter\",\n 60: \"No such device or address\",\n 61: \"Value too large for defined data type\",\n 62: \"Previous owner died\",\n 63: \"Not super-user\",\n 64: \"Broken pipe\",\n 65: \"Protocol error\",\n 66: \"Unknown protocol\",\n 67: \"Protocol wrong type for socket\",\n 68: \"Math result not representable\",\n 69: \"Read only file system\",\n 70: \"Illegal seek\",\n 71: \"No such process\",\n 72: \"Stale file handle\",\n 73: \"Connection timed out\",\n 74: \"Text file busy\",\n 75: \"Cross-device link\",\n 100: \"Device not a stream\",\n 101: \"Bad font file fmt\",\n 102: \"Invalid slot\",\n 103: \"Invalid request code\",\n 104: \"No anode\",\n 105: \"Block device required\",\n 106: \"Channel number out of range\",\n 107: \"Level 3 halted\",\n 108: \"Level 3 reset\",\n 109: \"Link number out of range\",\n 110: \"Protocol driver not attached\",\n 111: \"No CSI structure available\",\n 112: \"Level 2 halted\",\n 113: \"Invalid exchange\",\n 114: \"Invalid request descriptor\",\n 115: \"Exchange full\",\n 116: \"No data (for no delay io)\",\n 117: \"Timer expired\",\n 118: \"Out of streams resources\",\n 119: \"Machine is not on the network\",\n 120: \"Package not installed\",\n 121: \"The object is remote\",\n 122: \"Advertise error\",\n 123: \"Srmount error\",\n 124: \"Communication error on send\",\n 125: \"Cross mount point (not really error)\",\n 126: \"Given log. name not unique\",\n 127: \"f.d. invalid for this operation\",\n 128: \"Remote address changed\",\n 129: \"Can   access a needed shared lib\",\n 130: \"Accessing a corrupted shared lib\",\n 131: \".lib section in a.out corrupted\",\n 132: \"Attempting to link in too many libs\",\n 133: \"Attempting to exec a shared library\",\n 135: \"Streams pipe error\",\n 136: \"Too many users\",\n 137: \"Socket type not supported\",\n 138: \"Not supported\",\n 139: \"Protocol family not supported\",\n 140: \"Can't send after socket shutdown\",\n 141: \"Too many references\",\n 142: \"Host is down\",\n 148: \"No medium (in tape drive)\",\n 156: \"Level 2 not synchronized\"\n};\n\nvar ERRNO_CODES = {};\n\nvar FS = {\n root: null,\n mounts: [],\n devices: {},\n streams: [],\n nextInode: 1,\n nameTable: null,\n currentPath: \"/\",\n initialized: false,\n ignorePermissions: true,\n ErrnoError: null,\n genericErrors: {},\n filesystems: null,\n syncFSRequests: 0,\n lookupPath: (path, opts = {}) => {\n  path = PATH_FS.resolve(FS.cwd(), path);\n  if (!path) return {\n   path: \"\",\n   node: null\n  };\n  var defaults = {\n   follow_mount: true,\n   recurse_count: 0\n  };\n  opts = Object.assign(defaults, opts);\n  if (opts.recurse_count > 8) {\n   throw new FS.ErrnoError(32);\n  }\n  var parts = PATH.normalizeArray(path.split(\"/\").filter(p => !!p), false);\n  var current = FS.root;\n  var current_path = \"/\";\n  for (var i = 0; i < parts.length; i++) {\n   var islast = i === parts.length - 1;\n   if (islast && opts.parent) {\n    break;\n   }\n   current = FS.lookupNode(current, parts[i]);\n   current_path = PATH.join2(current_path, parts[i]);\n   if (FS.isMountpoint(current)) {\n    if (!islast || islast && opts.follow_mount) {\n     current = current.mounted.root;\n    }\n   }\n   if (!islast || opts.follow) {\n    var count = 0;\n    while (FS.isLink(current.mode)) {\n     var link = FS.readlink(current_path);\n     current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n     var lookup = FS.lookupPath(current_path, {\n      recurse_count: opts.recurse_count + 1\n     });\n     current = lookup.node;\n     if (count++ > 40) {\n      throw new FS.ErrnoError(32);\n     }\n    }\n   }\n  }\n  return {\n   path: current_path,\n   node: current\n  };\n },\n getPath: node => {\n  var path;\n  while (true) {\n   if (FS.isRoot(node)) {\n    var mount = node.mount.mountpoint;\n    if (!path) return mount;\n    return mount[mount.length - 1] !== \"/\" ? mount + \"/\" + path : mount + path;\n   }\n   path = path ? node.name + \"/\" + path : node.name;\n   node = node.parent;\n  }\n },\n hashName: (parentid, name) => {\n  var hash = 0;\n  for (var i = 0; i < name.length; i++) {\n   hash = (hash << 5) - hash + name.charCodeAt(i) | 0;\n  }\n  return (parentid + hash >>> 0) % FS.nameTable.length;\n },\n hashAddNode: node => {\n  var hash = FS.hashName(node.parent.id, node.name);\n  node.name_next = FS.nameTable[hash];\n  FS.nameTable[hash] = node;\n },\n hashRemoveNode: node => {\n  var hash = FS.hashName(node.parent.id, node.name);\n  if (FS.nameTable[hash] === node) {\n   FS.nameTable[hash] = node.name_next;\n  } else {\n   var current = FS.nameTable[hash];\n   while (current) {\n    if (current.name_next === node) {\n     current.name_next = node.name_next;\n     break;\n    }\n    current = current.name_next;\n   }\n  }\n },\n lookupNode: (parent, name) => {\n  var errCode = FS.mayLookup(parent);\n  if (errCode) {\n   throw new FS.ErrnoError(errCode, parent);\n  }\n  var hash = FS.hashName(parent.id, name);\n  for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n   var nodeName = node.name;\n   if (node.parent.id === parent.id && nodeName === name) {\n    return node;\n   }\n  }\n  return FS.lookup(parent, name);\n },\n createNode: (parent, name, mode, rdev) => {\n  assert(typeof parent == \"object\");\n  var node = new FS.FSNode(parent, name, mode, rdev);\n  FS.hashAddNode(node);\n  return node;\n },\n destroyNode: node => {\n  FS.hashRemoveNode(node);\n },\n isRoot: node => {\n  return node === node.parent;\n },\n isMountpoint: node => {\n  return !!node.mounted;\n },\n isFile: mode => {\n  return (mode & 61440) === 32768;\n },\n isDir: mode => {\n  return (mode & 61440) === 16384;\n },\n isLink: mode => {\n  return (mode & 61440) === 40960;\n },\n isChrdev: mode => {\n  return (mode & 61440) === 8192;\n },\n isBlkdev: mode => {\n  return (mode & 61440) === 24576;\n },\n isFIFO: mode => {\n  return (mode & 61440) === 4096;\n },\n isSocket: mode => {\n  return (mode & 49152) === 49152;\n },\n flagModes: {\n  \"r\": 0,\n  \"r+\": 2,\n  \"w\": 577,\n  \"w+\": 578,\n  \"a\": 1089,\n  \"a+\": 1090\n },\n modeStringToFlags: str => {\n  var flags = FS.flagModes[str];\n  if (typeof flags == \"undefined\") {\n   throw new Error(\"Unknown file open mode: \" + str);\n  }\n  return flags;\n },\n flagsToPermissionString: flag => {\n  var perms = [ \"r\", \"w\", \"rw\" ][flag & 3];\n  if (flag & 512) {\n   perms += \"w\";\n  }\n  return perms;\n },\n nodePermissions: (node, perms) => {\n  if (FS.ignorePermissions) {\n   return 0;\n  }\n  if (perms.includes(\"r\") && !(node.mode & 292)) {\n   return 2;\n  } else if (perms.includes(\"w\") && !(node.mode & 146)) {\n   return 2;\n  } else if (perms.includes(\"x\") && !(node.mode & 73)) {\n   return 2;\n  }\n  return 0;\n },\n mayLookup: dir => {\n  var errCode = FS.nodePermissions(dir, \"x\");\n  if (errCode) return errCode;\n  if (!dir.node_ops.lookup) return 2;\n  return 0;\n },\n mayCreate: (dir, name) => {\n  try {\n   var node = FS.lookupNode(dir, name);\n   return 20;\n  } catch (e) {}\n  return FS.nodePermissions(dir, \"wx\");\n },\n mayDelete: (dir, name, isdir) => {\n  var node;\n  try {\n   node = FS.lookupNode(dir, name);\n  } catch (e) {\n   return e.errno;\n  }\n  var errCode = FS.nodePermissions(dir, \"wx\");\n  if (errCode) {\n   return errCode;\n  }\n  if (isdir) {\n   if (!FS.isDir(node.mode)) {\n    return 54;\n   }\n   if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n    return 10;\n   }\n  } else {\n   if (FS.isDir(node.mode)) {\n    return 31;\n   }\n  }\n  return 0;\n },\n mayOpen: (node, flags) => {\n  if (!node) {\n   return 44;\n  }\n  if (FS.isLink(node.mode)) {\n   return 32;\n  } else if (FS.isDir(node.mode)) {\n   if (FS.flagsToPermissionString(flags) !== \"r\" || flags & 512) {\n    return 31;\n   }\n  }\n  return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n },\n MAX_OPEN_FDS: 4096,\n nextfd: (fd_start = 0, fd_end = FS.MAX_OPEN_FDS) => {\n  for (var fd = fd_start; fd <= fd_end; fd++) {\n   if (!FS.streams[fd]) {\n    return fd;\n   }\n  }\n  throw new FS.ErrnoError(33);\n },\n getStream: fd => FS.streams[fd],\n createStream: (stream, fd_start, fd_end) => {\n  if (!FS.FSStream) {\n   FS.FSStream = function() {\n    this.shared = {};\n   };\n   FS.FSStream.prototype = {};\n   Object.defineProperties(FS.FSStream.prototype, {\n    object: {\n     get: function() {\n      return this.node;\n     },\n     set: function(val) {\n      this.node = val;\n     }\n    },\n    isRead: {\n     get: function() {\n      return (this.flags & 2097155) !== 1;\n     }\n    },\n    isWrite: {\n     get: function() {\n      return (this.flags & 2097155) !== 0;\n     }\n    },\n    isAppend: {\n     get: function() {\n      return this.flags & 1024;\n     }\n    },\n    flags: {\n     get: function() {\n      return this.shared.flags;\n     },\n     set: function(val) {\n      this.shared.flags = val;\n     }\n    },\n    position: {\n     get: function() {\n      return this.shared.position;\n     },\n     set: function(val) {\n      this.shared.position = val;\n     }\n    }\n   });\n  }\n  stream = Object.assign(new FS.FSStream(), stream);\n  var fd = FS.nextfd(fd_start, fd_end);\n  stream.fd = fd;\n  FS.streams[fd] = stream;\n  return stream;\n },\n closeStream: fd => {\n  FS.streams[fd] = null;\n },\n chrdev_stream_ops: {\n  open: stream => {\n   var device = FS.getDevice(stream.node.rdev);\n   stream.stream_ops = device.stream_ops;\n   if (stream.stream_ops.open) {\n    stream.stream_ops.open(stream);\n   }\n  },\n  llseek: () => {\n   throw new FS.ErrnoError(70);\n  }\n },\n major: dev => dev >> 8,\n minor: dev => dev & 255,\n makedev: (ma, mi) => ma << 8 | mi,\n registerDevice: (dev, ops) => {\n  FS.devices[dev] = {\n   stream_ops: ops\n  };\n },\n getDevice: dev => FS.devices[dev],\n getMounts: mount => {\n  var mounts = [];\n  var check = [ mount ];\n  while (check.length) {\n   var m = check.pop();\n   mounts.push(m);\n   check.push.apply(check, m.mounts);\n  }\n  return mounts;\n },\n syncfs: (populate, callback) => {\n  if (typeof populate == \"function\") {\n   callback = populate;\n   populate = false;\n  }\n  FS.syncFSRequests++;\n  if (FS.syncFSRequests > 1) {\n   err(\"warning: \" + FS.syncFSRequests + \" FS.syncfs operations in flight at once, probably just doing extra work\");\n  }\n  var mounts = FS.getMounts(FS.root.mount);\n  var completed = 0;\n  function doCallback(errCode) {\n   assert(FS.syncFSRequests > 0);\n   FS.syncFSRequests--;\n   return callback(errCode);\n  }\n  function done(errCode) {\n   if (errCode) {\n    if (!done.errored) {\n     done.errored = true;\n     return doCallback(errCode);\n    }\n    return;\n   }\n   if (++completed >= mounts.length) {\n    doCallback(null);\n   }\n  }\n  mounts.forEach(mount => {\n   if (!mount.type.syncfs) {\n    return done(null);\n   }\n   mount.type.syncfs(mount, populate, done);\n  });\n },\n mount: (type, opts, mountpoint) => {\n  if (typeof type == \"string\") {\n   throw type;\n  }\n  var root = mountpoint === \"/\";\n  var pseudo = !mountpoint;\n  var node;\n  if (root && FS.root) {\n   throw new FS.ErrnoError(10);\n  } else if (!root && !pseudo) {\n   var lookup = FS.lookupPath(mountpoint, {\n    follow_mount: false\n   });\n   mountpoint = lookup.path;\n   node = lookup.node;\n   if (FS.isMountpoint(node)) {\n    throw new FS.ErrnoError(10);\n   }\n   if (!FS.isDir(node.mode)) {\n    throw new FS.ErrnoError(54);\n   }\n  }\n  var mount = {\n   type: type,\n   opts: opts,\n   mountpoint: mountpoint,\n   mounts: []\n  };\n  var mountRoot = type.mount(mount);\n  mountRoot.mount = mount;\n  mount.root = mountRoot;\n  if (root) {\n   FS.root = mountRoot;\n  } else if (node) {\n   node.mounted = mount;\n   if (node.mount) {\n    node.mount.mounts.push(mount);\n   }\n  }\n  return mountRoot;\n },\n unmount: mountpoint => {\n  var lookup = FS.lookupPath(mountpoint, {\n   follow_mount: false\n  });\n  if (!FS.isMountpoint(lookup.node)) {\n   throw new FS.ErrnoError(28);\n  }\n  var node = lookup.node;\n  var mount = node.mounted;\n  var mounts = FS.getMounts(mount);\n  Object.keys(FS.nameTable).forEach(hash => {\n   var current = FS.nameTable[hash];\n   while (current) {\n    var next = current.name_next;\n    if (mounts.includes(current.mount)) {\n     FS.destroyNode(current);\n    }\n    current = next;\n   }\n  });\n  node.mounted = null;\n  var idx = node.mount.mounts.indexOf(mount);\n  assert(idx !== -1);\n  node.mount.mounts.splice(idx, 1);\n },\n lookup: (parent, name) => {\n  return parent.node_ops.lookup(parent, name);\n },\n mknod: (path, mode, dev) => {\n  var lookup = FS.lookupPath(path, {\n   parent: true\n  });\n  var parent = lookup.node;\n  var name = PATH.basename(path);\n  if (!name || name === \".\" || name === \"..\") {\n   throw new FS.ErrnoError(28);\n  }\n  var errCode = FS.mayCreate(parent, name);\n  if (errCode) {\n   throw new FS.ErrnoError(errCode);\n  }\n  if (!parent.node_ops.mknod) {\n   throw new FS.ErrnoError(63);\n  }\n  return parent.node_ops.mknod(parent, name, mode, dev);\n },\n create: (path, mode) => {\n  mode = mode !== undefined ? mode : 438;\n  mode &= 4095;\n  mode |= 32768;\n  return FS.mknod(path, mode, 0);\n },\n mkdir: (path, mode) => {\n  mode = mode !== undefined ? mode : 511;\n  mode &= 511 | 512;\n  mode |= 16384;\n  return FS.mknod(path, mode, 0);\n },\n mkdirTree: (path, mode) => {\n  var dirs = path.split(\"/\");\n  var d = \"\";\n  for (var i = 0; i < dirs.length; ++i) {\n   if (!dirs[i]) continue;\n   d += \"/\" + dirs[i];\n   try {\n    FS.mkdir(d, mode);\n   } catch (e) {\n    if (e.errno != 20) throw e;\n   }\n  }\n },\n mkdev: (path, mode, dev) => {\n  if (typeof dev == \"undefined\") {\n   dev = mode;\n   mode = 438;\n  }\n  mode |= 8192;\n  return FS.mknod(path, mode, dev);\n },\n symlink: (oldpath, newpath) => {\n  if (!PATH_FS.resolve(oldpath)) {\n   throw new FS.ErrnoError(44);\n  }\n  var lookup = FS.lookupPath(newpath, {\n   parent: true\n  });\n  var parent = lookup.node;\n  if (!parent) {\n   throw new FS.ErrnoError(44);\n  }\n  var newname = PATH.basename(newpath);\n  var errCode = FS.mayCreate(parent, newname);\n  if (errCode) {\n   throw new FS.ErrnoError(errCode);\n  }\n  if (!parent.node_ops.symlink) {\n   throw new FS.ErrnoError(63);\n  }\n  return parent.node_ops.symlink(parent, newname, oldpath);\n },\n rename: (old_path, new_path) => {\n  var old_dirname = PATH.dirname(old_path);\n  var new_dirname = PATH.dirname(new_path);\n  var old_name = PATH.basename(old_path);\n  var new_name = PATH.basename(new_path);\n  var lookup, old_dir, new_dir;\n  lookup = FS.lookupPath(old_path, {\n   parent: true\n  });\n  old_dir = lookup.node;\n  lookup = FS.lookupPath(new_path, {\n   parent: true\n  });\n  new_dir = lookup.node;\n  if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n  if (old_dir.mount !== new_dir.mount) {\n   throw new FS.ErrnoError(75);\n  }\n  var old_node = FS.lookupNode(old_dir, old_name);\n  var relative = PATH_FS.relative(old_path, new_dirname);\n  if (relative.charAt(0) !== \".\") {\n   throw new FS.ErrnoError(28);\n  }\n  relative = PATH_FS.relative(new_path, old_dirname);\n  if (relative.charAt(0) !== \".\") {\n   throw new FS.ErrnoError(55);\n  }\n  var new_node;\n  try {\n   new_node = FS.lookupNode(new_dir, new_name);\n  } catch (e) {}\n  if (old_node === new_node) {\n   return;\n  }\n  var isdir = FS.isDir(old_node.mode);\n  var errCode = FS.mayDelete(old_dir, old_name, isdir);\n  if (errCode) {\n   throw new FS.ErrnoError(errCode);\n  }\n  errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\n  if (errCode) {\n   throw new FS.ErrnoError(errCode);\n  }\n  if (!old_dir.node_ops.rename) {\n   throw new FS.ErrnoError(63);\n  }\n  if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {\n   throw new FS.ErrnoError(10);\n  }\n  if (new_dir !== old_dir) {\n   errCode = FS.nodePermissions(old_dir, \"w\");\n   if (errCode) {\n    throw new FS.ErrnoError(errCode);\n   }\n  }\n  FS.hashRemoveNode(old_node);\n  try {\n   old_dir.node_ops.rename(old_node, new_dir, new_name);\n  } catch (e) {\n   throw e;\n  } finally {\n   FS.hashAddNode(old_node);\n  }\n },\n rmdir: path => {\n  var lookup = FS.lookupPath(path, {\n   parent: true\n  });\n  var parent = lookup.node;\n  var name = PATH.basename(path);\n  var node = FS.lookupNode(parent, name);\n  var errCode = FS.mayDelete(parent, name, true);\n  if (errCode) {\n   throw new FS.ErrnoError(errCode);\n  }\n  if (!parent.node_ops.rmdir) {\n   throw new FS.ErrnoError(63);\n  }\n  if (FS.isMountpoint(node)) {\n   throw new FS.ErrnoError(10);\n  }\n  parent.node_ops.rmdir(parent, name);\n  FS.destroyNode(node);\n },\n readdir: path => {\n  var lookup = FS.lookupPath(path, {\n   follow: true\n  });\n  var node = lookup.node;\n  if (!node.node_ops.readdir) {\n   throw new FS.ErrnoError(54);\n  }\n  return node.node_ops.readdir(node);\n },\n unlink: path => {\n  var lookup = FS.lookupPath(path, {\n   parent: true\n  });\n  var parent = lookup.node;\n  if (!parent) {\n   throw new FS.ErrnoError(44);\n  }\n  var name = PATH.basename(path);\n  var node = FS.lookupNode(parent, name);\n  var errCode = FS.mayDelete(parent, name, false);\n  if (errCode) {\n   throw new FS.ErrnoError(errCode);\n  }\n  if (!parent.node_ops.unlink) {\n   throw new FS.ErrnoError(63);\n  }\n  if (FS.isMountpoint(node)) {\n   throw new FS.ErrnoError(10);\n  }\n  parent.node_ops.unlink(parent, name);\n  FS.destroyNode(node);\n },\n readlink: path => {\n  var lookup = FS.lookupPath(path);\n  var link = lookup.node;\n  if (!link) {\n   throw new FS.ErrnoError(44);\n  }\n  if (!link.node_ops.readlink) {\n   throw new FS.ErrnoError(28);\n  }\n  return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n },\n stat: (path, dontFollow) => {\n  var lookup = FS.lookupPath(path, {\n   follow: !dontFollow\n  });\n  var node = lookup.node;\n  if (!node) {\n   throw new FS.ErrnoError(44);\n  }\n  if (!node.node_ops.getattr) {\n   throw new FS.ErrnoError(63);\n  }\n  return node.node_ops.getattr(node);\n },\n lstat: path => {\n  return FS.stat(path, true);\n },\n chmod: (path, mode, dontFollow) => {\n  var node;\n  if (typeof path == \"string\") {\n   var lookup = FS.lookupPath(path, {\n    follow: !dontFollow\n   });\n   node = lookup.node;\n  } else {\n   node = path;\n  }\n  if (!node.node_ops.setattr) {\n   throw new FS.ErrnoError(63);\n  }\n  node.node_ops.setattr(node, {\n   mode: mode & 4095 | node.mode & ~4095,\n   timestamp: Date.now()\n  });\n },\n lchmod: (path, mode) => {\n  FS.chmod(path, mode, true);\n },\n fchmod: (fd, mode) => {\n  var stream = FS.getStream(fd);\n  if (!stream) {\n   throw new FS.ErrnoError(8);\n  }\n  FS.chmod(stream.node, mode);\n },\n chown: (path, uid, gid, dontFollow) => {\n  var node;\n  if (typeof path == \"string\") {\n   var lookup = FS.lookupPath(path, {\n    follow: !dontFollow\n   });\n   node = lookup.node;\n  } else {\n   node = path;\n  }\n  if (!node.node_ops.setattr) {\n   throw new FS.ErrnoError(63);\n  }\n  node.node_ops.setattr(node, {\n   timestamp: Date.now()\n  });\n },\n lchown: (path, uid, gid) => {\n  FS.chown(path, uid, gid, true);\n },\n fchown: (fd, uid, gid) => {\n  var stream = FS.getStream(fd);\n  if (!stream) {\n   throw new FS.ErrnoError(8);\n  }\n  FS.chown(stream.node, uid, gid);\n },\n truncate: (path, len) => {\n  if (len < 0) {\n   throw new FS.ErrnoError(28);\n  }\n  var node;\n  if (typeof path == \"string\") {\n   var lookup = FS.lookupPath(path, {\n    follow: true\n   });\n   node = lookup.node;\n  } else {\n   node = path;\n  }\n  if (!node.node_ops.setattr) {\n   throw new FS.ErrnoError(63);\n  }\n  if (FS.isDir(node.mode)) {\n   throw new FS.ErrnoError(31);\n  }\n  if (!FS.isFile(node.mode)) {\n   throw new FS.ErrnoError(28);\n  }\n  var errCode = FS.nodePermissions(node, \"w\");\n  if (errCode) {\n   throw new FS.ErrnoError(errCode);\n  }\n  node.node_ops.setattr(node, {\n   size: len,\n   timestamp: Date.now()\n  });\n },\n ftruncate: (fd, len) => {\n  var stream = FS.getStream(fd);\n  if (!stream) {\n   throw new FS.ErrnoError(8);\n  }\n  if ((stream.flags & 2097155) === 0) {\n   throw new FS.ErrnoError(28);\n  }\n  FS.truncate(stream.node, len);\n },\n utime: (path, atime, mtime) => {\n  var lookup = FS.lookupPath(path, {\n   follow: true\n  });\n  var node = lookup.node;\n  node.node_ops.setattr(node, {\n   timestamp: Math.max(atime, mtime)\n  });\n },\n open: (path, flags, mode) => {\n  if (path === \"\") {\n   throw new FS.ErrnoError(44);\n  }\n  flags = typeof flags == \"string\" ? FS.modeStringToFlags(flags) : flags;\n  mode = typeof mode == \"undefined\" ? 438 : mode;\n  if (flags & 64) {\n   mode = mode & 4095 | 32768;\n  } else {\n   mode = 0;\n  }\n  var node;\n  if (typeof path == \"object\") {\n   node = path;\n  } else {\n   path = PATH.normalize(path);\n   try {\n    var lookup = FS.lookupPath(path, {\n     follow: !(flags & 131072)\n    });\n    node = lookup.node;\n   } catch (e) {}\n  }\n  var created = false;\n  if (flags & 64) {\n   if (node) {\n    if (flags & 128) {\n     throw new FS.ErrnoError(20);\n    }\n   } else {\n    node = FS.mknod(path, mode, 0);\n    created = true;\n   }\n  }\n  if (!node) {\n   throw new FS.ErrnoError(44);\n  }\n  if (FS.isChrdev(node.mode)) {\n   flags &= ~512;\n  }\n  if (flags & 65536 && !FS.isDir(node.mode)) {\n   throw new FS.ErrnoError(54);\n  }\n  if (!created) {\n   var errCode = FS.mayOpen(node, flags);\n   if (errCode) {\n    throw new FS.ErrnoError(errCode);\n   }\n  }\n  if (flags & 512 && !created) {\n   FS.truncate(node, 0);\n  }\n  flags &= ~(128 | 512 | 131072);\n  var stream = FS.createStream({\n   node: node,\n   path: FS.getPath(node),\n   flags: flags,\n   seekable: true,\n   position: 0,\n   stream_ops: node.stream_ops,\n   ungotten: [],\n   error: false\n  });\n  if (stream.stream_ops.open) {\n   stream.stream_ops.open(stream);\n  }\n  if (Module[\"logReadFiles\"] && !(flags & 1)) {\n   if (!FS.readFiles) FS.readFiles = {};\n   if (!(path in FS.readFiles)) {\n    FS.readFiles[path] = 1;\n   }\n  }\n  return stream;\n },\n close: stream => {\n  if (FS.isClosed(stream)) {\n   throw new FS.ErrnoError(8);\n  }\n  if (stream.getdents) stream.getdents = null;\n  try {\n   if (stream.stream_ops.close) {\n    stream.stream_ops.close(stream);\n   }\n  } catch (e) {\n   throw e;\n  } finally {\n   FS.closeStream(stream.fd);\n  }\n  stream.fd = null;\n },\n isClosed: stream => {\n  return stream.fd === null;\n },\n llseek: (stream, offset, whence) => {\n  if (FS.isClosed(stream)) {\n   throw new FS.ErrnoError(8);\n  }\n  if (!stream.seekable || !stream.stream_ops.llseek) {\n   throw new FS.ErrnoError(70);\n  }\n  if (whence != 0 && whence != 1 && whence != 2) {\n   throw new FS.ErrnoError(28);\n  }\n  stream.position = stream.stream_ops.llseek(stream, offset, whence);\n  stream.ungotten = [];\n  return stream.position;\n },\n read: (stream, buffer, offset, length, position) => {\n  if (length < 0 || position < 0) {\n   throw new FS.ErrnoError(28);\n  }\n  if (FS.isClosed(stream)) {\n   throw new FS.ErrnoError(8);\n  }\n  if ((stream.flags & 2097155) === 1) {\n   throw new FS.ErrnoError(8);\n  }\n  if (FS.isDir(stream.node.mode)) {\n   throw new FS.ErrnoError(31);\n  }\n  if (!stream.stream_ops.read) {\n   throw new FS.ErrnoError(28);\n  }\n  var seeking = typeof position != \"undefined\";\n  if (!seeking) {\n   position = stream.position;\n  } else if (!stream.seekable) {\n   throw new FS.ErrnoError(70);\n  }\n  var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\n  if (!seeking) stream.position += bytesRead;\n  return bytesRead;\n },\n write: (stream, buffer, offset, length, position, canOwn) => {\n  if (length < 0 || position < 0) {\n   throw new FS.ErrnoError(28);\n  }\n  if (FS.isClosed(stream)) {\n   throw new FS.ErrnoError(8);\n  }\n  if ((stream.flags & 2097155) === 0) {\n   throw new FS.ErrnoError(8);\n  }\n  if (FS.isDir(stream.node.mode)) {\n   throw new FS.ErrnoError(31);\n  }\n  if (!stream.stream_ops.write) {\n   throw new FS.ErrnoError(28);\n  }\n  if (stream.seekable && stream.flags & 1024) {\n   FS.llseek(stream, 0, 2);\n  }\n  var seeking = typeof position != \"undefined\";\n  if (!seeking) {\n   position = stream.position;\n  } else if (!stream.seekable) {\n   throw new FS.ErrnoError(70);\n  }\n  var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\n  if (!seeking) stream.position += bytesWritten;\n  return bytesWritten;\n },\n allocate: (stream, offset, length) => {\n  if (FS.isClosed(stream)) {\n   throw new FS.ErrnoError(8);\n  }\n  if (offset < 0 || length <= 0) {\n   throw new FS.ErrnoError(28);\n  }\n  if ((stream.flags & 2097155) === 0) {\n   throw new FS.ErrnoError(8);\n  }\n  if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n   throw new FS.ErrnoError(43);\n  }\n  if (!stream.stream_ops.allocate) {\n   throw new FS.ErrnoError(138);\n  }\n  stream.stream_ops.allocate(stream, offset, length);\n },\n mmap: (stream, length, position, prot, flags) => {\n  if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\n   throw new FS.ErrnoError(2);\n  }\n  if ((stream.flags & 2097155) === 1) {\n   throw new FS.ErrnoError(2);\n  }\n  if (!stream.stream_ops.mmap) {\n   throw new FS.ErrnoError(43);\n  }\n  return stream.stream_ops.mmap(stream, length, position, prot, flags);\n },\n msync: (stream, buffer, offset, length, mmapFlags) => {\n  if (!stream || !stream.stream_ops.msync) {\n   return 0;\n  }\n  return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\n },\n munmap: stream => 0,\n ioctl: (stream, cmd, arg) => {\n  if (!stream.stream_ops.ioctl) {\n   throw new FS.ErrnoError(59);\n  }\n  return stream.stream_ops.ioctl(stream, cmd, arg);\n },\n readFile: (path, opts = {}) => {\n  opts.flags = opts.flags || 0;\n  opts.encoding = opts.encoding || \"binary\";\n  if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\n   throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n  }\n  var ret;\n  var stream = FS.open(path, opts.flags);\n  var stat = FS.stat(path);\n  var length = stat.size;\n  var buf = new Uint8Array(length);\n  FS.read(stream, buf, 0, length, 0);\n  if (opts.encoding === \"utf8\") {\n   ret = UTF8ArrayToString(buf, 0);\n  } else if (opts.encoding === \"binary\") {\n   ret = buf;\n  }\n  FS.close(stream);\n  return ret;\n },\n writeFile: (path, data, opts = {}) => {\n  opts.flags = opts.flags || 577;\n  var stream = FS.open(path, opts.flags, opts.mode);\n  if (typeof data == \"string\") {\n   var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n   var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n   FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n  } else if (ArrayBuffer.isView(data)) {\n   FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n  } else {\n   throw new Error(\"Unsupported data type\");\n  }\n  FS.close(stream);\n },\n cwd: () => FS.currentPath,\n chdir: path => {\n  var lookup = FS.lookupPath(path, {\n   follow: true\n  });\n  if (lookup.node === null) {\n   throw new FS.ErrnoError(44);\n  }\n  if (!FS.isDir(lookup.node.mode)) {\n   throw new FS.ErrnoError(54);\n  }\n  var errCode = FS.nodePermissions(lookup.node, \"x\");\n  if (errCode) {\n   throw new FS.ErrnoError(errCode);\n  }\n  FS.currentPath = lookup.path;\n },\n createDefaultDirectories: () => {\n  FS.mkdir(\"/tmp\");\n  FS.mkdir(\"/home\");\n  FS.mkdir(\"/home/web_user\");\n },\n createDefaultDevices: () => {\n  FS.mkdir(\"/dev\");\n  FS.registerDevice(FS.makedev(1, 3), {\n   read: () => 0,\n   write: (stream, buffer, offset, length, pos) => length\n  });\n  FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\n  TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n  TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n  FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\n  FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\n  var random_device = getRandomDevice();\n  FS.createDevice(\"/dev\", \"random\", random_device);\n  FS.createDevice(\"/dev\", \"urandom\", random_device);\n  FS.mkdir(\"/dev/shm\");\n  FS.mkdir(\"/dev/shm/tmp\");\n },\n createSpecialDirectories: () => {\n  FS.mkdir(\"/proc\");\n  var proc_self = FS.mkdir(\"/proc/self\");\n  FS.mkdir(\"/proc/self/fd\");\n  FS.mount({\n   mount: () => {\n    var node = FS.createNode(proc_self, \"fd\", 16384 | 511, 73);\n    node.node_ops = {\n     lookup: (parent, name) => {\n      var fd = +name;\n      var stream = FS.getStream(fd);\n      if (!stream) throw new FS.ErrnoError(8);\n      var ret = {\n       parent: null,\n       mount: {\n        mountpoint: \"fake\"\n       },\n       node_ops: {\n        readlink: () => stream.path\n       }\n      };\n      ret.parent = ret;\n      return ret;\n     }\n    };\n    return node;\n   }\n  }, {}, \"/proc/self/fd\");\n },\n createStandardStreams: () => {\n  if (Module[\"stdin\"]) {\n   FS.createDevice(\"/dev\", \"stdin\", Module[\"stdin\"]);\n  } else {\n   FS.symlink(\"/dev/tty\", \"/dev/stdin\");\n  }\n  if (Module[\"stdout\"]) {\n   FS.createDevice(\"/dev\", \"stdout\", null, Module[\"stdout\"]);\n  } else {\n   FS.symlink(\"/dev/tty\", \"/dev/stdout\");\n  }\n  if (Module[\"stderr\"]) {\n   FS.createDevice(\"/dev\", \"stderr\", null, Module[\"stderr\"]);\n  } else {\n   FS.symlink(\"/dev/tty1\", \"/dev/stderr\");\n  }\n  var stdin = FS.open(\"/dev/stdin\", 0);\n  var stdout = FS.open(\"/dev/stdout\", 1);\n  var stderr = FS.open(\"/dev/stderr\", 1);\n  assert(stdin.fd === 0, \"invalid handle for stdin (\" + stdin.fd + \")\");\n  assert(stdout.fd === 1, \"invalid handle for stdout (\" + stdout.fd + \")\");\n  assert(stderr.fd === 2, \"invalid handle for stderr (\" + stderr.fd + \")\");\n },\n ensureErrnoError: () => {\n  if (FS.ErrnoError) return;\n  FS.ErrnoError = function ErrnoError(errno, node) {\n   this.node = node;\n   this.setErrno = function(errno) {\n    this.errno = errno;\n    for (var key in ERRNO_CODES) {\n     if (ERRNO_CODES[key] === errno) {\n      this.code = key;\n      break;\n     }\n    }\n   };\n   this.setErrno(errno);\n   this.message = ERRNO_MESSAGES[errno];\n   if (this.stack) {\n    Object.defineProperty(this, \"stack\", {\n     value: new Error().stack,\n     writable: true\n    });\n    this.stack = demangleAll(this.stack);\n   }\n  };\n  FS.ErrnoError.prototype = new Error();\n  FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n  [ 44 ].forEach(code => {\n   FS.genericErrors[code] = new FS.ErrnoError(code);\n   FS.genericErrors[code].stack = \"<generic error, no stack>\";\n  });\n },\n staticInit: () => {\n  FS.ensureErrnoError();\n  FS.nameTable = new Array(4096);\n  FS.mount(MEMFS, {}, \"/\");\n  FS.createDefaultDirectories();\n  FS.createDefaultDevices();\n  FS.createSpecialDirectories();\n  FS.filesystems = {\n   \"MEMFS\": MEMFS\n  };\n },\n init: (input, output, error) => {\n  assert(!FS.init.initialized, \"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)\");\n  FS.init.initialized = true;\n  FS.ensureErrnoError();\n  Module[\"stdin\"] = input || Module[\"stdin\"];\n  Module[\"stdout\"] = output || Module[\"stdout\"];\n  Module[\"stderr\"] = error || Module[\"stderr\"];\n  FS.createStandardStreams();\n },\n quit: () => {\n  FS.init.initialized = false;\n  _fflush(0);\n  for (var i = 0; i < FS.streams.length; i++) {\n   var stream = FS.streams[i];\n   if (!stream) {\n    continue;\n   }\n   FS.close(stream);\n  }\n },\n getMode: (canRead, canWrite) => {\n  var mode = 0;\n  if (canRead) mode |= 292 | 73;\n  if (canWrite) mode |= 146;\n  return mode;\n },\n findObject: (path, dontResolveLastLink) => {\n  var ret = FS.analyzePath(path, dontResolveLastLink);\n  if (!ret.exists) {\n   return null;\n  }\n  return ret.object;\n },\n analyzePath: (path, dontResolveLastLink) => {\n  try {\n   var lookup = FS.lookupPath(path, {\n    follow: !dontResolveLastLink\n   });\n   path = lookup.path;\n  } catch (e) {}\n  var ret = {\n   isRoot: false,\n   exists: false,\n   error: 0,\n   name: null,\n   path: null,\n   object: null,\n   parentExists: false,\n   parentPath: null,\n   parentObject: null\n  };\n  try {\n   var lookup = FS.lookupPath(path, {\n    parent: true\n   });\n   ret.parentExists = true;\n   ret.parentPath = lookup.path;\n   ret.parentObject = lookup.node;\n   ret.name = PATH.basename(path);\n   lookup = FS.lookupPath(path, {\n    follow: !dontResolveLastLink\n   });\n   ret.exists = true;\n   ret.path = lookup.path;\n   ret.object = lookup.node;\n   ret.name = lookup.node.name;\n   ret.isRoot = lookup.path === \"/\";\n  } catch (e) {\n   ret.error = e.errno;\n  }\n  return ret;\n },\n createPath: (parent, path, canRead, canWrite) => {\n  parent = typeof parent == \"string\" ? parent : FS.getPath(parent);\n  var parts = path.split(\"/\").reverse();\n  while (parts.length) {\n   var part = parts.pop();\n   if (!part) continue;\n   var current = PATH.join2(parent, part);\n   try {\n    FS.mkdir(current);\n   } catch (e) {}\n   parent = current;\n  }\n  return current;\n },\n createFile: (parent, name, properties, canRead, canWrite) => {\n  var path = PATH.join2(typeof parent == \"string\" ? parent : FS.getPath(parent), name);\n  var mode = FS.getMode(canRead, canWrite);\n  return FS.create(path, mode);\n },\n createDataFile: (parent, name, data, canRead, canWrite, canOwn) => {\n  var path = name;\n  if (parent) {\n   parent = typeof parent == \"string\" ? parent : FS.getPath(parent);\n   path = name ? PATH.join2(parent, name) : parent;\n  }\n  var mode = FS.getMode(canRead, canWrite);\n  var node = FS.create(path, mode);\n  if (data) {\n   if (typeof data == \"string\") {\n    var arr = new Array(data.length);\n    for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\n    data = arr;\n   }\n   FS.chmod(node, mode | 146);\n   var stream = FS.open(node, 577);\n   FS.write(stream, data, 0, data.length, 0, canOwn);\n   FS.close(stream);\n   FS.chmod(node, mode);\n  }\n  return node;\n },\n createDevice: (parent, name, input, output) => {\n  var path = PATH.join2(typeof parent == \"string\" ? parent : FS.getPath(parent), name);\n  var mode = FS.getMode(!!input, !!output);\n  if (!FS.createDevice.major) FS.createDevice.major = 64;\n  var dev = FS.makedev(FS.createDevice.major++, 0);\n  FS.registerDevice(dev, {\n   open: stream => {\n    stream.seekable = false;\n   },\n   close: stream => {\n    if (output && output.buffer && output.buffer.length) {\n     output(10);\n    }\n   },\n   read: (stream, buffer, offset, length, pos) => {\n    var bytesRead = 0;\n    for (var i = 0; i < length; i++) {\n     var result;\n     try {\n      result = input();\n     } catch (e) {\n      throw new FS.ErrnoError(29);\n     }\n     if (result === undefined && bytesRead === 0) {\n      throw new FS.ErrnoError(6);\n     }\n     if (result === null || result === undefined) break;\n     bytesRead++;\n     buffer[offset + i] = result;\n    }\n    if (bytesRead) {\n     stream.node.timestamp = Date.now();\n    }\n    return bytesRead;\n   },\n   write: (stream, buffer, offset, length, pos) => {\n    for (var i = 0; i < length; i++) {\n     try {\n      output(buffer[offset + i]);\n     } catch (e) {\n      throw new FS.ErrnoError(29);\n     }\n    }\n    if (length) {\n     stream.node.timestamp = Date.now();\n    }\n    return i;\n   }\n  });\n  return FS.mkdev(path, mode, dev);\n },\n forceLoadFile: obj => {\n  if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\n  if (typeof XMLHttpRequest != \"undefined\") {\n   throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n  } else if (read_) {\n   try {\n    obj.contents = intArrayFromString(read_(obj.url), true);\n    obj.usedBytes = obj.contents.length;\n   } catch (e) {\n    throw new FS.ErrnoError(29);\n   }\n  } else {\n   throw new Error(\"Cannot load without read() or XMLHttpRequest.\");\n  }\n },\n createLazyFile: (parent, name, url, canRead, canWrite) => {\n  function LazyUint8Array() {\n   this.lengthKnown = false;\n   this.chunks = [];\n  }\n  LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n   if (idx > this.length - 1 || idx < 0) {\n    return undefined;\n   }\n   var chunkOffset = idx % this.chunkSize;\n   var chunkNum = idx / this.chunkSize | 0;\n   return this.getter(chunkNum)[chunkOffset];\n  };\n  LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n   this.getter = getter;\n  };\n  LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n   var xhr = new XMLHttpRequest();\n   xhr.open(\"HEAD\", url, false);\n   xhr.send(null);\n   if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n   var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n   var header;\n   var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n   var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n   var chunkSize = 1024 * 1024;\n   if (!hasByteServing) chunkSize = datalength;\n   var doXHR = (from, to) => {\n    if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n    if (to > datalength - 1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, false);\n    if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n    xhr.responseType = \"arraybuffer\";\n    if (xhr.overrideMimeType) {\n     xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\n    }\n    xhr.send(null);\n    if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n    if (xhr.response !== undefined) {\n     return new Uint8Array(xhr.response || []);\n    }\n    return intArrayFromString(xhr.responseText || \"\", true);\n   };\n   var lazyArray = this;\n   lazyArray.setDataGetter(chunkNum => {\n    var start = chunkNum * chunkSize;\n    var end = (chunkNum + 1) * chunkSize - 1;\n    end = Math.min(end, datalength - 1);\n    if (typeof lazyArray.chunks[chunkNum] == \"undefined\") {\n     lazyArray.chunks[chunkNum] = doXHR(start, end);\n    }\n    if (typeof lazyArray.chunks[chunkNum] == \"undefined\") throw new Error(\"doXHR failed!\");\n    return lazyArray.chunks[chunkNum];\n   });\n   if (usesGzip || !datalength) {\n    chunkSize = datalength = 1;\n    datalength = this.getter(0).length;\n    chunkSize = datalength;\n    out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n   }\n   this._length = datalength;\n   this._chunkSize = chunkSize;\n   this.lengthKnown = true;\n  };\n  if (typeof XMLHttpRequest != \"undefined\") {\n   if (!ENVIRONMENT_IS_WORKER) throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\n   var lazyArray = new LazyUint8Array();\n   Object.defineProperties(lazyArray, {\n    length: {\n     get: function() {\n      if (!this.lengthKnown) {\n       this.cacheLength();\n      }\n      return this._length;\n     }\n    },\n    chunkSize: {\n     get: function() {\n      if (!this.lengthKnown) {\n       this.cacheLength();\n      }\n      return this._chunkSize;\n     }\n    }\n   });\n   var properties = {\n    isDevice: false,\n    contents: lazyArray\n   };\n  } else {\n   var properties = {\n    isDevice: false,\n    url: url\n   };\n  }\n  var node = FS.createFile(parent, name, properties, canRead, canWrite);\n  if (properties.contents) {\n   node.contents = properties.contents;\n  } else if (properties.url) {\n   node.contents = null;\n   node.url = properties.url;\n  }\n  Object.defineProperties(node, {\n   usedBytes: {\n    get: function() {\n     return this.contents.length;\n    }\n   }\n  });\n  var stream_ops = {};\n  var keys = Object.keys(node.stream_ops);\n  keys.forEach(key => {\n   var fn = node.stream_ops[key];\n   stream_ops[key] = function forceLoadLazyFile() {\n    FS.forceLoadFile(node);\n    return fn.apply(null, arguments);\n   };\n  });\n  function writeChunks(stream, buffer, offset, length, position) {\n   var contents = stream.node.contents;\n   if (position >= contents.length) return 0;\n   var size = Math.min(contents.length - position, length);\n   assert(size >= 0);\n   if (contents.slice) {\n    for (var i = 0; i < size; i++) {\n     buffer[offset + i] = contents[position + i];\n    }\n   } else {\n    for (var i = 0; i < size; i++) {\n     buffer[offset + i] = contents.get(position + i);\n    }\n   }\n   return size;\n  }\n  stream_ops.read = (stream, buffer, offset, length, position) => {\n   FS.forceLoadFile(node);\n   return writeChunks(stream, buffer, offset, length, position);\n  };\n  stream_ops.mmap = (stream, length, position, prot, flags) => {\n   FS.forceLoadFile(node);\n   var ptr = mmapAlloc(length);\n   if (!ptr) {\n    throw new FS.ErrnoError(48);\n   }\n   writeChunks(stream, HEAP8, ptr, length, position);\n   return {\n    ptr: ptr,\n    allocated: true\n   };\n  };\n  node.stream_ops = stream_ops;\n  return node;\n },\n createPreloadedFile: (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) => {\n  var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n  var dep = getUniqueRunDependency(\"cp \" + fullname);\n  function processData(byteArray) {\n   function finish(byteArray) {\n    if (preFinish) preFinish();\n    if (!dontCreateFile) {\n     FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\n    }\n    if (onload) onload();\n    removeRunDependency(dep);\n   }\n   if (Browser.handledByPreloadPlugin(byteArray, fullname, finish, () => {\n    if (onerror) onerror();\n    removeRunDependency(dep);\n   })) {\n    return;\n   }\n   finish(byteArray);\n  }\n  addRunDependency(dep);\n  if (typeof url == \"string\") {\n   asyncLoad(url, byteArray => processData(byteArray), onerror);\n  } else {\n   processData(url);\n  }\n },\n indexedDB: () => {\n  return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n },\n DB_NAME: () => {\n  return \"EM_FS_\" + window.location.pathname;\n },\n DB_VERSION: 20,\n DB_STORE_NAME: \"FILE_DATA\",\n saveFilesToDB: (paths, onload, onerror) => {\n  onload = onload || (() => {});\n  onerror = onerror || (() => {});\n  var indexedDB = FS.indexedDB();\n  try {\n   var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n  } catch (e) {\n   return onerror(e);\n  }\n  openRequest.onupgradeneeded = () => {\n   out(\"creating db\");\n   var db = openRequest.result;\n   db.createObjectStore(FS.DB_STORE_NAME);\n  };\n  openRequest.onsuccess = () => {\n   var db = openRequest.result;\n   var transaction = db.transaction([ FS.DB_STORE_NAME ], \"readwrite\");\n   var files = transaction.objectStore(FS.DB_STORE_NAME);\n   var ok = 0, fail = 0, total = paths.length;\n   function finish() {\n    if (fail == 0) onload(); else onerror();\n   }\n   paths.forEach(path => {\n    var putRequest = files.put(FS.analyzePath(path).object.contents, path);\n    putRequest.onsuccess = () => {\n     ok++;\n     if (ok + fail == total) finish();\n    };\n    putRequest.onerror = () => {\n     fail++;\n     if (ok + fail == total) finish();\n    };\n   });\n   transaction.onerror = onerror;\n  };\n  openRequest.onerror = onerror;\n },\n loadFilesFromDB: (paths, onload, onerror) => {\n  onload = onload || (() => {});\n  onerror = onerror || (() => {});\n  var indexedDB = FS.indexedDB();\n  try {\n   var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n  } catch (e) {\n   return onerror(e);\n  }\n  openRequest.onupgradeneeded = onerror;\n  openRequest.onsuccess = () => {\n   var db = openRequest.result;\n   try {\n    var transaction = db.transaction([ FS.DB_STORE_NAME ], \"readonly\");\n   } catch (e) {\n    onerror(e);\n    return;\n   }\n   var files = transaction.objectStore(FS.DB_STORE_NAME);\n   var ok = 0, fail = 0, total = paths.length;\n   function finish() {\n    if (fail == 0) onload(); else onerror();\n   }\n   paths.forEach(path => {\n    var getRequest = files.get(path);\n    getRequest.onsuccess = () => {\n     if (FS.analyzePath(path).exists) {\n      FS.unlink(path);\n     }\n     FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);\n     ok++;\n     if (ok + fail == total) finish();\n    };\n    getRequest.onerror = () => {\n     fail++;\n     if (ok + fail == total) finish();\n    };\n   });\n   transaction.onerror = onerror;\n  };\n  openRequest.onerror = onerror;\n },\n absolutePath: () => {\n  abort(\"FS.absolutePath has been removed; use PATH_FS.resolve instead\");\n },\n createFolder: () => {\n  abort(\"FS.createFolder has been removed; use FS.mkdir instead\");\n },\n createLink: () => {\n  abort(\"FS.createLink has been removed; use FS.symlink instead\");\n },\n joinPath: () => {\n  abort(\"FS.joinPath has been removed; use PATH.join instead\");\n },\n mmapAlloc: () => {\n  abort(\"FS.mmapAlloc has been replaced by the top level function mmapAlloc\");\n },\n standardizePath: () => {\n  abort(\"FS.standardizePath has been removed; use PATH.normalize instead\");\n }\n};\n\nvar SYSCALLS = {\n DEFAULT_POLLMASK: 5,\n calculateAt: function(dirfd, path, allowEmpty) {\n  if (PATH.isAbs(path)) {\n   return path;\n  }\n  var dir;\n  if (dirfd === -100) {\n   dir = FS.cwd();\n  } else {\n   var dirstream = SYSCALLS.getStreamFromFD(dirfd);\n   dir = dirstream.path;\n  }\n  if (path.length == 0) {\n   if (!allowEmpty) {\n    throw new FS.ErrnoError(44);\n   }\n   return dir;\n  }\n  return PATH.join2(dir, path);\n },\n doStat: function(func, path, buf) {\n  try {\n   var stat = func(path);\n  } catch (e) {\n   if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n    return -54;\n   }\n   throw e;\n  }\n  SAFE_HEAP_STORE((buf >> 2) * 4, stat.dev, 4);\n  SAFE_HEAP_STORE((buf + 8 >> 2) * 4, stat.ino, 4);\n  SAFE_HEAP_STORE((buf + 12 >> 2) * 4, stat.mode, 4);\n  SAFE_HEAP_STORE((buf + 16 >> 2) * 4, stat.nlink, 4);\n  SAFE_HEAP_STORE((buf + 20 >> 2) * 4, stat.uid, 4);\n  SAFE_HEAP_STORE((buf + 24 >> 2) * 4, stat.gid, 4);\n  SAFE_HEAP_STORE((buf + 28 >> 2) * 4, stat.rdev, 4);\n  tempI64 = [ stat.size >>> 0, (tempDouble = stat.size, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], \n  SAFE_HEAP_STORE((buf + 40 >> 2) * 4, tempI64[0], 4), SAFE_HEAP_STORE((buf + 44 >> 2) * 4, tempI64[1], 4);\n  SAFE_HEAP_STORE((buf + 48 >> 2) * 4, 4096, 4);\n  SAFE_HEAP_STORE((buf + 52 >> 2) * 4, stat.blocks, 4);\n  tempI64 = [ Math.floor(stat.atime.getTime() / 1e3) >>> 0, (tempDouble = Math.floor(stat.atime.getTime() / 1e3), \n  +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], \n  SAFE_HEAP_STORE((buf + 56 >> 2) * 4, tempI64[0], 4), SAFE_HEAP_STORE((buf + 60 >> 2) * 4, tempI64[1], 4);\n  SAFE_HEAP_STORE((buf + 64 >> 2) * 4, 0, 4);\n  tempI64 = [ Math.floor(stat.mtime.getTime() / 1e3) >>> 0, (tempDouble = Math.floor(stat.mtime.getTime() / 1e3), \n  +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], \n  SAFE_HEAP_STORE((buf + 72 >> 2) * 4, tempI64[0], 4), SAFE_HEAP_STORE((buf + 76 >> 2) * 4, tempI64[1], 4);\n  SAFE_HEAP_STORE((buf + 80 >> 2) * 4, 0, 4);\n  tempI64 = [ Math.floor(stat.ctime.getTime() / 1e3) >>> 0, (tempDouble = Math.floor(stat.ctime.getTime() / 1e3), \n  +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], \n  SAFE_HEAP_STORE((buf + 88 >> 2) * 4, tempI64[0], 4), SAFE_HEAP_STORE((buf + 92 >> 2) * 4, tempI64[1], 4);\n  SAFE_HEAP_STORE((buf + 96 >> 2) * 4, 0, 4);\n  tempI64 = [ stat.ino >>> 0, (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], \n  SAFE_HEAP_STORE((buf + 104 >> 2) * 4, tempI64[0], 4), SAFE_HEAP_STORE((buf + 108 >> 2) * 4, tempI64[1], 4);\n  return 0;\n },\n doMsync: function(addr, stream, len, flags, offset) {\n  var buffer = HEAPU8.slice(addr, addr + len);\n  FS.msync(stream, buffer, offset, len, flags);\n },\n varargs: undefined,\n get: function() {\n  assert(SYSCALLS.varargs != undefined);\n  SYSCALLS.varargs += 4;\n  var ret = SAFE_HEAP_LOAD((SYSCALLS.varargs - 4 >> 2) * 4, 4, 0);\n  return ret;\n },\n getStr: function(ptr) {\n  var ret = UTF8ToString(ptr);\n  return ret;\n },\n getStreamFromFD: function(fd) {\n  var stream = FS.getStream(fd);\n  if (!stream) throw new FS.ErrnoError(8);\n  return stream;\n }\n};\n\nfunction ___syscall_fcntl64(fd, cmd, varargs) {\n SYSCALLS.varargs = varargs;\n try {\n  var stream = SYSCALLS.getStreamFromFD(fd);\n  switch (cmd) {\n  case 0:\n   {\n    var arg = SYSCALLS.get();\n    if (arg < 0) {\n     return -28;\n    }\n    var newStream;\n    newStream = FS.createStream(stream, arg);\n    return newStream.fd;\n   }\n\n  case 1:\n  case 2:\n   return 0;\n\n  case 3:\n   return stream.flags;\n\n  case 4:\n   {\n    var arg = SYSCALLS.get();\n    stream.flags |= arg;\n    return 0;\n   }\n\n  case 5:\n   {\n    var arg = SYSCALLS.get();\n    var offset = 0;\n    SAFE_HEAP_STORE((arg + offset >> 1) * 2, 2, 2);\n    return 0;\n   }\n\n  case 6:\n  case 7:\n   return 0;\n\n  case 16:\n  case 8:\n   return -28;\n\n  case 9:\n   setErrNo(28);\n   return -1;\n\n  default:\n   {\n    return -28;\n   }\n  }\n } catch (e) {\n  if (typeof FS == \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\n  return -e.errno;\n }\n}\n\nfunction ___syscall_ioctl(fd, op, varargs) {\n SYSCALLS.varargs = varargs;\n try {\n  var stream = SYSCALLS.getStreamFromFD(fd);\n  switch (op) {\n  case 21509:\n  case 21505:\n   {\n    if (!stream.tty) return -59;\n    return 0;\n   }\n\n  case 21510:\n  case 21511:\n  case 21512:\n  case 21506:\n  case 21507:\n  case 21508:\n   {\n    if (!stream.tty) return -59;\n    return 0;\n   }\n\n  case 21519:\n   {\n    if (!stream.tty) return -59;\n    var argp = SYSCALLS.get();\n    SAFE_HEAP_STORE((argp >> 2) * 4, 0, 4);\n    return 0;\n   }\n\n  case 21520:\n   {\n    if (!stream.tty) return -59;\n    return -28;\n   }\n\n  case 21531:\n   {\n    var argp = SYSCALLS.get();\n    return FS.ioctl(stream, op, argp);\n   }\n\n  case 21523:\n   {\n    if (!stream.tty) return -59;\n    return 0;\n   }\n\n  case 21524:\n   {\n    if (!stream.tty) return -59;\n    return 0;\n   }\n\n  default:\n   return -28;\n  }\n } catch (e) {\n  if (typeof FS == \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\n  return -e.errno;\n }\n}\n\nfunction ___syscall_openat(dirfd, path, flags, varargs) {\n SYSCALLS.varargs = varargs;\n try {\n  path = SYSCALLS.getStr(path);\n  path = SYSCALLS.calculateAt(dirfd, path);\n  var mode = varargs ? SYSCALLS.get() : 0;\n  return FS.open(path, flags, mode).fd;\n } catch (e) {\n  if (typeof FS == \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\n  return -e.errno;\n }\n}\n\nvar structRegistrations = {};\n\nfunction runDestructors(destructors) {\n while (destructors.length) {\n  var ptr = destructors.pop();\n  var del = destructors.pop();\n  del(ptr);\n }\n}\n\nfunction simpleReadValueFromPointer(pointer) {\n return this[\"fromWireType\"](SAFE_HEAP_LOAD((pointer >> 2) * 4, 4, 0));\n}\n\nvar awaitingDependencies = {};\n\nvar registeredTypes = {};\n\nvar typeDependencies = {};\n\nvar char_0 = 48;\n\nvar char_9 = 57;\n\nfunction makeLegalFunctionName(name) {\n if (undefined === name) {\n  return \"_unknown\";\n }\n name = name.replace(/[^a-zA-Z0-9_]/g, \"$\");\n var f = name.charCodeAt(0);\n if (f >= char_0 && f <= char_9) {\n  return \"_\" + name;\n }\n return name;\n}\n\nfunction createNamedFunction(name, body) {\n name = makeLegalFunctionName(name);\n return new Function(\"body\", \"return function \" + name + \"() {\\n\" + '    \"use strict\";' + \"    return body.apply(this, arguments);\\n\" + \"};\\n\")(body);\n}\n\nfunction extendError(baseErrorType, errorName) {\n var errorClass = createNamedFunction(errorName, function(message) {\n  this.name = errorName;\n  this.message = message;\n  var stack = new Error(message).stack;\n  if (stack !== undefined) {\n   this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\n  }\n });\n errorClass.prototype = Object.create(baseErrorType.prototype);\n errorClass.prototype.constructor = errorClass;\n errorClass.prototype.toString = function() {\n  if (this.message === undefined) {\n   return this.name;\n  } else {\n   return this.name + \": \" + this.message;\n  }\n };\n return errorClass;\n}\n\nvar InternalError = undefined;\n\nfunction throwInternalError(message) {\n throw new InternalError(message);\n}\n\nfunction whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n myTypes.forEach(function(type) {\n  typeDependencies[type] = dependentTypes;\n });\n function onComplete(typeConverters) {\n  var myTypeConverters = getTypeConverters(typeConverters);\n  if (myTypeConverters.length !== myTypes.length) {\n   throwInternalError(\"Mismatched type converter count\");\n  }\n  for (var i = 0; i < myTypes.length; ++i) {\n   registerType(myTypes[i], myTypeConverters[i]);\n  }\n }\n var typeConverters = new Array(dependentTypes.length);\n var unregisteredTypes = [];\n var registered = 0;\n dependentTypes.forEach((dt, i) => {\n  if (registeredTypes.hasOwnProperty(dt)) {\n   typeConverters[i] = registeredTypes[dt];\n  } else {\n   unregisteredTypes.push(dt);\n   if (!awaitingDependencies.hasOwnProperty(dt)) {\n    awaitingDependencies[dt] = [];\n   }\n   awaitingDependencies[dt].push(() => {\n    typeConverters[i] = registeredTypes[dt];\n    ++registered;\n    if (registered === unregisteredTypes.length) {\n     onComplete(typeConverters);\n    }\n   });\n  }\n });\n if (0 === unregisteredTypes.length) {\n  onComplete(typeConverters);\n }\n}\n\nfunction __embind_finalize_value_object(structType) {\n var reg = structRegistrations[structType];\n delete structRegistrations[structType];\n var rawConstructor = reg.rawConstructor;\n var rawDestructor = reg.rawDestructor;\n var fieldRecords = reg.fields;\n var fieldTypes = fieldRecords.map(field => field.getterReturnType).concat(fieldRecords.map(field => field.setterArgumentType));\n whenDependentTypesAreResolved([ structType ], fieldTypes, fieldTypes => {\n  var fields = {};\n  fieldRecords.forEach((field, i) => {\n   var fieldName = field.fieldName;\n   var getterReturnType = fieldTypes[i];\n   var getter = field.getter;\n   var getterContext = field.getterContext;\n   var setterArgumentType = fieldTypes[i + fieldRecords.length];\n   var setter = field.setter;\n   var setterContext = field.setterContext;\n   fields[fieldName] = {\n    read: ptr => {\n     return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n    },\n    write: (ptr, o) => {\n     var destructors = [];\n     setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n     runDestructors(destructors);\n    }\n   };\n  });\n  return [ {\n   name: reg.name,\n   \"fromWireType\": function(ptr) {\n    var rv = {};\n    for (var i in fields) {\n     rv[i] = fields[i].read(ptr);\n    }\n    rawDestructor(ptr);\n    return rv;\n   },\n   \"toWireType\": function(destructors, o) {\n    for (var fieldName in fields) {\n     if (!(fieldName in o)) {\n      throw new TypeError('Missing field:  \"' + fieldName + '\"');\n     }\n    }\n    var ptr = rawConstructor();\n    for (fieldName in fields) {\n     fields[fieldName].write(ptr, o[fieldName]);\n    }\n    if (destructors !== null) {\n     destructors.push(rawDestructor, ptr);\n    }\n    return ptr;\n   },\n   \"argPackAdvance\": 8,\n   \"readValueFromPointer\": simpleReadValueFromPointer,\n   destructorFunction: rawDestructor\n  } ];\n });\n}\n\nfunction __embind_register_bigint(primitiveType, name, size, minRange, maxRange) {}\n\nfunction getShiftFromSize(size) {\n switch (size) {\n case 1:\n  return 0;\n\n case 2:\n  return 1;\n\n case 4:\n  return 2;\n\n case 8:\n  return 3;\n\n default:\n  throw new TypeError(\"Unknown type size: \" + size);\n }\n}\n\nfunction embind_init_charCodes() {\n var codes = new Array(256);\n for (var i = 0; i < 256; ++i) {\n  codes[i] = String.fromCharCode(i);\n }\n embind_charCodes = codes;\n}\n\nvar embind_charCodes = undefined;\n\nfunction readLatin1String(ptr) {\n var ret = \"\";\n var c = ptr;\n while (SAFE_HEAP_LOAD(c, 1, 1)) {\n  ret += embind_charCodes[SAFE_HEAP_LOAD(c++, 1, 1)];\n }\n return ret;\n}\n\nvar BindingError = undefined;\n\nfunction throwBindingError(message) {\n throw new BindingError(message);\n}\n\nfunction registerType(rawType, registeredInstance, options = {}) {\n if (!(\"argPackAdvance\" in registeredInstance)) {\n  throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n }\n var name = registeredInstance.name;\n if (!rawType) {\n  throwBindingError('type \"' + name + '\" must have a positive integer typeid pointer');\n }\n if (registeredTypes.hasOwnProperty(rawType)) {\n  if (options.ignoreDuplicateRegistrations) {\n   return;\n  } else {\n   throwBindingError(\"Cannot register type '\" + name + \"' twice\");\n  }\n }\n registeredTypes[rawType] = registeredInstance;\n delete typeDependencies[rawType];\n if (awaitingDependencies.hasOwnProperty(rawType)) {\n  var callbacks = awaitingDependencies[rawType];\n  delete awaitingDependencies[rawType];\n  callbacks.forEach(cb => cb());\n }\n}\n\nfunction __embind_register_bool(rawType, name, size, trueValue, falseValue) {\n var shift = getShiftFromSize(size);\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(wt) {\n   return !!wt;\n  },\n  \"toWireType\": function(destructors, o) {\n   return o ? trueValue : falseValue;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": function(pointer) {\n   var heap;\n   if (size === 1) {\n    heap = HEAP8;\n   } else if (size === 2) {\n    heap = HEAP16;\n   } else if (size === 4) {\n    heap = HEAP32;\n   } else {\n    throw new TypeError(\"Unknown boolean type size: \" + name);\n   }\n   return this[\"fromWireType\"](heap[pointer >> shift]);\n  },\n  destructorFunction: null\n });\n}\n\nfunction ClassHandle_isAliasOf(other) {\n if (!(this instanceof ClassHandle)) {\n  return false;\n }\n if (!(other instanceof ClassHandle)) {\n  return false;\n }\n var leftClass = this.$$.ptrType.registeredClass;\n var left = this.$$.ptr;\n var rightClass = other.$$.ptrType.registeredClass;\n var right = other.$$.ptr;\n while (leftClass.baseClass) {\n  left = leftClass.upcast(left);\n  leftClass = leftClass.baseClass;\n }\n while (rightClass.baseClass) {\n  right = rightClass.upcast(right);\n  rightClass = rightClass.baseClass;\n }\n return leftClass === rightClass && left === right;\n}\n\nfunction shallowCopyInternalPointer(o) {\n return {\n  count: o.count,\n  deleteScheduled: o.deleteScheduled,\n  preservePointerOnDelete: o.preservePointerOnDelete,\n  ptr: o.ptr,\n  ptrType: o.ptrType,\n  smartPtr: o.smartPtr,\n  smartPtrType: o.smartPtrType\n };\n}\n\nfunction throwInstanceAlreadyDeleted(obj) {\n function getInstanceTypeName(handle) {\n  return handle.$$.ptrType.registeredClass.name;\n }\n throwBindingError(getInstanceTypeName(obj) + \" instance already deleted\");\n}\n\nvar finalizationRegistry = false;\n\nfunction detachFinalizer(handle) {}\n\nfunction runDestructor($$) {\n if ($$.smartPtr) {\n  $$.smartPtrType.rawDestructor($$.smartPtr);\n } else {\n  $$.ptrType.registeredClass.rawDestructor($$.ptr);\n }\n}\n\nfunction releaseClassHandle($$) {\n $$.count.value -= 1;\n var toDelete = 0 === $$.count.value;\n if (toDelete) {\n  runDestructor($$);\n }\n}\n\nfunction downcastPointer(ptr, ptrClass, desiredClass) {\n if (ptrClass === desiredClass) {\n  return ptr;\n }\n if (undefined === desiredClass.baseClass) {\n  return null;\n }\n var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n if (rv === null) {\n  return null;\n }\n return desiredClass.downcast(rv);\n}\n\nvar registeredPointers = {};\n\nfunction getInheritedInstanceCount() {\n return Object.keys(registeredInstances).length;\n}\n\nfunction getLiveInheritedInstances() {\n var rv = [];\n for (var k in registeredInstances) {\n  if (registeredInstances.hasOwnProperty(k)) {\n   rv.push(registeredInstances[k]);\n  }\n }\n return rv;\n}\n\nvar deletionQueue = [];\n\nfunction flushPendingDeletes() {\n while (deletionQueue.length) {\n  var obj = deletionQueue.pop();\n  obj.$$.deleteScheduled = false;\n  obj[\"delete\"]();\n }\n}\n\nvar delayFunction = undefined;\n\nfunction setDelayFunction(fn) {\n delayFunction = fn;\n if (deletionQueue.length && delayFunction) {\n  delayFunction(flushPendingDeletes);\n }\n}\n\nfunction init_embind() {\n Module[\"getInheritedInstanceCount\"] = getInheritedInstanceCount;\n Module[\"getLiveInheritedInstances\"] = getLiveInheritedInstances;\n Module[\"flushPendingDeletes\"] = flushPendingDeletes;\n Module[\"setDelayFunction\"] = setDelayFunction;\n}\n\nvar registeredInstances = {};\n\nfunction getBasestPointer(class_, ptr) {\n if (ptr === undefined) {\n  throwBindingError(\"ptr should not be undefined\");\n }\n while (class_.baseClass) {\n  ptr = class_.upcast(ptr);\n  class_ = class_.baseClass;\n }\n return ptr;\n}\n\nfunction getInheritedInstance(class_, ptr) {\n ptr = getBasestPointer(class_, ptr);\n return registeredInstances[ptr];\n}\n\nfunction makeClassHandle(prototype, record) {\n if (!record.ptrType || !record.ptr) {\n  throwInternalError(\"makeClassHandle requires ptr and ptrType\");\n }\n var hasSmartPtrType = !!record.smartPtrType;\n var hasSmartPtr = !!record.smartPtr;\n if (hasSmartPtrType !== hasSmartPtr) {\n  throwInternalError(\"Both smartPtrType and smartPtr must be specified\");\n }\n record.count = {\n  value: 1\n };\n return attachFinalizer(Object.create(prototype, {\n  $$: {\n   value: record\n  }\n }));\n}\n\nfunction RegisteredPointer_fromWireType(ptr) {\n var rawPointer = this.getPointee(ptr);\n if (!rawPointer) {\n  this.destructor(ptr);\n  return null;\n }\n var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n if (undefined !== registeredInstance) {\n  if (0 === registeredInstance.$$.count.value) {\n   registeredInstance.$$.ptr = rawPointer;\n   registeredInstance.$$.smartPtr = ptr;\n   return registeredInstance[\"clone\"]();\n  } else {\n   var rv = registeredInstance[\"clone\"]();\n   this.destructor(ptr);\n   return rv;\n  }\n }\n function makeDefaultHandle() {\n  if (this.isSmartPointer) {\n   return makeClassHandle(this.registeredClass.instancePrototype, {\n    ptrType: this.pointeeType,\n    ptr: rawPointer,\n    smartPtrType: this,\n    smartPtr: ptr\n   });\n  } else {\n   return makeClassHandle(this.registeredClass.instancePrototype, {\n    ptrType: this,\n    ptr: ptr\n   });\n  }\n }\n var actualType = this.registeredClass.getActualType(rawPointer);\n var registeredPointerRecord = registeredPointers[actualType];\n if (!registeredPointerRecord) {\n  return makeDefaultHandle.call(this);\n }\n var toType;\n if (this.isConst) {\n  toType = registeredPointerRecord.constPointerType;\n } else {\n  toType = registeredPointerRecord.pointerType;\n }\n var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\n if (dp === null) {\n  return makeDefaultHandle.call(this);\n }\n if (this.isSmartPointer) {\n  return makeClassHandle(toType.registeredClass.instancePrototype, {\n   ptrType: toType,\n   ptr: dp,\n   smartPtrType: this,\n   smartPtr: ptr\n  });\n } else {\n  return makeClassHandle(toType.registeredClass.instancePrototype, {\n   ptrType: toType,\n   ptr: dp\n  });\n }\n}\n\nfunction attachFinalizer(handle) {\n if (\"undefined\" === typeof FinalizationRegistry) {\n  attachFinalizer = handle => handle;\n  return handle;\n }\n finalizationRegistry = new FinalizationRegistry(info => {\n  console.warn(info.leakWarning.stack.replace(/^Error: /, \"\"));\n  releaseClassHandle(info.$$);\n });\n attachFinalizer = handle => {\n  var $$ = handle.$$;\n  var hasSmartPtr = !!$$.smartPtr;\n  if (hasSmartPtr) {\n   var info = {\n    $$: $$\n   };\n   var cls = $$.ptrType.registeredClass;\n   info.leakWarning = new Error(\"Embind found a leaked C++ instance \" + cls.name + \" <0x\" + $$.ptr.toString(16) + \">.\\n\" + \"We'll free it automatically in this case, but this functionality is not reliable across various environments.\\n\" + \"Make sure to invoke .delete() manually once you're done with the instance instead.\\n\" + \"Originally allocated\");\n   if (\"captureStackTrace\" in Error) {\n    Error.captureStackTrace(info.leakWarning, RegisteredPointer_fromWireType);\n   }\n   finalizationRegistry.register(handle, info, handle);\n  }\n  return handle;\n };\n detachFinalizer = handle => finalizationRegistry.unregister(handle);\n return attachFinalizer(handle);\n}\n\nfunction ClassHandle_clone() {\n if (!this.$$.ptr) {\n  throwInstanceAlreadyDeleted(this);\n }\n if (this.$$.preservePointerOnDelete) {\n  this.$$.count.value += 1;\n  return this;\n } else {\n  var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), {\n   $$: {\n    value: shallowCopyInternalPointer(this.$$)\n   }\n  }));\n  clone.$$.count.value += 1;\n  clone.$$.deleteScheduled = false;\n  return clone;\n }\n}\n\nfunction ClassHandle_delete() {\n if (!this.$$.ptr) {\n  throwInstanceAlreadyDeleted(this);\n }\n if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n  throwBindingError(\"Object already scheduled for deletion\");\n }\n detachFinalizer(this);\n releaseClassHandle(this.$$);\n if (!this.$$.preservePointerOnDelete) {\n  this.$$.smartPtr = undefined;\n  this.$$.ptr = undefined;\n }\n}\n\nfunction ClassHandle_isDeleted() {\n return !this.$$.ptr;\n}\n\nfunction ClassHandle_deleteLater() {\n if (!this.$$.ptr) {\n  throwInstanceAlreadyDeleted(this);\n }\n if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n  throwBindingError(\"Object already scheduled for deletion\");\n }\n deletionQueue.push(this);\n if (deletionQueue.length === 1 && delayFunction) {\n  delayFunction(flushPendingDeletes);\n }\n this.$$.deleteScheduled = true;\n return this;\n}\n\nfunction init_ClassHandle() {\n ClassHandle.prototype[\"isAliasOf\"] = ClassHandle_isAliasOf;\n ClassHandle.prototype[\"clone\"] = ClassHandle_clone;\n ClassHandle.prototype[\"delete\"] = ClassHandle_delete;\n ClassHandle.prototype[\"isDeleted\"] = ClassHandle_isDeleted;\n ClassHandle.prototype[\"deleteLater\"] = ClassHandle_deleteLater;\n}\n\nfunction ClassHandle() {}\n\nfunction ensureOverloadTable(proto, methodName, humanName) {\n if (undefined === proto[methodName].overloadTable) {\n  var prevFunc = proto[methodName];\n  proto[methodName] = function() {\n   if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n    throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\n   }\n   return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n  };\n  proto[methodName].overloadTable = [];\n  proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n }\n}\n\nfunction exposePublicSymbol(name, value, numArguments) {\n if (Module.hasOwnProperty(name)) {\n  if (undefined === numArguments || undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments]) {\n   throwBindingError(\"Cannot register public name '\" + name + \"' twice\");\n  }\n  ensureOverloadTable(Module, name, name);\n  if (Module.hasOwnProperty(numArguments)) {\n   throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\n  }\n  Module[name].overloadTable[numArguments] = value;\n } else {\n  Module[name] = value;\n  if (undefined !== numArguments) {\n   Module[name].numArguments = numArguments;\n  }\n }\n}\n\nfunction RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {\n this.name = name;\n this.constructor = constructor;\n this.instancePrototype = instancePrototype;\n this.rawDestructor = rawDestructor;\n this.baseClass = baseClass;\n this.getActualType = getActualType;\n this.upcast = upcast;\n this.downcast = downcast;\n this.pureVirtualFunctions = [];\n}\n\nfunction upcastPointer(ptr, ptrClass, desiredClass) {\n while (ptrClass !== desiredClass) {\n  if (!ptrClass.upcast) {\n   throwBindingError(\"Expected null or instance of \" + desiredClass.name + \", got an instance of \" + ptrClass.name);\n  }\n  ptr = ptrClass.upcast(ptr);\n  ptrClass = ptrClass.baseClass;\n }\n return ptr;\n}\n\nfunction constNoSmartPtrRawPointerToWireType(destructors, handle) {\n if (handle === null) {\n  if (this.isReference) {\n   throwBindingError(\"null is not a valid \" + this.name);\n  }\n  return 0;\n }\n if (!handle.$$) {\n  throwBindingError('Cannot pass \"' + embindRepr(handle) + '\" as a ' + this.name);\n }\n if (!handle.$$.ptr) {\n  throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n }\n var handleClass = handle.$$.ptrType.registeredClass;\n var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n return ptr;\n}\n\nfunction genericPointerToWireType(destructors, handle) {\n var ptr;\n if (handle === null) {\n  if (this.isReference) {\n   throwBindingError(\"null is not a valid \" + this.name);\n  }\n  if (this.isSmartPointer) {\n   ptr = this.rawConstructor();\n   if (destructors !== null) {\n    destructors.push(this.rawDestructor, ptr);\n   }\n   return ptr;\n  } else {\n   return 0;\n  }\n }\n if (!handle.$$) {\n  throwBindingError('Cannot pass \"' + embindRepr(handle) + '\" as a ' + this.name);\n }\n if (!handle.$$.ptr) {\n  throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n }\n if (!this.isConst && handle.$$.ptrType.isConst) {\n  throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n }\n var handleClass = handle.$$.ptrType.registeredClass;\n ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n if (this.isSmartPointer) {\n  if (undefined === handle.$$.smartPtr) {\n   throwBindingError(\"Passing raw pointer to smart pointer is illegal\");\n  }\n  switch (this.sharingPolicy) {\n  case 0:\n   if (handle.$$.smartPtrType === this) {\n    ptr = handle.$$.smartPtr;\n   } else {\n    throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n   }\n   break;\n\n  case 1:\n   ptr = handle.$$.smartPtr;\n   break;\n\n  case 2:\n   if (handle.$$.smartPtrType === this) {\n    ptr = handle.$$.smartPtr;\n   } else {\n    var clonedHandle = handle[\"clone\"]();\n    ptr = this.rawShare(ptr, Emval.toHandle(function() {\n     clonedHandle[\"delete\"]();\n    }));\n    if (destructors !== null) {\n     destructors.push(this.rawDestructor, ptr);\n    }\n   }\n   break;\n\n  default:\n   throwBindingError(\"Unsupporting sharing policy\");\n  }\n }\n return ptr;\n}\n\nfunction nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n if (handle === null) {\n  if (this.isReference) {\n   throwBindingError(\"null is not a valid \" + this.name);\n  }\n  return 0;\n }\n if (!handle.$$) {\n  throwBindingError('Cannot pass \"' + embindRepr(handle) + '\" as a ' + this.name);\n }\n if (!handle.$$.ptr) {\n  throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n }\n if (handle.$$.ptrType.isConst) {\n  throwBindingError(\"Cannot convert argument of type \" + handle.$$.ptrType.name + \" to parameter type \" + this.name);\n }\n var handleClass = handle.$$.ptrType.registeredClass;\n var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n return ptr;\n}\n\nfunction RegisteredPointer_getPointee(ptr) {\n if (this.rawGetPointee) {\n  ptr = this.rawGetPointee(ptr);\n }\n return ptr;\n}\n\nfunction RegisteredPointer_destructor(ptr) {\n if (this.rawDestructor) {\n  this.rawDestructor(ptr);\n }\n}\n\nfunction RegisteredPointer_deleteObject(handle) {\n if (handle !== null) {\n  handle[\"delete\"]();\n }\n}\n\nfunction init_RegisteredPointer() {\n RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;\n RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;\n RegisteredPointer.prototype[\"argPackAdvance\"] = 8;\n RegisteredPointer.prototype[\"readValueFromPointer\"] = simpleReadValueFromPointer;\n RegisteredPointer.prototype[\"deleteObject\"] = RegisteredPointer_deleteObject;\n RegisteredPointer.prototype[\"fromWireType\"] = RegisteredPointer_fromWireType;\n}\n\nfunction RegisteredPointer(name, registeredClass, isReference, isConst, isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {\n this.name = name;\n this.registeredClass = registeredClass;\n this.isReference = isReference;\n this.isConst = isConst;\n this.isSmartPointer = isSmartPointer;\n this.pointeeType = pointeeType;\n this.sharingPolicy = sharingPolicy;\n this.rawGetPointee = rawGetPointee;\n this.rawConstructor = rawConstructor;\n this.rawShare = rawShare;\n this.rawDestructor = rawDestructor;\n if (!isSmartPointer && registeredClass.baseClass === undefined) {\n  if (isConst) {\n   this[\"toWireType\"] = constNoSmartPtrRawPointerToWireType;\n   this.destructorFunction = null;\n  } else {\n   this[\"toWireType\"] = nonConstNoSmartPtrRawPointerToWireType;\n   this.destructorFunction = null;\n  }\n } else {\n  this[\"toWireType\"] = genericPointerToWireType;\n }\n}\n\nfunction replacePublicSymbol(name, value, numArguments) {\n if (!Module.hasOwnProperty(name)) {\n  throwInternalError(\"Replacing nonexistant public symbol\");\n }\n if (undefined !== Module[name].overloadTable && undefined !== numArguments) {\n  Module[name].overloadTable[numArguments] = value;\n } else {\n  Module[name] = value;\n  Module[name].argCount = numArguments;\n }\n}\n\nfunction dynCallLegacy(sig, ptr, args) {\n assert(\"dynCall_\" + sig in Module, \"bad function pointer type - no table for sig '\" + sig + \"'\");\n if (args && args.length) {\n  assert(args.length === sig.substring(1).replace(/j/g, \"--\").length);\n } else {\n  assert(sig.length == 1);\n }\n var f = Module[\"dynCall_\" + sig];\n return args && args.length ? f.apply(null, [ ptr ].concat(args)) : f.call(null, ptr);\n}\n\nvar wasmTableMirror = [];\n\nfunction getWasmTableEntry(funcPtr) {\n var func = wasmTableMirror[funcPtr];\n if (!func) {\n  if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n  wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n }\n assert(wasmTable.get(funcPtr) == func, \"JavaScript-side Wasm function table mirror is out of date!\");\n return func;\n}\n\nfunction dynCall(sig, ptr, args) {\n return dynCallLegacy(sig, ptr, args);\n}\n\nfunction getDynCaller(sig, ptr) {\n var argCache = [];\n return function() {\n  argCache.length = 0;\n  Object.assign(argCache, arguments);\n  return dynCall(sig, ptr, argCache);\n };\n}\n\nfunction embind__requireFunction(signature, rawFunction) {\n signature = readLatin1String(signature);\n function makeDynCaller() {\n  return getDynCaller(signature, rawFunction);\n }\n var fp = makeDynCaller();\n if (typeof fp != \"function\") {\n  throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\n }\n return fp;\n}\n\nvar UnboundTypeError = undefined;\n\nfunction getTypeName(type) {\n var ptr = ___getTypeName(type);\n var rv = readLatin1String(ptr);\n _free(ptr);\n return rv;\n}\n\nfunction throwUnboundTypeError(message, types) {\n var unboundTypes = [];\n var seen = {};\n function visit(type) {\n  if (seen[type]) {\n   return;\n  }\n  if (registeredTypes[type]) {\n   return;\n  }\n  if (typeDependencies[type]) {\n   typeDependencies[type].forEach(visit);\n   return;\n  }\n  unboundTypes.push(type);\n  seen[type] = true;\n }\n types.forEach(visit);\n throw new UnboundTypeError(message + \": \" + unboundTypes.map(getTypeName).join([ \", \" ]));\n}\n\nfunction __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name, destructorSignature, rawDestructor) {\n name = readLatin1String(name);\n getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n if (upcast) {\n  upcast = embind__requireFunction(upcastSignature, upcast);\n }\n if (downcast) {\n  downcast = embind__requireFunction(downcastSignature, downcast);\n }\n rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n var legalFunctionName = makeLegalFunctionName(name);\n exposePublicSymbol(legalFunctionName, function() {\n  throwUnboundTypeError(\"Cannot construct \" + name + \" due to unbound types\", [ baseClassRawType ]);\n });\n whenDependentTypesAreResolved([ rawType, rawPointerType, rawConstPointerType ], baseClassRawType ? [ baseClassRawType ] : [], function(base) {\n  base = base[0];\n  var baseClass;\n  var basePrototype;\n  if (baseClassRawType) {\n   baseClass = base.registeredClass;\n   basePrototype = baseClass.instancePrototype;\n  } else {\n   basePrototype = ClassHandle.prototype;\n  }\n  var constructor = createNamedFunction(legalFunctionName, function() {\n   if (Object.getPrototypeOf(this) !== instancePrototype) {\n    throw new BindingError(\"Use 'new' to construct \" + name);\n   }\n   if (undefined === registeredClass.constructor_body) {\n    throw new BindingError(name + \" has no accessible constructor\");\n   }\n   var body = registeredClass.constructor_body[arguments.length];\n   if (undefined === body) {\n    throw new BindingError(\"Tried to invoke ctor of \" + name + \" with invalid number of parameters (\" + arguments.length + \") - expected (\" + Object.keys(registeredClass.constructor_body).toString() + \") parameters instead!\");\n   }\n   return body.apply(this, arguments);\n  });\n  var instancePrototype = Object.create(basePrototype, {\n   constructor: {\n    value: constructor\n   }\n  });\n  constructor.prototype = instancePrototype;\n  var registeredClass = new RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);\n  var referenceConverter = new RegisteredPointer(name, registeredClass, true, false, false);\n  var pointerConverter = new RegisteredPointer(name + \"*\", registeredClass, false, false, false);\n  var constPointerConverter = new RegisteredPointer(name + \" const*\", registeredClass, false, true, false);\n  registeredPointers[rawType] = {\n   pointerType: pointerConverter,\n   constPointerType: constPointerConverter\n  };\n  replacePublicSymbol(legalFunctionName, constructor);\n  return [ referenceConverter, pointerConverter, constPointerConverter ];\n });\n}\n\nfunction new_(constructor, argumentList) {\n if (!(constructor instanceof Function)) {\n  throw new TypeError(\"new_ called with constructor type \" + typeof constructor + \" which is not a function\");\n }\n var dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function() {});\n dummy.prototype = constructor.prototype;\n var obj = new dummy();\n var r = constructor.apply(obj, argumentList);\n return r instanceof Object ? r : obj;\n}\n\nfunction runAndAbortIfError(func) {\n try {\n  return func();\n } catch (e) {\n  abort(e);\n }\n}\n\nfunction callUserCallback(func) {\n if (ABORT) {\n  err(\"user callback triggered after runtime exited or application aborted.  Ignoring.\");\n  return;\n }\n try {\n  func();\n } catch (e) {\n  handleException(e);\n }\n}\n\nfunction sigToWasmTypes(sig) {\n var typeNames = {\n  \"i\": \"i32\",\n  \"j\": \"i64\",\n  \"f\": \"f32\",\n  \"d\": \"f64\",\n  \"p\": \"i32\"\n };\n var type = {\n  parameters: [],\n  results: sig[0] == \"v\" ? [] : [ typeNames[sig[0]] ]\n };\n for (var i = 1; i < sig.length; ++i) {\n  assert(sig[i] in typeNames, \"invalid signature char: \" + sig[i]);\n  type.parameters.push(typeNames[sig[i]]);\n }\n return type;\n}\n\nfunction runtimeKeepalivePush() {}\n\nfunction runtimeKeepalivePop() {}\n\nvar Asyncify = {\n State: {\n  Normal: 0,\n  Unwinding: 1,\n  Rewinding: 2,\n  Disabled: 3\n },\n state: 0,\n StackSize: 4096,\n currData: null,\n handleSleepReturnValue: 0,\n exportCallStack: [],\n callStackNameToId: {},\n callStackIdToName: {},\n callStackId: 0,\n asyncPromiseHandlers: null,\n sleepCallbacks: [],\n getCallStackId: function(funcName) {\n  var id = Asyncify.callStackNameToId[funcName];\n  if (id === undefined) {\n   id = Asyncify.callStackId++;\n   Asyncify.callStackNameToId[funcName] = id;\n   Asyncify.callStackIdToName[id] = funcName;\n  }\n  return id;\n },\n instrumentWasmImports: function(imports) {\n  var ASYNCIFY_IMPORTS = [ \"env.invoke_*\", \"env.emscripten_sleep\", \"env.emscripten_wget\", \"env.emscripten_wget_data\", \"env.emscripten_idb_load\", \"env.emscripten_idb_store\", \"env.emscripten_idb_delete\", \"env.emscripten_idb_exists\", \"env.emscripten_idb_load_blob\", \"env.emscripten_idb_store_blob\", \"env.SDL_Delay\", \"env.emscripten_scan_registers\", \"env.emscripten_lazy_load_code\", \"env.emscripten_fiber_swap\", \"wasi_snapshot_preview1.fd_sync\", \"env.__wasi_fd_sync\", \"env._emval_await\", \"env._dlopen_js\", \"env.__asyncjs__*\" ].map(x => x.split(\".\")[1]);\n  for (var x in imports) {\n   (function(x) {\n    var original = imports[x];\n    var sig = original.sig;\n    if (typeof original == \"function\") {\n     var isAsyncifyImport = ASYNCIFY_IMPORTS.indexOf(x) >= 0 || x.startsWith(\"__asyncjs__\");\n     imports[x] = function() {\n      var originalAsyncifyState = Asyncify.state;\n      try {\n       return original.apply(null, arguments);\n      } finally {\n       var changedToDisabled = originalAsyncifyState === Asyncify.State.Normal && Asyncify.state === Asyncify.State.Disabled;\n       var ignoredInvoke = x.startsWith(\"invoke_\") && true;\n       if (Asyncify.state !== originalAsyncifyState && !isAsyncifyImport && !changedToDisabled && !ignoredInvoke) {\n        throw new Error(\"import \" + x + \" was not in ASYNCIFY_IMPORTS, but changed the state\");\n       }\n      }\n     };\n    }\n   })(x);\n  }\n },\n instrumentWasmExports: function(exports) {\n  var ret = {};\n  for (var x in exports) {\n   (function(x) {\n    var original = exports[x];\n    if (typeof original == \"function\") {\n     ret[x] = function() {\n      Asyncify.exportCallStack.push(x);\n      try {\n       return original.apply(null, arguments);\n      } finally {\n       if (!ABORT) {\n        var y = Asyncify.exportCallStack.pop();\n        assert(y === x);\n        Asyncify.maybeStopUnwind();\n       }\n      }\n     };\n    } else {\n     ret[x] = original;\n    }\n   })(x);\n  }\n  return ret;\n },\n maybeStopUnwind: function() {\n  if (Asyncify.currData && Asyncify.state === Asyncify.State.Unwinding && Asyncify.exportCallStack.length === 0) {\n   Asyncify.state = Asyncify.State.Normal;\n   runAndAbortIfError(_asyncify_stop_unwind);\n   if (typeof Fibers != \"undefined\") {\n    Fibers.trampoline();\n   }\n  }\n },\n whenDone: function() {\n  assert(Asyncify.currData, \"Tried to wait for an async operation when none is in progress.\");\n  assert(!Asyncify.asyncPromiseHandlers, \"Cannot have multiple async operations in flight at once\");\n  return new Promise((resolve, reject) => {\n   Asyncify.asyncPromiseHandlers = {\n    resolve: resolve,\n    reject: reject\n   };\n  });\n },\n allocateData: function() {\n  var ptr = _malloc(12 + Asyncify.StackSize);\n  Asyncify.setDataHeader(ptr, ptr + 12, Asyncify.StackSize);\n  Asyncify.setDataRewindFunc(ptr);\n  return ptr;\n },\n setDataHeader: function(ptr, stack, stackSize) {\n  SAFE_HEAP_STORE((ptr >> 2) * 4, stack, 4);\n  SAFE_HEAP_STORE((ptr + 4 >> 2) * 4, stack + stackSize, 4);\n },\n setDataRewindFunc: function(ptr) {\n  var bottomOfCallStack = Asyncify.exportCallStack[0];\n  var rewindId = Asyncify.getCallStackId(bottomOfCallStack);\n  SAFE_HEAP_STORE((ptr + 8 >> 2) * 4, rewindId, 4);\n },\n getDataRewindFunc: function(ptr) {\n  var id = SAFE_HEAP_LOAD((ptr + 8 >> 2) * 4, 4, 0);\n  var name = Asyncify.callStackIdToName[id];\n  var func = Module[\"asm\"][name];\n  return func;\n },\n doRewind: function(ptr) {\n  var start = Asyncify.getDataRewindFunc(ptr);\n  return start();\n },\n handleSleep: function(startAsync) {\n  assert(Asyncify.state !== Asyncify.State.Disabled, \"Asyncify cannot be done during or after the runtime exits\");\n  if (ABORT) return;\n  if (Asyncify.state === Asyncify.State.Normal) {\n   var reachedCallback = false;\n   var reachedAfterCallback = false;\n   startAsync(handleSleepReturnValue => {\n    assert(!handleSleepReturnValue || typeof handleSleepReturnValue == \"number\" || typeof handleSleepReturnValue == \"boolean\");\n    if (ABORT) return;\n    Asyncify.handleSleepReturnValue = handleSleepReturnValue || 0;\n    reachedCallback = true;\n    if (!reachedAfterCallback) {\n     return;\n    }\n    assert(!Asyncify.exportCallStack.length, \"Waking up (starting to rewind) must be done from JS, without compiled code on the stack.\");\n    Asyncify.state = Asyncify.State.Rewinding;\n    runAndAbortIfError(() => _asyncify_start_rewind(Asyncify.currData));\n    if (typeof Browser != \"undefined\" && Browser.mainLoop.func) {\n     Browser.mainLoop.resume();\n    }\n    var asyncWasmReturnValue, isError = false;\n    try {\n     asyncWasmReturnValue = Asyncify.doRewind(Asyncify.currData);\n    } catch (err) {\n     asyncWasmReturnValue = err;\n     isError = true;\n    }\n    var handled = false;\n    if (!Asyncify.currData) {\n     var asyncPromiseHandlers = Asyncify.asyncPromiseHandlers;\n     if (asyncPromiseHandlers) {\n      Asyncify.asyncPromiseHandlers = null;\n      (isError ? asyncPromiseHandlers.reject : asyncPromiseHandlers.resolve)(asyncWasmReturnValue);\n      handled = true;\n     }\n    }\n    if (isError && !handled) {\n     throw asyncWasmReturnValue;\n    }\n   });\n   reachedAfterCallback = true;\n   if (!reachedCallback) {\n    Asyncify.state = Asyncify.State.Unwinding;\n    Asyncify.currData = Asyncify.allocateData();\n    if (typeof Browser != \"undefined\" && Browser.mainLoop.func) {\n     Browser.mainLoop.pause();\n    }\n    runAndAbortIfError(() => _asyncify_start_unwind(Asyncify.currData));\n   }\n  } else if (Asyncify.state === Asyncify.State.Rewinding) {\n   Asyncify.state = Asyncify.State.Normal;\n   runAndAbortIfError(_asyncify_stop_rewind);\n   _free(Asyncify.currData);\n   Asyncify.currData = null;\n   Asyncify.sleepCallbacks.forEach(func => callUserCallback(func));\n  } else {\n   abort(\"invalid state: \" + Asyncify.state);\n  }\n  return Asyncify.handleSleepReturnValue;\n },\n handleAsync: function(startAsync) {\n  return Asyncify.handleSleep(wakeUp => {\n   startAsync().then(wakeUp);\n  });\n }\n};\n\nfunction craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {\n var argCount = argTypes.length;\n if (argCount < 2) {\n  throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n }\n var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n var needsDestructorStack = false;\n for (var i = 1; i < argTypes.length; ++i) {\n  if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {\n   needsDestructorStack = true;\n   break;\n  }\n }\n var returns = argTypes[0].name !== \"void\";\n var argsList = \"\";\n var argsListWired = \"\";\n for (var i = 0; i < argCount - 2; ++i) {\n  argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n  argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\";\n }\n var invokerFnBody = \"return function \" + makeLegalFunctionName(humanName) + \"(\" + argsList + \") {\\n\" + \"if (arguments.length !== \" + (argCount - 2) + \") {\\n\" + \"throwBindingError('function \" + humanName + \" called with ' + arguments.length + ' arguments, expected \" + (argCount - 2) + \" args!');\\n\" + \"}\\n\";\n if (needsDestructorStack) {\n  invokerFnBody += \"var destructors = [];\\n\";\n }\n var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n var args1 = [ \"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\" ];\n var args2 = [ throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1] ];\n if (isClassMethodFunc) {\n  invokerFnBody += \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\";\n }\n for (var i = 0; i < argCount - 2; ++i) {\n  invokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \".toWireType(\" + dtorStack + \", arg\" + i + \"); // \" + argTypes[i + 2].name + \"\\n\";\n  args1.push(\"argType\" + i);\n  args2.push(argTypes[i + 2]);\n }\n if (isClassMethodFunc) {\n  argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n }\n invokerFnBody += (returns ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\n args1.push(\"Asyncify\");\n args2.push(Asyncify);\n invokerFnBody += \"function onDone(\" + (returns ? \"rv\" : \"\") + \") {\\n\";\n if (needsDestructorStack) {\n  invokerFnBody += \"runDestructors(destructors);\\n\";\n } else {\n  for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n   var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n   if (argTypes[i].destructorFunction !== null) {\n    invokerFnBody += paramName + \"_dtor(\" + paramName + \"); // \" + argTypes[i].name + \"\\n\";\n    args1.push(paramName + \"_dtor\");\n    args2.push(argTypes[i].destructorFunction);\n   }\n  }\n }\n if (returns) {\n  invokerFnBody += \"var ret = retType.fromWireType(rv);\\n\" + \"return ret;\\n\";\n } else {}\n invokerFnBody += \"}\\n\";\n invokerFnBody += \"return Asyncify.currData ? Asyncify.whenDone().then(onDone) : onDone(\" + (returns ? \"rv\" : \"\") + \");\\n\";\n invokerFnBody += \"}\\n\";\n args1.push(invokerFnBody);\n var invokerFunction = new_(Function, args1).apply(null, args2);\n return invokerFunction;\n}\n\nfunction heap32VectorToArray(count, firstElement) {\n var array = [];\n for (var i = 0; i < count; i++) {\n  array.push(SAFE_HEAP_LOAD((firstElement + i * 4 >> 2) * 4, 4, 1));\n }\n return array;\n}\n\nfunction __embind_register_class_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, fn) {\n var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n methodName = readLatin1String(methodName);\n rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n whenDependentTypesAreResolved([], [ rawClassType ], function(classType) {\n  classType = classType[0];\n  var humanName = classType.name + \".\" + methodName;\n  function unboundTypesHandler() {\n   throwUnboundTypeError(\"Cannot call \" + humanName + \" due to unbound types\", rawArgTypes);\n  }\n  if (methodName.startsWith(\"@@\")) {\n   methodName = Symbol[methodName.substring(2)];\n  }\n  var proto = classType.registeredClass.constructor;\n  if (undefined === proto[methodName]) {\n   unboundTypesHandler.argCount = argCount - 1;\n   proto[methodName] = unboundTypesHandler;\n  } else {\n   ensureOverloadTable(proto, methodName, humanName);\n   proto[methodName].overloadTable[argCount - 1] = unboundTypesHandler;\n  }\n  whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n   var invokerArgsArray = [ argTypes[0], null ].concat(argTypes.slice(1));\n   var func = craftInvokerFunction(humanName, invokerArgsArray, null, rawInvoker, fn);\n   if (undefined === proto[methodName].overloadTable) {\n    func.argCount = argCount - 1;\n    proto[methodName] = func;\n   } else {\n    proto[methodName].overloadTable[argCount - 1] = func;\n   }\n   return [];\n  });\n  return [];\n });\n}\n\nfunction __embind_register_class_constructor(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {\n assert(argCount > 0);\n var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n invoker = embind__requireFunction(invokerSignature, invoker);\n var args = [ rawConstructor ];\n var destructors = [];\n whenDependentTypesAreResolved([], [ rawClassType ], function(classType) {\n  classType = classType[0];\n  var humanName = \"constructor \" + classType.name;\n  if (undefined === classType.registeredClass.constructor_body) {\n   classType.registeredClass.constructor_body = [];\n  }\n  if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {\n   throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\" + (argCount - 1) + \") for class '\" + classType.name + \"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");\n  }\n  classType.registeredClass.constructor_body[argCount - 1] = () => {\n   throwUnboundTypeError(\"Cannot construct \" + classType.name + \" due to unbound types\", rawArgTypes);\n  };\n  whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n   argTypes.splice(1, 0, null);\n   classType.registeredClass.constructor_body[argCount - 1] = craftInvokerFunction(humanName, argTypes, null, invoker, rawConstructor);\n   return [];\n  });\n  return [];\n });\n}\n\nfunction __embind_register_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual) {\n var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n methodName = readLatin1String(methodName);\n rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n whenDependentTypesAreResolved([], [ rawClassType ], function(classType) {\n  classType = classType[0];\n  var humanName = classType.name + \".\" + methodName;\n  if (methodName.startsWith(\"@@\")) {\n   methodName = Symbol[methodName.substring(2)];\n  }\n  if (isPureVirtual) {\n   classType.registeredClass.pureVirtualFunctions.push(methodName);\n  }\n  function unboundTypesHandler() {\n   throwUnboundTypeError(\"Cannot call \" + humanName + \" due to unbound types\", rawArgTypes);\n  }\n  var proto = classType.registeredClass.instancePrototype;\n  var method = proto[methodName];\n  if (undefined === method || undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2) {\n   unboundTypesHandler.argCount = argCount - 2;\n   unboundTypesHandler.className = classType.name;\n   proto[methodName] = unboundTypesHandler;\n  } else {\n   ensureOverloadTable(proto, methodName, humanName);\n   proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\n  }\n  whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n   var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);\n   if (undefined === proto[methodName].overloadTable) {\n    memberFunction.argCount = argCount - 2;\n    proto[methodName] = memberFunction;\n   } else {\n    proto[methodName].overloadTable[argCount - 2] = memberFunction;\n   }\n   return [];\n  });\n  return [];\n });\n}\n\nfunction validateThis(this_, classType, humanName) {\n if (!(this_ instanceof Object)) {\n  throwBindingError(humanName + ' with invalid \"this\": ' + this_);\n }\n if (!(this_ instanceof classType.registeredClass.constructor)) {\n  throwBindingError(humanName + ' incompatible with \"this\" of type ' + this_.constructor.name);\n }\n if (!this_.$$.ptr) {\n  throwBindingError(\"cannot call emscripten binding method \" + humanName + \" on deleted object\");\n }\n return upcastPointer(this_.$$.ptr, this_.$$.ptrType.registeredClass, classType.registeredClass);\n}\n\nfunction __embind_register_class_property(classType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n fieldName = readLatin1String(fieldName);\n getter = embind__requireFunction(getterSignature, getter);\n whenDependentTypesAreResolved([], [ classType ], function(classType) {\n  classType = classType[0];\n  var humanName = classType.name + \".\" + fieldName;\n  var desc = {\n   get: function() {\n    throwUnboundTypeError(\"Cannot access \" + humanName + \" due to unbound types\", [ getterReturnType, setterArgumentType ]);\n   },\n   enumerable: true,\n   configurable: true\n  };\n  if (setter) {\n   desc.set = () => {\n    throwUnboundTypeError(\"Cannot access \" + humanName + \" due to unbound types\", [ getterReturnType, setterArgumentType ]);\n   };\n  } else {\n   desc.set = v => {\n    throwBindingError(humanName + \" is a read-only property\");\n   };\n  }\n  Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);\n  whenDependentTypesAreResolved([], setter ? [ getterReturnType, setterArgumentType ] : [ getterReturnType ], function(types) {\n   var getterReturnType = types[0];\n   var desc = {\n    get: function() {\n     var ptr = validateThis(this, classType, humanName + \" getter\");\n     return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n    },\n    enumerable: true\n   };\n   if (setter) {\n    setter = embind__requireFunction(setterSignature, setter);\n    var setterArgumentType = types[1];\n    desc.set = function(v) {\n     var ptr = validateThis(this, classType, humanName + \" setter\");\n     var destructors = [];\n     setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, v));\n     runDestructors(destructors);\n    };\n   }\n   Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);\n   return [];\n  });\n  return [];\n });\n}\n\nvar emval_free_list = [];\n\nvar emval_handle_array = [ {}, {\n value: undefined\n}, {\n value: null\n}, {\n value: true\n}, {\n value: false\n} ];\n\nfunction __emval_decref(handle) {\n if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {\n  emval_handle_array[handle] = undefined;\n  emval_free_list.push(handle);\n }\n}\n\nfunction count_emval_handles() {\n var count = 0;\n for (var i = 5; i < emval_handle_array.length; ++i) {\n  if (emval_handle_array[i] !== undefined) {\n   ++count;\n  }\n }\n return count;\n}\n\nfunction get_first_emval() {\n for (var i = 5; i < emval_handle_array.length; ++i) {\n  if (emval_handle_array[i] !== undefined) {\n   return emval_handle_array[i];\n  }\n }\n return null;\n}\n\nfunction init_emval() {\n Module[\"count_emval_handles\"] = count_emval_handles;\n Module[\"get_first_emval\"] = get_first_emval;\n}\n\nvar Emval = {\n toValue: handle => {\n  if (!handle) {\n   throwBindingError(\"Cannot use deleted val. handle = \" + handle);\n  }\n  return emval_handle_array[handle].value;\n },\n toHandle: value => {\n  switch (value) {\n  case undefined:\n   return 1;\n\n  case null:\n   return 2;\n\n  case true:\n   return 3;\n\n  case false:\n   return 4;\n\n  default:\n   {\n    var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;\n    emval_handle_array[handle] = {\n     refcount: 1,\n     value: value\n    };\n    return handle;\n   }\n  }\n }\n};\n\nfunction __embind_register_emval(rawType, name) {\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(handle) {\n   var rv = Emval.toValue(handle);\n   __emval_decref(handle);\n   return rv;\n  },\n  \"toWireType\": function(destructors, value) {\n   return Emval.toHandle(value);\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": simpleReadValueFromPointer,\n  destructorFunction: null\n });\n}\n\nfunction enumReadValueFromPointer(name, shift, signed) {\n switch (shift) {\n case 0:\n  return function(pointer) {\n   var heap = signed ? HEAP8 : HEAPU8;\n   return this[\"fromWireType\"](heap[pointer]);\n  };\n\n case 1:\n  return function(pointer) {\n   var heap = signed ? HEAP16 : HEAPU16;\n   return this[\"fromWireType\"](heap[pointer >> 1]);\n  };\n\n case 2:\n  return function(pointer) {\n   var heap = signed ? HEAP32 : HEAPU32;\n   return this[\"fromWireType\"](heap[pointer >> 2]);\n  };\n\n default:\n  throw new TypeError(\"Unknown integer type: \" + name);\n }\n}\n\nfunction __embind_register_enum(rawType, name, size, isSigned) {\n var shift = getShiftFromSize(size);\n name = readLatin1String(name);\n function ctor() {}\n ctor.values = {};\n registerType(rawType, {\n  name: name,\n  constructor: ctor,\n  \"fromWireType\": function(c) {\n   return this.constructor.values[c];\n  },\n  \"toWireType\": function(destructors, c) {\n   return c.value;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": enumReadValueFromPointer(name, shift, isSigned),\n  destructorFunction: null\n });\n exposePublicSymbol(name, ctor);\n}\n\nfunction requireRegisteredType(rawType, humanName) {\n var impl = registeredTypes[rawType];\n if (undefined === impl) {\n  throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\n }\n return impl;\n}\n\nfunction __embind_register_enum_value(rawEnumType, name, enumValue) {\n var enumType = requireRegisteredType(rawEnumType, \"enum\");\n name = readLatin1String(name);\n var Enum = enumType.constructor;\n var Value = Object.create(enumType.constructor.prototype, {\n  value: {\n   value: enumValue\n  },\n  constructor: {\n   value: createNamedFunction(enumType.name + \"_\" + name, function() {})\n  }\n });\n Enum.values[enumValue] = Value;\n Enum[name] = Value;\n}\n\nfunction embindRepr(v) {\n if (v === null) {\n  return \"null\";\n }\n var t = typeof v;\n if (t === \"object\" || t === \"array\" || t === \"function\") {\n  return v.toString();\n } else {\n  return \"\" + v;\n }\n}\n\nfunction floatReadValueFromPointer(name, shift) {\n switch (shift) {\n case 2:\n  return function(pointer) {\n   return this[\"fromWireType\"](SAFE_HEAP_LOAD_D((pointer >> 2) * 4, 4, 0));\n  };\n\n case 3:\n  return function(pointer) {\n   return this[\"fromWireType\"](SAFE_HEAP_LOAD_D((pointer >> 3) * 8, 8, 0));\n  };\n\n default:\n  throw new TypeError(\"Unknown float type: \" + name);\n }\n}\n\nfunction __embind_register_float(rawType, name, size) {\n var shift = getShiftFromSize(size);\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(value) {\n   return value;\n  },\n  \"toWireType\": function(destructors, value) {\n   if (typeof value != \"number\" && typeof value != \"boolean\") {\n    throw new TypeError('Cannot convert \"' + embindRepr(value) + '\" to ' + this.name);\n   }\n   return value;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": floatReadValueFromPointer(name, shift),\n  destructorFunction: null\n });\n}\n\nfunction __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {\n var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n name = readLatin1String(name);\n rawInvoker = embind__requireFunction(signature, rawInvoker);\n exposePublicSymbol(name, function() {\n  throwUnboundTypeError(\"Cannot call \" + name + \" due to unbound types\", argTypes);\n }, argCount - 1);\n whenDependentTypesAreResolved([], argTypes, function(argTypes) {\n  var invokerArgsArray = [ argTypes[0], null ].concat(argTypes.slice(1));\n  replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null, rawInvoker, fn), argCount - 1);\n  return [];\n });\n}\n\nfunction integerReadValueFromPointer(name, shift, signed) {\n switch (shift) {\n case 0:\n  return signed ? function readS8FromPointer(pointer) {\n   return SAFE_HEAP_LOAD(pointer, 1, 0);\n  } : function readU8FromPointer(pointer) {\n   return SAFE_HEAP_LOAD(pointer, 1, 1);\n  };\n\n case 1:\n  return signed ? function readS16FromPointer(pointer) {\n   return SAFE_HEAP_LOAD((pointer >> 1) * 2, 2, 0);\n  } : function readU16FromPointer(pointer) {\n   return SAFE_HEAP_LOAD((pointer >> 1) * 2, 2, 1);\n  };\n\n case 2:\n  return signed ? function readS32FromPointer(pointer) {\n   return SAFE_HEAP_LOAD((pointer >> 2) * 4, 4, 0);\n  } : function readU32FromPointer(pointer) {\n   return SAFE_HEAP_LOAD((pointer >> 2) * 4, 4, 1);\n  };\n\n default:\n  throw new TypeError(\"Unknown integer type: \" + name);\n }\n}\n\nfunction __embind_register_integer(primitiveType, name, size, minRange, maxRange) {\n name = readLatin1String(name);\n if (maxRange === -1) {\n  maxRange = 4294967295;\n }\n var shift = getShiftFromSize(size);\n var fromWireType = value => value;\n if (minRange === 0) {\n  var bitshift = 32 - 8 * size;\n  fromWireType = value => value << bitshift >>> bitshift;\n }\n var isUnsignedType = name.includes(\"unsigned\");\n var checkAssertions = (value, toTypeName) => {\n  if (typeof value != \"number\" && typeof value != \"boolean\") {\n   throw new TypeError('Cannot convert \"' + embindRepr(value) + '\" to ' + toTypeName);\n  }\n  if (value < minRange || value > maxRange) {\n   throw new TypeError('Passing a number \"' + embindRepr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name + '\", which is outside the valid range [' + minRange + \", \" + maxRange + \"]!\");\n  }\n };\n var toWireType;\n if (isUnsignedType) {\n  toWireType = function(destructors, value) {\n   checkAssertions(value, this.name);\n   return value >>> 0;\n  };\n } else {\n  toWireType = function(destructors, value) {\n   checkAssertions(value, this.name);\n   return value;\n  };\n }\n registerType(primitiveType, {\n  name: name,\n  \"fromWireType\": fromWireType,\n  \"toWireType\": toWireType,\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": integerReadValueFromPointer(name, shift, minRange !== 0),\n  destructorFunction: null\n });\n}\n\nfunction __embind_register_memory_view(rawType, dataTypeIndex, name) {\n var typeMapping = [ Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array ];\n var TA = typeMapping[dataTypeIndex];\n function decodeMemoryView(handle) {\n  handle = handle >> 2;\n  var heap = HEAPU32;\n  var size = heap[handle];\n  var data = heap[handle + 1];\n  return new TA(buffer, data, size);\n }\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": decodeMemoryView,\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": decodeMemoryView\n }, {\n  ignoreDuplicateRegistrations: true\n });\n}\n\nfunction __embind_register_smart_ptr(rawType, rawPointeeType, name, sharingPolicy, getPointeeSignature, rawGetPointee, constructorSignature, rawConstructor, shareSignature, rawShare, destructorSignature, rawDestructor) {\n name = readLatin1String(name);\n rawGetPointee = embind__requireFunction(getPointeeSignature, rawGetPointee);\n rawConstructor = embind__requireFunction(constructorSignature, rawConstructor);\n rawShare = embind__requireFunction(shareSignature, rawShare);\n rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n whenDependentTypesAreResolved([ rawType ], [ rawPointeeType ], function(pointeeType) {\n  pointeeType = pointeeType[0];\n  var registeredPointer = new RegisteredPointer(name, pointeeType.registeredClass, false, false, true, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor);\n  return [ registeredPointer ];\n });\n}\n\nfunction __embind_register_std_string(rawType, name) {\n name = readLatin1String(name);\n var stdStringIsUTF8 = name === \"std::string\";\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(value) {\n   var length = SAFE_HEAP_LOAD((value >> 2) * 4, 4, 1);\n   var payload = value + 4;\n   var str;\n   if (stdStringIsUTF8) {\n    var decodeStartPtr = payload;\n    for (var i = 0; i <= length; ++i) {\n     var currentBytePtr = payload + i;\n     if (i == length || SAFE_HEAP_LOAD(currentBytePtr, 1, 1) == 0) {\n      var maxRead = currentBytePtr - decodeStartPtr;\n      var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n      if (str === undefined) {\n       str = stringSegment;\n      } else {\n       str += String.fromCharCode(0);\n       str += stringSegment;\n      }\n      decodeStartPtr = currentBytePtr + 1;\n     }\n    }\n   } else {\n    var a = new Array(length);\n    for (var i = 0; i < length; ++i) {\n     a[i] = String.fromCharCode(SAFE_HEAP_LOAD(payload + i, 1, 1));\n    }\n    str = a.join(\"\");\n   }\n   _free(value);\n   return str;\n  },\n  \"toWireType\": function(destructors, value) {\n   if (value instanceof ArrayBuffer) {\n    value = new Uint8Array(value);\n   }\n   var length;\n   var valueIsOfTypeString = typeof value == \"string\";\n   if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n    throwBindingError(\"Cannot pass non-string to std::string\");\n   }\n   if (stdStringIsUTF8 && valueIsOfTypeString) {\n    length = lengthBytesUTF8(value);\n   } else {\n    length = value.length;\n   }\n   var base = _malloc(4 + length + 1);\n   var ptr = base + 4;\n   SAFE_HEAP_STORE((base >> 2) * 4, length, 4);\n   if (stdStringIsUTF8 && valueIsOfTypeString) {\n    stringToUTF8(value, ptr, length + 1);\n   } else {\n    if (valueIsOfTypeString) {\n     for (var i = 0; i < length; ++i) {\n      var charCode = value.charCodeAt(i);\n      if (charCode > 255) {\n       _free(ptr);\n       throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\n      }\n      SAFE_HEAP_STORE(ptr + i, charCode, 1);\n     }\n    } else {\n     for (var i = 0; i < length; ++i) {\n      SAFE_HEAP_STORE(ptr + i, value[i], 1);\n     }\n    }\n   }\n   if (destructors !== null) {\n    destructors.push(_free, base);\n   }\n   return base;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": simpleReadValueFromPointer,\n  destructorFunction: function(ptr) {\n   _free(ptr);\n  }\n });\n}\n\nvar UTF16Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\n\nfunction UTF16ToString(ptr, maxBytesToRead) {\n assert(ptr % 2 == 0, \"Pointer passed to UTF16ToString must be aligned to two bytes!\");\n var endPtr = ptr;\n var idx = endPtr >> 1;\n var maxIdx = idx + maxBytesToRead / 2;\n while (!(idx >= maxIdx) && SAFE_HEAP_LOAD(idx * 2, 2, 1)) ++idx;\n endPtr = idx << 1;\n if (endPtr - ptr > 32 && UTF16Decoder) {\n  return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n } else {\n  var str = \"\";\n  for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n   var codeUnit = SAFE_HEAP_LOAD((ptr + i * 2 >> 1) * 2, 2, 0);\n   if (codeUnit == 0) break;\n   str += String.fromCharCode(codeUnit);\n  }\n  return str;\n }\n}\n\nfunction stringToUTF16(str, outPtr, maxBytesToWrite) {\n assert(outPtr % 2 == 0, \"Pointer passed to stringToUTF16 must be aligned to two bytes!\");\n assert(typeof maxBytesToWrite == \"number\", \"stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\");\n if (maxBytesToWrite === undefined) {\n  maxBytesToWrite = 2147483647;\n }\n if (maxBytesToWrite < 2) return 0;\n maxBytesToWrite -= 2;\n var startPtr = outPtr;\n var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n for (var i = 0; i < numCharsToWrite; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  SAFE_HEAP_STORE((outPtr >> 1) * 2, codeUnit, 2);\n  outPtr += 2;\n }\n SAFE_HEAP_STORE((outPtr >> 1) * 2, 0, 2);\n return outPtr - startPtr;\n}\n\nfunction lengthBytesUTF16(str) {\n return str.length * 2;\n}\n\nfunction UTF32ToString(ptr, maxBytesToRead) {\n assert(ptr % 4 == 0, \"Pointer passed to UTF32ToString must be aligned to four bytes!\");\n var i = 0;\n var str = \"\";\n while (!(i >= maxBytesToRead / 4)) {\n  var utf32 = SAFE_HEAP_LOAD((ptr + i * 4 >> 2) * 4, 4, 0);\n  if (utf32 == 0) break;\n  ++i;\n  if (utf32 >= 65536) {\n   var ch = utf32 - 65536;\n   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n  } else {\n   str += String.fromCharCode(utf32);\n  }\n }\n return str;\n}\n\nfunction stringToUTF32(str, outPtr, maxBytesToWrite) {\n assert(outPtr % 4 == 0, \"Pointer passed to stringToUTF32 must be aligned to four bytes!\");\n assert(typeof maxBytesToWrite == \"number\", \"stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\");\n if (maxBytesToWrite === undefined) {\n  maxBytesToWrite = 2147483647;\n }\n if (maxBytesToWrite < 4) return 0;\n var startPtr = outPtr;\n var endPtr = startPtr + maxBytesToWrite - 4;\n for (var i = 0; i < str.length; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  if (codeUnit >= 55296 && codeUnit <= 57343) {\n   var trailSurrogate = str.charCodeAt(++i);\n   codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;\n  }\n  SAFE_HEAP_STORE((outPtr >> 2) * 4, codeUnit, 4);\n  outPtr += 4;\n  if (outPtr + 4 > endPtr) break;\n }\n SAFE_HEAP_STORE((outPtr >> 2) * 4, 0, 4);\n return outPtr - startPtr;\n}\n\nfunction lengthBytesUTF32(str) {\n var len = 0;\n for (var i = 0; i < str.length; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  if (codeUnit >= 55296 && codeUnit <= 57343) ++i;\n  len += 4;\n }\n return len;\n}\n\nfunction __embind_register_std_wstring(rawType, charSize, name) {\n name = readLatin1String(name);\n var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n if (charSize === 2) {\n  decodeString = UTF16ToString;\n  encodeString = stringToUTF16;\n  lengthBytesUTF = lengthBytesUTF16;\n  getHeap = () => HEAPU16;\n  shift = 1;\n } else if (charSize === 4) {\n  decodeString = UTF32ToString;\n  encodeString = stringToUTF32;\n  lengthBytesUTF = lengthBytesUTF32;\n  getHeap = () => HEAPU32;\n  shift = 2;\n }\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(value) {\n   var length = SAFE_HEAP_LOAD((value >> 2) * 4, 4, 1);\n   var HEAP = getHeap();\n   var str;\n   var decodeStartPtr = value + 4;\n   for (var i = 0; i <= length; ++i) {\n    var currentBytePtr = value + 4 + i * charSize;\n    if (i == length || HEAP[currentBytePtr >> shift] == 0) {\n     var maxReadBytes = currentBytePtr - decodeStartPtr;\n     var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n     if (str === undefined) {\n      str = stringSegment;\n     } else {\n      str += String.fromCharCode(0);\n      str += stringSegment;\n     }\n     decodeStartPtr = currentBytePtr + charSize;\n    }\n   }\n   _free(value);\n   return str;\n  },\n  \"toWireType\": function(destructors, value) {\n   if (!(typeof value == \"string\")) {\n    throwBindingError(\"Cannot pass non-string to C++ string type \" + name);\n   }\n   var length = lengthBytesUTF(value);\n   var ptr = _malloc(4 + length + charSize);\n   SAFE_HEAP_STORE((ptr >> 2) * 4, length >> shift, 4);\n   encodeString(value, ptr + 4, length + charSize);\n   if (destructors !== null) {\n    destructors.push(_free, ptr);\n   }\n   return ptr;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": simpleReadValueFromPointer,\n  destructorFunction: function(ptr) {\n   _free(ptr);\n  }\n });\n}\n\nfunction __embind_register_value_object(rawType, name, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n structRegistrations[rawType] = {\n  name: readLatin1String(name),\n  rawConstructor: embind__requireFunction(constructorSignature, rawConstructor),\n  rawDestructor: embind__requireFunction(destructorSignature, rawDestructor),\n  fields: []\n };\n}\n\nfunction __embind_register_value_object_field(structType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n structRegistrations[structType].fields.push({\n  fieldName: readLatin1String(fieldName),\n  getterReturnType: getterReturnType,\n  getter: embind__requireFunction(getterSignature, getter),\n  getterContext: getterContext,\n  setterArgumentType: setterArgumentType,\n  setter: embind__requireFunction(setterSignature, setter),\n  setterContext: setterContext\n });\n}\n\nfunction __embind_register_void(rawType, name) {\n name = readLatin1String(name);\n registerType(rawType, {\n  isVoid: true,\n  name: name,\n  \"argPackAdvance\": 0,\n  \"fromWireType\": function() {\n   return undefined;\n  },\n  \"toWireType\": function(destructors, o) {\n   return undefined;\n  }\n });\n}\n\nfunction __emscripten_date_now() {\n return Date.now();\n}\n\nvar nowIsMonotonic = true;\n\nfunction __emscripten_get_now_is_monotonic() {\n return nowIsMonotonic;\n}\n\nfunction __emval_as(handle, returnType, destructorsRef) {\n handle = Emval.toValue(handle);\n returnType = requireRegisteredType(returnType, \"emval::as\");\n var destructors = [];\n var rd = Emval.toHandle(destructors);\n SAFE_HEAP_STORE((destructorsRef >> 2) * 4, rd, 4);\n return returnType[\"toWireType\"](destructors, handle);\n}\n\nfunction __emval_await(promise) {\n return Asyncify.handleAsync(() => {\n  promise = Emval.toValue(promise);\n  return promise.then(Emval.toHandle);\n });\n}\n\nfunction emval_lookupTypes(argCount, argTypes) {\n var a = new Array(argCount);\n for (var i = 0; i < argCount; ++i) {\n  a[i] = requireRegisteredType(SAFE_HEAP_LOAD((argTypes + i * POINTER_SIZE >> 2) * 4, 4, 1), \"parameter \" + i);\n }\n return a;\n}\n\nfunction __emval_call(handle, argCount, argTypes, argv) {\n handle = Emval.toValue(handle);\n var types = emval_lookupTypes(argCount, argTypes);\n var args = new Array(argCount);\n for (var i = 0; i < argCount; ++i) {\n  var type = types[i];\n  args[i] = type[\"readValueFromPointer\"](argv);\n  argv += type[\"argPackAdvance\"];\n }\n var rv = handle.apply(undefined, args);\n return Emval.toHandle(rv);\n}\n\nfunction emval_allocateDestructors(destructorsRef) {\n var destructors = [];\n SAFE_HEAP_STORE((destructorsRef >> 2) * 4, Emval.toHandle(destructors), 4);\n return destructors;\n}\n\nvar emval_symbols = {};\n\nfunction getStringOrSymbol(address) {\n var symbol = emval_symbols[address];\n if (symbol === undefined) {\n  return readLatin1String(address);\n }\n return symbol;\n}\n\nvar emval_methodCallers = [];\n\nfunction __emval_call_method(caller, handle, methodName, destructorsRef, args) {\n caller = emval_methodCallers[caller];\n handle = Emval.toValue(handle);\n methodName = getStringOrSymbol(methodName);\n return caller(handle, methodName, emval_allocateDestructors(destructorsRef), args);\n}\n\nfunction __emval_call_void_method(caller, handle, methodName, args) {\n caller = emval_methodCallers[caller];\n handle = Emval.toValue(handle);\n methodName = getStringOrSymbol(methodName);\n caller(handle, methodName, null, args);\n}\n\nfunction __emval_equals(first, second) {\n first = Emval.toValue(first);\n second = Emval.toValue(second);\n return first == second;\n}\n\nfunction emval_get_global() {\n if (typeof globalThis == \"object\") {\n  return globalThis;\n }\n return function() {\n  return Function;\n }()(\"return this\")();\n}\n\nfunction __emval_get_global(name) {\n if (name === 0) {\n  return Emval.toHandle(emval_get_global());\n } else {\n  name = getStringOrSymbol(name);\n  return Emval.toHandle(emval_get_global()[name]);\n }\n}\n\nfunction emval_addMethodCaller(caller) {\n var id = emval_methodCallers.length;\n emval_methodCallers.push(caller);\n return id;\n}\n\nvar emval_registeredMethods = [];\n\nfunction __emval_get_method_caller(argCount, argTypes) {\n var types = emval_lookupTypes(argCount, argTypes);\n var retType = types[0];\n var signatureName = retType.name + \"_$\" + types.slice(1).map(function(t) {\n  return t.name;\n }).join(\"_\") + \"$\";\n var returnId = emval_registeredMethods[signatureName];\n if (returnId !== undefined) {\n  return returnId;\n }\n var params = [ \"retType\" ];\n var args = [ retType ];\n var argsList = \"\";\n for (var i = 0; i < argCount - 1; ++i) {\n  argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n  params.push(\"argType\" + i);\n  args.push(types[1 + i]);\n }\n var functionName = makeLegalFunctionName(\"methodCaller_\" + signatureName);\n var functionBody = \"return function \" + functionName + \"(handle, name, destructors, args) {\\n\";\n var offset = 0;\n for (var i = 0; i < argCount - 1; ++i) {\n  functionBody += \"    var arg\" + i + \" = argType\" + i + \".readValueFromPointer(args\" + (offset ? \"+\" + offset : \"\") + \");\\n\";\n  offset += types[i + 1][\"argPackAdvance\"];\n }\n functionBody += \"    var rv = handle[name](\" + argsList + \");\\n\";\n for (var i = 0; i < argCount - 1; ++i) {\n  if (types[i + 1][\"deleteObject\"]) {\n   functionBody += \"    argType\" + i + \".deleteObject(arg\" + i + \");\\n\";\n  }\n }\n if (!retType.isVoid) {\n  functionBody += \"    return retType.toWireType(destructors, rv);\\n\";\n }\n functionBody += \"};\\n\";\n params.push(functionBody);\n var invokerFunction = new_(Function, params).apply(null, args);\n returnId = emval_addMethodCaller(invokerFunction);\n emval_registeredMethods[signatureName] = returnId;\n return returnId;\n}\n\nfunction __emval_get_module_property(name) {\n name = getStringOrSymbol(name);\n return Emval.toHandle(Module[name]);\n}\n\nfunction __emval_get_property(handle, key) {\n handle = Emval.toValue(handle);\n key = Emval.toValue(key);\n return Emval.toHandle(handle[key]);\n}\n\nfunction __emval_incref(handle) {\n if (handle > 4) {\n  emval_handle_array[handle].refcount += 1;\n }\n}\n\nfunction __emval_instanceof(object, constructor) {\n object = Emval.toValue(object);\n constructor = Emval.toValue(constructor);\n return object instanceof constructor;\n}\n\nfunction craftEmvalAllocator(argCount) {\n var argsList = \"\";\n for (var i = 0; i < argCount; ++i) {\n  argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n }\n var getMemory = () => HEAPU32;\n var functionBody = \"return function emval_allocator_\" + argCount + \"(constructor, argTypes, args) {\\n\" + \"  var HEAPU32 = getMemory();\\n\";\n for (var i = 0; i < argCount; ++i) {\n  functionBody += \"var argType\" + i + \" = requireRegisteredType(HEAPU32[((argTypes)>>2)], 'parameter \" + i + \"');\\n\" + \"var arg\" + i + \" = argType\" + i + \".readValueFromPointer(args);\\n\" + \"args += argType\" + i + \"['argPackAdvance'];\\n\" + \"argTypes += 4;\\n\";\n }\n functionBody += \"var obj = new constructor(\" + argsList + \");\\n\" + \"return valueToHandle(obj);\\n\" + \"}\\n\";\n return new Function(\"requireRegisteredType\", \"Module\", \"valueToHandle\", \"getMemory\", functionBody)(requireRegisteredType, Module, Emval.toHandle, getMemory);\n}\n\nvar emval_newers = {};\n\nfunction __emval_new(handle, argCount, argTypes, args) {\n handle = Emval.toValue(handle);\n var newer = emval_newers[argCount];\n if (!newer) {\n  newer = craftEmvalAllocator(argCount);\n  emval_newers[argCount] = newer;\n }\n return newer(handle, argTypes, args);\n}\n\nfunction __emval_new_array() {\n return Emval.toHandle([]);\n}\n\nfunction __emval_new_cstring(v) {\n return Emval.toHandle(getStringOrSymbol(v));\n}\n\nfunction __emval_new_object() {\n return Emval.toHandle({});\n}\n\nfunction __emval_run_destructors(handle) {\n var destructors = Emval.toValue(handle);\n runDestructors(destructors);\n __emval_decref(handle);\n}\n\nfunction __emval_set_property(handle, key, value) {\n handle = Emval.toValue(handle);\n key = Emval.toValue(key);\n value = Emval.toValue(value);\n handle[key] = value;\n}\n\nfunction __emval_take_value(type, arg) {\n type = requireRegisteredType(type, \"_emval_take_value\");\n var v = type[\"readValueFromPointer\"](arg);\n return Emval.toHandle(v);\n}\n\nfunction _abort() {\n abort(\"native code called abort()\");\n}\n\nvar JSEvents = {\n inEventHandler: 0,\n removeAllEventListeners: function() {\n  for (var i = JSEvents.eventHandlers.length - 1; i >= 0; --i) {\n   JSEvents._removeHandler(i);\n  }\n  JSEvents.eventHandlers = [];\n  JSEvents.deferredCalls = [];\n },\n registerRemoveEventListeners: function() {\n  if (!JSEvents.removeEventListenersRegistered) {\n   __ATEXIT__.push(JSEvents.removeAllEventListeners);\n   JSEvents.removeEventListenersRegistered = true;\n  }\n },\n deferredCalls: [],\n deferCall: function(targetFunction, precedence, argsList) {\n  function arraysHaveEqualContent(arrA, arrB) {\n   if (arrA.length != arrB.length) return false;\n   for (var i in arrA) {\n    if (arrA[i] != arrB[i]) return false;\n   }\n   return true;\n  }\n  for (var i in JSEvents.deferredCalls) {\n   var call = JSEvents.deferredCalls[i];\n   if (call.targetFunction == targetFunction && arraysHaveEqualContent(call.argsList, argsList)) {\n    return;\n   }\n  }\n  JSEvents.deferredCalls.push({\n   targetFunction: targetFunction,\n   precedence: precedence,\n   argsList: argsList\n  });\n  JSEvents.deferredCalls.sort(function(x, y) {\n   return x.precedence < y.precedence;\n  });\n },\n removeDeferredCalls: function(targetFunction) {\n  for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\n   if (JSEvents.deferredCalls[i].targetFunction == targetFunction) {\n    JSEvents.deferredCalls.splice(i, 1);\n    --i;\n   }\n  }\n },\n canPerformEventHandlerRequests: function() {\n  return JSEvents.inEventHandler && JSEvents.currentEventHandler.allowsDeferredCalls;\n },\n runDeferredCalls: function() {\n  if (!JSEvents.canPerformEventHandlerRequests()) {\n   return;\n  }\n  for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\n   var call = JSEvents.deferredCalls[i];\n   JSEvents.deferredCalls.splice(i, 1);\n   --i;\n   call.targetFunction.apply(null, call.argsList);\n  }\n },\n eventHandlers: [],\n removeAllHandlersOnTarget: function(target, eventTypeString) {\n  for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\n   if (JSEvents.eventHandlers[i].target == target && (!eventTypeString || eventTypeString == JSEvents.eventHandlers[i].eventTypeString)) {\n    JSEvents._removeHandler(i--);\n   }\n  }\n },\n _removeHandler: function(i) {\n  var h = JSEvents.eventHandlers[i];\n  h.target.removeEventListener(h.eventTypeString, h.eventListenerFunc, h.useCapture);\n  JSEvents.eventHandlers.splice(i, 1);\n },\n registerOrRemoveHandler: function(eventHandler) {\n  var jsEventHandler = function jsEventHandler(event) {\n   ++JSEvents.inEventHandler;\n   JSEvents.currentEventHandler = eventHandler;\n   JSEvents.runDeferredCalls();\n   eventHandler.handlerFunc(event);\n   JSEvents.runDeferredCalls();\n   --JSEvents.inEventHandler;\n  };\n  if (eventHandler.callbackfunc) {\n   eventHandler.eventListenerFunc = jsEventHandler;\n   eventHandler.target.addEventListener(eventHandler.eventTypeString, jsEventHandler, eventHandler.useCapture);\n   JSEvents.eventHandlers.push(eventHandler);\n   JSEvents.registerRemoveEventListeners();\n  } else {\n   for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\n    if (JSEvents.eventHandlers[i].target == eventHandler.target && JSEvents.eventHandlers[i].eventTypeString == eventHandler.eventTypeString) {\n     JSEvents._removeHandler(i--);\n    }\n   }\n  }\n },\n getNodeNameForTarget: function(target) {\n  if (!target) return \"\";\n  if (target == window) return \"#window\";\n  if (target == screen) return \"#screen\";\n  return target && target.nodeName ? target.nodeName : \"\";\n },\n fullscreenEnabled: function() {\n  return document.fullscreenEnabled || document.webkitFullscreenEnabled;\n }\n};\n\nfunction maybeCStringToJsString(cString) {\n return cString > 2 ? UTF8ToString(cString) : cString;\n}\n\nvar specialHTMLTargets = [ 0, typeof document != \"undefined\" ? document : 0, typeof window != \"undefined\" ? window : 0 ];\n\nfunction findEventTarget(target) {\n target = maybeCStringToJsString(target);\n var domElement = specialHTMLTargets[target] || (typeof document != \"undefined\" ? document.querySelector(target) : undefined);\n return domElement;\n}\n\nfunction findCanvasEventTarget(target) {\n return findEventTarget(target);\n}\n\nfunction _emscripten_get_canvas_element_size(target, width, height) {\n var canvas = findCanvasEventTarget(target);\n if (!canvas) return -4;\n SAFE_HEAP_STORE((width >> 2) * 4, canvas.width, 4);\n SAFE_HEAP_STORE((height >> 2) * 4, canvas.height, 4);\n}\n\nvar _emscripten_get_now;\n\n_emscripten_get_now = () => performance.now();\n\nfunction __webgl_enable_ANGLE_instanced_arrays(ctx) {\n var ext = ctx.getExtension(\"ANGLE_instanced_arrays\");\n if (ext) {\n  ctx[\"vertexAttribDivisor\"] = function(index, divisor) {\n   ext[\"vertexAttribDivisorANGLE\"](index, divisor);\n  };\n  ctx[\"drawArraysInstanced\"] = function(mode, first, count, primcount) {\n   ext[\"drawArraysInstancedANGLE\"](mode, first, count, primcount);\n  };\n  ctx[\"drawElementsInstanced\"] = function(mode, count, type, indices, primcount) {\n   ext[\"drawElementsInstancedANGLE\"](mode, count, type, indices, primcount);\n  };\n  return 1;\n }\n}\n\nfunction __webgl_enable_OES_vertex_array_object(ctx) {\n var ext = ctx.getExtension(\"OES_vertex_array_object\");\n if (ext) {\n  ctx[\"createVertexArray\"] = function() {\n   return ext[\"createVertexArrayOES\"]();\n  };\n  ctx[\"deleteVertexArray\"] = function(vao) {\n   ext[\"deleteVertexArrayOES\"](vao);\n  };\n  ctx[\"bindVertexArray\"] = function(vao) {\n   ext[\"bindVertexArrayOES\"](vao);\n  };\n  ctx[\"isVertexArray\"] = function(vao) {\n   return ext[\"isVertexArrayOES\"](vao);\n  };\n  return 1;\n }\n}\n\nfunction __webgl_enable_WEBGL_draw_buffers(ctx) {\n var ext = ctx.getExtension(\"WEBGL_draw_buffers\");\n if (ext) {\n  ctx[\"drawBuffers\"] = function(n, bufs) {\n   ext[\"drawBuffersWEBGL\"](n, bufs);\n  };\n  return 1;\n }\n}\n\nfunction __webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(ctx) {\n return !!(ctx.dibvbi = ctx.getExtension(\"WEBGL_draw_instanced_base_vertex_base_instance\"));\n}\n\nfunction __webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(ctx) {\n return !!(ctx.mdibvbi = ctx.getExtension(\"WEBGL_multi_draw_instanced_base_vertex_base_instance\"));\n}\n\nfunction __webgl_enable_WEBGL_multi_draw(ctx) {\n return !!(ctx.multiDrawWebgl = ctx.getExtension(\"WEBGL_multi_draw\"));\n}\n\nvar GL = {\n counter: 1,\n buffers: [],\n programs: [],\n framebuffers: [],\n renderbuffers: [],\n textures: [],\n shaders: [],\n vaos: [],\n contexts: [],\n offscreenCanvases: {},\n queries: [],\n samplers: [],\n transformFeedbacks: [],\n syncs: [],\n stringCache: {},\n stringiCache: {},\n unpackAlignment: 4,\n recordError: function recordError(errorCode) {\n  if (!GL.lastError) {\n   GL.lastError = errorCode;\n  }\n },\n getNewId: function(table) {\n  var ret = GL.counter++;\n  for (var i = table.length; i < ret; i++) {\n   table[i] = null;\n  }\n  return ret;\n },\n getSource: function(shader, count, string, length) {\n  var source = \"\";\n  for (var i = 0; i < count; ++i) {\n   var len = length ? SAFE_HEAP_LOAD((length + i * 4 >> 2) * 4, 4, 0) : -1;\n   source += UTF8ToString(SAFE_HEAP_LOAD((string + i * 4 >> 2) * 4, 4, 0), len < 0 ? undefined : len);\n  }\n  return source;\n },\n createContext: function(canvas, webGLContextAttributes) {\n  if (!canvas.getContextSafariWebGL2Fixed) {\n   canvas.getContextSafariWebGL2Fixed = canvas.getContext;\n   function fixedGetContext(ver, attrs) {\n    var gl = canvas.getContextSafariWebGL2Fixed(ver, attrs);\n    return ver == \"webgl\" == gl instanceof WebGLRenderingContext ? gl : null;\n   }\n   canvas.getContext = fixedGetContext;\n  }\n  var ctx = webGLContextAttributes.majorVersion > 1 ? canvas.getContext(\"webgl2\", webGLContextAttributes) : canvas.getContext(\"webgl\", webGLContextAttributes);\n  if (!ctx) return 0;\n  var handle = GL.registerContext(ctx, webGLContextAttributes);\n  return handle;\n },\n registerContext: function(ctx, webGLContextAttributes) {\n  var handle = GL.getNewId(GL.contexts);\n  var context = {\n   handle: handle,\n   attributes: webGLContextAttributes,\n   version: webGLContextAttributes.majorVersion,\n   GLctx: ctx\n  };\n  if (ctx.canvas) ctx.canvas.GLctxObject = context;\n  GL.contexts[handle] = context;\n  if (typeof webGLContextAttributes.enableExtensionsByDefault == \"undefined\" || webGLContextAttributes.enableExtensionsByDefault) {\n   GL.initExtensions(context);\n  }\n  return handle;\n },\n makeContextCurrent: function(contextHandle) {\n  GL.currentContext = GL.contexts[contextHandle];\n  Module.ctx = GLctx = GL.currentContext && GL.currentContext.GLctx;\n  return !(contextHandle && !GLctx);\n },\n getContext: function(contextHandle) {\n  return GL.contexts[contextHandle];\n },\n deleteContext: function(contextHandle) {\n  if (GL.currentContext === GL.contexts[contextHandle]) GL.currentContext = null;\n  if (typeof JSEvents == \"object\") JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas);\n  if (GL.contexts[contextHandle] && GL.contexts[contextHandle].GLctx.canvas) GL.contexts[contextHandle].GLctx.canvas.GLctxObject = undefined;\n  GL.contexts[contextHandle] = null;\n },\n initExtensions: function(context) {\n  if (!context) context = GL.currentContext;\n  if (context.initExtensionsDone) return;\n  context.initExtensionsDone = true;\n  var GLctx = context.GLctx;\n  __webgl_enable_ANGLE_instanced_arrays(GLctx);\n  __webgl_enable_OES_vertex_array_object(GLctx);\n  __webgl_enable_WEBGL_draw_buffers(GLctx);\n  __webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(GLctx);\n  __webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(GLctx);\n  if (context.version >= 2) {\n   GLctx.disjointTimerQueryExt = GLctx.getExtension(\"EXT_disjoint_timer_query_webgl2\");\n  }\n  if (context.version < 2 || !GLctx.disjointTimerQueryExt) {\n   GLctx.disjointTimerQueryExt = GLctx.getExtension(\"EXT_disjoint_timer_query\");\n  }\n  __webgl_enable_WEBGL_multi_draw(GLctx);\n  var exts = GLctx.getSupportedExtensions() || [];\n  exts.forEach(function(ext) {\n   if (!ext.includes(\"lose_context\") && !ext.includes(\"debug\")) {\n    GLctx.getExtension(ext);\n   }\n  });\n }\n};\n\nfunction _emscripten_glActiveTexture(x0) {\n GLctx[\"activeTexture\"](x0);\n}\n\nfunction _emscripten_glAttachShader(program, shader) {\n GLctx.attachShader(GL.programs[program], GL.shaders[shader]);\n}\n\nfunction _emscripten_glBindAttribLocation(program, index, name) {\n GLctx.bindAttribLocation(GL.programs[program], index, UTF8ToString(name));\n}\n\nfunction _emscripten_glBindBuffer(target, buffer) {\n if (target == 35051) {\n  GLctx.currentPixelPackBufferBinding = buffer;\n } else if (target == 35052) {\n  GLctx.currentPixelUnpackBufferBinding = buffer;\n }\n GLctx.bindBuffer(target, GL.buffers[buffer]);\n}\n\nfunction _emscripten_glBindFramebuffer(target, framebuffer) {\n GLctx.bindFramebuffer(target, GL.framebuffers[framebuffer]);\n}\n\nfunction _emscripten_glBindRenderbuffer(target, renderbuffer) {\n GLctx.bindRenderbuffer(target, GL.renderbuffers[renderbuffer]);\n}\n\nfunction _emscripten_glBindTexture(target, texture) {\n GLctx.bindTexture(target, GL.textures[texture]);\n}\n\nfunction _emscripten_glBindVertexArray(vao) {\n GLctx[\"bindVertexArray\"](GL.vaos[vao]);\n}\n\nfunction _emscripten_glBindVertexArrayOES(vao) {\n GLctx[\"bindVertexArray\"](GL.vaos[vao]);\n}\n\nfunction _emscripten_glBlendColor(x0, x1, x2, x3) {\n GLctx[\"blendColor\"](x0, x1, x2, x3);\n}\n\nfunction _emscripten_glBlendEquation(x0) {\n GLctx[\"blendEquation\"](x0);\n}\n\nfunction _emscripten_glBlendEquationSeparate(x0, x1) {\n GLctx[\"blendEquationSeparate\"](x0, x1);\n}\n\nfunction _emscripten_glBlendFunc(x0, x1) {\n GLctx[\"blendFunc\"](x0, x1);\n}\n\nfunction _emscripten_glBlitFramebuffer(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) {\n GLctx[\"blitFramebuffer\"](x0, x1, x2, x3, x4, x5, x6, x7, x8, x9);\n}\n\nfunction _emscripten_glBufferData(target, size, data, usage) {\n if (GL.currentContext.version >= 2) {\n  if (data && size) {\n   GLctx.bufferData(target, HEAPU8, usage, data, size);\n  } else {\n   GLctx.bufferData(target, size, usage);\n  }\n } else {\n  GLctx.bufferData(target, data ? HEAPU8.subarray(data, data + size) : size, usage);\n }\n}\n\nfunction _emscripten_glCheckFramebufferStatus(x0) {\n return GLctx[\"checkFramebufferStatus\"](x0);\n}\n\nfunction _emscripten_glClear(x0) {\n GLctx[\"clear\"](x0);\n}\n\nfunction _emscripten_glClearColor(x0, x1, x2, x3) {\n GLctx[\"clearColor\"](x0, x1, x2, x3);\n}\n\nfunction _emscripten_glClearStencil(x0) {\n GLctx[\"clearStencil\"](x0);\n}\n\nfunction _emscripten_glColorMask(red, green, blue, alpha) {\n GLctx.colorMask(!!red, !!green, !!blue, !!alpha);\n}\n\nfunction _emscripten_glCompileShader(shader) {\n GLctx.compileShader(GL.shaders[shader]);\n}\n\nfunction _emscripten_glCopyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7) {\n GLctx[\"copyTexSubImage2D\"](x0, x1, x2, x3, x4, x5, x6, x7);\n}\n\nfunction _emscripten_glCreateProgram() {\n var id = GL.getNewId(GL.programs);\n var program = GLctx.createProgram();\n program.name = id;\n program.maxUniformLength = program.maxAttributeLength = program.maxUniformBlockNameLength = 0;\n program.uniformIdCounter = 1;\n GL.programs[id] = program;\n return id;\n}\n\nfunction _emscripten_glCreateShader(shaderType) {\n var id = GL.getNewId(GL.shaders);\n GL.shaders[id] = GLctx.createShader(shaderType);\n return id;\n}\n\nfunction _emscripten_glDeleteBuffers(n, buffers) {\n for (var i = 0; i < n; i++) {\n  var id = SAFE_HEAP_LOAD((buffers + i * 4 >> 2) * 4, 4, 0);\n  var buffer = GL.buffers[id];\n  if (!buffer) continue;\n  GLctx.deleteBuffer(buffer);\n  buffer.name = 0;\n  GL.buffers[id] = null;\n  if (id == GLctx.currentPixelPackBufferBinding) GLctx.currentPixelPackBufferBinding = 0;\n  if (id == GLctx.currentPixelUnpackBufferBinding) GLctx.currentPixelUnpackBufferBinding = 0;\n }\n}\n\nfunction _emscripten_glDeleteFramebuffers(n, framebuffers) {\n for (var i = 0; i < n; ++i) {\n  var id = SAFE_HEAP_LOAD((framebuffers + i * 4 >> 2) * 4, 4, 0);\n  var framebuffer = GL.framebuffers[id];\n  if (!framebuffer) continue;\n  GLctx.deleteFramebuffer(framebuffer);\n  framebuffer.name = 0;\n  GL.framebuffers[id] = null;\n }\n}\n\nfunction _emscripten_glDeleteProgram(id) {\n if (!id) return;\n var program = GL.programs[id];\n if (!program) {\n  GL.recordError(1281);\n  return;\n }\n GLctx.deleteProgram(program);\n program.name = 0;\n GL.programs[id] = null;\n}\n\nfunction _emscripten_glDeleteRenderbuffers(n, renderbuffers) {\n for (var i = 0; i < n; i++) {\n  var id = SAFE_HEAP_LOAD((renderbuffers + i * 4 >> 2) * 4, 4, 0);\n  var renderbuffer = GL.renderbuffers[id];\n  if (!renderbuffer) continue;\n  GLctx.deleteRenderbuffer(renderbuffer);\n  renderbuffer.name = 0;\n  GL.renderbuffers[id] = null;\n }\n}\n\nfunction _emscripten_glDeleteShader(id) {\n if (!id) return;\n var shader = GL.shaders[id];\n if (!shader) {\n  GL.recordError(1281);\n  return;\n }\n GLctx.deleteShader(shader);\n GL.shaders[id] = null;\n}\n\nfunction _emscripten_glDeleteSync(id) {\n if (!id) return;\n var sync = GL.syncs[id];\n if (!sync) {\n  GL.recordError(1281);\n  return;\n }\n GLctx.deleteSync(sync);\n sync.name = 0;\n GL.syncs[id] = null;\n}\n\nfunction _emscripten_glDeleteTextures(n, textures) {\n for (var i = 0; i < n; i++) {\n  var id = SAFE_HEAP_LOAD((textures + i * 4 >> 2) * 4, 4, 0);\n  var texture = GL.textures[id];\n  if (!texture) continue;\n  GLctx.deleteTexture(texture);\n  texture.name = 0;\n  GL.textures[id] = null;\n }\n}\n\nfunction _emscripten_glDeleteVertexArrays(n, vaos) {\n for (var i = 0; i < n; i++) {\n  var id = SAFE_HEAP_LOAD((vaos + i * 4 >> 2) * 4, 4, 0);\n  GLctx[\"deleteVertexArray\"](GL.vaos[id]);\n  GL.vaos[id] = null;\n }\n}\n\nfunction _emscripten_glDeleteVertexArraysOES(n, vaos) {\n for (var i = 0; i < n; i++) {\n  var id = SAFE_HEAP_LOAD((vaos + i * 4 >> 2) * 4, 4, 0);\n  GLctx[\"deleteVertexArray\"](GL.vaos[id]);\n  GL.vaos[id] = null;\n }\n}\n\nfunction _emscripten_glDepthMask(flag) {\n GLctx.depthMask(!!flag);\n}\n\nfunction _emscripten_glDisable(x0) {\n GLctx[\"disable\"](x0);\n}\n\nfunction _emscripten_glDisableVertexAttribArray(index) {\n GLctx.disableVertexAttribArray(index);\n}\n\nfunction _emscripten_glDrawArrays(mode, first, count) {\n GLctx.drawArrays(mode, first, count);\n}\n\nfunction _emscripten_glDrawElements(mode, count, type, indices) {\n GLctx.drawElements(mode, count, type, indices);\n}\n\nfunction _emscripten_glEnable(x0) {\n GLctx[\"enable\"](x0);\n}\n\nfunction _emscripten_glEnableVertexAttribArray(index) {\n GLctx.enableVertexAttribArray(index);\n}\n\nfunction _emscripten_glFenceSync(condition, flags) {\n var sync = GLctx.fenceSync(condition, flags);\n if (sync) {\n  var id = GL.getNewId(GL.syncs);\n  sync.name = id;\n  GL.syncs[id] = sync;\n  return id;\n }\n return 0;\n}\n\nfunction _emscripten_glFinish() {\n GLctx[\"finish\"]();\n}\n\nfunction _emscripten_glFlush() {\n GLctx[\"flush\"]();\n}\n\nfunction _emscripten_glFramebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer) {\n GLctx.framebufferRenderbuffer(target, attachment, renderbuffertarget, GL.renderbuffers[renderbuffer]);\n}\n\nfunction _emscripten_glFramebufferTexture2D(target, attachment, textarget, texture, level) {\n GLctx.framebufferTexture2D(target, attachment, textarget, GL.textures[texture], level);\n}\n\nfunction __glGenObject(n, buffers, createFunction, objectTable) {\n for (var i = 0; i < n; i++) {\n  var buffer = GLctx[createFunction]();\n  var id = buffer && GL.getNewId(objectTable);\n  if (buffer) {\n   buffer.name = id;\n   objectTable[id] = buffer;\n  } else {\n   GL.recordError(1282);\n  }\n  SAFE_HEAP_STORE((buffers + i * 4 >> 2) * 4, id, 4);\n }\n}\n\nfunction _emscripten_glGenBuffers(n, buffers) {\n __glGenObject(n, buffers, \"createBuffer\", GL.buffers);\n}\n\nfunction _emscripten_glGenFramebuffers(n, ids) {\n __glGenObject(n, ids, \"createFramebuffer\", GL.framebuffers);\n}\n\nfunction _emscripten_glGenRenderbuffers(n, renderbuffers) {\n __glGenObject(n, renderbuffers, \"createRenderbuffer\", GL.renderbuffers);\n}\n\nfunction _emscripten_glGenTextures(n, textures) {\n __glGenObject(n, textures, \"createTexture\", GL.textures);\n}\n\nfunction _emscripten_glGenVertexArrays(n, arrays) {\n __glGenObject(n, arrays, \"createVertexArray\", GL.vaos);\n}\n\nfunction _emscripten_glGenVertexArraysOES(n, arrays) {\n __glGenObject(n, arrays, \"createVertexArray\", GL.vaos);\n}\n\nfunction _emscripten_glGetAttribLocation(program, name) {\n return GLctx.getAttribLocation(GL.programs[program], UTF8ToString(name));\n}\n\nfunction _emscripten_glGetBufferParameteriv(target, value, data) {\n if (!data) {\n  GL.recordError(1281);\n  return;\n }\n SAFE_HEAP_STORE((data >> 2) * 4, GLctx.getBufferParameter(target, value), 4);\n}\n\nfunction _emscripten_glGetError() {\n var error = GLctx.getError() || GL.lastError;\n GL.lastError = 0;\n return error;\n}\n\nfunction _emscripten_glGetFramebufferAttachmentParameteriv(target, attachment, pname, params) {\n var result = GLctx.getFramebufferAttachmentParameter(target, attachment, pname);\n if (result instanceof WebGLRenderbuffer || result instanceof WebGLTexture) {\n  result = result.name | 0;\n }\n SAFE_HEAP_STORE((params >> 2) * 4, result, 4);\n}\n\nfunction readI53FromI64(ptr) {\n return SAFE_HEAP_LOAD((ptr >> 2) * 4, 4, 1) + SAFE_HEAP_LOAD((ptr + 4 >> 2) * 4, 4, 0) * 4294967296;\n}\n\nfunction readI53FromU64(ptr) {\n return SAFE_HEAP_LOAD((ptr >> 2) * 4, 4, 1) + SAFE_HEAP_LOAD((ptr + 4 >> 2) * 4, 4, 1) * 4294967296;\n}\n\nfunction writeI53ToI64(ptr, num) {\n SAFE_HEAP_STORE((ptr >> 2) * 4, num, 4);\n SAFE_HEAP_STORE((ptr + 4 >> 2) * 4, (num - SAFE_HEAP_LOAD((ptr >> 2) * 4, 4, 1)) / 4294967296, 4);\n var deserialized = num >= 0 ? readI53FromU64(ptr) : readI53FromI64(ptr);\n if (deserialized != num) warnOnce(\"writeI53ToI64() out of range: serialized JS Number \" + num + \" to Wasm heap as bytes lo=0x\" + SAFE_HEAP_LOAD((ptr >> 2) * 4, 4, 1).toString(16) + \", hi=0x\" + SAFE_HEAP_LOAD((ptr + 4 >> 2) * 4, 4, 1).toString(16) + \", which deserializes back to \" + deserialized + \" instead!\");\n}\n\nfunction emscriptenWebGLGet(name_, p, type) {\n if (!p) {\n  GL.recordError(1281);\n  return;\n }\n var ret = undefined;\n switch (name_) {\n case 36346:\n  ret = 1;\n  break;\n\n case 36344:\n  if (type != 0 && type != 1) {\n   GL.recordError(1280);\n  }\n  return;\n\n case 34814:\n case 36345:\n  ret = 0;\n  break;\n\n case 34466:\n  var formats = GLctx.getParameter(34467);\n  ret = formats ? formats.length : 0;\n  break;\n\n case 33309:\n  if (GL.currentContext.version < 2) {\n   GL.recordError(1282);\n   return;\n  }\n  var exts = GLctx.getSupportedExtensions() || [];\n  ret = 2 * exts.length;\n  break;\n\n case 33307:\n case 33308:\n  if (GL.currentContext.version < 2) {\n   GL.recordError(1280);\n   return;\n  }\n  ret = name_ == 33307 ? 3 : 0;\n  break;\n }\n if (ret === undefined) {\n  var result = GLctx.getParameter(name_);\n  switch (typeof result) {\n  case \"number\":\n   ret = result;\n   break;\n\n  case \"boolean\":\n   ret = result ? 1 : 0;\n   break;\n\n  case \"string\":\n   GL.recordError(1280);\n   return;\n\n  case \"object\":\n   if (result === null) {\n    switch (name_) {\n    case 34964:\n    case 35725:\n    case 34965:\n    case 36006:\n    case 36007:\n    case 32873:\n    case 34229:\n    case 36662:\n    case 36663:\n    case 35053:\n    case 35055:\n    case 36010:\n    case 35097:\n    case 35869:\n    case 32874:\n    case 36389:\n    case 35983:\n    case 35368:\n    case 34068:\n     {\n      ret = 0;\n      break;\n     }\n\n    default:\n     {\n      GL.recordError(1280);\n      return;\n     }\n    }\n   } else if (result instanceof Float32Array || result instanceof Uint32Array || result instanceof Int32Array || result instanceof Array) {\n    for (var i = 0; i < result.length; ++i) {\n     switch (type) {\n     case 0:\n      SAFE_HEAP_STORE((p + i * 4 >> 2) * 4, result[i], 4);\n      break;\n\n     case 2:\n      SAFE_HEAP_STORE_D((p + i * 4 >> 2) * 4, result[i], 4);\n      break;\n\n     case 4:\n      SAFE_HEAP_STORE(p + i >> 0, result[i] ? 1 : 0, 1);\n      break;\n     }\n    }\n    return;\n   } else {\n    try {\n     ret = result.name | 0;\n    } catch (e) {\n     GL.recordError(1280);\n     err(\"GL_INVALID_ENUM in glGet\" + type + \"v: Unknown object returned from WebGL getParameter(\" + name_ + \")! (error: \" + e + \")\");\n     return;\n    }\n   }\n   break;\n\n  default:\n   GL.recordError(1280);\n   err(\"GL_INVALID_ENUM in glGet\" + type + \"v: Native code calling glGet\" + type + \"v(\" + name_ + \") and it returns \" + result + \" of type \" + typeof result + \"!\");\n   return;\n  }\n }\n switch (type) {\n case 1:\n  writeI53ToI64(p, ret);\n  break;\n\n case 0:\n  SAFE_HEAP_STORE((p >> 2) * 4, ret, 4);\n  break;\n\n case 2:\n  SAFE_HEAP_STORE_D((p >> 2) * 4, ret, 4);\n  break;\n\n case 4:\n  SAFE_HEAP_STORE(p >> 0, ret ? 1 : 0, 1);\n  break;\n }\n}\n\nfunction _emscripten_glGetIntegerv(name_, p) {\n emscriptenWebGLGet(name_, p, 0);\n}\n\nfunction _emscripten_glGetProgramInfoLog(program, maxLength, length, infoLog) {\n var log = GLctx.getProgramInfoLog(GL.programs[program]);\n if (log === null) log = \"(unknown error)\";\n var numBytesWrittenExclNull = maxLength > 0 && infoLog ? stringToUTF8(log, infoLog, maxLength) : 0;\n if (length) SAFE_HEAP_STORE((length >> 2) * 4, numBytesWrittenExclNull, 4);\n}\n\nfunction _emscripten_glGetProgramiv(program, pname, p) {\n if (!p) {\n  GL.recordError(1281);\n  return;\n }\n if (program >= GL.counter) {\n  GL.recordError(1281);\n  return;\n }\n program = GL.programs[program];\n if (pname == 35716) {\n  var log = GLctx.getProgramInfoLog(program);\n  if (log === null) log = \"(unknown error)\";\n  SAFE_HEAP_STORE((p >> 2) * 4, log.length + 1, 4);\n } else if (pname == 35719) {\n  if (!program.maxUniformLength) {\n   for (var i = 0; i < GLctx.getProgramParameter(program, 35718); ++i) {\n    program.maxUniformLength = Math.max(program.maxUniformLength, GLctx.getActiveUniform(program, i).name.length + 1);\n   }\n  }\n  SAFE_HEAP_STORE((p >> 2) * 4, program.maxUniformLength, 4);\n } else if (pname == 35722) {\n  if (!program.maxAttributeLength) {\n   for (var i = 0; i < GLctx.getProgramParameter(program, 35721); ++i) {\n    program.maxAttributeLength = Math.max(program.maxAttributeLength, GLctx.getActiveAttrib(program, i).name.length + 1);\n   }\n  }\n  SAFE_HEAP_STORE((p >> 2) * 4, program.maxAttributeLength, 4);\n } else if (pname == 35381) {\n  if (!program.maxUniformBlockNameLength) {\n   for (var i = 0; i < GLctx.getProgramParameter(program, 35382); ++i) {\n    program.maxUniformBlockNameLength = Math.max(program.maxUniformBlockNameLength, GLctx.getActiveUniformBlockName(program, i).length + 1);\n   }\n  }\n  SAFE_HEAP_STORE((p >> 2) * 4, program.maxUniformBlockNameLength, 4);\n } else {\n  SAFE_HEAP_STORE((p >> 2) * 4, GLctx.getProgramParameter(program, pname), 4);\n }\n}\n\nfunction _emscripten_glGetRenderbufferParameteriv(target, pname, params) {\n if (!params) {\n  GL.recordError(1281);\n  return;\n }\n SAFE_HEAP_STORE((params >> 2) * 4, GLctx.getRenderbufferParameter(target, pname), 4);\n}\n\nfunction _emscripten_glGetShaderInfoLog(shader, maxLength, length, infoLog) {\n var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\n if (log === null) log = \"(unknown error)\";\n var numBytesWrittenExclNull = maxLength > 0 && infoLog ? stringToUTF8(log, infoLog, maxLength) : 0;\n if (length) SAFE_HEAP_STORE((length >> 2) * 4, numBytesWrittenExclNull, 4);\n}\n\nfunction _emscripten_glGetShaderPrecisionFormat(shaderType, precisionType, range, precision) {\n var result = GLctx.getShaderPrecisionFormat(shaderType, precisionType);\n SAFE_HEAP_STORE((range >> 2) * 4, result.rangeMin, 4);\n SAFE_HEAP_STORE((range + 4 >> 2) * 4, result.rangeMax, 4);\n SAFE_HEAP_STORE((precision >> 2) * 4, result.precision, 4);\n}\n\nfunction _emscripten_glGetShaderiv(shader, pname, p) {\n if (!p) {\n  GL.recordError(1281);\n  return;\n }\n if (pname == 35716) {\n  var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\n  if (log === null) log = \"(unknown error)\";\n  var logLength = log ? log.length + 1 : 0;\n  SAFE_HEAP_STORE((p >> 2) * 4, logLength, 4);\n } else if (pname == 35720) {\n  var source = GLctx.getShaderSource(GL.shaders[shader]);\n  var sourceLength = source ? source.length + 1 : 0;\n  SAFE_HEAP_STORE((p >> 2) * 4, sourceLength, 4);\n } else {\n  SAFE_HEAP_STORE((p >> 2) * 4, GLctx.getShaderParameter(GL.shaders[shader], pname), 4);\n }\n}\n\nfunction stringToNewUTF8(jsString) {\n var length = lengthBytesUTF8(jsString) + 1;\n var cString = _malloc(length);\n stringToUTF8(jsString, cString, length);\n return cString;\n}\n\nfunction _emscripten_glGetString(name_) {\n var ret = GL.stringCache[name_];\n if (!ret) {\n  switch (name_) {\n  case 7939:\n   var exts = GLctx.getSupportedExtensions() || [];\n   exts = exts.concat(exts.map(function(e) {\n    return \"GL_\" + e;\n   }));\n   ret = stringToNewUTF8(exts.join(\" \"));\n   break;\n\n  case 7936:\n  case 7937:\n  case 37445:\n  case 37446:\n   var s = GLctx.getParameter(name_);\n   if (!s) {\n    GL.recordError(1280);\n   }\n   ret = s && stringToNewUTF8(s);\n   break;\n\n  case 7938:\n   var glVersion = GLctx.getParameter(7938);\n   if (GL.currentContext.version >= 2) glVersion = \"OpenGL ES 3.0 (\" + glVersion + \")\"; else {\n    glVersion = \"OpenGL ES 2.0 (\" + glVersion + \")\";\n   }\n   ret = stringToNewUTF8(glVersion);\n   break;\n\n  case 35724:\n   var glslVersion = GLctx.getParameter(35724);\n   var ver_re = /^WebGL GLSL ES ([0-9]\\.[0-9][0-9]?)(?:$| .*)/;\n   var ver_num = glslVersion.match(ver_re);\n   if (ver_num !== null) {\n    if (ver_num[1].length == 3) ver_num[1] = ver_num[1] + \"0\";\n    glslVersion = \"OpenGL ES GLSL ES \" + ver_num[1] + \" (\" + glslVersion + \")\";\n   }\n   ret = stringToNewUTF8(glslVersion);\n   break;\n\n  default:\n   GL.recordError(1280);\n  }\n  GL.stringCache[name_] = ret;\n }\n return ret;\n}\n\nfunction _emscripten_glGetStringi(name, index) {\n if (GL.currentContext.version < 2) {\n  GL.recordError(1282);\n  return 0;\n }\n var stringiCache = GL.stringiCache[name];\n if (stringiCache) {\n  if (index < 0 || index >= stringiCache.length) {\n   GL.recordError(1281);\n   return 0;\n  }\n  return stringiCache[index];\n }\n switch (name) {\n case 7939:\n  var exts = GLctx.getSupportedExtensions() || [];\n  exts = exts.concat(exts.map(function(e) {\n   return \"GL_\" + e;\n  }));\n  exts = exts.map(function(e) {\n   return stringToNewUTF8(e);\n  });\n  stringiCache = GL.stringiCache[name] = exts;\n  if (index < 0 || index >= stringiCache.length) {\n   GL.recordError(1281);\n   return 0;\n  }\n  return stringiCache[index];\n\n default:\n  GL.recordError(1280);\n  return 0;\n }\n}\n\nfunction jstoi_q(str) {\n return parseInt(str);\n}\n\nfunction webglGetLeftBracePos(name) {\n return name.slice(-1) == \"]\" && name.lastIndexOf(\"[\");\n}\n\nfunction webglPrepareUniformLocationsBeforeFirstUse(program) {\n var uniformLocsById = program.uniformLocsById, uniformSizeAndIdsByName = program.uniformSizeAndIdsByName, i, j;\n if (!uniformLocsById) {\n  program.uniformLocsById = uniformLocsById = {};\n  program.uniformArrayNamesById = {};\n  for (i = 0; i < GLctx.getProgramParameter(program, 35718); ++i) {\n   var u = GLctx.getActiveUniform(program, i);\n   var nm = u.name;\n   var sz = u.size;\n   var lb = webglGetLeftBracePos(nm);\n   var arrayName = lb > 0 ? nm.slice(0, lb) : nm;\n   var id = program.uniformIdCounter;\n   program.uniformIdCounter += sz;\n   uniformSizeAndIdsByName[arrayName] = [ sz, id ];\n   for (j = 0; j < sz; ++j) {\n    uniformLocsById[id] = j;\n    program.uniformArrayNamesById[id++] = arrayName;\n   }\n  }\n }\n}\n\nfunction _emscripten_glGetUniformLocation(program, name) {\n name = UTF8ToString(name);\n if (program = GL.programs[program]) {\n  webglPrepareUniformLocationsBeforeFirstUse(program);\n  var uniformLocsById = program.uniformLocsById;\n  var arrayIndex = 0;\n  var uniformBaseName = name;\n  var leftBrace = webglGetLeftBracePos(name);\n  if (leftBrace > 0) {\n   arrayIndex = jstoi_q(name.slice(leftBrace + 1)) >>> 0;\n   uniformBaseName = name.slice(0, leftBrace);\n  }\n  var sizeAndId = program.uniformSizeAndIdsByName[uniformBaseName];\n  if (sizeAndId && arrayIndex < sizeAndId[0]) {\n   arrayIndex += sizeAndId[1];\n   if (uniformLocsById[arrayIndex] = uniformLocsById[arrayIndex] || GLctx.getUniformLocation(program, name)) {\n    return arrayIndex;\n   }\n  }\n } else {\n  GL.recordError(1281);\n }\n return -1;\n}\n\nfunction _emscripten_glIsEnabled(x0) {\n return GLctx[\"isEnabled\"](x0);\n}\n\nfunction _emscripten_glIsTexture(id) {\n var texture = GL.textures[id];\n if (!texture) return 0;\n return GLctx.isTexture(texture);\n}\n\nfunction _emscripten_glLineWidth(x0) {\n GLctx[\"lineWidth\"](x0);\n}\n\nfunction _emscripten_glLinkProgram(program) {\n program = GL.programs[program];\n GLctx.linkProgram(program);\n program.uniformLocsById = 0;\n program.uniformSizeAndIdsByName = {};\n}\n\nfunction _emscripten_glPixelStorei(pname, param) {\n if (pname == 3317) {\n  GL.unpackAlignment = param;\n }\n GLctx.pixelStorei(pname, param);\n}\n\nfunction computeUnpackAlignedImageSize(width, height, sizePerPixel, alignment) {\n function roundedToNextMultipleOf(x, y) {\n  return x + y - 1 & -y;\n }\n var plainRowSize = width * sizePerPixel;\n var alignedRowSize = roundedToNextMultipleOf(plainRowSize, alignment);\n return height * alignedRowSize;\n}\n\nfunction __colorChannelsInGlTextureFormat(format) {\n var colorChannels = {\n  5: 3,\n  6: 4,\n  8: 2,\n  29502: 3,\n  29504: 4,\n  26917: 2,\n  26918: 2,\n  29846: 3,\n  29847: 4\n };\n return colorChannels[format - 6402] || 1;\n}\n\nfunction heapObjectForWebGLType(type) {\n type -= 5120;\n if (type == 0) return HEAP8;\n if (type == 1) return HEAPU8;\n if (type == 2) return HEAP16;\n if (type == 4) return HEAP32;\n if (type == 6) return HEAPF32;\n if (type == 5 || type == 28922 || type == 28520 || type == 30779 || type == 30782) return HEAPU32;\n return HEAPU16;\n}\n\nfunction heapAccessShiftForWebGLHeap(heap) {\n return 31 - Math.clz32(heap.BYTES_PER_ELEMENT);\n}\n\nfunction emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, internalFormat) {\n var heap = heapObjectForWebGLType(type);\n var shift = heapAccessShiftForWebGLHeap(heap);\n var byteSize = 1 << shift;\n var sizePerPixel = __colorChannelsInGlTextureFormat(format) * byteSize;\n var bytes = computeUnpackAlignedImageSize(width, height, sizePerPixel, GL.unpackAlignment);\n return heap.subarray(pixels >> shift, pixels + bytes >> shift);\n}\n\nfunction _emscripten_glReadPixels(x, y, width, height, format, type, pixels) {\n if (GL.currentContext.version >= 2) {\n  if (GLctx.currentPixelPackBufferBinding) {\n   GLctx.readPixels(x, y, width, height, format, type, pixels);\n  } else {\n   var heap = heapObjectForWebGLType(type);\n   GLctx.readPixels(x, y, width, height, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\n  }\n  return;\n }\n var pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, format);\n if (!pixelData) {\n  GL.recordError(1280);\n  return;\n }\n GLctx.readPixels(x, y, width, height, format, type, pixelData);\n}\n\nfunction _emscripten_glRenderbufferStorage(x0, x1, x2, x3) {\n GLctx[\"renderbufferStorage\"](x0, x1, x2, x3);\n}\n\nfunction _emscripten_glRenderbufferStorageMultisample(x0, x1, x2, x3, x4) {\n GLctx[\"renderbufferStorageMultisample\"](x0, x1, x2, x3, x4);\n}\n\nfunction _emscripten_glScissor(x0, x1, x2, x3) {\n GLctx[\"scissor\"](x0, x1, x2, x3);\n}\n\nfunction _emscripten_glShaderSource(shader, count, string, length) {\n var source = GL.getSource(shader, count, string, length);\n GLctx.shaderSource(GL.shaders[shader], source);\n}\n\nfunction _emscripten_glTexImage2D(target, level, internalFormat, width, height, border, format, type, pixels) {\n if (GL.currentContext.version >= 2) {\n  if (GLctx.currentPixelUnpackBufferBinding) {\n   GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels);\n  } else if (pixels) {\n   var heap = heapObjectForWebGLType(type);\n   GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\n  } else {\n   GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, null);\n  }\n  return;\n }\n GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels ? emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, internalFormat) : null);\n}\n\nfunction _emscripten_glTexParameterf(x0, x1, x2) {\n GLctx[\"texParameterf\"](x0, x1, x2);\n}\n\nfunction _emscripten_glTexParameterfv(target, pname, params) {\n var param = SAFE_HEAP_LOAD_D((params >> 2) * 4, 4, 0);\n GLctx.texParameterf(target, pname, param);\n}\n\nfunction _emscripten_glTexParameteri(x0, x1, x2) {\n GLctx[\"texParameteri\"](x0, x1, x2);\n}\n\nfunction _emscripten_glTexParameteriv(target, pname, params) {\n var param = SAFE_HEAP_LOAD((params >> 2) * 4, 4, 0);\n GLctx.texParameteri(target, pname, param);\n}\n\nfunction _emscripten_glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels) {\n if (GL.currentContext.version >= 2) {\n  if (GLctx.currentPixelUnpackBufferBinding) {\n   GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels);\n  } else if (pixels) {\n   var heap = heapObjectForWebGLType(type);\n   GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\n  } else {\n   GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, null);\n  }\n  return;\n }\n var pixelData = null;\n if (pixels) pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, 0);\n GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixelData);\n}\n\nfunction webglGetUniformLocation(location) {\n var p = GLctx.currentProgram;\n if (p) {\n  var webglLoc = p.uniformLocsById[location];\n  if (typeof webglLoc == \"number\") {\n   p.uniformLocsById[location] = webglLoc = GLctx.getUniformLocation(p, p.uniformArrayNamesById[location] + (webglLoc > 0 ? \"[\" + webglLoc + \"]\" : \"\"));\n  }\n  return webglLoc;\n } else {\n  GL.recordError(1282);\n }\n}\n\nfunction _emscripten_glUniform1f(location, v0) {\n GLctx.uniform1f(webglGetUniformLocation(location), v0);\n}\n\nvar miniTempWebGLFloatBuffers = [];\n\nfunction _emscripten_glUniform1fv(location, count, value) {\n if (GL.currentContext.version >= 2) {\n  count && GLctx.uniform1fv(webglGetUniformLocation(location), HEAPF32, value >> 2, count);\n  return;\n }\n if (count <= 288) {\n  var view = miniTempWebGLFloatBuffers[count - 1];\n  for (var i = 0; i < count; ++i) {\n   view[i] = SAFE_HEAP_LOAD_D((value + 4 * i >> 2) * 4, 4, 0);\n  }\n } else {\n  var view = HEAPF32.subarray(value >> 2, value + count * 4 >> 2);\n }\n GLctx.uniform1fv(webglGetUniformLocation(location), view);\n}\n\nfunction _emscripten_glUniform1i(location, v0) {\n GLctx.uniform1i(webglGetUniformLocation(location), v0);\n}\n\nvar __miniTempWebGLIntBuffers = [];\n\nfunction _emscripten_glUniform1iv(location, count, value) {\n if (GL.currentContext.version >= 2) {\n  count && GLctx.uniform1iv(webglGetUniformLocation(location), HEAP32, value >> 2, count);\n  return;\n }\n if (count <= 288) {\n  var view = __miniTempWebGLIntBuffers[count - 1];\n  for (var i = 0; i < count; ++i) {\n   view[i] = SAFE_HEAP_LOAD((value + 4 * i >> 2) * 4, 4, 0);\n  }\n } else {\n  var view = HEAP32.subarray(value >> 2, value + count * 4 >> 2);\n }\n GLctx.uniform1iv(webglGetUniformLocation(location), view);\n}\n\nfunction _emscripten_glUniform2f(location, v0, v1) {\n GLctx.uniform2f(webglGetUniformLocation(location), v0, v1);\n}\n\nfunction _emscripten_glUniform2fv(location, count, value) {\n if (GL.currentContext.version >= 2) {\n  count && GLctx.uniform2fv(webglGetUniformLocation(location), HEAPF32, value >> 2, count * 2);\n  return;\n }\n if (count <= 144) {\n  var view = miniTempWebGLFloatBuffers[2 * count - 1];\n  for (var i = 0; i < 2 * count; i += 2) {\n   view[i] = SAFE_HEAP_LOAD_D((value + 4 * i >> 2) * 4, 4, 0);\n   view[i + 1] = SAFE_HEAP_LOAD_D((value + (4 * i + 4) >> 2) * 4, 4, 0);\n  }\n } else {\n  var view = HEAPF32.subarray(value >> 2, value + count * 8 >> 2);\n }\n GLctx.uniform2fv(webglGetUniformLocation(location), view);\n}\n\nfunction _emscripten_glUniform2i(location, v0, v1) {\n GLctx.uniform2i(webglGetUniformLocation(location), v0, v1);\n}\n\nfunction _emscripten_glUniform2iv(location, count, value) {\n if (GL.currentContext.version >= 2) {\n  count && GLctx.uniform2iv(webglGetUniformLocation(location), HEAP32, value >> 2, count * 2);\n  return;\n }\n if (count <= 144) {\n  var view = __miniTempWebGLIntBuffers[2 * count - 1];\n  for (var i = 0; i < 2 * count; i += 2) {\n   view[i] = SAFE_HEAP_LOAD((value + 4 * i >> 2) * 4, 4, 0);\n   view[i + 1] = SAFE_HEAP_LOAD((value + (4 * i + 4) >> 2) * 4, 4, 0);\n  }\n } else {\n  var view = HEAP32.subarray(value >> 2, value + count * 8 >> 2);\n }\n GLctx.uniform2iv(webglGetUniformLocation(location), view);\n}\n\nfunction _emscripten_glUniform3f(location, v0, v1, v2) {\n GLctx.uniform3f(webglGetUniformLocation(location), v0, v1, v2);\n}\n\nfunction _emscripten_glUniform3fv(location, count, value) {\n if (GL.currentContext.version >= 2) {\n  count && GLctx.uniform3fv(webglGetUniformLocation(location), HEAPF32, value >> 2, count * 3);\n  return;\n }\n if (count <= 96) {\n  var view = miniTempWebGLFloatBuffers[3 * count - 1];\n  for (var i = 0; i < 3 * count; i += 3) {\n   view[i] = SAFE_HEAP_LOAD_D((value + 4 * i >> 2) * 4, 4, 0);\n   view[i + 1] = SAFE_HEAP_LOAD_D((value + (4 * i + 4) >> 2) * 4, 4, 0);\n   view[i + 2] = SAFE_HEAP_LOAD_D((value + (4 * i + 8) >> 2) * 4, 4, 0);\n  }\n } else {\n  var view = HEAPF32.subarray(value >> 2, value + count * 12 >> 2);\n }\n GLctx.uniform3fv(webglGetUniformLocation(location), view);\n}\n\nfunction _emscripten_glUniform3i(location, v0, v1, v2) {\n GLctx.uniform3i(webglGetUniformLocation(location), v0, v1, v2);\n}\n\nfunction _emscripten_glUniform3iv(location, count, value) {\n if (GL.currentContext.version >= 2) {\n  count && GLctx.uniform3iv(webglGetUniformLocation(location), HEAP32, value >> 2, count * 3);\n  return;\n }\n if (count <= 96) {\n  var view = __miniTempWebGLIntBuffers[3 * count - 1];\n  for (var i = 0; i < 3 * count; i += 3) {\n   view[i] = SAFE_HEAP_LOAD((value + 4 * i >> 2) * 4, 4, 0);\n   view[i + 1] = SAFE_HEAP_LOAD((value + (4 * i + 4) >> 2) * 4, 4, 0);\n   view[i + 2] = SAFE_HEAP_LOAD((value + (4 * i + 8) >> 2) * 4, 4, 0);\n  }\n } else {\n  var view = HEAP32.subarray(value >> 2, value + count * 12 >> 2);\n }\n GLctx.uniform3iv(webglGetUniformLocation(location), view);\n}\n\nfunction _emscripten_glUniform4f(location, v0, v1, v2, v3) {\n GLctx.uniform4f(webglGetUniformLocation(location), v0, v1, v2, v3);\n}\n\nfunction _emscripten_glUniform4fv(location, count, value) {\n if (GL.currentContext.version >= 2) {\n  count && GLctx.uniform4fv(webglGetUniformLocation(location), HEAPF32, value >> 2, count * 4);\n  return;\n }\n if (count <= 72) {\n  var view = miniTempWebGLFloatBuffers[4 * count - 1];\n  var heap = HEAPF32;\n  value >>= 2;\n  for (var i = 0; i < 4 * count; i += 4) {\n   var dst = value + i;\n   view[i] = heap[dst];\n   view[i + 1] = heap[dst + 1];\n   view[i + 2] = heap[dst + 2];\n   view[i + 3] = heap[dst + 3];\n  }\n } else {\n  var view = HEAPF32.subarray(value >> 2, value + count * 16 >> 2);\n }\n GLctx.uniform4fv(webglGetUniformLocation(location), view);\n}\n\nfunction _emscripten_glUniform4i(location, v0, v1, v2, v3) {\n GLctx.uniform4i(webglGetUniformLocation(location), v0, v1, v2, v3);\n}\n\nfunction _emscripten_glUniform4iv(location, count, value) {\n if (GL.currentContext.version >= 2) {\n  count && GLctx.uniform4iv(webglGetUniformLocation(location), HEAP32, value >> 2, count * 4);\n  return;\n }\n if (count <= 72) {\n  var view = __miniTempWebGLIntBuffers[4 * count - 1];\n  for (var i = 0; i < 4 * count; i += 4) {\n   view[i] = SAFE_HEAP_LOAD((value + 4 * i >> 2) * 4, 4, 0);\n   view[i + 1] = SAFE_HEAP_LOAD((value + (4 * i + 4) >> 2) * 4, 4, 0);\n   view[i + 2] = SAFE_HEAP_LOAD((value + (4 * i + 8) >> 2) * 4, 4, 0);\n   view[i + 3] = SAFE_HEAP_LOAD((value + (4 * i + 12) >> 2) * 4, 4, 0);\n  }\n } else {\n  var view = HEAP32.subarray(value >> 2, value + count * 16 >> 2);\n }\n GLctx.uniform4iv(webglGetUniformLocation(location), view);\n}\n\nfunction _emscripten_glUniformMatrix2fv(location, count, transpose, value) {\n if (GL.currentContext.version >= 2) {\n  count && GLctx.uniformMatrix2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value >> 2, count * 4);\n  return;\n }\n if (count <= 72) {\n  var view = miniTempWebGLFloatBuffers[4 * count - 1];\n  for (var i = 0; i < 4 * count; i += 4) {\n   view[i] = SAFE_HEAP_LOAD_D((value + 4 * i >> 2) * 4, 4, 0);\n   view[i + 1] = SAFE_HEAP_LOAD_D((value + (4 * i + 4) >> 2) * 4, 4, 0);\n   view[i + 2] = SAFE_HEAP_LOAD_D((value + (4 * i + 8) >> 2) * 4, 4, 0);\n   view[i + 3] = SAFE_HEAP_LOAD_D((value + (4 * i + 12) >> 2) * 4, 4, 0);\n  }\n } else {\n  var view = HEAPF32.subarray(value >> 2, value + count * 16 >> 2);\n }\n GLctx.uniformMatrix2fv(webglGetUniformLocation(location), !!transpose, view);\n}\n\nfunction _emscripten_glUniformMatrix3fv(location, count, transpose, value) {\n if (GL.currentContext.version >= 2) {\n  count && GLctx.uniformMatrix3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value >> 2, count * 9);\n  return;\n }\n if (count <= 32) {\n  var view = miniTempWebGLFloatBuffers[9 * count - 1];\n  for (var i = 0; i < 9 * count; i += 9) {\n   view[i] = SAFE_HEAP_LOAD_D((value + 4 * i >> 2) * 4, 4, 0);\n   view[i + 1] = SAFE_HEAP_LOAD_D((value + (4 * i + 4) >> 2) * 4, 4, 0);\n   view[i + 2] = SAFE_HEAP_LOAD_D((value + (4 * i + 8) >> 2) * 4, 4, 0);\n   view[i + 3] = SAFE_HEAP_LOAD_D((value + (4 * i + 12) >> 2) * 4, 4, 0);\n   view[i + 4] = SAFE_HEAP_LOAD_D((value + (4 * i + 16) >> 2) * 4, 4, 0);\n   view[i + 5] = SAFE_HEAP_LOAD_D((value + (4 * i + 20) >> 2) * 4, 4, 0);\n   view[i + 6] = SAFE_HEAP_LOAD_D((value + (4 * i + 24) >> 2) * 4, 4, 0);\n   view[i + 7] = SAFE_HEAP_LOAD_D((value + (4 * i + 28) >> 2) * 4, 4, 0);\n   view[i + 8] = SAFE_HEAP_LOAD_D((value + (4 * i + 32) >> 2) * 4, 4, 0);\n  }\n } else {\n  var view = HEAPF32.subarray(value >> 2, value + count * 36 >> 2);\n }\n GLctx.uniformMatrix3fv(webglGetUniformLocation(location), !!transpose, view);\n}\n\nfunction _emscripten_glUniformMatrix4fv(location, count, transpose, value) {\n if (GL.currentContext.version >= 2) {\n  count && GLctx.uniformMatrix4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value >> 2, count * 16);\n  return;\n }\n if (count <= 18) {\n  var view = miniTempWebGLFloatBuffers[16 * count - 1];\n  var heap = HEAPF32;\n  value >>= 2;\n  for (var i = 0; i < 16 * count; i += 16) {\n   var dst = value + i;\n   view[i] = heap[dst];\n   view[i + 1] = heap[dst + 1];\n   view[i + 2] = heap[dst + 2];\n   view[i + 3] = heap[dst + 3];\n   view[i + 4] = heap[dst + 4];\n   view[i + 5] = heap[dst + 5];\n   view[i + 6] = heap[dst + 6];\n   view[i + 7] = heap[dst + 7];\n   view[i + 8] = heap[dst + 8];\n   view[i + 9] = heap[dst + 9];\n   view[i + 10] = heap[dst + 10];\n   view[i + 11] = heap[dst + 11];\n   view[i + 12] = heap[dst + 12];\n   view[i + 13] = heap[dst + 13];\n   view[i + 14] = heap[dst + 14];\n   view[i + 15] = heap[dst + 15];\n  }\n } else {\n  var view = HEAPF32.subarray(value >> 2, value + count * 64 >> 2);\n }\n GLctx.uniformMatrix4fv(webglGetUniformLocation(location), !!transpose, view);\n}\n\nfunction _emscripten_glUseProgram(program) {\n program = GL.programs[program];\n GLctx.useProgram(program);\n GLctx.currentProgram = program;\n}\n\nfunction _emscripten_glVertexAttrib1f(x0, x1) {\n GLctx[\"vertexAttrib1f\"](x0, x1);\n}\n\nfunction _emscripten_glVertexAttrib2fv(index, v) {\n GLctx.vertexAttrib2f(index, SAFE_HEAP_LOAD_D((v >> 2) * 4, 4, 0), SAFE_HEAP_LOAD_D((v + 4 >> 2) * 4, 4, 0));\n}\n\nfunction _emscripten_glVertexAttrib3fv(index, v) {\n GLctx.vertexAttrib3f(index, SAFE_HEAP_LOAD_D((v >> 2) * 4, 4, 0), SAFE_HEAP_LOAD_D((v + 4 >> 2) * 4, 4, 0), SAFE_HEAP_LOAD_D((v + 8 >> 2) * 4, 4, 0));\n}\n\nfunction _emscripten_glVertexAttrib4fv(index, v) {\n GLctx.vertexAttrib4f(index, SAFE_HEAP_LOAD_D((v >> 2) * 4, 4, 0), SAFE_HEAP_LOAD_D((v + 4 >> 2) * 4, 4, 0), SAFE_HEAP_LOAD_D((v + 8 >> 2) * 4, 4, 0), SAFE_HEAP_LOAD_D((v + 12 >> 2) * 4, 4, 0));\n}\n\nfunction _emscripten_glVertexAttribPointer(index, size, type, normalized, stride, ptr) {\n GLctx.vertexAttribPointer(index, size, type, !!normalized, stride, ptr);\n}\n\nfunction _emscripten_glViewport(x0, x1, x2, x3) {\n GLctx[\"viewport\"](x0, x1, x2, x3);\n}\n\nfunction convertI32PairToI53(lo, hi) {\n assert(hi === (hi | 0));\n return (lo >>> 0) + hi * 4294967296;\n}\n\nfunction _emscripten_glWaitSync(sync, flags, timeoutLo, timeoutHi) {\n GLctx.waitSync(GL.syncs[sync], flags, convertI32PairToI53(timeoutLo, timeoutHi));\n}\n\nfunction _emscripten_memcpy_big(dest, src, num) {\n HEAPU8.copyWithin(dest, src, src + num);\n}\n\nfunction getHeapMax() {\n return 2147483648;\n}\n\nfunction emscripten_realloc_buffer(size) {\n try {\n  wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n  updateGlobalBufferAndViews(wasmMemory.buffer);\n  return 1;\n } catch (e) {\n  err(\"emscripten_realloc_buffer: Attempted to grow heap from \" + buffer.byteLength + \" bytes to \" + size + \" bytes, but got error: \" + e);\n }\n}\n\nfunction _emscripten_resize_heap(requestedSize) {\n var oldSize = HEAPU8.length;\n requestedSize = requestedSize >>> 0;\n assert(requestedSize > oldSize);\n var maxHeapSize = getHeapMax();\n if (requestedSize > maxHeapSize) {\n  err(\"Cannot enlarge memory, asked to go up to \" + requestedSize + \" bytes, but the limit is \" + maxHeapSize + \" bytes!\");\n  return false;\n }\n let alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\n for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n  var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\n  overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n  var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n  var replacement = emscripten_realloc_buffer(newSize);\n  if (replacement) {\n   return true;\n  }\n }\n err(\"Failed to grow the heap from \" + oldSize + \" bytes to \" + newSize + \" bytes, not enough memory!\");\n return false;\n}\n\nvar __emscripten_webgl_power_preferences = [ \"default\", \"low-power\", \"high-performance\" ];\n\nfunction _emscripten_webgl_do_create_context(target, attributes) {\n assert(attributes);\n var a = attributes >> 2;\n var powerPreference = SAFE_HEAP_LOAD((a + (24 >> 2)) * 4, 4, 0);\n var contextAttributes = {\n  \"alpha\": !!SAFE_HEAP_LOAD((a + (0 >> 2)) * 4, 4, 0),\n  \"depth\": !!SAFE_HEAP_LOAD((a + (4 >> 2)) * 4, 4, 0),\n  \"stencil\": !!SAFE_HEAP_LOAD((a + (8 >> 2)) * 4, 4, 0),\n  \"antialias\": !!SAFE_HEAP_LOAD((a + (12 >> 2)) * 4, 4, 0),\n  \"premultipliedAlpha\": !!SAFE_HEAP_LOAD((a + (16 >> 2)) * 4, 4, 0),\n  \"preserveDrawingBuffer\": !!SAFE_HEAP_LOAD((a + (20 >> 2)) * 4, 4, 0),\n  \"powerPreference\": __emscripten_webgl_power_preferences[powerPreference],\n  \"failIfMajorPerformanceCaveat\": !!SAFE_HEAP_LOAD((a + (28 >> 2)) * 4, 4, 0),\n  majorVersion: SAFE_HEAP_LOAD((a + (32 >> 2)) * 4, 4, 0),\n  minorVersion: SAFE_HEAP_LOAD((a + (36 >> 2)) * 4, 4, 0),\n  enableExtensionsByDefault: SAFE_HEAP_LOAD((a + (40 >> 2)) * 4, 4, 0),\n  explicitSwapControl: SAFE_HEAP_LOAD((a + (44 >> 2)) * 4, 4, 0),\n  proxyContextToMainThread: SAFE_HEAP_LOAD((a + (48 >> 2)) * 4, 4, 0),\n  renderViaOffscreenBackBuffer: SAFE_HEAP_LOAD((a + (52 >> 2)) * 4, 4, 0)\n };\n var canvas = findCanvasEventTarget(target);\n if (!canvas) {\n  return 0;\n }\n if (contextAttributes.explicitSwapControl) {\n  return 0;\n }\n var contextHandle = GL.createContext(canvas, contextAttributes);\n return contextHandle;\n}\n\nvar _emscripten_webgl_create_context = _emscripten_webgl_do_create_context;\n\nfunction _emscripten_webgl_destroy_context(contextHandle) {\n if (GL.currentContext == contextHandle) GL.currentContext = 0;\n GL.deleteContext(contextHandle);\n}\n\nfunction _emscripten_webgl_do_get_current_context() {\n return GL.currentContext ? GL.currentContext.handle : 0;\n}\n\nvar _emscripten_webgl_get_current_context = _emscripten_webgl_do_get_current_context;\n\nfunction _emscripten_webgl_init_context_attributes(attributes) {\n assert(attributes);\n var a = attributes >> 2;\n for (var i = 0; i < 56 >> 2; ++i) {\n  SAFE_HEAP_STORE((a + i) * 4, 0, 4);\n }\n SAFE_HEAP_STORE((a + (0 >> 2)) * 4, SAFE_HEAP_STORE((a + (4 >> 2)) * 4, SAFE_HEAP_STORE((a + (12 >> 2)) * 4, SAFE_HEAP_STORE((a + (16 >> 2)) * 4, SAFE_HEAP_STORE((a + (32 >> 2)) * 4, SAFE_HEAP_STORE((a + (40 >> 2)) * 4, 1, 4), 4), 4), 4), 4), 4);\n}\n\nfunction _emscripten_webgl_make_context_current(contextHandle) {\n var success = GL.makeContextCurrent(contextHandle);\n return success ? 0 : -5;\n}\n\nfunction _fd_close(fd) {\n try {\n  var stream = SYSCALLS.getStreamFromFD(fd);\n  FS.close(stream);\n  return 0;\n } catch (e) {\n  if (typeof FS == \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\n  return e.errno;\n }\n}\n\nfunction doReadv(stream, iov, iovcnt, offset) {\n var ret = 0;\n for (var i = 0; i < iovcnt; i++) {\n  var ptr = SAFE_HEAP_LOAD((iov >> 2) * 4, 4, 1);\n  var len = SAFE_HEAP_LOAD((iov + 4 >> 2) * 4, 4, 1);\n  iov += 8;\n  var curr = FS.read(stream, HEAP8, ptr, len, offset);\n  if (curr < 0) return -1;\n  ret += curr;\n  if (curr < len) break;\n }\n return ret;\n}\n\nfunction _fd_read(fd, iov, iovcnt, pnum) {\n try {\n  var stream = SYSCALLS.getStreamFromFD(fd);\n  var num = doReadv(stream, iov, iovcnt);\n  SAFE_HEAP_STORE((pnum >> 2) * 4, num, 4);\n  return 0;\n } catch (e) {\n  if (typeof FS == \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\n  return e.errno;\n }\n}\n\nfunction convertI32PairToI53Checked(lo, hi) {\n assert(lo == lo >>> 0 || lo == (lo | 0));\n assert(hi === (hi | 0));\n return hi + 2097152 >>> 0 < 4194305 - !!lo ? (lo >>> 0) + hi * 4294967296 : NaN;\n}\n\nfunction _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n try {\n  var offset = convertI32PairToI53Checked(offset_low, offset_high);\n  if (isNaN(offset)) return 61;\n  var stream = SYSCALLS.getStreamFromFD(fd);\n  FS.llseek(stream, offset, whence);\n  tempI64 = [ stream.position >>> 0, (tempDouble = stream.position, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], \n  SAFE_HEAP_STORE((newOffset >> 2) * 4, tempI64[0], 4), SAFE_HEAP_STORE((newOffset + 4 >> 2) * 4, tempI64[1], 4);\n  if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;\n  return 0;\n } catch (e) {\n  if (typeof FS == \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\n  return e.errno;\n }\n}\n\nfunction doWritev(stream, iov, iovcnt, offset) {\n var ret = 0;\n for (var i = 0; i < iovcnt; i++) {\n  var ptr = SAFE_HEAP_LOAD((iov >> 2) * 4, 4, 1);\n  var len = SAFE_HEAP_LOAD((iov + 4 >> 2) * 4, 4, 1);\n  iov += 8;\n  var curr = FS.write(stream, HEAP8, ptr, len, offset);\n  if (curr < 0) return -1;\n  ret += curr;\n }\n return ret;\n}\n\nfunction _fd_write(fd, iov, iovcnt, pnum) {\n try {\n  var stream = SYSCALLS.getStreamFromFD(fd);\n  var num = doWritev(stream, iov, iovcnt);\n  SAFE_HEAP_STORE((pnum >> 2) * 4, num, 4);\n  return 0;\n } catch (e) {\n  if (typeof FS == \"undefined\" || !(e instanceof FS.ErrnoError)) throw e;\n  return e.errno;\n }\n}\n\nfunction uleb128Encode(n, target) {\n assert(n < 16384);\n if (n < 128) {\n  target.push(n);\n } else {\n  target.push(n % 128 | 128, n >> 7);\n }\n}\n\nfunction convertJsFunctionToWasm(func, sig) {\n if (typeof WebAssembly.Function == \"function\") {\n  return new WebAssembly.Function(sigToWasmTypes(sig), func);\n }\n var typeSectionBody = [ 1, 96 ];\n var sigRet = sig.slice(0, 1);\n var sigParam = sig.slice(1);\n var typeCodes = {\n  \"i\": 127,\n  \"p\": 127,\n  \"j\": 126,\n  \"f\": 125,\n  \"d\": 124\n };\n uleb128Encode(sigParam.length, typeSectionBody);\n for (var i = 0; i < sigParam.length; ++i) {\n  assert(sigParam[i] in typeCodes, \"invalid signature char: \" + sigParam[i]);\n  typeSectionBody.push(typeCodes[sigParam[i]]);\n }\n if (sigRet == \"v\") {\n  typeSectionBody.push(0);\n } else {\n  typeSectionBody.push(1, typeCodes[sigRet]);\n }\n var bytes = [ 0, 97, 115, 109, 1, 0, 0, 0, 1 ];\n uleb128Encode(typeSectionBody.length, bytes);\n bytes.push.apply(bytes, typeSectionBody);\n bytes.push(2, 7, 1, 1, 101, 1, 102, 0, 0, 7, 5, 1, 1, 102, 0, 0);\n var module = new WebAssembly.Module(new Uint8Array(bytes));\n var instance = new WebAssembly.Instance(module, {\n  \"e\": {\n   \"f\": func\n  }\n });\n var wrappedFunc = instance.exports[\"f\"];\n return wrappedFunc;\n}\n\nfunction updateTableMap(offset, count) {\n if (functionsInTableMap) {\n  for (var i = offset; i < offset + count; i++) {\n   var item = getWasmTableEntry(i);\n   if (item) {\n    functionsInTableMap.set(item, i);\n   }\n  }\n }\n}\n\nvar functionsInTableMap = undefined;\n\nvar freeTableIndexes = [];\n\nfunction getEmptyTableSlot() {\n if (freeTableIndexes.length) {\n  return freeTableIndexes.pop();\n }\n try {\n  wasmTable.grow(1);\n } catch (err) {\n  if (!(err instanceof RangeError)) {\n   throw err;\n  }\n  throw \"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\";\n }\n return wasmTable.length - 1;\n}\n\nfunction setWasmTableEntry(idx, func) {\n wasmTable.set(idx, func);\n wasmTableMirror[idx] = wasmTable.get(idx);\n}\n\nfunction addFunction(func, sig) {\n assert(typeof func != \"undefined\");\n if (!functionsInTableMap) {\n  functionsInTableMap = new WeakMap();\n  updateTableMap(0, wasmTable.length);\n }\n if (functionsInTableMap.has(func)) {\n  return functionsInTableMap.get(func);\n }\n var ret = getEmptyTableSlot();\n try {\n  setWasmTableEntry(ret, func);\n } catch (err) {\n  if (!(err instanceof TypeError)) {\n   throw err;\n  }\n  assert(typeof sig != \"undefined\", \"Missing signature argument to addFunction: \" + func);\n  var wrapped = convertJsFunctionToWasm(func, sig);\n  setWasmTableEntry(ret, wrapped);\n }\n functionsInTableMap.set(func, ret);\n return ret;\n}\n\nfunction removeFunction(index) {\n functionsInTableMap.delete(getWasmTableEntry(index));\n freeTableIndexes.push(index);\n}\n\nvar ALLOC_NORMAL = 0;\n\nvar ALLOC_STACK = 1;\n\nfunction allocate(slab, allocator) {\n var ret;\n assert(typeof allocator == \"number\", \"allocate no longer takes a type argument\");\n assert(typeof slab != \"number\", \"allocate no longer takes a number as arg0\");\n if (allocator == ALLOC_STACK) {\n  ret = stackAlloc(slab.length);\n } else {\n  ret = _malloc(slab.length);\n }\n if (!slab.subarray && !slab.slice) {\n  slab = new Uint8Array(slab);\n }\n HEAPU8.set(slab, ret);\n return ret;\n}\n\nfunction AsciiToString(ptr) {\n var str = \"\";\n while (1) {\n  var ch = SAFE_HEAP_LOAD(ptr++ >> 0, 1, 1);\n  if (!ch) return str;\n  str += String.fromCharCode(ch);\n }\n}\n\nfunction writeAsciiToMemory(str, buffer, dontAddNull) {\n for (var i = 0; i < str.length; ++i) {\n  assert(str.charCodeAt(i) === (str.charCodeAt(i) & 255));\n  SAFE_HEAP_STORE(buffer++ >> 0, str.charCodeAt(i), 1);\n }\n if (!dontAddNull) SAFE_HEAP_STORE(buffer >> 0, 0, 1);\n}\n\nfunction stringToAscii(str, outPtr) {\n return writeAsciiToMemory(str, outPtr, false);\n}\n\nfunction allocateUTF8(str) {\n var size = lengthBytesUTF8(str) + 1;\n var ret = _malloc(size);\n if (ret) stringToUTF8Array(str, HEAP8, ret, size);\n return ret;\n}\n\nfunction allocateUTF8OnStack(str) {\n var size = lengthBytesUTF8(str) + 1;\n var ret = stackAlloc(size);\n stringToUTF8Array(str, HEAP8, ret, size);\n return ret;\n}\n\nfunction writeStringToMemory(string, buffer, dontAddNull) {\n warnOnce(\"writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!\");\n var lastChar, end;\n if (dontAddNull) {\n  end = buffer + lengthBytesUTF8(string);\n  lastChar = SAFE_HEAP_LOAD(end, 1, 0);\n }\n stringToUTF8(string, buffer, Infinity);\n if (dontAddNull) SAFE_HEAP_STORE(end, lastChar, 1);\n}\n\nfunction intArrayToString(array) {\n var ret = [];\n for (var i = 0; i < array.length; i++) {\n  var chr = array[i];\n  if (chr > 255) {\n   if (ASSERTIONS) {\n    assert(false, \"Character code \" + chr + \" (\" + String.fromCharCode(chr) + \")  at offset \" + i + \" not in 0x00-0xFF.\");\n   }\n   chr &= 255;\n  }\n  ret.push(String.fromCharCode(chr));\n }\n return ret.join(\"\");\n}\n\nfunction getCFunc(ident) {\n var func = Module[\"_\" + ident];\n assert(func, \"Cannot call unknown function \" + ident + \", make sure it is exported\");\n return func;\n}\n\nfunction ccall(ident, returnType, argTypes, args, opts) {\n var toC = {\n  \"string\": str => {\n   var ret = 0;\n   if (str !== null && str !== undefined && str !== 0) {\n    var len = (str.length << 2) + 1;\n    ret = stackAlloc(len);\n    stringToUTF8(str, ret, len);\n   }\n   return ret;\n  },\n  \"array\": arr => {\n   var ret = stackAlloc(arr.length);\n   writeArrayToMemory(arr, ret);\n   return ret;\n  }\n };\n function convertReturnValue(ret) {\n  if (returnType === \"string\") {\n   return UTF8ToString(ret);\n  }\n  if (returnType === \"boolean\") return Boolean(ret);\n  return ret;\n }\n var func = getCFunc(ident);\n var cArgs = [];\n var stack = 0;\n assert(returnType !== \"array\", 'Return type should not be \"array\".');\n if (args) {\n  for (var i = 0; i < args.length; i++) {\n   var converter = toC[argTypes[i]];\n   if (converter) {\n    if (stack === 0) stack = stackSave();\n    cArgs[i] = converter(args[i]);\n   } else {\n    cArgs[i] = args[i];\n   }\n  }\n }\n var previousAsync = Asyncify.currData;\n var ret = func.apply(null, cArgs);\n function onDone(ret) {\n  runtimeKeepalivePop();\n  if (stack !== 0) stackRestore(stack);\n  return convertReturnValue(ret);\n }\n runtimeKeepalivePush();\n var asyncMode = opts && opts.async;\n if (Asyncify.currData != previousAsync) {\n  assert(!(previousAsync && Asyncify.currData), \"We cannot start an async operation when one is already flight\");\n  assert(!(previousAsync && !Asyncify.currData), \"We cannot stop an async operation in flight\");\n  assert(asyncMode, \"The call to \" + ident + \" is running asynchronously. If this was intended, add the async option to the ccall/cwrap call.\");\n  return Asyncify.whenDone().then(onDone);\n }\n ret = onDone(ret);\n if (asyncMode) return Promise.resolve(ret);\n return ret;\n}\n\nfunction cwrap(ident, returnType, argTypes, opts) {\n return function() {\n  return ccall(ident, returnType, argTypes, arguments, opts);\n };\n}\n\nvar FSNode = function(parent, name, mode, rdev) {\n if (!parent) {\n  parent = this;\n }\n this.parent = parent;\n this.mount = parent.mount;\n this.mounted = null;\n this.id = FS.nextInode++;\n this.name = name;\n this.mode = mode;\n this.node_ops = {};\n this.stream_ops = {};\n this.rdev = rdev;\n};\n\nvar readMode = 292 | 73;\n\nvar writeMode = 146;\n\nObject.defineProperties(FSNode.prototype, {\n read: {\n  get: function() {\n   return (this.mode & readMode) === readMode;\n  },\n  set: function(val) {\n   val ? this.mode |= readMode : this.mode &= ~readMode;\n  }\n },\n write: {\n  get: function() {\n   return (this.mode & writeMode) === writeMode;\n  },\n  set: function(val) {\n   val ? this.mode |= writeMode : this.mode &= ~writeMode;\n  }\n },\n isFolder: {\n  get: function() {\n   return FS.isDir(this.mode);\n  }\n },\n isDevice: {\n  get: function() {\n   return FS.isChrdev(this.mode);\n  }\n }\n});\n\nFS.FSNode = FSNode;\n\nFS.staticInit();\n\nERRNO_CODES = {\n \"EPERM\": 63,\n \"ENOENT\": 44,\n \"ESRCH\": 71,\n \"EINTR\": 27,\n \"EIO\": 29,\n \"ENXIO\": 60,\n \"E2BIG\": 1,\n \"ENOEXEC\": 45,\n \"EBADF\": 8,\n \"ECHILD\": 12,\n \"EAGAIN\": 6,\n \"EWOULDBLOCK\": 6,\n \"ENOMEM\": 48,\n \"EACCES\": 2,\n \"EFAULT\": 21,\n \"ENOTBLK\": 105,\n \"EBUSY\": 10,\n \"EEXIST\": 20,\n \"EXDEV\": 75,\n \"ENODEV\": 43,\n \"ENOTDIR\": 54,\n \"EISDIR\": 31,\n \"EINVAL\": 28,\n \"ENFILE\": 41,\n \"EMFILE\": 33,\n \"ENOTTY\": 59,\n \"ETXTBSY\": 74,\n \"EFBIG\": 22,\n \"ENOSPC\": 51,\n \"ESPIPE\": 70,\n \"EROFS\": 69,\n \"EMLINK\": 34,\n \"EPIPE\": 64,\n \"EDOM\": 18,\n \"ERANGE\": 68,\n \"ENOMSG\": 49,\n \"EIDRM\": 24,\n \"ECHRNG\": 106,\n \"EL2NSYNC\": 156,\n \"EL3HLT\": 107,\n \"EL3RST\": 108,\n \"ELNRNG\": 109,\n \"EUNATCH\": 110,\n \"ENOCSI\": 111,\n \"EL2HLT\": 112,\n \"EDEADLK\": 16,\n \"ENOLCK\": 46,\n \"EBADE\": 113,\n \"EBADR\": 114,\n \"EXFULL\": 115,\n \"ENOANO\": 104,\n \"EBADRQC\": 103,\n \"EBADSLT\": 102,\n \"EDEADLOCK\": 16,\n \"EBFONT\": 101,\n \"ENOSTR\": 100,\n \"ENODATA\": 116,\n \"ETIME\": 117,\n \"ENOSR\": 118,\n \"ENONET\": 119,\n \"ENOPKG\": 120,\n \"EREMOTE\": 121,\n \"ENOLINK\": 47,\n \"EADV\": 122,\n \"ESRMNT\": 123,\n \"ECOMM\": 124,\n \"EPROTO\": 65,\n \"EMULTIHOP\": 36,\n \"EDOTDOT\": 125,\n \"EBADMSG\": 9,\n \"ENOTUNIQ\": 126,\n \"EBADFD\": 127,\n \"EREMCHG\": 128,\n \"ELIBACC\": 129,\n \"ELIBBAD\": 130,\n \"ELIBSCN\": 131,\n \"ELIBMAX\": 132,\n \"ELIBEXEC\": 133,\n \"ENOSYS\": 52,\n \"ENOTEMPTY\": 55,\n \"ENAMETOOLONG\": 37,\n \"ELOOP\": 32,\n \"EOPNOTSUPP\": 138,\n \"EPFNOSUPPORT\": 139,\n \"ECONNRESET\": 15,\n \"ENOBUFS\": 42,\n \"EAFNOSUPPORT\": 5,\n \"EPROTOTYPE\": 67,\n \"ENOTSOCK\": 57,\n \"ENOPROTOOPT\": 50,\n \"ESHUTDOWN\": 140,\n \"ECONNREFUSED\": 14,\n \"EADDRINUSE\": 3,\n \"ECONNABORTED\": 13,\n \"ENETUNREACH\": 40,\n \"ENETDOWN\": 38,\n \"ETIMEDOUT\": 73,\n \"EHOSTDOWN\": 142,\n \"EHOSTUNREACH\": 23,\n \"EINPROGRESS\": 26,\n \"EALREADY\": 7,\n \"EDESTADDRREQ\": 17,\n \"EMSGSIZE\": 35,\n \"EPROTONOSUPPORT\": 66,\n \"ESOCKTNOSUPPORT\": 137,\n \"EADDRNOTAVAIL\": 4,\n \"ENETRESET\": 39,\n \"EISCONN\": 30,\n \"ENOTCONN\": 53,\n \"ETOOMANYREFS\": 141,\n \"EUSERS\": 136,\n \"EDQUOT\": 19,\n \"ESTALE\": 72,\n \"ENOTSUP\": 138,\n \"ENOMEDIUM\": 148,\n \"EILSEQ\": 25,\n \"EOVERFLOW\": 61,\n \"ECANCELED\": 11,\n \"ENOTRECOVERABLE\": 56,\n \"EOWNERDEAD\": 62,\n \"ESTRPIPE\": 135\n};\n\nInternalError = Module[\"InternalError\"] = extendError(Error, \"InternalError\");\n\nembind_init_charCodes();\n\nBindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\n\ninit_ClassHandle();\n\ninit_embind();\n\ninit_RegisteredPointer();\n\nUnboundTypeError = Module[\"UnboundTypeError\"] = extendError(Error, \"UnboundTypeError\");\n\ninit_emval();\n\nvar GLctx;\n\nvar miniTempWebGLFloatBuffersStorage = new Float32Array(288);\n\nfor (var i = 0; i < 288; ++i) {\n miniTempWebGLFloatBuffers[i] = miniTempWebGLFloatBuffersStorage.subarray(0, i + 1);\n}\n\nvar __miniTempWebGLIntBuffersStorage = new Int32Array(288);\n\nfor (var i = 0; i < 288; ++i) {\n __miniTempWebGLIntBuffers[i] = __miniTempWebGLIntBuffersStorage.subarray(0, i + 1);\n}\n\nvar ASSERTIONS = true;\n\nfunction checkIncomingModuleAPI() {\n ignoredModuleProp(\"fetchSettings\");\n}\n\nvar asmLibraryArg = {\n \"__assert_fail\": ___assert_fail,\n \"__cxa_allocate_exception\": ___cxa_allocate_exception,\n \"__cxa_throw\": ___cxa_throw,\n \"__syscall_fcntl64\": ___syscall_fcntl64,\n \"__syscall_ioctl\": ___syscall_ioctl,\n \"__syscall_openat\": ___syscall_openat,\n \"_embind_finalize_value_object\": __embind_finalize_value_object,\n \"_embind_register_bigint\": __embind_register_bigint,\n \"_embind_register_bool\": __embind_register_bool,\n \"_embind_register_class\": __embind_register_class,\n \"_embind_register_class_class_function\": __embind_register_class_class_function,\n \"_embind_register_class_constructor\": __embind_register_class_constructor,\n \"_embind_register_class_function\": __embind_register_class_function,\n \"_embind_register_class_property\": __embind_register_class_property,\n \"_embind_register_emval\": __embind_register_emval,\n \"_embind_register_enum\": __embind_register_enum,\n \"_embind_register_enum_value\": __embind_register_enum_value,\n \"_embind_register_float\": __embind_register_float,\n \"_embind_register_function\": __embind_register_function,\n \"_embind_register_integer\": __embind_register_integer,\n \"_embind_register_memory_view\": __embind_register_memory_view,\n \"_embind_register_smart_ptr\": __embind_register_smart_ptr,\n \"_embind_register_std_string\": __embind_register_std_string,\n \"_embind_register_std_wstring\": __embind_register_std_wstring,\n \"_embind_register_value_object\": __embind_register_value_object,\n \"_embind_register_value_object_field\": __embind_register_value_object_field,\n \"_embind_register_void\": __embind_register_void,\n \"_emscripten_date_now\": __emscripten_date_now,\n \"_emscripten_get_now_is_monotonic\": __emscripten_get_now_is_monotonic,\n \"_emval_as\": __emval_as,\n \"_emval_await\": __emval_await,\n \"_emval_call\": __emval_call,\n \"_emval_call_method\": __emval_call_method,\n \"_emval_call_void_method\": __emval_call_void_method,\n \"_emval_decref\": __emval_decref,\n \"_emval_equals\": __emval_equals,\n \"_emval_get_global\": __emval_get_global,\n \"_emval_get_method_caller\": __emval_get_method_caller,\n \"_emval_get_module_property\": __emval_get_module_property,\n \"_emval_get_property\": __emval_get_property,\n \"_emval_incref\": __emval_incref,\n \"_emval_instanceof\": __emval_instanceof,\n \"_emval_new\": __emval_new,\n \"_emval_new_array\": __emval_new_array,\n \"_emval_new_cstring\": __emval_new_cstring,\n \"_emval_new_object\": __emval_new_object,\n \"_emval_run_destructors\": __emval_run_destructors,\n \"_emval_set_property\": __emval_set_property,\n \"_emval_take_value\": __emval_take_value,\n \"abort\": _abort,\n \"alignfault\": alignfault,\n \"emscripten_get_canvas_element_size\": _emscripten_get_canvas_element_size,\n \"emscripten_get_now\": _emscripten_get_now,\n \"emscripten_glActiveTexture\": _emscripten_glActiveTexture,\n \"emscripten_glAttachShader\": _emscripten_glAttachShader,\n \"emscripten_glBindAttribLocation\": _emscripten_glBindAttribLocation,\n \"emscripten_glBindBuffer\": _emscripten_glBindBuffer,\n \"emscripten_glBindFramebuffer\": _emscripten_glBindFramebuffer,\n \"emscripten_glBindRenderbuffer\": _emscripten_glBindRenderbuffer,\n \"emscripten_glBindTexture\": _emscripten_glBindTexture,\n \"emscripten_glBindVertexArray\": _emscripten_glBindVertexArray,\n \"emscripten_glBindVertexArrayOES\": _emscripten_glBindVertexArrayOES,\n \"emscripten_glBlendColor\": _emscripten_glBlendColor,\n \"emscripten_glBlendEquation\": _emscripten_glBlendEquation,\n \"emscripten_glBlendEquationSeparate\": _emscripten_glBlendEquationSeparate,\n \"emscripten_glBlendFunc\": _emscripten_glBlendFunc,\n \"emscripten_glBlitFramebuffer\": _emscripten_glBlitFramebuffer,\n \"emscripten_glBufferData\": _emscripten_glBufferData,\n \"emscripten_glCheckFramebufferStatus\": _emscripten_glCheckFramebufferStatus,\n \"emscripten_glClear\": _emscripten_glClear,\n \"emscripten_glClearColor\": _emscripten_glClearColor,\n \"emscripten_glClearStencil\": _emscripten_glClearStencil,\n \"emscripten_glColorMask\": _emscripten_glColorMask,\n \"emscripten_glCompileShader\": _emscripten_glCompileShader,\n \"emscripten_glCopyTexSubImage2D\": _emscripten_glCopyTexSubImage2D,\n \"emscripten_glCreateProgram\": _emscripten_glCreateProgram,\n \"emscripten_glCreateShader\": _emscripten_glCreateShader,\n \"emscripten_glDeleteBuffers\": _emscripten_glDeleteBuffers,\n \"emscripten_glDeleteFramebuffers\": _emscripten_glDeleteFramebuffers,\n \"emscripten_glDeleteProgram\": _emscripten_glDeleteProgram,\n \"emscripten_glDeleteRenderbuffers\": _emscripten_glDeleteRenderbuffers,\n \"emscripten_glDeleteShader\": _emscripten_glDeleteShader,\n \"emscripten_glDeleteSync\": _emscripten_glDeleteSync,\n \"emscripten_glDeleteTextures\": _emscripten_glDeleteTextures,\n \"emscripten_glDeleteVertexArrays\": _emscripten_glDeleteVertexArrays,\n \"emscripten_glDeleteVertexArraysOES\": _emscripten_glDeleteVertexArraysOES,\n \"emscripten_glDepthMask\": _emscripten_glDepthMask,\n \"emscripten_glDisable\": _emscripten_glDisable,\n \"emscripten_glDisableVertexAttribArray\": _emscripten_glDisableVertexAttribArray,\n \"emscripten_glDrawArrays\": _emscripten_glDrawArrays,\n \"emscripten_glDrawElements\": _emscripten_glDrawElements,\n \"emscripten_glEnable\": _emscripten_glEnable,\n \"emscripten_glEnableVertexAttribArray\": _emscripten_glEnableVertexAttribArray,\n \"emscripten_glFenceSync\": _emscripten_glFenceSync,\n \"emscripten_glFinish\": _emscripten_glFinish,\n \"emscripten_glFlush\": _emscripten_glFlush,\n \"emscripten_glFramebufferRenderbuffer\": _emscripten_glFramebufferRenderbuffer,\n \"emscripten_glFramebufferTexture2D\": _emscripten_glFramebufferTexture2D,\n \"emscripten_glGenBuffers\": _emscripten_glGenBuffers,\n \"emscripten_glGenFramebuffers\": _emscripten_glGenFramebuffers,\n \"emscripten_glGenRenderbuffers\": _emscripten_glGenRenderbuffers,\n \"emscripten_glGenTextures\": _emscripten_glGenTextures,\n \"emscripten_glGenVertexArrays\": _emscripten_glGenVertexArrays,\n \"emscripten_glGenVertexArraysOES\": _emscripten_glGenVertexArraysOES,\n \"emscripten_glGetAttribLocation\": _emscripten_glGetAttribLocation,\n \"emscripten_glGetBufferParameteriv\": _emscripten_glGetBufferParameteriv,\n \"emscripten_glGetError\": _emscripten_glGetError,\n \"emscripten_glGetFramebufferAttachmentParameteriv\": _emscripten_glGetFramebufferAttachmentParameteriv,\n \"emscripten_glGetIntegerv\": _emscripten_glGetIntegerv,\n \"emscripten_glGetProgramInfoLog\": _emscripten_glGetProgramInfoLog,\n \"emscripten_glGetProgramiv\": _emscripten_glGetProgramiv,\n \"emscripten_glGetRenderbufferParameteriv\": _emscripten_glGetRenderbufferParameteriv,\n \"emscripten_glGetShaderInfoLog\": _emscripten_glGetShaderInfoLog,\n \"emscripten_glGetShaderPrecisionFormat\": _emscripten_glGetShaderPrecisionFormat,\n \"emscripten_glGetShaderiv\": _emscripten_glGetShaderiv,\n \"emscripten_glGetString\": _emscripten_glGetString,\n \"emscripten_glGetStringi\": _emscripten_glGetStringi,\n \"emscripten_glGetUniformLocation\": _emscripten_glGetUniformLocation,\n \"emscripten_glIsEnabled\": _emscripten_glIsEnabled,\n \"emscripten_glIsTexture\": _emscripten_glIsTexture,\n \"emscripten_glLineWidth\": _emscripten_glLineWidth,\n \"emscripten_glLinkProgram\": _emscripten_glLinkProgram,\n \"emscripten_glPixelStorei\": _emscripten_glPixelStorei,\n \"emscripten_glReadPixels\": _emscripten_glReadPixels,\n \"emscripten_glRenderbufferStorage\": _emscripten_glRenderbufferStorage,\n \"emscripten_glRenderbufferStorageMultisample\": _emscripten_glRenderbufferStorageMultisample,\n \"emscripten_glScissor\": _emscripten_glScissor,\n \"emscripten_glShaderSource\": _emscripten_glShaderSource,\n \"emscripten_glTexImage2D\": _emscripten_glTexImage2D,\n \"emscripten_glTexParameterf\": _emscripten_glTexParameterf,\n \"emscripten_glTexParameterfv\": _emscripten_glTexParameterfv,\n \"emscripten_glTexParameteri\": _emscripten_glTexParameteri,\n \"emscripten_glTexParameteriv\": _emscripten_glTexParameteriv,\n \"emscripten_glTexSubImage2D\": _emscripten_glTexSubImage2D,\n \"emscripten_glUniform1f\": _emscripten_glUniform1f,\n \"emscripten_glUniform1fv\": _emscripten_glUniform1fv,\n \"emscripten_glUniform1i\": _emscripten_glUniform1i,\n \"emscripten_glUniform1iv\": _emscripten_glUniform1iv,\n \"emscripten_glUniform2f\": _emscripten_glUniform2f,\n \"emscripten_glUniform2fv\": _emscripten_glUniform2fv,\n \"emscripten_glUniform2i\": _emscripten_glUniform2i,\n \"emscripten_glUniform2iv\": _emscripten_glUniform2iv,\n \"emscripten_glUniform3f\": _emscripten_glUniform3f,\n \"emscripten_glUniform3fv\": _emscripten_glUniform3fv,\n \"emscripten_glUniform3i\": _emscripten_glUniform3i,\n \"emscripten_glUniform3iv\": _emscripten_glUniform3iv,\n \"emscripten_glUniform4f\": _emscripten_glUniform4f,\n \"emscripten_glUniform4fv\": _emscripten_glUniform4fv,\n \"emscripten_glUniform4i\": _emscripten_glUniform4i,\n \"emscripten_glUniform4iv\": _emscripten_glUniform4iv,\n \"emscripten_glUniformMatrix2fv\": _emscripten_glUniformMatrix2fv,\n \"emscripten_glUniformMatrix3fv\": _emscripten_glUniformMatrix3fv,\n \"emscripten_glUniformMatrix4fv\": _emscripten_glUniformMatrix4fv,\n \"emscripten_glUseProgram\": _emscripten_glUseProgram,\n \"emscripten_glVertexAttrib1f\": _emscripten_glVertexAttrib1f,\n \"emscripten_glVertexAttrib2fv\": _emscripten_glVertexAttrib2fv,\n \"emscripten_glVertexAttrib3fv\": _emscripten_glVertexAttrib3fv,\n \"emscripten_glVertexAttrib4fv\": _emscripten_glVertexAttrib4fv,\n \"emscripten_glVertexAttribPointer\": _emscripten_glVertexAttribPointer,\n \"emscripten_glViewport\": _emscripten_glViewport,\n \"emscripten_glWaitSync\": _emscripten_glWaitSync,\n \"emscripten_memcpy_big\": _emscripten_memcpy_big,\n \"emscripten_resize_heap\": _emscripten_resize_heap,\n \"emscripten_webgl_create_context\": _emscripten_webgl_create_context,\n \"emscripten_webgl_destroy_context\": _emscripten_webgl_destroy_context,\n \"emscripten_webgl_get_current_context\": _emscripten_webgl_get_current_context,\n \"emscripten_webgl_init_context_attributes\": _emscripten_webgl_init_context_attributes,\n \"emscripten_webgl_make_context_current\": _emscripten_webgl_make_context_current,\n \"fd_close\": _fd_close,\n \"fd_read\": _fd_read,\n \"fd_seek\": _fd_seek,\n \"fd_write\": _fd_write,\n \"segfault\": segfault\n};\n\nAsyncify.instrumentWasmImports(asmLibraryArg);\n\nvar asm = createWasm();\n\nvar ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = createExportWrapper(\"__wasm_call_ctors\");\n\nvar _free = Module[\"_free\"] = createExportWrapper(\"free\");\n\nvar _malloc = Module[\"_malloc\"] = createExportWrapper(\"malloc\");\n\nvar ___getTypeName = Module[\"___getTypeName\"] = createExportWrapper(\"__getTypeName\");\n\nvar __embind_initialize_bindings = Module[\"__embind_initialize_bindings\"] = createExportWrapper(\"_embind_initialize_bindings\");\n\nvar ___errno_location = Module[\"___errno_location\"] = createExportWrapper(\"__errno_location\");\n\nvar _fflush = Module[\"_fflush\"] = createExportWrapper(\"fflush\");\n\nvar _sbrk = Module[\"_sbrk\"] = createExportWrapper(\"sbrk\");\n\nvar _emscripten_get_sbrk_ptr = Module[\"_emscripten_get_sbrk_ptr\"] = createExportWrapper(\"emscripten_get_sbrk_ptr\");\n\nvar _emscripten_stack_init = Module[\"_emscripten_stack_init\"] = function() {\n return (_emscripten_stack_init = Module[\"_emscripten_stack_init\"] = Module[\"asm\"][\"emscripten_stack_init\"]).apply(null, arguments);\n};\n\nvar _emscripten_stack_set_limits = Module[\"_emscripten_stack_set_limits\"] = function() {\n return (_emscripten_stack_set_limits = Module[\"_emscripten_stack_set_limits\"] = Module[\"asm\"][\"emscripten_stack_set_limits\"]).apply(null, arguments);\n};\n\nvar _emscripten_stack_get_free = Module[\"_emscripten_stack_get_free\"] = function() {\n return (_emscripten_stack_get_free = Module[\"_emscripten_stack_get_free\"] = Module[\"asm\"][\"emscripten_stack_get_free\"]).apply(null, arguments);\n};\n\nvar _emscripten_stack_get_base = Module[\"_emscripten_stack_get_base\"] = function() {\n return (_emscripten_stack_get_base = Module[\"_emscripten_stack_get_base\"] = Module[\"asm\"][\"emscripten_stack_get_base\"]).apply(null, arguments);\n};\n\nvar _emscripten_stack_get_end = Module[\"_emscripten_stack_get_end\"] = function() {\n return (_emscripten_stack_get_end = Module[\"_emscripten_stack_get_end\"] = Module[\"asm\"][\"emscripten_stack_get_end\"]).apply(null, arguments);\n};\n\nvar stackSave = Module[\"stackSave\"] = createExportWrapper(\"stackSave\");\n\nvar stackRestore = Module[\"stackRestore\"] = createExportWrapper(\"stackRestore\");\n\nvar stackAlloc = Module[\"stackAlloc\"] = createExportWrapper(\"stackAlloc\");\n\nvar ___cxa_is_pointer_type = Module[\"___cxa_is_pointer_type\"] = createExportWrapper(\"__cxa_is_pointer_type\");\n\nvar dynCall_ii = Module[\"dynCall_ii\"] = createExportWrapper(\"dynCall_ii\");\n\nvar dynCall_vi = Module[\"dynCall_vi\"] = createExportWrapper(\"dynCall_vi\");\n\nvar dynCall_ji = Module[\"dynCall_ji\"] = createExportWrapper(\"dynCall_ji\");\n\nvar dynCall_iii = Module[\"dynCall_iii\"] = createExportWrapper(\"dynCall_iii\");\n\nvar dynCall_iij = Module[\"dynCall_iij\"] = createExportWrapper(\"dynCall_iij\");\n\nvar dynCall_viiij = Module[\"dynCall_viiij\"] = createExportWrapper(\"dynCall_viiij\");\n\nvar dynCall_viii = Module[\"dynCall_viii\"] = createExportWrapper(\"dynCall_viii\");\n\nvar dynCall_vii = Module[\"dynCall_vii\"] = createExportWrapper(\"dynCall_vii\");\n\nvar dynCall_v = Module[\"dynCall_v\"] = createExportWrapper(\"dynCall_v\");\n\nvar dynCall_viij = Module[\"dynCall_viij\"] = createExportWrapper(\"dynCall_viij\");\n\nvar dynCall_fij = Module[\"dynCall_fij\"] = createExportWrapper(\"dynCall_fij\");\n\nvar dynCall_viiii = Module[\"dynCall_viiii\"] = createExportWrapper(\"dynCall_viiii\");\n\nvar dynCall_fii = Module[\"dynCall_fii\"] = createExportWrapper(\"dynCall_fii\");\n\nvar dynCall_fif = Module[\"dynCall_fif\"] = createExportWrapper(\"dynCall_fif\");\n\nvar dynCall_iiiff = Module[\"dynCall_iiiff\"] = createExportWrapper(\"dynCall_iiiff\");\n\nvar dynCall_vijiii = Module[\"dynCall_vijiii\"] = createExportWrapper(\"dynCall_vijiii\");\n\nvar dynCall_viiiii = Module[\"dynCall_viiiii\"] = createExportWrapper(\"dynCall_viiiii\");\n\nvar dynCall_iiiiii = Module[\"dynCall_iiiiii\"] = createExportWrapper(\"dynCall_iiiiii\");\n\nvar dynCall_iiii = Module[\"dynCall_iiii\"] = createExportWrapper(\"dynCall_iiii\");\n\nvar dynCall_vij = Module[\"dynCall_vij\"] = createExportWrapper(\"dynCall_vij\");\n\nvar dynCall_iiiiiii = Module[\"dynCall_iiiiiii\"] = createExportWrapper(\"dynCall_iiiiiii\");\n\nvar dynCall_viiff = Module[\"dynCall_viiff\"] = createExportWrapper(\"dynCall_viiff\");\n\nvar dynCall_iiij = Module[\"dynCall_iiij\"] = createExportWrapper(\"dynCall_iiij\");\n\nvar dynCall_iiiii = Module[\"dynCall_iiiii\"] = createExportWrapper(\"dynCall_iiiii\");\n\nvar dynCall_viif = Module[\"dynCall_viif\"] = createExportWrapper(\"dynCall_viif\");\n\nvar dynCall_viiffff = Module[\"dynCall_viiffff\"] = createExportWrapper(\"dynCall_viiffff\");\n\nvar dynCall_iiifii = Module[\"dynCall_iiifii\"] = createExportWrapper(\"dynCall_iiifii\");\n\nvar dynCall_iiiffii = Module[\"dynCall_iiiffii\"] = createExportWrapper(\"dynCall_iiiffii\");\n\nvar dynCall_iiiij = Module[\"dynCall_iiiij\"] = createExportWrapper(\"dynCall_iiiij\");\n\nvar dynCall_viiiiii = Module[\"dynCall_viiiiii\"] = createExportWrapper(\"dynCall_viiiiii\");\n\nvar dynCall_iiiiiiii = Module[\"dynCall_iiiiiiii\"] = createExportWrapper(\"dynCall_iiiiiiii\");\n\nvar dynCall_jii = Module[\"dynCall_jii\"] = createExportWrapper(\"dynCall_jii\");\n\nvar dynCall_jij = Module[\"dynCall_jij\"] = createExportWrapper(\"dynCall_jij\");\n\nvar dynCall_fi = Module[\"dynCall_fi\"] = createExportWrapper(\"dynCall_fi\");\n\nvar dynCall_jijf = Module[\"dynCall_jijf\"] = createExportWrapper(\"dynCall_jijf\");\n\nvar dynCall_i = Module[\"dynCall_i\"] = createExportWrapper(\"dynCall_i\");\n\nvar dynCall_vif = Module[\"dynCall_vif\"] = createExportWrapper(\"dynCall_vif\");\n\nvar dynCall_di = Module[\"dynCall_di\"] = createExportWrapper(\"dynCall_di\");\n\nvar dynCall_vid = Module[\"dynCall_vid\"] = createExportWrapper(\"dynCall_vid\");\n\nvar dynCall_iiiifii = Module[\"dynCall_iiiifii\"] = createExportWrapper(\"dynCall_iiiifii\");\n\nvar dynCall_iiiffi = Module[\"dynCall_iiiffi\"] = createExportWrapper(\"dynCall_iiiffi\");\n\nvar dynCall_vifffffffff = Module[\"dynCall_vifffffffff\"] = createExportWrapper(\"dynCall_vifffffffff\");\n\nvar dynCall_iifffffffff = Module[\"dynCall_iifffffffff\"] = createExportWrapper(\"dynCall_iifffffffff\");\n\nvar dynCall_iiff = Module[\"dynCall_iiff\"] = createExportWrapper(\"dynCall_iiff\");\n\nvar dynCall_iif = Module[\"dynCall_iif\"] = createExportWrapper(\"dynCall_iif\");\n\nvar dynCall_viff = Module[\"dynCall_viff\"] = createExportWrapper(\"dynCall_viff\");\n\nvar dynCall_viffffff = Module[\"dynCall_viffffff\"] = createExportWrapper(\"dynCall_viffffff\");\n\nvar dynCall_dii = Module[\"dynCall_dii\"] = createExportWrapper(\"dynCall_dii\");\n\nvar dynCall_viid = Module[\"dynCall_viid\"] = createExportWrapper(\"dynCall_viid\");\n\nvar dynCall_iiiiffi = Module[\"dynCall_iiiiffi\"] = createExportWrapper(\"dynCall_iiiiffi\");\n\nvar dynCall_fiii = Module[\"dynCall_fiii\"] = createExportWrapper(\"dynCall_fiii\");\n\nvar dynCall_viiif = Module[\"dynCall_viiif\"] = createExportWrapper(\"dynCall_viiif\");\n\nvar dynCall_viifffffffff = Module[\"dynCall_viifffffffff\"] = createExportWrapper(\"dynCall_viifffffffff\");\n\nvar dynCall_viiffffff = Module[\"dynCall_viiffffff\"] = createExportWrapper(\"dynCall_viiffffff\");\n\nvar dynCall_viifff = Module[\"dynCall_viifff\"] = createExportWrapper(\"dynCall_viifff\");\n\nvar dynCall_viiifii = Module[\"dynCall_viiifii\"] = createExportWrapper(\"dynCall_viiifii\");\n\nvar dynCall_viiiiiii = Module[\"dynCall_viiiiiii\"] = createExportWrapper(\"dynCall_viiiiiii\");\n\nvar dynCall_viffff = Module[\"dynCall_viffff\"] = createExportWrapper(\"dynCall_viffff\");\n\nvar dynCall_vifff = Module[\"dynCall_vifff\"] = createExportWrapper(\"dynCall_vifff\");\n\nvar dynCall_iiffi = Module[\"dynCall_iiffi\"] = createExportWrapper(\"dynCall_iiffi\");\n\nvar dynCall_iifii = Module[\"dynCall_iifii\"] = createExportWrapper(\"dynCall_iifii\");\n\nvar dynCall_iiifi = Module[\"dynCall_iiifi\"] = createExportWrapper(\"dynCall_iiifi\");\n\nvar dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = createExportWrapper(\"dynCall_iiiiij\");\n\nvar dynCall_iijj = Module[\"dynCall_iijj\"] = createExportWrapper(\"dynCall_iijj\");\n\nvar dynCall_vffff = Module[\"dynCall_vffff\"] = createExportWrapper(\"dynCall_vffff\");\n\nvar dynCall_viiiiiiii = Module[\"dynCall_viiiiiiii\"] = createExportWrapper(\"dynCall_viiiiiiii\");\n\nvar dynCall_vf = Module[\"dynCall_vf\"] = createExportWrapper(\"dynCall_vf\");\n\nvar dynCall_viiiiiiiii = Module[\"dynCall_viiiiiiiii\"] = createExportWrapper(\"dynCall_viiiiiiiii\");\n\nvar dynCall_viiiiiiiiii = Module[\"dynCall_viiiiiiiiii\"] = createExportWrapper(\"dynCall_viiiiiiiiii\");\n\nvar dynCall_fiifiii = Module[\"dynCall_fiifiii\"] = createExportWrapper(\"dynCall_fiifiii\");\n\nvar dynCall_iiifiii = Module[\"dynCall_iiifiii\"] = createExportWrapper(\"dynCall_iiifiii\");\n\nvar dynCall_viiifiii = Module[\"dynCall_viiifiii\"] = createExportWrapper(\"dynCall_viiifiii\");\n\nvar dynCall_vifii = Module[\"dynCall_vifii\"] = createExportWrapper(\"dynCall_vifii\");\n\nvar dynCall_viifd = Module[\"dynCall_viifd\"] = createExportWrapper(\"dynCall_viifd\");\n\nvar dynCall_viddi = Module[\"dynCall_viddi\"] = createExportWrapper(\"dynCall_viddi\");\n\nvar dynCall_viiiiiffii = Module[\"dynCall_viiiiiffii\"] = createExportWrapper(\"dynCall_viiiiiffii\");\n\nvar dynCall_jiiii = Module[\"dynCall_jiiii\"] = createExportWrapper(\"dynCall_jiiii\");\n\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = createExportWrapper(\"dynCall_jiji\");\n\nvar dynCall_iidiiii = Module[\"dynCall_iidiiii\"] = createExportWrapper(\"dynCall_iidiiii\");\n\nvar _asyncify_start_unwind = Module[\"_asyncify_start_unwind\"] = createExportWrapper(\"asyncify_start_unwind\");\n\nvar _asyncify_stop_unwind = Module[\"_asyncify_stop_unwind\"] = createExportWrapper(\"asyncify_stop_unwind\");\n\nvar _asyncify_start_rewind = Module[\"_asyncify_start_rewind\"] = createExportWrapper(\"asyncify_start_rewind\");\n\nvar _asyncify_stop_rewind = Module[\"_asyncify_stop_rewind\"] = createExportWrapper(\"asyncify_stop_rewind\");\n\nModule[\"GL\"] = GL;\n\nModule[\"Asyncify\"] = Asyncify;\n\nvar unexportedRuntimeSymbols = [ \"run\", \"UTF8ArrayToString\", \"UTF8ToString\", \"stringToUTF8Array\", \"stringToUTF8\", \"lengthBytesUTF8\", \"addOnPreRun\", \"addOnInit\", \"addOnPreMain\", \"addOnExit\", \"addOnPostRun\", \"addRunDependency\", \"removeRunDependency\", \"FS_createFolder\", \"FS_createPath\", \"FS_createDataFile\", \"FS_createPreloadedFile\", \"FS_createLazyFile\", \"FS_createLink\", \"FS_createDevice\", \"FS_unlink\", \"getLEB\", \"getFunctionTables\", \"alignFunctionTables\", \"registerFunctions\", \"prettyPrint\", \"getCompilerSetting\", \"print\", \"printErr\", \"callMain\", \"abort\", \"keepRuntimeAlive\", \"wasmMemory\", \"stackAlloc\", \"stackSave\", \"stackRestore\", \"getTempRet0\", \"setTempRet0\", \"writeStackCookie\", \"checkStackCookie\", \"ptrToString\", \"zeroMemory\", \"stringToNewUTF8\", \"exitJS\", \"getHeapMax\", \"emscripten_realloc_buffer\", \"ENV\", \"ERRNO_CODES\", \"ERRNO_MESSAGES\", \"setErrNo\", \"inetPton4\", \"inetNtop4\", \"inetPton6\", \"inetNtop6\", \"readSockaddr\", \"writeSockaddr\", \"DNS\", \"getHostByName\", \"Protocols\", \"Sockets\", \"getRandomDevice\", \"warnOnce\", \"traverseStack\", \"UNWIND_CACHE\", \"convertPCtoSourceLocation\", \"readAsmConstArgsArray\", \"readAsmConstArgs\", \"mainThreadEM_ASM\", \"jstoi_q\", \"jstoi_s\", \"getExecutableName\", \"listenOnce\", \"autoResumeAudioContext\", \"dynCallLegacy\", \"getDynCaller\", \"dynCall\", \"handleException\", \"runtimeKeepalivePush\", \"runtimeKeepalivePop\", \"callUserCallback\", \"maybeExit\", \"safeSetTimeout\", \"asmjsMangle\", \"asyncLoad\", \"alignMemory\", \"mmapAlloc\", \"writeI53ToI64\", \"writeI53ToI64Clamped\", \"writeI53ToI64Signaling\", \"writeI53ToU64Clamped\", \"writeI53ToU64Signaling\", \"readI53FromI64\", \"readI53FromU64\", \"convertI32PairToI53\", \"convertI32PairToI53Checked\", \"convertU32PairToI53\", \"getCFunc\", \"ccall\", \"cwrap\", \"uleb128Encode\", \"sigToWasmTypes\", \"convertJsFunctionToWasm\", \"freeTableIndexes\", \"functionsInTableMap\", \"getEmptyTableSlot\", \"updateTableMap\", \"addFunction\", \"removeFunction\", \"reallyNegative\", \"unSign\", \"strLen\", \"reSign\", \"formatString\", \"setValue\", \"getValue\", \"PATH\", \"PATH_FS\", \"intArrayFromString\", \"intArrayToString\", \"AsciiToString\", \"stringToAscii\", \"UTF16Decoder\", \"UTF16ToString\", \"stringToUTF16\", \"lengthBytesUTF16\", \"UTF32ToString\", \"stringToUTF32\", \"lengthBytesUTF32\", \"allocateUTF8\", \"allocateUTF8OnStack\", \"writeStringToMemory\", \"writeArrayToMemory\", \"writeAsciiToMemory\", \"SYSCALLS\", \"getSocketFromFD\", \"getSocketAddress\", \"JSEvents\", \"registerKeyEventCallback\", \"specialHTMLTargets\", \"maybeCStringToJsString\", \"findEventTarget\", \"findCanvasEventTarget\", \"getBoundingClientRect\", \"fillMouseEventData\", \"registerMouseEventCallback\", \"registerWheelEventCallback\", \"registerUiEventCallback\", \"registerFocusEventCallback\", \"fillDeviceOrientationEventData\", \"registerDeviceOrientationEventCallback\", \"fillDeviceMotionEventData\", \"registerDeviceMotionEventCallback\", \"screenOrientation\", \"fillOrientationChangeEventData\", \"registerOrientationChangeEventCallback\", \"fillFullscreenChangeEventData\", \"registerFullscreenChangeEventCallback\", \"JSEvents_requestFullscreen\", \"JSEvents_resizeCanvasForFullscreen\", \"registerRestoreOldStyle\", \"hideEverythingExceptGivenElement\", \"restoreHiddenElements\", \"setLetterbox\", \"currentFullscreenStrategy\", \"restoreOldWindowedStyle\", \"softFullscreenResizeWebGLRenderTarget\", \"doRequestFullscreen\", \"fillPointerlockChangeEventData\", \"registerPointerlockChangeEventCallback\", \"registerPointerlockErrorEventCallback\", \"requestPointerLock\", \"fillVisibilityChangeEventData\", \"registerVisibilityChangeEventCallback\", \"registerTouchEventCallback\", \"fillGamepadEventData\", \"registerGamepadEventCallback\", \"registerBeforeUnloadEventCallback\", \"fillBatteryEventData\", \"battery\", \"registerBatteryEventCallback\", \"setCanvasElementSize\", \"getCanvasElementSize\", \"demangle\", \"demangleAll\", \"jsStackTrace\", \"stackTrace\", \"ExitStatus\", \"getEnvStrings\", \"checkWasiClock\", \"doReadv\", \"doWritev\", \"dlopenMissingError\", \"setImmediateWrapped\", \"clearImmediateWrapped\", \"polyfillSetImmediate\", \"uncaughtExceptionCount\", \"exceptionLast\", \"exceptionCaught\", \"ExceptionInfo\", \"exception_addRef\", \"exception_decRef\", \"Browser\", \"setMainLoop\", \"wget\", \"FS\", \"MEMFS\", \"TTY\", \"PIPEFS\", \"SOCKFS\", \"_setNetworkCallback\", \"tempFixedLengthArray\", \"miniTempWebGLFloatBuffers\", \"heapObjectForWebGLType\", \"heapAccessShiftForWebGLHeap\", \"emscriptenWebGLGet\", \"computeUnpackAlignedImageSize\", \"emscriptenWebGLGetTexPixelData\", \"emscriptenWebGLGetUniform\", \"webglGetUniformLocation\", \"webglPrepareUniformLocationsBeforeFirstUse\", \"webglGetLeftBracePos\", \"emscriptenWebGLGetVertexAttrib\", \"writeGLArray\", \"AL\", \"SDL_unicode\", \"SDL_ttfContext\", \"SDL_audio\", \"SDL\", \"SDL_gfx\", \"GLUT\", \"EGL\", \"GLFW_Window\", \"GLFW\", \"GLEW\", \"IDBStore\", \"runAndAbortIfError\", \"Fibers\", \"emscriptenWebGLGetIndexed\", \"ALLOC_NORMAL\", \"ALLOC_STACK\", \"allocate\", \"InternalError\", \"BindingError\", \"UnboundTypeError\", \"PureVirtualError\", \"init_embind\", \"throwInternalError\", \"throwBindingError\", \"throwUnboundTypeError\", \"ensureOverloadTable\", \"exposePublicSymbol\", \"replacePublicSymbol\", \"extendError\", \"createNamedFunction\", \"embindRepr\", \"registeredInstances\", \"getBasestPointer\", \"registerInheritedInstance\", \"unregisterInheritedInstance\", \"getInheritedInstance\", \"getInheritedInstanceCount\", \"getLiveInheritedInstances\", \"registeredTypes\", \"awaitingDependencies\", \"typeDependencies\", \"registeredPointers\", \"registerType\", \"whenDependentTypesAreResolved\", \"embind_charCodes\", \"embind_init_charCodes\", \"readLatin1String\", \"getTypeName\", \"heap32VectorToArray\", \"requireRegisteredType\", \"getShiftFromSize\", \"integerReadValueFromPointer\", \"enumReadValueFromPointer\", \"floatReadValueFromPointer\", \"simpleReadValueFromPointer\", \"runDestructors\", \"new_\", \"craftInvokerFunction\", \"embind__requireFunction\", \"tupleRegistrations\", \"structRegistrations\", \"genericPointerToWireType\", \"constNoSmartPtrRawPointerToWireType\", \"nonConstNoSmartPtrRawPointerToWireType\", \"init_RegisteredPointer\", \"RegisteredPointer\", \"RegisteredPointer_getPointee\", \"RegisteredPointer_destructor\", \"RegisteredPointer_deleteObject\", \"RegisteredPointer_fromWireType\", \"runDestructor\", \"releaseClassHandle\", \"finalizationRegistry\", \"detachFinalizer_deps\", \"detachFinalizer\", \"attachFinalizer\", \"makeClassHandle\", \"init_ClassHandle\", \"ClassHandle\", \"ClassHandle_isAliasOf\", \"throwInstanceAlreadyDeleted\", \"ClassHandle_clone\", \"ClassHandle_delete\", \"deletionQueue\", \"ClassHandle_isDeleted\", \"ClassHandle_deleteLater\", \"flushPendingDeletes\", \"delayFunction\", \"setDelayFunction\", \"RegisteredClass\", \"shallowCopyInternalPointer\", \"downcastPointer\", \"upcastPointer\", \"validateThis\", \"char_0\", \"char_9\", \"makeLegalFunctionName\", \"emval_handle_array\", \"emval_free_list\", \"emval_symbols\", \"init_emval\", \"count_emval_handles\", \"get_first_emval\", \"getStringOrSymbol\", \"Emval\", \"emval_newers\", \"craftEmvalAllocator\", \"emval_get_global\", \"emval_lookupTypes\", \"emval_allocateDestructors\", \"emval_methodCallers\", \"emval_addMethodCaller\", \"emval_registeredMethods\" ];\n\nunexportedRuntimeSymbols.forEach(unexportedRuntimeSymbol);\n\nvar missingLibrarySymbols = [ \"ptrToString\", \"exitJS\", \"inetPton4\", \"inetNtop4\", \"inetPton6\", \"inetNtop6\", \"readSockaddr\", \"writeSockaddr\", \"getHostByName\", \"traverseStack\", \"convertPCtoSourceLocation\", \"readAsmConstArgs\", \"mainThreadEM_ASM\", \"jstoi_s\", \"getExecutableName\", \"listenOnce\", \"autoResumeAudioContext\", \"maybeExit\", \"safeSetTimeout\", \"asmjsMangle\", \"writeI53ToI64Clamped\", \"writeI53ToI64Signaling\", \"writeI53ToU64Clamped\", \"writeI53ToU64Signaling\", \"convertU32PairToI53\", \"reallyNegative\", \"strLen\", \"reSign\", \"formatString\", \"getSocketFromFD\", \"getSocketAddress\", \"registerKeyEventCallback\", \"getBoundingClientRect\", \"fillMouseEventData\", \"registerMouseEventCallback\", \"registerWheelEventCallback\", \"registerUiEventCallback\", \"registerFocusEventCallback\", \"fillDeviceOrientationEventData\", \"registerDeviceOrientationEventCallback\", \"fillDeviceMotionEventData\", \"registerDeviceMotionEventCallback\", \"screenOrientation\", \"fillOrientationChangeEventData\", \"registerOrientationChangeEventCallback\", \"fillFullscreenChangeEventData\", \"registerFullscreenChangeEventCallback\", \"JSEvents_requestFullscreen\", \"JSEvents_resizeCanvasForFullscreen\", \"registerRestoreOldStyle\", \"hideEverythingExceptGivenElement\", \"restoreHiddenElements\", \"setLetterbox\", \"softFullscreenResizeWebGLRenderTarget\", \"doRequestFullscreen\", \"fillPointerlockChangeEventData\", \"registerPointerlockChangeEventCallback\", \"registerPointerlockErrorEventCallback\", \"requestPointerLock\", \"fillVisibilityChangeEventData\", \"registerVisibilityChangeEventCallback\", \"registerTouchEventCallback\", \"fillGamepadEventData\", \"registerGamepadEventCallback\", \"registerBeforeUnloadEventCallback\", \"fillBatteryEventData\", \"battery\", \"registerBatteryEventCallback\", \"setCanvasElementSize\", \"getCanvasElementSize\", \"getEnvStrings\", \"checkWasiClock\", \"setImmediateWrapped\", \"clearImmediateWrapped\", \"polyfillSetImmediate\", \"exception_addRef\", \"exception_decRef\", \"setMainLoop\", \"_setNetworkCallback\", \"emscriptenWebGLGetUniform\", \"emscriptenWebGLGetVertexAttrib\", \"writeGLArray\", \"SDL_unicode\", \"SDL_ttfContext\", \"SDL_audio\", \"GLFW_Window\", \"emscriptenWebGLGetIndexed\", \"registerInheritedInstance\", \"unregisterInheritedInstance\" ];\n\nmissingLibrarySymbols.forEach(missingLibrarySymbol);\n\nvar calledRun;\n\ndependenciesFulfilled = function runCaller() {\n if (!calledRun) run();\n if (!calledRun) dependenciesFulfilled = runCaller;\n};\n\nfunction stackCheckInit() {\n _emscripten_stack_init();\n writeStackCookie();\n}\n\nfunction run(args) {\n args = args || arguments_;\n if (runDependencies > 0) {\n  return;\n }\n stackCheckInit();\n preRun();\n if (runDependencies > 0) {\n  return;\n }\n function doRun() {\n  if (calledRun) return;\n  calledRun = true;\n  Module[\"calledRun\"] = true;\n  if (ABORT) return;\n  initRuntime();\n  readyPromiseResolve(Module);\n  if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n  assert(!Module[\"_main\"], 'compiled without a main, but one is present. if you added it from JS, use Module[\"onRuntimeInitialized\"]');\n  postRun();\n }\n if (Module[\"setStatus\"]) {\n  Module[\"setStatus\"](\"Running...\");\n  setTimeout(function() {\n   setTimeout(function() {\n    Module[\"setStatus\"](\"\");\n   }, 1);\n   doRun();\n  }, 1);\n } else {\n  doRun();\n }\n checkStackCookie();\n}\n\nfunction checkUnflushedContent() {\n var oldOut = out;\n var oldErr = err;\n var has = false;\n out = err = x => {\n  has = true;\n };\n try {\n  _fflush(0);\n  [ \"stdout\", \"stderr\" ].forEach(function(name) {\n   var info = FS.analyzePath(\"/dev/\" + name);\n   if (!info) return;\n   var stream = info.object;\n   var rdev = stream.rdev;\n   var tty = TTY.ttys[rdev];\n   if (tty && tty.output && tty.output.length) {\n    has = true;\n   }\n  });\n } catch (e) {}\n out = oldOut;\n err = oldErr;\n if (has) {\n  warnOnce(\"stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.\");\n }\n}\n\nif (Module[\"preInit\"]) {\n if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [ Module[\"preInit\"] ];\n while (Module[\"preInit\"].length > 0) {\n  Module[\"preInit\"].pop()();\n }\n}\n\nrun();\n\n\n  return PAGInit.ready\n}\n);\n})();\nexport default PAGInit;","export interface Task {\n  fn: () => Promise<any>;\n}\n\nexport class WebAssemblyQueue {\n  private executing = false;\n  private queue: Task[] = [];\n\n  public exec<T>(fn: (...args: any[]) => any, scope: any, ...args: any[]): Promise<T> {\n    return new Promise((resolve, reject) => {\n      const copyFn = async () => {\n        if (!fn) {\n          reject(new Error('Function is null!'));\n          return;\n        }\n        try {\n          const res = await fn.call(scope, ...args);\n          resolve(res);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      this.queue.push({\n        fn: copyFn,\n      });\n      if (this.executing) return;\n      this.execNextTask();\n    });\n  }\n\n  private execNextTask() {\n    if (this.queue.length < 1) {\n      this.executing = false;\n      return;\n    }\n    this.executing = true;\n    const task = this.queue.shift() as Task;\n    task.fn().then(() => {\n      this.execNextTask();\n    });\n  }\n}\n","import { WorkerMessageType } from './events';\nimport * as types from '../types';\n\nimport type { ModuleOption, PAGInit } from '../pag';\nimport type { PAGFile } from '../pag-file';\nimport type { PAGView } from '../pag-view';\nimport type { PAGImage } from '../pag-image';\n\ndeclare global {\n  interface Window {\n    PAG: types.PAG;\n  }\n}\n\nexport interface WorkerMessage {\n  name: string;\n  args: any[];\n}\nconst pagFiles: (PAGFile & { [prop: string]: any })[] = [];\nconst registerPAGFile = (pagFile: PAGFile) => {\n  pagFiles.push(pagFile);\n  return pagFiles.length - 1;\n};\nconst deletePAGFile = (key: number) => {\n  (pagFiles[key] as any) = null;\n};\n\nconst pagViews: (PAGView & { [prop: string]: any })[] = [];\nconst registerPAGView = (pagView: PAGView) => {\n  pagViews.push(pagView);\n  return pagViews.length - 1;\n};\nconst deletePAGView = (key: number) => {\n  (pagViews[key] as any) = null;\n};\n\nconst pagImages: PAGImage[] = [];\nconst registerPAGImage = (pagImage: PAGImage) => {\n  pagImages.push(pagImage);\n  return pagImages.length - 1;\n};\nconst deletePAGImage = (key: number) => {\n  (pagImages[key] as any) = null;\n};\n\nconst textDataMap: (types.TextDocument & { [prop: string]: any })[] = [];\nconst registerTextData = (textData: types.TextDocument) => {\n  textDataMap.push(textData);\n  return textDataMap.length - 1;\n};\nconst deleteTextData = (key: number) => {\n  (textDataMap[key] as any) = null;\n};\n\nconst workerInit = (init: typeof PAGInit) => {\n  onmessage = async (event: MessageEvent<WorkerMessage>) => {\n    const messageHandles: { [prop: string]: (event: MessageEvent<WorkerMessage>) => void } = {\n      [WorkerMessageType.PAGInit]: (event) => {\n        const option: ModuleOption = {};\n        if (event.data.args[0]) {\n          option.locateFile = () => event.data.args[0].fileUrl;\n        }\n        init(option).then((module: types.PAG) => {\n          self.PAG = module;\n          self.postMessage({ name: event.data.name, args: [] });\n        });\n      },\n      [WorkerMessageType.PAGFile_load]: async (event) => {\n        const key = registerPAGFile(await self.PAG.PAGFile.load(event.data.args[0]));\n        self.postMessage({ name: event.data.name, args: [key] });\n      },\n      [WorkerMessageType.PAGView_init]: async (event) => {\n        const [pagFileKey, canvas, option] = event.data.args;\n        const key = registerPAGView((await self.PAG.PAGView.init(pagFiles[pagFileKey], canvas, option)) as PAGView);\n        self.postMessage({ name: event.data.name, args: [key] });\n      },\n      [WorkerMessageType.PAGView_destroy]: async (event) => {\n        const [pagViewKey] = event.data.args;\n        pagViews[pagViewKey].destroy();\n        deletePAGView(pagViewKey);\n        self.postMessage({ name: event.data.name, args: [] });\n      },\n      [WorkerMessageType.PAGFile_getTextData]: async (event) => {\n        const [pagFileKey, editableTextIndex] = event.data.args;\n        const textData = pagFiles[pagFileKey].getTextData(editableTextIndex) as types.TextDocument & {\n          [prop: string]: any;\n        };\n        let virtualTextData: { [key: string]: any } = {};\n        for (const key in textData) {\n          if (typeof textData[key] !== 'function') {\n            virtualTextData[key] = textData[key];\n          }\n        }\n        virtualTextData.key = registerTextData(textData);\n        self.postMessage({ name: event.data.name, args: [virtualTextData] });\n      },\n      [WorkerMessageType.PAGFile_replaceText]: async (event) => {\n        const [pagFileKey, editableTextIndex, virtualTextData] = event.data.args;\n        const textData = textDataMap[virtualTextData.key];\n        for (const key in virtualTextData) {\n          if (key !== 'key') {\n            textData[key] = virtualTextData[key];\n          }\n        }\n        pagFiles[pagFileKey].replaceText(editableTextIndex, textData);\n        self.postMessage({ name: event.data.name, args: [] });\n      },\n      [WorkerMessageType.PAGFile_replaceImage]: async (event) => {\n        const [pagFileKey, editableImageIndex, pagImageKey] = event.data.args;\n        const pagImage = pagImages[pagImageKey];\n        pagFiles[pagFileKey].replaceImage(editableImageIndex, pagImage);\n        self.postMessage({ name: event.data.name, args: [] });\n      },\n      [WorkerMessageType.PAGFile_destroy]: async (event) => {\n        const [pagFileKey] = event.data.args;\n        pagFiles[pagFileKey].destroy();\n        deletePAGFile(pagFileKey);\n        self.postMessage({ name: event.data.name, args: [] });\n      },\n      [WorkerMessageType.PAGImage_fromSource]: async (event) => {\n        const [bitmap] = event.data.args;\n        const key = registerPAGImage(self.PAG.PAGImage.fromSource(bitmap));\n        self.postMessage({ name: event.data.name, args: [key] });\n      },\n      [WorkerMessageType.PAGImage_destroy]: async (event) => {\n        const [pagImageKey] = event.data.args;\n        pagImages[pagImageKey].destroy();\n        deletePAGImage(pagImageKey);\n        self.postMessage({ name: event.data.name, args: [] });\n      },\n      [WorkerMessageType.TextDocument_delete]: async (event) => {\n        const [textDataKey] = event.data.args;\n        textDataMap[textDataKey].delete();\n        deleteTextData(textDataKey);\n        self.postMessage({ name: event.data.name, args: [] });\n      },\n    };\n\n    const name = event.data.name.split('_')[0];\n\n    if (messageHandles[name]) {\n      messageHandles[name](event);\n      return;\n    }\n\n    const [type, fnName] = name.split('.') as [string, string];\n    const key = event.data.args[0];\n    if (type === 'PAGFile') {\n      const pagFile = pagFiles[key];\n      if (!pagFile) throw new Error(\"pagFile doesn't exist\");\n      const fn = pagFile[fnName] as Function;\n      if (!fn) throw new Error(`PAGFile.${fnName} doesn't exist`);\n      const res = await fn.call(pagFile, ...event.data.args.slice(1));\n      self.postMessage({ name: event.data.name, args: [res] });\n      return;\n    }\n    if (type === 'PAGView') {\n      const pagView = pagViews[key];\n      if (!pagView) throw new Error(\"pagView doesn't exist\");\n      const fn = pagView[fnName] as Function;\n      if (!fn) throw new Error(`PAGView.${fnName} doesn't exist`);\n      const res = await fn.call(pagView, ...event.data.args.slice(1));\n      self.postMessage({ name: event.data.name, args: [res] });\n      return;\n    }\n  };\n};\n\nexport { workerInit };\n","import './utils/polyfills';\nimport { binding } from './binding';\nimport * as types from './types';\nimport createPAG from './wasm/libpag';\nimport { WebAssemblyQueue } from './utils/queue';\nimport { workerInit } from './worker/worker';\nimport { WORKER } from './utils/ua';\n\nexport interface ModuleOption {\n  /**\n   * Link to wasm file.\n   */\n  locateFile?: (file: 'libpag.wasm') => string;\n}\n\n/**\n * Initialize pag webassembly module.\n */\nconst PAGInit = (moduleOption: ModuleOption = {}): Promise<types.PAG> =>\n  createPAG(moduleOption)\n    .then((module: types.PAG) => {\n      binding(module);\n      module.webAssemblyQueue = new WebAssemblyQueue();\n      module.globalCanvas = new module.GlobalCanvas();\n      module.PAGFont.registerFallbackFontNames();\n      return module;\n    })\n    .catch((error: any) => {\n      console.error(error);\n      throw new Error('PAGInit fail! Please check .wasm file path valid.');\n    });\n\nif (WORKER) {\n  workerInit(PAGInit);\n}\n\nexport { PAGInit, types };\n"],"names":["PAGScaleMode","PAGViewListenerEvent","ParagraphJustification","TextDirection","LayerType","PAGTimeStretchMode","MatrixIndex","DecoderResult","ColorType","AlphaType","__decorateClass","wasmIns","res","__spreadValues","WorkerMessageType","PAGInit","readBinary","readAsync","i","asm","err","exports","buffer","errno","xhr","lazyArray","byteArray","typeConverters","fieldTypes","handle","x","classType","getterReturnType","desc","setterArgumentType","argTypes","HEAP","jsEventHandler","GLctx","event","key","createPAG"],"mappings":"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"}