{"version":3,"file":"libpag.cjs.js","sources":["../src/utils/polyfills.ts","../src/pag-module.ts","../src/utils/decorators.ts","../src/types.ts","../src/core/matrix.ts","../src/utils/type-utils.ts","../src/pag-layer.ts","../src/pag-composition.ts","../src/utils/common.ts","../../tgfx/web/src/utils/buffer.ts","../src/pag-file.ts","../src/pag-surface.ts","../src/pag-player.ts","../src/pag-image.ts","../src/utils/event-manager.ts","../src/constant.ts","../src/core/backend-context.ts","../src/core/render-canvas.ts","../src/utils/clock.ts","../src/utils/ua.ts","../../tgfx/web/src/constant.ts","../../tgfx/web/src/utils/type-utils.ts","../../tgfx/web/src/utils/ua.ts","../../tgfx/web/src/utils/canvas.ts","../src/pag-view.ts","../../tgfx/web/src/utils/font-family.ts","../src/pag-font.ts","../src/utils/video-listener.ts","../src/worker/events.ts","../src/worker/utils.ts","../../tgfx/web/src/core/bitmap-image.ts","../src/worker/video-reader.ts","../src/core/video-reader.ts","../src/core/global-canvas.ts","../src/pag-text-layer.ts","../src/pag-image-layer.ts","../src/pag-solid-layer.ts","../../tgfx/web/src/utils/measure-text.ts","../../tgfx/web/src/core/scaler-context.ts","../src/core/web-mask.ts","../src/utils/mixin.ts","../../tgfx/web/src/tgfx.ts","../src/binding.ts","../src/wasm/libpag.js","../src/utils/queue.ts","../src/worker/worker.ts","../src/pag.ts"],"sourcesContent":["const getGlobalObject = (): typeof globalThis => {\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  }\n  if (typeof window !== 'undefined') {\n    return window as unknown as typeof globalThis;\n  }\n  if (typeof global !== 'undefined') {\n    return global as unknown as typeof globalThis;\n  }\n  if (typeof self !== 'undefined') {\n    return self as unknown as typeof globalThis;\n  }\n  throw new Error('unable to locate global object');\n};\n\nconst globalObject = getGlobalObject();\n\nif (typeof globalObject.globalThis === 'undefined') {\n  Object.defineProperty(globalObject, 'globalThis', {\n    get() {\n      return globalObject;\n    },\n  });\n}\n","import type { PAG } from './types';\n\nexport let PAGModule: PAG;\n\nexport const setPAGModule = (module: PAG) => {\n  PAGModule = module;\n};\n\nexport const getPAGModule = () => PAGModule;\n","import { PAGModule } from '../pag-module';\n\nexport function wasmAwaitRewind(constructor: any) {\n  const ignoreStaticFunctions = ['length', 'name', 'prototype', 'wasmAsyncMethods'];\n  let staticFunctions = Object.getOwnPropertyNames(constructor).filter(\n    (name) => ignoreStaticFunctions.indexOf(name) === -1,\n  );\n  if (constructor.wasmAsyncMethods && constructor.wasmAsyncMethods.length > 0) {\n    staticFunctions = staticFunctions.filter((name) => constructor.wasmAsyncMethods.indexOf(name) === -1);\n  }\n\n  let functions = Object.getOwnPropertyNames(constructor.prototype).filter(\n    (name) => name !== 'constructor' && typeof constructor.prototype[name] === 'function',\n  );\n  if (constructor.prototype.wasmAsyncMethods && constructor.prototype.wasmAsyncMethods.length > 0) {\n    functions = functions.filter((name) => constructor.prototype.wasmAsyncMethods.indexOf(name) === -1);\n  }\n\n  const proxyFn = (target: { [prop: string]: (...args: any[]) => any }, methodName: string) => {\n    const fn = target[methodName];\n    target[methodName] = function (...args) {\n      if (PAGModule.Asyncify.currData !== null) {\n        const currData = PAGModule.Asyncify.currData;\n        PAGModule.Asyncify.currData = null;\n        const ret = fn.call(this, ...args);\n        PAGModule.Asyncify.currData = currData;\n        return ret;\n      } else {\n        return fn.call(this, ...args);\n      }\n    };\n  };\n\n  staticFunctions.forEach((name) => proxyFn(constructor, name));\n  functions.forEach((name) => proxyFn(constructor.prototype, name));\n}\n\nexport function wasmAsyncMethod(target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n  if (!target.wasmAsyncMethods) {\n    target.wasmAsyncMethods = [];\n  }\n  target.wasmAsyncMethods.push(propertyKey);\n}\n\nexport function destroyVerify(constructor: any) {\n  let functions = Object.getOwnPropertyNames(constructor.prototype).filter(\n    (name) => name !== 'constructor' && typeof constructor.prototype[name] === 'function',\n  );\n\n  const proxyFn = (target: { [prop: string]: any }, methodName: string) => {\n    const fn = target[methodName];\n    target[methodName] = function (...args: any[]) {\n      if (this['isDestroyed']) {\n        console.error(`Don't call ${methodName} of the ${constructor.name} that is destroyed.`);\n        return;\n      }\n      return fn.call(this, ...args);\n    };\n  };\n  functions.forEach((name) => proxyFn(constructor.prototype, name));\n}\n","/* global EmscriptenModule */\n\nimport { PAGFile } from './pag-file';\nimport { PAGImage } from './pag-image';\nimport { PAGSurface } from './pag-surface';\nimport { WebAssemblyQueue } from './utils/queue';\nimport { PAGView } from './pag-view';\nimport { PAGFont } from './pag-font';\nimport { PAGPlayer } from './pag-player';\nimport { PAGLayer } from './pag-layer';\nimport { PAGComposition } from './pag-composition';\nimport { PAGTextLayer } from './pag-text-layer';\nimport { GlobalCanvas } from './core/global-canvas';\nimport { BackendContext } from './core/backend-context';\nimport { PAGImageLayer } from './pag-image-layer';\nimport { PAGSolidLayer } from './pag-solid-layer';\nimport { Matrix as ClassMatrix } from './core/matrix';\nimport { RenderCanvas } from './core/render-canvas';\n\nimport type { ScalerContextConstructor, VideoDecoderConstructor, WebMaskConstructor } from './interfaces';\nimport type { ArrayBufferImage } from './wechat/array-buffer-image';\n\nimport type { TGFXPathFillType, TGFXLineCap, TGFXLineJoin, EmscriptenGL, ctor, Point, Vector, Rect  } from '@tgfx/types';\nexport type { EmscriptenGL, ctor, Point, Vector, Rect }\n\ndeclare global {\n  interface Window {\n    WeixinJSBridge?: any;\n  }\n}\n\nexport interface PAG extends EmscriptenModule {\n  _PAGFile: {\n    _Load: (bytes: number, length: number) => any;\n    _MaxSupportedTagLevel: () => number;\n  };\n  _PAGImage: {\n    _FromNativeImage: (source: TexImageSource | ArrayBufferImage) => any;\n    _FromPixels: (\n      pixels: number,\n      width: number,\n      height: number,\n      rowBytes: number,\n      colorType: ColorType,\n      alphaType: AlphaType,\n    ) => any;\n    _FromTexture: (textureID: number, width: number, height: number, flipY: boolean) => any;\n  };\n  _PAGPlayer: any;\n  _PAGSurface: {\n    _FromCanvas: (canvasID: string) => any;\n    _FromTexture: (textureID: number, width: number, height: number, flipY: boolean) => any;\n    _FromRenderTarget: (framebufferID: number, width: number, height: number, flipY: boolean) => any;\n  };\n  _PAGComposition: {\n    _Make: (width: number, height: number) => any;\n  };\n  _PAGTextLayer: {\n    _Make: ((duration: number, text: string, fontSize: number, fontFamily: string, fontStyle: string) => any) &\n      ((duration: number, textDocumentHandle: TextDocument) => any);\n  };\n  _PAGImageLayer: {\n    _Make: (width: number, height: number, duration: number) => any;\n  };\n  _PAGSolidLayer: {\n    _Make: (duration: number, width: number, height: number, solidColor: Color, opacity: number) => any;\n  };\n  _PAGFont: {\n    _create: (fontFamily: string, fontStyle: string) => any;\n    _SetFallbackFontNames: (fontName: any) => void;\n  };\n  _Matrix: {\n    _MakeAll: (\n      scaleX: number,\n      skewX: number,\n      transX: number,\n      skewY: number,\n      scaleY: number,\n      transY: number,\n      pers0: number,\n      pers1: number,\n      pers2: number,\n    ) => any;\n    _MakeScale: ((sx: number, sy: number) => any) & ((scale: number) => any);\n    _MakeTrans: (dx: number, dy: number) => any;\n  };\n  _registerSoftwareDecoderFactory: (factory: SoftwareDecoderFactory | null) => void;\n  VectorString: any;\n  webAssemblyQueue: WebAssemblyQueue;\n  GL: EmscriptenGL;\n  TGFXPathFillType: TGFXPathFillType;\n  TGFXLineCap: TGFXLineCap;\n  TGFXLineJoin: TGFXLineJoin;\n  globalCanvas: GlobalCanvas;\n  module: PAG;\n  PAGPlayer: typeof PAGPlayer;\n  PAGFile: typeof PAGFile;\n  PAGView: typeof PAGView;\n  PAGFont: typeof PAGFont;\n  PAGImage: typeof PAGImage;\n  PAGLayer: typeof PAGLayer;\n  PAGComposition: typeof PAGComposition;\n  PAGSurface: typeof PAGSurface;\n  PAGTextLayer: typeof PAGTextLayer;\n  PAGImageLayer: typeof PAGImageLayer;\n  PAGSolidLayer: typeof PAGSolidLayer;\n  WebMask: WebMaskConstructor;\n  ScalerContext: ScalerContextConstructor;\n  VideoReader: VideoDecoderConstructor;\n  GlobalCanvas: typeof GlobalCanvas;\n  BackendContext: typeof BackendContext;\n  Matrix: typeof ClassMatrix;\n  RenderCanvas: typeof RenderCanvas;\n  traceImage: (info: { width: number; height: number }, pixels: Uint8Array, tag: string) => void;\n  registerSoftwareDecoderFactory: (factory: SoftwareDecoderFactory | null) => void;\n  SDKVersion: () => string;\n  currentPlayer: PAGPlayer | null;\n  [key: string]: any;\n}\n\n/**\n * Defines the rules on how to scale the content to fit the specified area.\n */\nexport const enum PAGScaleMode {\n  /**\n   * The content is not scaled.\n   */\n  None = 0,\n  /**\n   * The content is stretched to fit.\n   */\n  Stretch = 1,\n  /**\n   * The content is scaled with respect to the original unscaled image's aspect ratio.\n   * This is the default value.\n   */\n  LetterBox = 2,\n  /**\n   * The content is scaled to fit with respect to the original unscaled image's aspect ratio.\n   * This results in cropping on one axis.\n   */\n  Zoom = 3,\n}\n\n// [Deprecated]\nexport const enum PAGViewListenerEvent {\n  /**\n   * Notifies the start of the animation.\n   */\n  onAnimationStart = 'onAnimationStart',\n  /**\n   * Notifies the end of the animation.\n   */\n  onAnimationEnd = 'onAnimationEnd',\n  /**\n   * Notifies the cancellation of the animation.\n   */\n  onAnimationCancel = 'onAnimationCancel',\n  /**\n   * Notifies the repetition of the animation.\n   */\n  onAnimationRepeat = 'onAnimationRepeat',\n  /**\n   * Notifies the update of the animation.\n   */\n  onAnimationUpdate = 'onAnimationUpdate',\n  /**\n   * Notifies the play of the animation.\n   */\n  onAnimationPlay = 'onAnimationPlay',\n  /**\n   * Notifies the pause of the animation.\n   */\n  onAnimationPause = 'onAnimationPause',\n  /**\n   * [Deprecated]\n   * Notifies the flushed of the animation.\n   */\n  onAnimationFlushed = 'onAnimationFlushed',\n}\n\nexport interface PAGViewEventMap {\n  /**\n   * Notifies the start of the animation.\n   */\n  onAnimationStart: PAGView;\n  /**\n   * Notifies the end of the animation.\n   */\n  onAnimationEnd: PAGView;\n  /**\n   * Notifies the cancellation of the animation.\n   */\n  onAnimationCancel: PAGView;\n  /**\n   * Notifies the repetition of the animation.\n   */\n  onAnimationRepeat: PAGView;\n  /**\n   * Notifies the update of the animation.\n   */\n  onAnimationUpdate: PAGView;\n  /**\n   * [Deprecated]\n   * Notifies the play of the animation.\n   */\n  onAnimationPlay: PAGView;\n  /**\n   * Notifies the pause of the animation.\n   */\n  onAnimationPause: PAGView;\n  /**\n   * [Deprecated]\n   * Notifies the flushed of the animation.\n   */\n  onAnimationFlushed: PAGView;\n}\n\nexport const enum ParagraphJustification {\n  LeftJustify = 0,\n  CenterJustify = 1,\n  RightJustify = 2,\n  FullJustifyLastLineLeft = 3,\n  FullJustifyLastLineRight = 4,\n  FullJustifyLastLineCenter = 5,\n  FullJustifyLastLineFull = 6,\n}\n\nexport const enum TextDirection {\n  Default = 0,\n  Horizontal = 1,\n  Vertical = 2,\n}\n\n/**\n * Layers are always one of the following types.\n */\nexport const enum LayerType {\n  Unknown,\n  Null,\n  Solid,\n  Text,\n  Shape,\n  Image,\n  PreCompose,\n}\n\n/**\n * Defines the rules on how to stretch the timeline of content to fit the specified duration.\n */\nexport const enum PAGTimeStretchMode {\n  /**\n   * Keep the original playing speed, and display the last frame if the content's duration is less\n   * than target duration.\n   */\n  None = 0,\n  /*\n   * Change the playing speed of the content to fit target duration.\n   */\n  Scale = 1,\n  /**\n   * Keep the original playing speed, but repeat the content if the content's duration is less than\n   * target duration. This is the default mode.\n   */\n  Repeat = 2,\n  /**\n   * Keep the original playing speed, but repeat the content in reversed if the content's duration\n   * is less than target duration.\n   */\n  RepeatInverted = 3,\n}\n\nexport const enum MatrixIndex {\n  a,\n  c,\n  tx,\n  b,\n  d,\n  ty,\n}\n\nexport const enum DecoderResult {\n  /**\n   * The calling is successful.\n   */\n  Success = 0,\n  /**\n   * Output is not available in this state, need more input buffers.\n   */\n  TryAgainLater = -1,\n  /**\n   * The calling fails.\n   */\n  Error = -2,\n}\n\n/**\n * Describes how pixel bits encode color. These values match up with the enum in Bitmap.Config on\n * Android platform.\n */\nexport const enum ColorType {\n  /**\n   * uninitialized.\n   */\n  Unknown,\n  /**\n   * Each pixel is stored as a single translucency (alpha) channel. This is very useful to\n   * efficiently store masks for instance. No color information is stored. With this configuration,\n   * each pixel requires 1 byte of memory.\n   */\n  ALPHA_8,\n  /**\n   * Each pixel is stored on 4 bytes. Each channel (RGB and alpha for translucency) is stored with 8\n   * bits of precision (256 possible values). The channel order is: red, green, blue, alpha.\n   */\n  RGBA_8888,\n  /**\n   * Each pixel is stored on 4 bytes. Each channel (RGB and alpha for translucency) is stored with 8\n   * bits of precision (256 possible values). The channel order is: blue, green, red, alpha.\n   */\n  BGRA_8888,\n}\n\n/**\n * Describes how to interpret the alpha component of a pixel.\n */\nexport const enum AlphaType {\n  /**\n   * uninitialized.\n   */\n  Unknown,\n  /**\n   * pixel is opaque.\n   */\n  Opaque,\n  /**\n   * pixel components are premultiplied by alpha.\n   */\n  Premultiplied,\n  /**\n   * pixel components are independent of alpha.\n   */\n  Unpremultiplied,\n}\n\n/**\n * Marker stores comments and other metadata and mark important times in a composition or layer.\n */\nexport interface Marker {\n  startTime: number;\n  duration: number;\n  comment: string;\n}\n\nexport interface Color {\n  red: number;\n  green: number;\n  blue: number;\n}\nexport interface YUVBuffer {\n  data: number[];\n  lineSize: number[];\n}\n\nexport interface DebugData {\n  FPS?: number;\n  flushTime?: number;\n}\n\nexport interface PAGVideoRange {\n  /**\n   * The start time of the source video, in microseconds.\n   */\n  startTime: number;\n  /**\n   * The end time of the source video (not included), in microseconds.\n   */\n  endTime: number;\n  /**\n   * The duration for playing after applying speed.\n   */\n  playDuration: number;\n  /**\n   * Indicates whether the video should play backward.\n   */\n  reversed: boolean;\n}\n\nexport declare class Matrix {\n  /**\n   * The entry at position [1,1] in the matrix.\n   */\n  public a: number;\n  /**\n   * The entry at position [1,2] in the matrix.\n   */\n  public b: number;\n  /**\n   * The entry at position [2,1] in the matrix.\n   */\n  public c: number;\n  /**\n   * The entry at position [2,2] in the matrix.\n   */\n  public d: number;\n  /**\n   * The entry at position [3,1] in the matrix.\n   */\n  public tx: number;\n  /**\n   * The entry at position [3,2] in the matrix.\n   */\n  public ty: number;\n  /**\n   * Sets Matrix value.\n   */\n  public set: (index: number, value: number) => {};\n  public setAffine: (a: number, b: number, c: number, d: number, tx: number, ty: number) => {};\n\n  private constructor();\n}\n\nexport declare class TextDocument {\n  /**\n   * When true, the text layer shows a fill.\n   */\n  public applyFill: boolean;\n  /**\n   * When true, the text layer shows a stroke.\n   */\n  public applyStroke: boolean;\n\n  public baselineShift: number;\n  /**\n   * When true, the text layer is paragraph (bounded) text.\n   */\n  public boxText: boolean;\n\n  public boxTextPos: Readonly<Point>;\n  /**\n   * For box text, the pixel dimensions for the text bounds.\n   */\n  public boxTextSize: Readonly<Point>;\n\n  public firstBaseLine: number;\n\n  public fauxBold: boolean;\n\n  public fauxItalic: boolean;\n  /**\n   * The text layer’s fill color.\n   */\n  public fillColor: Readonly<Color>;\n  /**\n   * A string with the name of the font family.\n   **/\n  public fontFamily: string;\n  /**\n   * A string with the style information — e.g., “bold”, “italic”.\n   **/\n  public fontStyle: string;\n  /**\n   * The text layer’s font size in pixels.\n   */\n  public fontSize: number;\n  /**\n   * The text layer’s stroke color.\n   */\n  public strokeColor: Readonly<Color>;\n  /**\n   * Indicates the rendering order for the fill and stroke of a text layer.\n   */\n  public strokeOverFill: boolean;\n  /**\n   * The text layer’s stroke thickness.\n   */\n  public strokeWidth: number;\n  /**\n   * The text layer’s Source Text value.\n   */\n  public text: string;\n  /**\n   * The paragraph justification for the text layer.\n   */\n  public justification: ParagraphJustification;\n  /**\n   * The space between lines, 0 indicates 'auto', which is fontSize * 1.2\n   */\n  public leading: number;\n  /**\n   * The text layer’s spacing between characters.\n   */\n  public tracking: number;\n  /**\n   *  The text layer’s background color\n   */\n  public backgroundColor: Readonly<Color>;\n  /**\n   *  The text layer’s background alpha. 0 = 100% transparent, 255 = 100% opaque.\n   */\n  public backgroundAlpha: number;\n\n  public direction: TextDirection;\n\n  public delete: () => void;\n\n  private constructor();\n}\n\nexport declare class SoftwareDecoder {\n  public onConfigure(headers: Uint8Array[], mimeType: string, width: number, height: number): boolean;\n  public onSendBytes(bytes: Uint8Array, timestamp: number): number; // 0:Success -1:TryAgainLater -2:Error\n  public onDecodeFrame(): number; // 0:Success -1:TryAgainLater -2:Error\n  public onEndOfStream(): number; // 0:Success -1:TryAgainLater -2:Error\n  public onFlush(): void;\n  public onRenderFrame(): YUVBuffer | null;\n  public onRelease(): void;\n}\n\nexport declare class SoftwareDecoderFactory {\n  public createSoftwareDecoder(pag: PAG): SoftwareDecoder | null;\n}\n","import { PAGModule } from '../pag-module';\nimport { destroyVerify, wasmAwaitRewind } from '../utils/decorators';\nimport { MatrixIndex } from '../types';\n\n@destroyVerify\n@wasmAwaitRewind\nexport class Matrix {\n  /**\n   * Sets Matrix to:\n   *\n   *      | scaleX  skewX transX |\n   *      |  skewY scaleY transY |\n   *      |  pers0  pers1  pers2 |\n   *\n   * @param scaleX  horizontal scale factor\n   * @param skewX   horizontal skew factor\n   * @param transX  horizontal translation\n   * @param skewY   vertical skew factor\n   * @param scaleY  vertical scale factor\n   * @param transY  vertical translation\n   * @param pers0   input x-axis perspective factor\n   * @param pers1   input y-axis perspective factor\n   * @param pers2   perspective scale factor\n   * @return        Matrix constructed from parameters\n   */\n  public static makeAll(\n    scaleX: number,\n    skewX: number,\n    transX: number,\n    skewY: number,\n    scaleY: number,\n    transY: number,\n    pers0 = 0,\n    pers1 = 0,\n    pers2 = 1,\n  ): Matrix {\n    const wasmIns = PAGModule._Matrix._MakeAll(scaleX, skewX, transX, skewY, scaleY, transY, pers0, pers1, pers2);\n    if (!wasmIns) throw new Error('Matrix.makeAll fail, please check parameters valid!');\n    return new Matrix(wasmIns);\n  }\n  /**\n   * Sets Matrix to scale by (sx, sy). Returned matrix is:\n   *\n   *       | sx  0  0 |\n   *       |  0 sy  0 |\n   *       |  0  0  1 |\n   *\n   *  @param scaleX  horizontal scale factor\n   *  @param scaleY  [optionals] vertical scale factor, default equal scaleX.\n   *  @return    Matrix with scale\n   */\n  public static makeScale(scaleX: number, scaleY?: number): Matrix {\n    let wasmIns;\n    if (scaleY !== undefined) {\n      wasmIns = PAGModule._Matrix._MakeScale(scaleX, scaleY);\n    } else {\n      wasmIns = PAGModule._Matrix._MakeScale(scaleX);\n    }\n    if (!wasmIns) throw new Error('Matrix.makeScale fail, please check parameters valid!');\n    return new Matrix(wasmIns);\n  }\n  /**\n   * Sets Matrix to translate by (dx, dy). Returned matrix is:\n   *\n   *       | 1 0 dx |\n   *       | 0 1 dy |\n   *       | 0 0  1 |\n   *\n   * @param dx  horizontal translation\n   * @param dy  vertical translation\n   * @return    Matrix with translation\n   */\n  public static makeTrans(dx: number, dy: number): Matrix {\n    const wasmIns = PAGModule._Matrix._MakeTrans(dx, dy);\n    if (!wasmIns) throw new Error('Matrix.makeTrans fail, please check parameters valid!');\n    return new Matrix(wasmIns);\n  }\n\n  public wasmIns;\n  public isDestroyed = false;\n\n  public constructor(wasmIns: any) {\n    this.wasmIns = wasmIns;\n  }\n\n  /**\n   * scaleX; horizontal scale factor to store\n   */\n  public get a(): number {\n    return this.wasmIns ? this.wasmIns._get(MatrixIndex.a) : 0;\n  }\n  public set a(value: number) {\n    this.wasmIns?._set(MatrixIndex.a, value);\n  }\n  /**\n   * skewY; vertical skew factor to store\n   */\n  public get b(): number {\n    return this.wasmIns ? this.wasmIns._get(MatrixIndex.b) : 0;\n  }\n  public set b(value: number) {\n    this.wasmIns?._set(MatrixIndex.b, value);\n  }\n  /**\n   * skewX; horizontal skew factor to store\n   */\n  public get c(): number {\n    return this.wasmIns ? this.wasmIns._get(MatrixIndex.c) : 0;\n  }\n  public set c(value: number) {\n    this.wasmIns?._set(MatrixIndex.c, value);\n  }\n  /**\n   * scaleY; vertical scale factor to store\n   */\n  public get d(): number {\n    return this.wasmIns ? this.wasmIns._get(MatrixIndex.d) : 0;\n  }\n  public set d(value: number) {\n    this.wasmIns?._set(MatrixIndex.d, value);\n  }\n  /**\n   * transX; horizontal translation to store\n   */\n  public get tx(): number {\n    return this.wasmIns ? this.wasmIns._get(MatrixIndex.tx) : 0;\n  }\n  public set tx(value: number) {\n    this.wasmIns?._set(MatrixIndex.tx, value);\n  }\n  /**\n   * transY; vertical translation to store\n   */\n  public get ty(): number {\n    return this.wasmIns ? this.wasmIns._get(MatrixIndex.ty) : 0;\n  }\n  public set ty(value: number) {\n    this.wasmIns?._set(MatrixIndex.ty, value);\n  }\n\n  /**\n   * Returns one matrix value.\n   */\n  public get(index: MatrixIndex): number {\n    return this.wasmIns ? this.wasmIns._get(index) : 0;\n  }\n  /**\n   * Sets Matrix value.\n   */\n  public set(index: MatrixIndex, value: number) {\n    this.wasmIns?._set(index, value);\n  }\n  /**\n   * Sets all values from parameters. Sets matrix to:\n   *\n   *      | scaleX  skewX transX |\n   *      |  skewY scaleY transY |\n   *      | persp0 persp1 persp2 |\n   *\n   * @param scaleX  horizontal scale factor to store\n   * @param skewX   horizontal skew factor to store\n   * @param transX  horizontal translation to store\n   * @param skewY   vertical skew factor to store\n   * @param scaleY  vertical scale factor to store\n   * @param transY  vertical translation to store\n   */\n  public setAll(scaleX: number, skewX: number, transX: number, skewY: number, scaleY: number, transY: number) {\n    this.wasmIns?._setAll(scaleX, skewX, transX, skewY, scaleY, transY, 0, 0, 1);\n  }\n\n  public setAffine(a: number, b: number, c: number, d: number, tx: number, ty: number) {\n    this.wasmIns?._setAffine(a, b, c, d, tx, ty);\n  }\n  /**\n   * Sets Matrix to identity; which has no effect on mapped Point. Sets Matrix to:\n   *\n   *       | 1 0 0 |\n   *       | 0 1 0 |\n   *       | 0 0 1 |\n   *\n   * Also called setIdentity(); use the one that provides better inline documentation.\n   */\n  public reset() {\n    this.wasmIns?._reset();\n  }\n  /**\n   * Sets Matrix to translate by (dx, dy).\n   * @param dx  horizontal translation\n   * @param dy  vertical translation\n   */\n  public setTranslate(dx: number, dy: number) {\n    this.wasmIns?._setTranslate(dx, dy);\n  }\n  /**\n   * Sets Matrix to scale by sx and sy, about a pivot point at (px, py). The pivot point is\n   * unchanged when mapped with Matrix.\n   * @param sx  horizontal scale factor\n   * @param sy  vertical scale factor\n   * @param px  pivot on x-axis\n   * @param py  pivot on y-axis\n   */\n  public setScale(sx: number, sy: number, px = 0, py = 0) {\n    this.wasmIns?._setScale(sx, sy, px, py);\n  }\n  /**\n   * Sets Matrix to rotate by degrees about a pivot point at (px, py). The pivot point is\n   * unchanged when mapped with Matrix. Positive degrees rotates clockwise.\n   *  @param degrees  angle of axes relative to upright axes\n   *  @param px       pivot on x-axis\n   *  @param py       pivot on y-axis\n   */\n  public setRotate(degrees: number, px = 0, py = 0) {\n    this.wasmIns?._setRotate(degrees, px, py);\n  }\n  /**\n   * Sets Matrix to rotate by sinValue and cosValue, about a pivot point at (px, py).\n   * The pivot point is unchanged when mapped with Matrix.\n   * Vector (sinValue, cosValue) describes the angle of rotation relative to (0, 1).\n   * Vector length specifies scale.\n   */\n  public setSinCos(sinV: number, cosV: number, px = 0, py = 0) {\n    this.wasmIns?._setSinCos(sinV, cosV, px, py);\n  }\n  /**\n   * Sets Matrix to skew by kx and ky, about a pivot point at (px, py). The pivot point is\n   * unchanged when mapped with Matrix.\n   * @param kx  horizontal skew factor\n   * @param ky  vertical skew factor\n   * @param px  pivot on x-axis\n   * @param py  pivot on y-axis\n   */\n  public setSkew(kx: number, ky: number, px = 0, py = 0) {\n    this.wasmIns?._setSkew(kx, ky, px, py);\n  }\n  /**\n   * Sets Matrix to Matrix a multiplied by Matrix b. Either a or b may be this.\n   *\n   * Given:\n   *\n   *          | A B C |      | J K L |\n   *      a = | D E F |, b = | M N O |\n   *          | G H I |      | P Q R |\n   *\n   * sets Matrix to:\n   *\n   *              | A B C |   | J K L |   | AJ+BM+CP AK+BN+CQ AL+BO+CR |\n   *      a * b = | D E F | * | M N O | = | DJ+EM+FP DK+EN+FQ DL+EO+FR |\n   *              | G H I |   | P Q R |   | GJ+HM+IP GK+HN+IQ GL+HO+IR |\n   *\n   * @param a  Matrix on left side of multiply expression\n   * @param b  Matrix on right side of multiply expression\n   */\n  public setConcat(a: Matrix, b: Matrix) {\n    this.wasmIns?._setConcat(a.wasmIns, b.wasmIns);\n  }\n  /**\n   * Preconcats the matrix with the specified scale. M' = M * S(sx, sy)\n   */\n  public preTranslate(dx: number, dy: number) {\n    this.wasmIns?._preTranslate(dx, dy);\n  }\n  /**\n   * Postconcats the matrix with the specified scale. M' = S(sx, sy, px, py) * M\n   */\n  public preScale(sx: number, sy: number, px = 0, py = 0) {\n    this.wasmIns?._preScale(sx, sy, px, py);\n  }\n  /**\n   * Preconcats the matrix with the specified rotation. M' = M * R(degrees, px, py)\n   */\n  public preRotate(degrees: number, px = 0, py = 0) {\n    this.wasmIns?._preRotate(degrees, px, py);\n  }\n  /**\n   * Preconcats the matrix with the specified skew. M' = M * K(kx, ky, px, py)\n   */\n  public preSkew(kx: number, ky: number, px = 0, py = 0) {\n    this.wasmIns?._preSkew(kx, ky, px, py);\n  }\n  /**\n   * Preconcats the matrix with the specified matrix. M' = M * other\n   */\n  public preConcat(other: Matrix) {\n    this.wasmIns?._preConcat(other.wasmIns);\n  }\n  /**\n   * Postconcats the matrix with the specified translation. M' = T(dx, dy) * M\n   */\n  public postTranslate(dx: number, dy: number) {\n    this.wasmIns?._postTranslate(dx, dy);\n  }\n  /**\n   * Postconcats the matrix with the specified scale. M' = S(sx, sy, px, py) * M\n   */\n  public postScale(sx: number, sy: number, px = 0, py = 0) {\n    this.wasmIns?._postScale(sx, sy, px, py);\n  }\n  /**\n   * Postconcats the matrix with the specified rotation. M' = R(degrees, px, py) * M\n   */\n  public postRotate(degrees: number, px = 0, py = 0) {\n    this.wasmIns?._postRotate(degrees, px, py);\n  }\n  /**\n   * Postconcats the matrix with the specified skew. M' = K(kx, ky, px, py) * M\n   */\n  public postSkew(kx: number, ky: number, px = 0, py = 0) {\n    this.wasmIns?._postSkew(kx, ky, px, py);\n  }\n  /**\n   * Postconcats the matrix with the specified matrix. M' = other * M\n   */\n  public postConcat(other: Matrix) {\n    this.wasmIns?._postConcat(other.wasmIns);\n  }\n\n  public destroy() {\n    this.wasmIns.delete();\n  }\n}","import { PAGModule } from '../pag-module';\nimport { LayerType, Vector } from '../types';\n\nimport type { PAGLayer } from '../pag-layer';\nimport type { PAGImageLayer } from '../pag-image-layer';\nimport type { PAGSolidLayer } from '../pag-solid-layer';\nimport type { PAGTextLayer } from '../pag-text-layer';\n\nconst rewindData = (fn: (...args: any[]) => any, scope: any, ...args: any[]) => {\n  if (PAGModule.Asyncify.currData !== null) {\n    const currData = PAGModule.Asyncify.currData;\n    PAGModule.Asyncify.currData = null;\n    const ret = fn.call(scope, ...args);\n    PAGModule.Asyncify.currData = currData;\n    return ret;\n  } else {\n    return fn.call(scope, ...args);\n  }\n};\n\nexport const proxyVector = <T extends (...args: any) => any>(\n  vector: Vector<any>,\n  process: T,\n): Vector<ReturnType<T>> => {\n  const proxy = new Proxy(vector, {\n    get(target, property, receiver) {\n      switch (property) {\n        case 'get':\n          return (index: number) => {\n            const wasmIns = rewindData(target.get, target, index);\n            return !wasmIns ? wasmIns : process(wasmIns);\n          };\n        case 'push_back':\n          return (value: ReturnType<T>) => {\n            rewindData(target.push_back, target, value.wasmIns || value);\n            return undefined;\n          };\n        case 'size':\n          return () => {\n            return rewindData(target.size, target);\n          };\n        default:\n          return Reflect.get(target, property, receiver);\n      }\n    },\n  });\n  return proxy;\n};\n\nexport const layer2typeLayer = (wasmIns: any): PAGSolidLayer | PAGTextLayer | PAGImageLayer | PAGLayer => {\n  switch (rewindData(wasmIns._layerType, wasmIns)) {\n    case LayerType.Solid:\n      return new PAGModule.PAGSolidLayer(wasmIns);\n    case LayerType.Text:\n      return new PAGModule.PAGTextLayer(wasmIns);\n    case LayerType.Image:\n      return new PAGModule.PAGImageLayer(wasmIns);\n    default:\n      return new PAGModule.PAGLayer(wasmIns);\n  }\n};\n\nexport const getLayerTypeName = (layerType: LayerType) => {\n  switch (layerType) {\n    case LayerType.Solid:\n      return 'Solid';\n    case LayerType.Text:\n      return 'Text';\n    case LayerType.Shape:\n      return 'Shape';\n    case LayerType.Image:\n      return 'Image';\n    case LayerType.PreCompose:\n      return 'PreCompose';\n    default:\n      return 'Unknown';\n  }\n};\n\nexport const getWasmIns = (value: any) => {\n  if (value?.wasmIns) {\n    return value.wasmIns;\n  }\n  return value;\n};\n\nexport const isInstanceOf = (value: any, type: any) => typeof type !== 'undefined' && value instanceof type;\n","import { PAGComposition } from './pag-composition';\nimport { destroyVerify, wasmAwaitRewind } from './utils/decorators';\nimport { Matrix } from './core/matrix';\nimport { layer2typeLayer, proxyVector } from './utils/type-utils';\n\nimport type { LayerType, Marker, Rect } from './types';\n\n@destroyVerify\n@wasmAwaitRewind\nexport class PAGLayer {\n  public wasmIns: any;\n  public isDestroyed = false;\n\n  public constructor(wasmIns: any) {\n    this.wasmIns = wasmIns;\n  }\n  /**\n   * Returns a globally unique id for this object.\n   */\n  public uniqueID(): number {\n    return this.wasmIns._uniqueID() as number;\n  }\n  /**\n   * Returns the type of layer.\n   */\n  public layerType(): LayerType {\n    return this.wasmIns._layerType() as LayerType;\n  }\n  /**\n   * Returns the name of the layer.\n   */\n  public layerName(): string {\n    return this.wasmIns._layerName() as string;\n  }\n  /**\n   * A matrix object containing values that alter the scaling, rotation, and translation of the\n   * layer. Altering it does not change the animation matrix, and it will be concatenated to current\n   * animation matrix for displaying.\n   */\n  public matrix(): Matrix {\n    const wasmIns = this.wasmIns._matrix();\n    if (!wasmIns) throw new Error('Get matrix fail!');\n    return new Matrix(wasmIns);\n  }\n\n  public setMatrix(matrix: Matrix) {\n    this.wasmIns._setMatrix(matrix.wasmIns);\n  }\n  /**\n   * Resets the matrix to its default value.\n   */\n  public resetMatrix() {\n    this.wasmIns._resetMatrix();\n  }\n  /**\n   * The final matrix for displaying, it is the combination of the matrix property and current\n   * matrix from animation.\n   */\n  public getTotalMatrix(): Matrix {\n    const wasmIns = this.wasmIns._getTotalMatrix();\n    if (!wasmIns) throw new Error('Get total matrix fail!');\n    return new Matrix(this.wasmIns._getTotalMatrix());\n  }\n  /**\n   * Returns the current alpha of the layer if previously set.\n   */\n  public alpha(): number {\n    return this.wasmIns._alpha() as number;\n  }\n  /**\n   * Set the alpha of the layer, which will be concatenated to the current animation opacity for\n   * displaying.\n   */\n  public setAlpha(opacity: Number): void {\n    this.wasmIns._setAlpha(opacity);\n  }\n  /**\n   * Whether or not the layer is visible.\n   */\n\n  public visible(): boolean {\n    return this.wasmIns._visible() as boolean;\n  }\n  /**\n   * Set the visible of the layer.\n   */\n  public setVisible(visible: boolean): void {\n    this.wasmIns._setVisible(visible);\n  }\n  /**\n   * Ranges from 0 to PAGFile.numTexts - 1 if the layer type is text, or from 0 to PAGFile.numImages\n   * -1 if the layer type is image, otherwise returns -1.\n   */\n  public editableIndex(): number {\n    return this.wasmIns._editableIndex() as number;\n  }\n  /**\n   * Returns the parent PAGComposition of current PAGLayer.\n   */\n  public parent(): PAGComposition {\n    const wasmIns = this.wasmIns._parent();\n    if (!wasmIns) throw new Error('Get total matrix fail!');\n    return new PAGComposition(wasmIns);\n  }\n  /**\n   * Returns the markers of this layer.\n   */\n  public markers() {\n    const wasmIns = this.wasmIns._markers();\n    if (!wasmIns) throw new Error('Get markers fail!');\n    return proxyVector(wasmIns, (wasmIns: any) => wasmIns as Marker);\n  }\n  /**\n   * Converts the time from the PAGLayer's (local) timeline to the PAGSurface (global) timeline. The\n   * time is in microseconds.\n   */\n  public localTimeToGlobal(localTime: number): number {\n    return this.wasmIns._localTimeToGlobal(localTime) as number;\n  }\n  /**\n   * Converts the time from the PAGSurface (global) to the PAGLayer's (local) timeline timeline. The\n   * time is in microseconds.\n   */\n  public globalToLocalTime(globalTime: number): number {\n    return this.wasmIns._globalToLocalTime(globalTime) as number;\n  }\n  /**\n   * The duration of the layer in microseconds, indicates the length of the visible range.\n   */\n  public duration(): number {\n    return this.wasmIns._duration() as number;\n  }\n  /**\n   * Returns the frame rate of this layer.\n   */\n  public frameRate(): number {\n    return this.wasmIns._frameRate() as number;\n  }\n  /**\n   * The start time of the layer in microseconds, indicates the start position of the visible range\n   * in parent composition. It could be negative value.\n   */\n  public startTime(): number {\n    return this.wasmIns._startTime() as number;\n  }\n  /**\n   * Set the start time of the layer, in microseconds.\n   */\n  public setStartTime(time: number) {\n    this.wasmIns._setStartTime(time);\n  }\n  /**\n   * The current time of the layer in microseconds, the layer is invisible if currentTime is not in\n   * the visible range (startTime <= currentTime < startTime + duration).\n   */\n  public currentTime(): number {\n    return this.wasmIns._currentTime() as number;\n  }\n  /**\n   * Set the current time of the layer, in microseconds.\n   */\n  public setCurrentTime(time: number) {\n    this.wasmIns._setCurrentTime(time);\n  }\n  /**\n   * Returns the current progress of play position, the value ranges from 0.0 to 1.0.\n   */\n  public getProgress(): number {\n    return this.wasmIns._getProgress() as number;\n  }\n  /**\n   * Set the progress of play position, the value ranges from 0.0 to 1.0. A value of 0.0 represents\n   * the frame at startTime. A value of 1.0 represents the frame at the end of duration.\n   */\n  public setProgress(percent: number) {\n    this.wasmIns._setProgress(percent);\n  }\n  /**\n   * Set the progress of play position to the previous frame.\n   */\n  public preFrame() {\n    this.wasmIns._preFrame();\n  }\n  /**\n   * Set the progress of play position to the next frame.\n   */\n  public nextFrame() {\n    this.wasmIns._nextFrame();\n  }\n  /**\n   * Returns a rectangle that defines the original area of the layer, which is not transformed by\n   * the matrix.\n   */\n  public getBounds(): Rect {\n    return this.wasmIns._getBounds() as Rect;\n  }\n  /**\n   * Returns trackMatte layer of this layer.\n   */\n  public trackMatteLayer(): PAGLayer {\n    const wasmIns = this.wasmIns._trackMatteLayer();\n    if (!wasmIns) throw new Error('Get track matte layer fail!');\n    return layer2typeLayer(wasmIns);\n  }\n  /**\n   * Indicate whether this layer is excluded from parent's timeline. If set to true, this layer's\n   * current time will not change when parent's current time changes.\n   */\n  public excludedFromTimeline(): boolean {\n    return this.wasmIns._excludedFromTimeline() as boolean;\n  }\n  /**\n   * Set the excludedFromTimeline flag of this layer.\n   */\n  public setExcludedFromTimeline(value: boolean): void {\n    this.wasmIns._setExcludedFromTimeline(value);\n  }\n  /**\n   * Returns true if this layer is a PAGFile.\n   */\n  public isPAGFile(): boolean {\n    return this.wasmIns._isPAGFile() as boolean;\n  }\n  /**\n   * Returns this layer as a type layer.\n   */\n  public asTypeLayer() {\n    return layer2typeLayer(this);\n  }\n\n  public isDelete(): boolean {\n    return this.wasmIns.isDelete();\n  }\n\n  public destroy(): void {\n    this.wasmIns.delete();\n    this.isDestroyed = true;\n  }\n}\n","import { PAGModule } from './pag-module';\nimport { PAGLayer } from './pag-layer';\nimport { destroyVerify, wasmAwaitRewind } from './utils/decorators';\nimport { layer2typeLayer, proxyVector } from './utils/type-utils';\n\nimport type { Marker } from './types';\n\n@destroyVerify\n@wasmAwaitRewind\nexport class PAGComposition extends PAGLayer {\n  /**\n   * Make a empty PAGComposition with specified size.\n   */\n  public static make(width: number, height: number): PAGComposition {\n    const wasmIns = PAGModule._PAGComposition._Make(width, height);\n    if (!wasmIns) throw new Error('Make PAGComposition fail!');\n    return new PAGComposition(wasmIns);\n  }\n  /**\n   * Returns the width of the Composition.\n   */\n  public width(): number {\n    return this.wasmIns._width() as number;\n  }\n  /**\n   * Returns the height of the Composition.\n   */\n  public height(): number {\n    return this.wasmIns._height() as number;\n  }\n  /**\n   * Set the width and height of the Composition.\n   */\n  public setContentSize(width: number, height: number): void {\n    this.wasmIns._setContentSize(width, height);\n  }\n  /**\n   * Returns the number of child layers of this composition.\n   */\n  public numChildren(): number {\n    return this.wasmIns._numChildren() as number;\n  }\n  /**\n   * Returns the child layer that exists at the specified index.\n   * @param index The index position of the child layer.\n   * @returns The child layer at the specified index position.\n   */\n  public getLayerAt(index: number) {\n    const wasmIns = this.wasmIns._getLayerAt(index);\n    if (!wasmIns) throw new Error(`Get layer at ${index} fail!`);\n    return layer2typeLayer(wasmIns);\n  }\n  /**\n   * Returns the index position of a child layer.\n   * @param pagLayer The layer instance to identify.\n   * @returns The index position of the child layer to identify.\n   */\n  public getLayerIndex(pagLayer: PAGLayer): number {\n    return this.wasmIns._getLayerIndex(pagLayer.wasmIns) as number;\n  }\n  /**\n   * Changes the position of an existing child layer in the composition. This affects the layering\n   * of child layers.\n   * @param pagLayer The child layer for which you want to change the index number.\n   * @param index The resulting index number for the child layer.\n   */\n  public setLayerIndex(pagLayer: PAGLayer, index: number): number {\n    return this.wasmIns._setLayerIndex(pagLayer.wasmIns, index) as number;\n  }\n  /**\n   * Add a PAGLayer to current PAGComposition at the top. If you add a layer that already has a\n   * different PAGComposition object as a parent, the layer is removed from the other PAGComposition\n   * object.\n   */\n  public addLayer(pagLayer: PAGLayer): boolean {\n    return this.wasmIns._addLayer(pagLayer.wasmIns) as boolean;\n  }\n  /**\n   * Add a PAGLayer to current PAGComposition at the top. If you add a layer that already has a\n   * different PAGComposition object as a parent, the layer is removed from the other PAGComposition\n   * object.\n   */\n  public addLayerAt(pagLayer: PAGLayer, index: number): boolean {\n    return this.wasmIns._addLayerAt(pagLayer.wasmIns, index) as boolean;\n  }\n  /**\n   * Check whether current PAGComposition contains the specified pagLayer.\n   */\n  public contains(pagLayer: PAGLayer): boolean {\n    return this.wasmIns._contains(pagLayer.wasmIns) as boolean;\n  }\n  /**\n   * Remove the specified PAGLayer from current PAGComposition.\n   */\n  public removeLayer(pagLayer: PAGLayer) {\n    const wasmIns = this.wasmIns._removeLayer(pagLayer.wasmIns);\n    if (!wasmIns) throw new Error('Remove layer fail!');\n    return layer2typeLayer(wasmIns);\n  }\n  /**\n   * Remove the specified PAGLayer from current PAGComposition.\n   */\n  public removeLayerAt(index: number) {\n    const wasmIns = this.wasmIns._removeLayerAt(index);\n    if (!wasmIns) throw new Error(`Remove layer at ${index} fail!`);\n    return layer2typeLayer(wasmIns);\n  }\n  /**\n   * Remove all PAGLayers from current PAGComposition.\n   */\n  public removeAllLayers(): void {\n    this.wasmIns._removeAllLayers();\n  }\n  /**\n   * Swap the layers at the specified index.\n   */\n  public swapLayer(pagLayer1: PAGLayer, pagLayer2: PAGLayer): void {\n    this.wasmIns._swapLayer(pagLayer1.wasmIns, pagLayer2.wasmIns);\n  }\n  /**\n   * Swap the layers at the specified index.\n   */\n  public swapLayerAt(index1: number, index2: number): void {\n    this.wasmIns._swapLayerAt(index1, index2);\n  }\n  /**\n   * The audio data of this composition, which is an AAC audio in an MPEG-4 container.\n   */\n  public audioBytes(): Uint8Array | null {\n    return this.wasmIns._audioBytes();\n  }\n  /**\n   * Returns the audio markers of this composition.\n   */\n  public audioMarkers() {\n    const wasmIns = this.wasmIns._audioMarkers();\n    if (!wasmIns) throw new Error(`Get audioMarkers fail!`);\n    return proxyVector(wasmIns, (wasmIns: any) => wasmIns as Marker);\n  }\n  /**\n   * Indicates when the first frame of the audio plays in the composition's timeline.\n   */\n  public audioStartTime(): number {\n    return this.wasmIns._audioStartTime() as number;\n  }\n  /**\n   * Returns an array of layers that match the specified layer name.\n   */\n  public getLayersByName(layerName: string) {\n    const wasmIns = this.wasmIns._getLayersByName(layerName);\n    if (!wasmIns) throw new Error(`Get layers by ${layerName} fail!`);\n    return proxyVector(wasmIns, layer2typeLayer);\n  }\n  /**\n   * Returns an array of layers that lie under the specified point. The point is in pixels and from\n   * this PAGComposition's local coordinates.\n   */\n  public getLayersUnderPoint(localX: number, localY: number) {\n    const wasmIns = this.wasmIns._getLayersUnderPoint(localX, localY);\n    if (!wasmIns) throw new Error(`Get layers under point ${localX},${localY} fail!`);\n    return proxyVector(wasmIns, layer2typeLayer);\n  }\n}\n","import { isInstanceOf } from './type-utils';\n\nexport const readFile = (file: File) =>\n  new Promise<ArrayBuffer | null>((resolve) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      resolve(reader.result as ArrayBuffer | null);\n    };\n    reader.onerror = () => {\n      console.error((reader.error as DOMException).message);\n    };\n    reader.readAsArrayBuffer(file);\n  });\n\nexport const transferToArrayBuffer = (data: File | Blob | ArrayBuffer) => {\n  if (isInstanceOf(data, globalThis.File)) {\n    return readFile(data as File);\n  } else if (isInstanceOf(data, globalThis.Blob)) {\n    return readFile(new File([data as Blob], ''));\n  } else if (isInstanceOf(data, globalThis.ArrayBuffer)) {\n    return Promise.resolve(data as ArrayBuffer);\n  }\n  return Promise.resolve(null);\n};\n\nexport const concatUint8Arrays = (arrays: Array<Uint8Array>) => {\n  let totalLength = 0;\n  for (const arr of arrays) {\n    totalLength += arr.byteLength;\n  }\n  const result = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const arr of arrays) {\n    result.set(arr, offset);\n    offset += arr.byteLength;\n  }\n  return result;\n};\n","export const writeBufferToWasm = (module: EmscriptenModule, data: ArrayLike<number> | ArrayBufferLike) => {\n  const uint8Array = new Uint8Array(data);\n  const numBytes = uint8Array.byteLength;\n  const dataPtr = module._malloc(numBytes);\n  const dataOnHeap = new Uint8Array(module.HEAPU8.buffer, dataPtr, numBytes);\n  dataOnHeap.set(uint8Array);\n  return { byteOffset: dataPtr, length: numBytes, free: () => module._free(dataPtr) };\n};\n\nexport const readBufferFromWasm = (\n  module: EmscriptenModule,\n  data: ArrayLike<number> | ArrayBufferLike,\n  handle: (byteOffset: number, length: number) => boolean,\n) => {\n  const uint8Array = new Uint8Array(data);\n  const dataPtr = module._malloc(uint8Array.byteLength);\n  if (!handle(dataPtr, uint8Array.byteLength)) return { data: null, free: () => module._free(dataPtr) };\n  const dataOnHeap = new Uint8Array(module.HEAPU8.buffer, dataPtr, uint8Array.byteLength);\n  uint8Array.set(dataOnHeap);\n  return { data: uint8Array, free: () => module._free(dataPtr) };\n};\n","import { PAGModule } from './pag-module';\nimport { PAGComposition } from './pag-composition';\nimport { transferToArrayBuffer } from './utils/common';\nimport { wasmAwaitRewind, wasmAsyncMethod, destroyVerify } from './utils/decorators';\nimport { getLayerTypeName, layer2typeLayer, proxyVector } from './utils/type-utils';\n\nimport type { PAGImage } from './pag-image';\nimport { LayerType, PAGTimeStretchMode, TextDocument } from './types';\nimport { writeBufferToWasm } from '@tgfx/utils/buffer';\n\n@destroyVerify\n@wasmAwaitRewind\nexport class PAGFile extends PAGComposition {\n  /**\n   * Load pag file from file.\n   */\n  @wasmAsyncMethod\n  public static async load(data: File | Blob | ArrayBuffer) {\n    const buffer = await transferToArrayBuffer(data);\n    if (!buffer)\n      throw new Error(\n        'Initialize PAGFile data type error, please put check data type must to be File ｜ Blob | ArrayBuffer!',\n      );\n    return PAGFile.loadFromBuffer(buffer);\n  }\n  /**\n   * Load pag file from arrayBuffer\n   */\n  public static loadFromBuffer(buffer: ArrayBuffer) {\n    if (!buffer || !(buffer.byteLength > 0)) throw new Error('Initialize PAGFile data not be empty!');\n    const { byteOffset, length, free } = writeBufferToWasm(PAGModule, buffer);\n    const wasmIns = PAGModule._PAGFile._Load(byteOffset, length);\n    free();\n    if (!wasmIns) throw new Error('Load PAGFile fail!');\n    const pagFile = new PAGFile(wasmIns);\n    return pagFile;\n  }\n  /**\n   * The maximum tag level current SDK supports.\n   */\n  public static maxSupportedTagLevel(): number {\n    return PAGModule._PAGFile._MaxSupportedTagLevel() as number;\n  }\n\n  /**\n   * The tag level this pag file requires.\n   */\n  public tagLevel(): number {\n    return this.wasmIns._tagLevel() as number;\n  }\n  /**\n   * The number of replaceable texts.\n   */\n  public numTexts(): number {\n    return this.wasmIns._numTexts() as number;\n  }\n  /**\n   * The number of replaceable images.\n   */\n  public numImages(): number {\n    return this.wasmIns._numImages() as number;\n  }\n  /**\n   * The number of video compositions.\n   */\n  public numVideos(): number {\n    return this.wasmIns._numVideos() as number;\n  }\n  /**\n   * Get a text data of the specified index. The index ranges from 0 to numTexts - 1.\n   * Note: It always returns the default text data.\n   */\n  public getTextData(editableTextIndex: number): TextDocument {\n    return this.wasmIns._getTextData(editableTextIndex) as TextDocument;\n  }\n  /**\n   * Replace the text data of the specified index. The index ranges from 0 to PAGFile.numTexts - 1.\n   * Passing in null for the textData parameter will reset it to default text data.\n   */\n  public replaceText(editableTextIndex: number, textData: TextDocument): void {\n    this.wasmIns._replaceText(editableTextIndex, textData);\n  }\n  /**\n   * Replace the image content of the specified index with a PAGImage object. The index ranges from\n   * 0 to PAGFile.numImages - 1. Passing in null for the image parameter will reset it to default\n   * image content.\n   */\n  public replaceImage(editableImageIndex: number, pagImage: PAGImage): void {\n    this.wasmIns._replaceImage(editableImageIndex, pagImage.wasmIns);\n  }\n  /**\n   * Return an array of layers by specified editable index and layer type.\n   */\n  public getLayersByEditableIndex(editableIndex: Number, layerType: LayerType) {\n    const wasmIns = this.wasmIns._getLayersByEditableIndex(editableIndex, layerType);\n    if (!wasmIns) throw new Error(`Get ${getLayerTypeName(layerType)} layers by ${editableIndex} fail!`);\n    return proxyVector(wasmIns, layer2typeLayer);\n  }\n  /**\n   * Returns the indices of the editable layers in this PAGFile.\n   * If the editableIndex of a PAGLayer is not present in the returned indices, the PAGLayer should\n   * not be treated as editable.\n   */\n  public getEditableIndices(layerType: LayerType): Array<number> {\n    return this.wasmIns._getEditableIndices(layerType);\n  }\n  /**\n   * Indicate how to stretch the original duration to fit target duration when file's duration is\n   * changed. The default value is PAGTimeStretchMode::Repeat.\n   */\n  public timeStretchMode(): PAGTimeStretchMode {\n    return this.wasmIns._timeStretchMode() as PAGTimeStretchMode;\n  }\n  /**\n   * Set the timeStretchMode of this file.\n   */\n  public setTimeStretchMode(value: PAGTimeStretchMode): void {\n    this.wasmIns._setTimeStretchMode(value);\n  }\n  /**\n   * Set the duration of this PAGFile. Passing a value less than or equal to 0 resets the duration\n   * to its default value.\n   */\n  public setDuration(duration: number): void {\n    this.wasmIns._setDuration(duration);\n  }\n  /**\n   * Set the duration of this PAGFile. Passing a value less than or equal to 0 resets the duration\n   * to its default value.\n   */\n  public copyOriginal(): PAGFile {\n    const wasmIns = this.wasmIns._copyOriginal();\n    if (!wasmIns) throw new Error(`Copy original fail!`);\n    return new PAGFile(wasmIns);\n  }\n}\n","import { PAGModule } from './pag-module';\nimport { AlphaType, ColorType } from './types';\nimport { readBufferFromWasm } from '@tgfx/utils/buffer';\nimport { destroyVerify, wasmAwaitRewind } from './utils/decorators';\n\n@destroyVerify\n@wasmAwaitRewind\nexport class PAGSurface {\n  /**\n   * Make a PAGSurface from canvas.\n   */\n  public static fromCanvas(canvasID: string): PAGSurface {\n    const wasmIns = PAGModule._PAGSurface._FromCanvas(canvasID);\n    if (!wasmIns) throw new Error(`Make PAGSurface from canvas ${canvasID} fail!`);\n    return new PAGSurface(wasmIns);\n  }\n  /**\n   * Make a PAGSurface from texture.\n   */\n  public static fromTexture(textureID: number, width: number, height: number, flipY: boolean): PAGSurface {\n    const wasmIns = PAGModule._PAGSurface._FromTexture(textureID, width, height, flipY);\n    if (!wasmIns) throw new Error(`Make PAGSurface from texture ${textureID} fail!`);\n    return new PAGSurface(wasmIns);\n  }\n  /**\n   * Make a PAGSurface from frameBuffer.\n   */\n  public static fromRenderTarget(frameBufferID: number, width: number, height: number, flipY: boolean): PAGSurface {\n    const wasmIns = PAGModule._PAGSurface._FromRenderTarget(frameBufferID, width, height, flipY);\n    if (!wasmIns) throw new Error(`Make PAGSurface from frameBuffer ${frameBufferID} fail!`);\n    return new PAGSurface(wasmIns);\n  }\n\n  public wasmIns;\n  public isDestroyed = false;\n\n  public constructor(wasmIns: any) {\n    this.wasmIns = wasmIns;\n  }\n  /**\n   * The width of surface in pixels.\n   */\n  public width(): number {\n    return this.wasmIns._width() as number;\n  }\n  /**\n   * The height of surface in pixels.\n   */\n  public height(): number {\n    return this.wasmIns._height() as number;\n  }\n  /**\n   * Update the size of surface, and reset the internal surface.\n   */\n  public updateSize(): void {\n    this.wasmIns._updateSize();\n  }\n  /**\n   * Erases all pixels of this surface with transparent color. Returns true if the content has\n   * changed.\n   */\n  public clearAll(): boolean {\n    return this.wasmIns._clearAll() as boolean;\n  }\n  /**\n   * Free the cache created by the surface immediately. Can be called to reduce memory pressure.\n   */\n  public freeCache(): void {\n    this.wasmIns._freeCache();\n  }\n  /**\n   * Copies pixels from current PAGSurface to dstPixels with specified color type, alpha type and\n   * row bytes. Returns true if pixels are copied to dstPixels.\n   */\n  public readPixels(colorType: ColorType, alphaType: AlphaType): Uint8Array | null {\n    if (colorType === ColorType.Unknown) return null;\n    const rowBytes = this.width() * (colorType === ColorType.ALPHA_8 ? 1 : 4);\n    const length = rowBytes * this.height();\n    const dataUint8Array = new Uint8Array(length);\n    const { data, free } = readBufferFromWasm(PAGModule, dataUint8Array, (dataPtr) => {\n      return this.wasmIns._readPixels(colorType, alphaType, dataPtr, rowBytes) as boolean;\n    });\n    free();\n    return data;\n  }\n\n  public destroy(): void {\n    this.wasmIns.delete();\n    this.isDestroyed = true;\n  }\n}\n","import { PAGModule } from './pag-module';\nimport { PAGFile } from './pag-file';\nimport { PAGSurface } from './pag-surface';\nimport { wasmAwaitRewind, wasmAsyncMethod, destroyVerify } from './utils/decorators';\nimport { getWasmIns, layer2typeLayer, proxyVector } from './utils/type-utils';\nimport { Matrix } from './core/matrix';\n\nimport { PAGComposition } from './pag-composition';\nimport type { PAGLayer } from './pag-layer';\nimport type { PAGScaleMode, Rect } from './types';\nimport type { VideoReader } from './interfaces';\n\n@destroyVerify\n@wasmAwaitRewind\nexport class PAGPlayer {\n  public static create(): PAGPlayer {\n    const wasmIns = new PAGModule._PAGPlayer();\n    if (!wasmIns) throw new Error('Create PAGPlayer fail!');\n    return new PAGPlayer(wasmIns);\n  }\n\n  public wasmIns;\n  public isDestroyed = false;\n  public videoReaders: VideoReader[] = [];\n\n  public constructor(wasmIns: any) {\n    this.wasmIns = wasmIns;\n  }\n  /**\n   * Set the progress of play position, the value is from 0.0 to 1.0.\n   */\n  public setProgress(progress: number): void {\n    this.wasmIns._setProgress(progress);\n  }\n  /**\n   * Apply all pending changes to the target surface immediately. Returns true if the content has\n   * changed.\n   */\n  @wasmAsyncMethod\n  public async flush() {\n    return PAGModule.webAssemblyQueue.exec<boolean>(this.wasmIns._flush, this.wasmIns);\n  }\n  /**\n   * [Internal] Apply all pending changes to the target surface immediately. Returns true if the content has\n   * changed.\n   */\n  @wasmAsyncMethod\n  public async flushInternal(callback: (res: boolean) => void) {\n    const res = await PAGModule.webAssemblyQueue.exec<boolean>(async () => {\n      PAGModule.currentPlayer = this;\n      const res = await this.wasmIns._flush();\n      PAGModule.currentPlayer = null;\n      callback(res);\n      return res;\n    }, this.wasmIns);\n    // Check if any video reader has error.\n    for (const videoReader of this.videoReaders) {\n      const error = await videoReader.getError();\n      if (error !== null) {\n        throw error;\n      }\n    }\n    return res;\n  }\n  /**\n   * The duration of current composition in microseconds.\n   */\n  public duration(): number {\n    return this.wasmIns._duration() as number;\n  }\n  /**\n   * Returns the current progress of play position, the value is from 0.0 to 1.0.\n   */\n  public getProgress(): number {\n    return this.wasmIns._getProgress() as number;\n  }\n  /**\n   * Returns the current frame.\n   */\n  public currentFrame(): number {\n    return this.wasmIns._currentFrame() as number;\n  }\n  /**\n   * If set to false, the player skips rendering for video composition.\n   */\n  public videoEnabled(): boolean {\n    return this.wasmIns._videoEnabled() as boolean;\n  }\n  /**\n   * Set the value of videoEnabled property.\n   */\n  public setVideoEnabled(enabled: boolean): void {\n    this.wasmIns._setVideoEnabled(enabled);\n  }\n  /**\n   * If set to true, PAGPlayer caches an internal bitmap representation of the static content for each\n   * layer. This caching can increase performance for layers that contain complex vector content. The\n   * execution speed can be significantly faster depending on the complexity of the content, but it\n   * requires extra graphics memory. The default value is true.\n   */\n  public cacheEnabled(): boolean {\n    return this.wasmIns._cacheEnabled() as boolean;\n  }\n  /**\n   * Set the value of cacheEnabled property.\n   */\n  public setCacheEnabled(enabled: boolean): void {\n    this.wasmIns._setCacheEnabled(enabled);\n  }\n  /**\n   * This value defines the scale factor for internal graphics caches, ranges from 0.0 to 1.0. The\n   * scale factors less than 1.0 may result in blurred output, but it can reduce the usage of graphics\n   * memory which leads to better performance. The default value is 1.0.\n   */\n  public cacheScale(): number {\n    return this.wasmIns._cacheScale() as number;\n  }\n  /**\n   * Set the value of cacheScale property.\n   */\n  public setCacheScale(value: number): void {\n    this.wasmIns._setCacheScale(value);\n  }\n  /**\n   * The maximum frame rate for rendering, ranges from 1 to 60. If set to a value less than the actual\n   * frame rate from composition, it drops frames but increases performance. Otherwise, it has no\n   * effect. The default value is 60.\n   */\n  public maxFrameRate(): number {\n    return this.wasmIns._maxFrameRate() as number;\n  }\n  /**\n   * Set the maximum frame rate for rendering.\n   */\n  public setMaxFrameRate(value: number): void {\n    this.wasmIns._setMaxFrameRate(value);\n  }\n  /**\n   * Returns the current scale mode.\n   */\n  public scaleMode(): PAGScaleMode {\n    return this.wasmIns._scaleMode() as PAGScaleMode;\n  }\n  /**\n   * Specifies the rule of how to scale the pag content to fit the surface size. The matrix\n   * changes when this method is called.\n   */\n  public setScaleMode(value: PAGScaleMode): void {\n    this.wasmIns._setScaleMode(value);\n  }\n  /**\n   * Set the PAGSurface object for PAGPlayer to render onto.\n   */\n  public setSurface(pagSurface: PAGSurface | null): void {\n    this.wasmIns._setSurface(getWasmIns(pagSurface));\n  }\n  /**\n   *\n   * Returns the current PAGComposition for PAGPlayer to render as content.\n   */\n  public getComposition(): PAGComposition {\n    const wasmIns = this.wasmIns._getComposition();\n    if (!wasmIns) throw new Error('Get composition fail!');\n    if (wasmIns._isPAGFile()) {\n      return new PAGFile(wasmIns);\n    }\n    return new PAGComposition(wasmIns);\n  }\n  /**\n   *\n   * Sets a new PAGComposition for PAGPlayer to render as content.\n   */\n\n  public setComposition(pagComposition: PAGComposition | null) {\n    this.wasmIns._setComposition(getWasmIns(pagComposition));\n  }\n  /**\n   * Returns the PAGSurface object for PAGPlayer to render onto.\n   */\n  public getSurface(): PAGSurface {\n    const wasmIns = this.wasmIns._getSurface();\n    if (!wasmIns) throw new Error('Get surface fail!');\n    return new PAGSurface(wasmIns);\n  }\n  /**\n   * Returns a copy of current matrix.\n   */\n  public matrix(): Matrix {\n    const wasmIns = this.wasmIns._matrix();\n    if (!wasmIns) throw new Error('Get matrix fail!');\n    return new Matrix(wasmIns);\n  }\n  /**\n   * Set the transformation which will be applied to the composition. The scaleMode property\n   * will be set to PAGScaleMode::None when this method is called.\n   */\n  public setMatrix(matrix: Matrix) {\n    this.wasmIns._setMatrix(matrix.wasmIns);\n  }\n  /**\n   * Set the progress of play position to next frame. It is applied only when the composition is not\n   * null.\n   */\n  public nextFrame() {\n    this.wasmIns._nextFrame();\n  }\n  /**\n   * Set the progress of play position to previous frame. It is applied only when the composition is\n   * not null.\n   */\n  public preFrame() {\n    this.wasmIns._preFrame();\n  }\n  /**\n   * If true, PAGPlayer clears the whole content of PAGSurface before drawing anything new to it.\n   * The default value is true.\n   */\n  public autoClear(): boolean {\n    return this.wasmIns._autoClear() as boolean;\n  }\n  /**\n   * Sets the autoClear property.\n   */\n  public setAutoClear(value: boolean) {\n    this.wasmIns._setAutoClear(value);\n  }\n  /**\n   * Returns a rectangle that defines the original area of the layer, which is not transformed by\n   * the matrix.\n   */\n  public getBounds(pagLayer: PAGLayer): Rect {\n    return this.wasmIns._getBounds(pagLayer.wasmIns) as Rect;\n  }\n  /**\n   * Returns an array of layers that lie under the specified point. The point is in pixels and from\n   *\n   * this PAGComposition's local coordinates.\n   */\n  public getLayersUnderPoint(localX: number, localY: number) {\n    const wasmIns = this.wasmIns._getLayersUnderPoint(localX, localY);\n    if (!wasmIns) throw new Error(`Get layers under point, x: ${localX} y:${localY} fail!`);\n    return proxyVector(wasmIns, layer2typeLayer);\n  }\n  /**\n   * Evaluates the PAGLayer to see if it overlaps or intersects with the specified point. The point\n   *\n   * is in the coordinate space of the PAGSurface, not the PAGComposition that contains the\n   * PAGLayer. It always returns false if the PAGLayer or its parent (or parent's parent...) has not\n   * been added to this PAGPlayer. The pixelHitTest parameter indicates whether or not to check\n   * against the actual pixels of the object (true) or the bounding box (false). Returns true if the\n   * PAGLayer overlaps or intersects with the specified point.\n   */\n  public hitTestPoint(pagLayer: PAGLayer, surfaceX: number, surfaceY: number, pixelHitTest = false): boolean {\n    return this.wasmIns._hitTestPoint(pagLayer.wasmIns, surfaceX, surfaceY, pixelHitTest) as boolean;\n  }\n  /**\n   * The time cost by rendering in microseconds.\n   */\n  public renderingTime(): number {\n    return this.wasmIns._renderingTime() as number;\n  }\n  /**\n   * The time cost by image decoding in microseconds.\n   */\n  public imageDecodingTime(): number {\n    return this.wasmIns._imageDecodingTime() as number;\n  }\n  /**\n   * The time cost by presenting in microseconds.\n   */\n  public presentingTime(): number {\n    return this.wasmIns._presentingTime() as number;\n  }\n  /**\n   * The memory cost by graphics in bytes.\n   */\n  public graphicsMemory(): number {\n    return this.wasmIns._graphicsMemory() as number;\n  }\n  /**\n   * Prepares the player for the next flush() call. It collects all CPU tasks from the current\n   * progress of the composition and runs them asynchronously in parallel. It is usually used for\n   * speeding up the first frame rendering.\n   */\n  public prepare(): Promise<void> {\n    return PAGModule.webAssemblyQueue.exec(async () => {\n      PAGModule.currentPlayer = this;\n      await this.wasmIns._prepare();\n      PAGModule.currentPlayer = null;\n    }, this.wasmIns);\n  }\n\n  public destroy() {\n    this.wasmIns.delete();\n    this.isDestroyed = true;\n  }\n  /**\n   * Link VideoReader to PAGPlayer.\n   */\n  public linkVideoReader(videoReader: VideoReader) {\n    this.videoReaders.push(videoReader);\n  }\n  /**\n   * Unlink VideoReader from PAGPlayer.\n   */\n  public unlinkVideoReader(videoReader: VideoReader) {\n    const index = this.videoReaders.indexOf(videoReader);\n    if (index !== -1) {\n      this.videoReaders.splice(index, 1);\n    }\n  }\n}\n","import { AlphaType, ColorType, PAGScaleMode } from './types';\nimport { wasmAwaitRewind, wasmAsyncMethod, destroyVerify } from './utils/decorators';\nimport { PAGModule } from './pag-module';\nimport { Matrix } from './core/matrix';\nimport { writeBufferToWasm } from '@tgfx/utils/buffer';\n\n@destroyVerify\n@wasmAwaitRewind\nexport class PAGImage {\n  /**\n   * Create pag image from image file.\n   */\n  @wasmAsyncMethod\n  public static async fromFile(data: File): Promise<PAGImage> {\n    return new Promise((resolve, reject) => {\n      const image = new Image();\n      image.onload = async () => {\n        resolve(PAGImage.fromSource(image));\n      };\n      image.onerror = (error) => {\n        reject(error);\n      };\n      image.src = URL.createObjectURL(data);\n    });\n  }\n  /**\n   * Create pag image from image source or video source.\n   * Make sure the target pixel is shown on the screen.\n   * Like\n   * ``` javascript\n   * Image.onload = async () => {\n   *   return await PAGImage.fromSource(Image)\n   * }\n   * ```\n   */\n  public static fromSource(source: TexImageSource): PAGImage {\n    const wasmIns = PAGModule._PAGImage._FromNativeImage(source);\n    if (!wasmIns) throw new Error('Make PAGImage from source fail!');\n    return new PAGImage(wasmIns);\n  }\n  /**\n   *  Creates a PAGImage object from an array of pixel data, return null if it's not valid pixels.\n   */\n  public static fromPixels(\n    pixels: Uint8Array,\n    width: number,\n    height: number,\n    colorType: ColorType,\n    alphaType: AlphaType,\n  ): PAGImage {\n    const rowBytes = width * (colorType === ColorType.ALPHA_8 ? 1 : 4);\n    const { byteOffset, free } = writeBufferToWasm(PAGModule, pixels);\n    const wasmIns = PAGModule._PAGImage._FromPixels(byteOffset, width, height, rowBytes, colorType, alphaType);\n    free();\n    if (!wasmIns) throw new Error('Make PAGImage from pixels fail!');\n    return new PAGImage(wasmIns);\n  }\n  /**\n   * Creates a PAGImage object from the specified backend texture, return null if the texture is\n   * invalid.\n   */\n  public static fromTexture(textureID: number, width: number, height: number, flipY: boolean) {\n    const wasmIns = PAGModule._PAGImage._FromTexture(textureID, width, height, flipY);\n    if (!wasmIns) throw new Error('Make PAGImage from texture fail!');\n    return new PAGImage(wasmIns);\n  }\n\n  public wasmIns;\n  public isDestroyed = false;\n\n  public constructor(wasmIns: any) {\n    this.wasmIns = wasmIns;\n  }\n  /**\n   * Returns the width in pixels.\n   */\n  public width(): number {\n    return this.wasmIns._width() as number;\n  }\n  /**\n   * Returns the height in pixels.\n   */\n  public height(): number {\n    return this.wasmIns._height() as number;\n  }\n  /**\n   * Returns the current scale mode. The default value is PAGScaleMode::LetterBox.\n   */\n  public scaleMode(): PAGScaleMode {\n    return this.wasmIns._scaleMode() as PAGScaleMode;\n  }\n  /**\n   * Specifies the rule of how to scale the content to fit the image layer's original size.\n   * The matrix changes when this method is called.\n   */\n  public setScaleMode(scaleMode: PAGScaleMode) {\n    this.wasmIns._setScaleMode(scaleMode);\n  }\n  /**\n   * Returns a copy of current matrix.\n   */\n  public matrix(): Matrix {\n    const wasmIns = this.wasmIns._matrix();\n    if (!wasmIns) throw new Error('Get matrix fail!');\n    return new Matrix(wasmIns);\n  }\n  /**\n   * Set the transformation which will be applied to the content.\n   * The scaleMode property will be set to PAGScaleMode::None when this method is called.\n   */\n  public setMatrix(matrix: Matrix) {\n    this.wasmIns._setMatrix(matrix.wasmIns);\n  }\n  /**\n   * Destroy the pag image.\n   */\n  public destroy(): void {\n    this.wasmIns.delete();\n    this.isDestroyed = true;\n  }\n}\n","export type Listener<K> = (event: K) => void;\n\nexport class EventManager<K, V> {\n  private listenerMap: Map<keyof K, Array<(event: V) => void>>;\n\n  public constructor() {\n    this.listenerMap = new Map();\n  }\n\n  public on(eventName: keyof K, listener: Listener<V>) {\n    let listenerList: Listener<V>[] = [];\n    if (this.listenerMap.has(eventName)) {\n      listenerList = this.listenerMap.get(eventName) as Array<(event: V) => void>;\n    }\n    listenerList.push(listener);\n    this.listenerMap.set(eventName, listenerList);\n  }\n\n  public off(eventName: keyof K, listener?: Listener<V>): boolean {\n    if (!this.listenerMap.has(eventName)) return false;\n    const listenerList: Listener<V>[] = this.listenerMap.get(eventName) as Listener<V>[];\n    if (listenerList.length === 0) return false;\n    if (!listener) {\n      this.listenerMap.delete(eventName);\n      return true;\n    }\n    const index = listenerList.indexOf(listener);\n    if (index === -1) return false;\n    listenerList.splice(index, 1);\n    return true;\n  }\n\n  public emit(eventName: keyof K, event: V): boolean {\n    if (!this.listenerMap.has(eventName)) return false;\n    const listenerList: Listener<V>[] = this.listenerMap.get(eventName) as Listener<V>[];\n    if (listenerList.length === 0) return false;\n    listenerList.forEach((listener: Listener<V>) => listener(event));\n    return true;\n  }\n}\n","/**\n * VideoDecode wait frame num.\n */\nexport const VIDEO_DECODE_WAIT_FRAME = 3;\n/**\n * VideoDecode seek timeout frame num.\n */\nexport const VIDEO_DECODE_SEEK_TIMEOUT_FRAME = 12;\n/**\n * NAL unit length. [ 0, 0, 0, 1 ]\n */\nexport const NALU_HEADER_LENGTH = 4;\n/**\n * Web safe font.\n */\nexport const WEB_SAFE_FONT = 'Arial';\n/**\n * Default render canvas size.\n */\nexport const DEFAULT_CANVAS_SIZE = 2560;\n/**\n * Default WebGL ContextAttributes\n */\nexport const WEBGL_CONTEXT_ATTRIBUTES = {\n  depth: false,\n  stencil: false,\n  antialias: false,\n};\n\nexport const VIDEO_PLAYBACK_RATE_MIN = 0.125;\nexport const VIDEO_PLAYBACK_RATE_MAX = 4;\n\nexport const CANVAS_POOL_MAX_SIZE = 10;\n","import { PAGModule } from '../pag-module';\nimport { WEBGL_CONTEXT_ATTRIBUTES } from '../constant';\nimport { isInstanceOf } from '../utils/type-utils';\n\nexport class BackendContext {\n  public static from(gl: WebGLRenderingContext | WebGL2RenderingContext | BackendContext): BackendContext {\n    if (gl instanceof BackendContext) {\n      return new BackendContext(gl.handle, true);\n    } else {\n      const majorVersion = isInstanceOf(gl, globalThis.WebGL2RenderingContext) ? 2 : 1;\n      const { GL } = PAGModule;\n      let id = 0;\n      if (GL.contexts.length > 0) {\n        id = GL.contexts.findIndex((context) => context?.GLctx === gl);\n      }\n      if (id < 1) {\n        id = GL.registerContext(gl, {\n          majorVersion: majorVersion,\n          minorVersion: 0,\n          ...WEBGL_CONTEXT_ATTRIBUTES,\n        });\n        return new BackendContext(id);\n      }\n      return new BackendContext(id, true);\n    }\n  }\n\n  public handle: number;\n\n  private adopted: boolean;\n  private isDestroyed = false;\n  private oldHandle = 0;\n\n  public constructor(handle: number, adopted = false) {\n    this.handle = handle;\n    this.adopted = adopted;\n  }\n\n  public getContext(): WebGLRenderingContext | null {\n    return PAGModule.GL.getContext(this.handle)!.GLctx;\n  }\n\n  public makeCurrent(): boolean {\n    if (this.isDestroyed) return false;\n    this.oldHandle = PAGModule.GL.currentContext?.handle || 0;\n    if (this.oldHandle === this.handle) return true;\n    return PAGModule.GL.makeContextCurrent(this.handle);\n  }\n\n  public clearCurrent() {\n    if (this.isDestroyed) return;\n    if (this.oldHandle === this.handle) return;\n    PAGModule.GL.makeContextCurrent(0);\n    if (this.oldHandle) {\n      PAGModule.GL.makeContextCurrent(this.oldHandle);\n    }\n  }\n  /**\n   * Register WebGLTexture in EmscriptenGL, And return handle.\n   */\n  public registerTexture(texture: WebGLTexture) {\n    return this.register(PAGModule.GL.textures, texture);\n  }\n  /**\n   * Get WebGLTexture by handle.\n   */\n  public getTexture(handled: number): WebGLTexture | null {\n    return PAGModule.GL.textures[handled];\n  }\n  /**\n   * Unregister WebGLTexture reference in EmscriptenGL.\n   */\n  public unregisterTexture(handle: number) {\n    PAGModule.GL.textures[handle] = null;\n  }\n  /**\n   * Register WebGLFramebuffer in EmscriptenGL, And return handle.\n   */\n  public registerRenderTarget(framebuffer: WebGLFramebuffer) {\n    return this.register(PAGModule.GL.framebuffers, framebuffer);\n  }\n  /**\n   * Get WebGLFramebuffer by handle.\n   */\n  public getRenderTarget(handle: number): WebGLFramebuffer | null {\n    return PAGModule.GL.framebuffers[handle];\n  }\n  /**\n   * Unregister WebGLTexture reference in EmscriptenGL.\n   */\n  public unregisterRenderTarget(handle: number) {\n    PAGModule.GL.framebuffers[handle] = null;\n  }\n\n  public destroy(): void {\n    if (this.adopted) return;\n    PAGModule.GL.deleteContext(this.handle);\n  }\n\n  private register<T>(table: (T | null)[], item: T): number {\n    const handle = PAGModule.GL.getNewId(table);\n    table[handle] = item;\n    return handle;\n  }\n}\n","import { WEBGL_CONTEXT_ATTRIBUTES } from '../constant';\nimport { BackendContext } from './backend-context';\n\nconst renderCanvasList: RenderCanvas[] = [];\n\nexport class RenderCanvas {\n  public static from(canvas: HTMLCanvasElement | OffscreenCanvas, contextAttributes?: WebGLContextAttributes) {\n    let renderCanvas = renderCanvasList.find((targetCanvas) => targetCanvas.canvas === canvas);\n    if (renderCanvas) return renderCanvas;\n    renderCanvas = new RenderCanvas(canvas, contextAttributes);\n    renderCanvasList.push(renderCanvas);\n    return renderCanvas;\n  }\n\n  private _canvas: HTMLCanvasElement | OffscreenCanvas | null = null;\n  private _glContext: BackendContext | null = null;\n  private retainCount = 0;\n\n  public constructor(canvas: HTMLCanvasElement | OffscreenCanvas, contextAttributes?: WebGLContextAttributes) {\n    this._canvas = canvas;\n    const gl = canvas.getContext('webgl', {\n      ...WEBGL_CONTEXT_ATTRIBUTES,\n      ...contextAttributes,\n    }) as WebGLRenderingContext;\n    if (!gl) throw new Error('Canvas context is not WebGL!');\n    this._glContext = BackendContext.from(gl);\n  }\n\n  public retain() {\n    this.retainCount += 1;\n  }\n\n  public release() {\n    this.retainCount -= 1;\n    if (this.retainCount === 0) {\n      if (!this._glContext) return;\n      this._glContext.destroy();\n      this._glContext = null;\n      this._canvas = null;\n    }\n  }\n\n  public get canvas() {\n    return this._canvas;\n  }\n\n  public get glContext() {\n    return this._glContext;\n  }\n}\n","let getTime: () => number;\ntry {\n  getTime = performance.now.bind(performance);\n} catch (e) {\n  getTime = Date.now.bind(Date);\n}\n\nexport class Clock {\n  private startTime: number;\n  private markers: { [key: string]: number };\n\n  public constructor() {\n    this.startTime = getTime();\n    this.markers = {};\n  }\n\n  public reset() {\n    this.startTime = getTime();\n    this.markers = {};\n  }\n\n  public mark(key: string) {\n    if (!key) {\n      console.log('Clock.mark(): An empty marker name was specified!');\n      return;\n    }\n    if (Object.keys(this.markers).find((markerKey) => markerKey === key)) {\n      console.log(`Clock.mark(): The specified marker name '${key}' already exists!`);\n      return;\n    }\n    this.markers[key] = getTime();\n  }\n\n  public measure(makerFrom: string, makerTo: string) {\n    let start;\n    let end;\n    if (!makerFrom) {\n      start = this.startTime;\n    } else {\n      if (!Object.keys(this.markers).find((markerKey) => markerKey === makerFrom)) {\n        console.log(`Clock.measure(): The specified makerFrom '${makerFrom}' does not exist!`);\n        return 0;\n      }\n      start = this.markers[makerFrom];\n    }\n    if (!makerTo) {\n      end = getTime();\n    } else {\n      if (!Object.keys(this.markers).find((markerKey) => markerKey === makerTo)) {\n        console.log(`Clock.measure(): The specified makerTo '${makerTo}' does not exist!`);\n        return 0;\n      }\n      end = this.markers[makerTo];\n    }\n    return end - start;\n  }\n}\n","const nav = navigator?.userAgent || '';\nexport const ANDROID = /android|adr/i.test(nav);\nexport const MOBILE = /(mobile)/i.test(nav) && ANDROID;\nexport const MACOS = !(/(mobile)/i.test(nav) || MOBILE) && /Mac OS X/i.test(nav);\nexport const IPHONE = /(iphone|ipad|ipod)/i.test(nav);\nexport const WECHAT = /MicroMessenger/i.test(nav);\nexport const SAFARI_OR_IOS_WEBVIEW =  /^((?!chrome|android).)*safari/i.test(nav) || IPHONE;\nexport const WORKER = typeof (globalThis as any).importScripts === 'function';\n","export const CANVAS_POOL_MAX_SIZE = 10;\n","export const isInstanceOf = (value: any, type: any) => typeof type !== 'undefined' && value instanceof type;","const nav = navigator?.userAgent || '';\nexport const ANDROID = /android|adr/i.test(nav);\nexport const MOBILE = /(mobile)/i.test(nav) && ANDROID;\nexport const MACOS = !(/(mobile)/i.test(nav) || MOBILE) && /Mac OS X/i.test(nav);\nexport const IPHONE = /(iphone|ipad|ipod)/i.test(nav);\nexport const WECHAT = /MicroMessenger/i.test(nav);\nexport const SAFARI_OR_IOS_WEBVIEW =  /^((?!chrome|android).)*safari/i.test(nav) || IPHONE;\nexport const WORKER = typeof (globalThis as any).importScripts === 'function';\n","import { CANVAS_POOL_MAX_SIZE } from '../constant';\nimport { isInstanceOf } from './type-utils';\nimport { SAFARI_OR_IOS_WEBVIEW, WORKER } from './ua';\n\nconst canvasPool = new Array<HTMLCanvasElement | OffscreenCanvas>();\n\nexport const isOffscreenCanvas = (element: any) => isInstanceOf(element, globalThis.OffscreenCanvas);\n\nexport const isCanvas = (element: any) =>\n  isOffscreenCanvas(element) || isInstanceOf(element, globalThis.HTMLCanvasElement);\n\nexport const getCanvas2D = (width: number, height: number) => {\n  let canvas = canvasPool.pop() || createCanvas2D();\n  if (canvas !== null) {\n    canvas.width = width;\n    canvas.height = height;\n  }\n  return canvas;\n};\n\nexport const releaseCanvas2D = (canvas: HTMLCanvasElement | OffscreenCanvas) => {\n  if (canvasPool.length < CANVAS_POOL_MAX_SIZE) {\n    canvasPool.push(canvas);\n  }\n};\n\nconst createCanvas2D = () => {\n  /**\n   * Safari browser does not support OffscreenCanvas before version 16.4.\n   * After version 16.4, OffscreenCanvas is supported, but type checking errors still exist for WebGL interfaces on OffscreenCanvas.\n   * Therefore, HTMLCanvas Element is used uniformly in Safari.\n   */\n  if (SAFARI_OR_IOS_WEBVIEW && !WORKER) {\n    return document.createElement('canvas');\n  }\n  try {\n    const offscreenCanvas = new OffscreenCanvas(0, 0);\n    const context = offscreenCanvas.getContext('2d') as OffscreenCanvasRenderingContext2D;\n    if (typeof context.measureText === 'function') return offscreenCanvas;\n    return document.createElement('canvas');\n  } catch (err) {\n    return document.createElement('canvas');\n  }\n};\n\nexport const calculateDisplaySize = (canvas: HTMLCanvasElement) => {\n  const styleDeclaration = globalThis.getComputedStyle(canvas, null);\n  const computedSize = {\n    width: Number(styleDeclaration.width.replace('px', '')),\n    height: Number(styleDeclaration.height.replace('px', '')),\n  };\n  if (computedSize.width > 0 && computedSize.height > 0) {\n    return computedSize;\n  } else {\n    const styleSize = {\n      width: Number(canvas.style.width.replace('px', '')),\n      height: Number(canvas.style.height.replace('px', '')),\n    };\n    if (styleSize.width > 0 && styleSize.height > 0) {\n      return styleSize;\n    } else {\n      return {\n        width: canvas.width,\n        height: canvas.height,\n      };\n    }\n  }\n};\n","import { DebugData, PAGScaleMode, PAGViewEventMap, PAGViewListenerEvent } from './types';\nimport { PAGPlayer } from './pag-player';\nimport { EventManager, Listener } from './utils/event-manager';\nimport { PAGSurface } from './pag-surface';\nimport { destroyVerify } from './utils/decorators';\nimport { BackendContext } from './core/backend-context';\nimport { PAGModule } from './pag-module';\nimport { RenderCanvas } from './core/render-canvas';\nimport { Clock } from './utils/clock';\nimport { WORKER } from './utils/ua';\nimport { isInstanceOf } from './utils/type-utils';\n\nimport type { PAGComposition } from './pag-composition';\nimport type { Matrix } from './core/matrix';\nimport { calculateDisplaySize, isOffscreenCanvas } from '@tgfx/utils/canvas';\n\nexport interface PAGViewOptions {\n  /**\n   * Use style to scale canvas. default false.\n   * When target canvas is offscreen canvas, useScale is false.\n   */\n  useScale?: boolean;\n  /**\n   * Can choose Canvas2D mode in chrome. default false.\n   */\n  useCanvas2D?: boolean;\n  /**\n   * Render first frame when pag view init. default true.\n   */\n  firstFrame?: boolean;\n}\n\n@destroyVerify\nexport class PAGView {\n  /**\n   * Create pag view.\n   * @param file pag file.\n   * @param canvas target render canvas.\n   * @param initOptions pag view options\n   * @returns\n   */\n  public static async init(\n    file: PAGComposition,\n    canvas: string | HTMLCanvasElement | OffscreenCanvas,\n    initOptions: PAGViewOptions = {},\n  ): Promise<PAGView | undefined> {\n    let canvasElement: HTMLCanvasElement | OffscreenCanvas | null = null;\n    if (typeof canvas === 'string') {\n      canvasElement = document.getElementById(canvas.substr(1)) as HTMLCanvasElement;\n    } else if (typeof window !== 'undefined' && isInstanceOf(canvas, globalThis.HTMLCanvasElement)) {\n      canvasElement = canvas;\n    } else if (isOffscreenCanvas(canvas)) {\n      canvasElement = canvas;\n    }\n    if (!canvasElement) throw new Error('Canvas is not found!');\n\n    const pagPlayer = PAGModule.PAGPlayer.create();\n    const pagView = new PAGView(pagPlayer, canvasElement);\n    pagView.pagViewOptions = { ...pagView.pagViewOptions, ...initOptions };\n\n    if (pagView.pagViewOptions.useCanvas2D) {\n      PAGModule.globalCanvas.retain();\n      pagView.pagGlContext = BackendContext.from(PAGModule.globalCanvas.glContext as BackendContext);\n    } else {\n      pagView.renderCanvas = RenderCanvas.from(canvasElement);\n      pagView.renderCanvas.retain();\n      pagView.pagGlContext = BackendContext.from(pagView.renderCanvas.glContext as BackendContext);\n    }\n    pagView.resetSize(pagView.pagViewOptions.useScale);\n    pagView.frameRate = file.frameRate();\n    pagView.pagSurface = this.makePAGSurface(pagView.pagGlContext, pagView.rawWidth, pagView.rawHeight);\n    pagView.player.setSurface(pagView.pagSurface);\n    pagView.player.setComposition(file);\n    pagView.setProgress(0);\n    if (pagView.pagViewOptions.firstFrame) {\n      await pagView.flush();\n      pagView.playFrame = 0;\n    }\n    return pagView;\n  }\n\n  protected static makePAGSurface(pagGlContext: BackendContext, width: number, height: number): PAGSurface {\n    if (!pagGlContext.makeCurrent()) throw new Error('Make context current fail!');\n    const pagSurface = PAGSurface.fromRenderTarget(0, width, height, true);\n    pagGlContext.clearCurrent();\n    return pagSurface;\n  }\n\n  /**\n   * The repeat count of player.\n   */\n  public repeatCount = 0;\n  /**\n   * Indicates whether or not this pag view is playing.\n   */\n  public isPlaying = false;\n  /**\n   * Indicates whether or not this pag view is destroyed.\n   */\n  public isDestroyed = false;\n\n  protected pagViewOptions: PAGViewOptions = {\n    useScale: true,\n    useCanvas2D: false,\n    firstFrame: true,\n  };\n  protected renderCanvas: RenderCanvas | null = null;\n  protected pagGlContext: BackendContext | null = null;\n  protected frameRate = 0;\n  protected pagSurface: PAGSurface | null = null;\n  protected player: PAGPlayer;\n  protected playFrame = -1;\n  protected canvasElement: HTMLCanvasElement | OffscreenCanvas | null;\n  protected timer: number | null = null;\n  protected flushingNextFrame = false;\n  protected playTime = 0;\n  protected startTime = 0;\n  protected repeatedTimes = 0;\n  protected eventManager: EventManager<PAGViewEventMap, PAGView> = new EventManager();\n\n  private canvasContext: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D | null | undefined;\n  private rawWidth = 0;\n  private rawHeight = 0;\n  private debugData: DebugData = {\n    FPS: 0,\n    flushTime: 0,\n  };\n  private fpsBuffer: number[] = [];\n\n  public constructor(pagPlayer: PAGPlayer, canvasElement: HTMLCanvasElement | OffscreenCanvas) {\n    this.player = pagPlayer;\n    this.canvasElement = canvasElement;\n  }\n\n  /**\n   * The duration of current composition in microseconds.\n   */\n  public duration() {\n    return this.player.duration();\n  }\n  /**\n   * Adds a listener to the set of listeners that are sent events through the life of an animation,\n   * such as start, repeat, and end.\n   */\n  public addListener<K extends keyof PAGViewEventMap>(eventName: K, listener: Listener<PAGViewEventMap[K]>) {\n    return this.eventManager.on(eventName, listener);\n  }\n  /**\n   * Removes a listener from the set listening to this animation.\n   */\n  public removeListener<K extends keyof PAGViewEventMap>(eventName: K, listener?: Listener<PAGViewEventMap[K]>) {\n    return this.eventManager.off(eventName, listener);\n  }\n  /**\n   * Start the animation.\n   */\n  public async play() {\n    if (this.isPlaying) return;\n    this.isPlaying = true;\n    this.startTime = this.getNowTime() * 1000 - this.playTime;\n    for (const videoReader of this.player.videoReaders) {\n      videoReader.isPlaying = true;\n    }\n    const playTime = this.playTime;\n    await this.flushLoop(true);\n    if (playTime === 0) {\n      this.eventManager.emit('onAnimationStart', this);\n    }\n    this.eventManager.emit('onAnimationPlay', this);\n    if (this.playFrame === 0) {\n      this.eventManager.emit('onAnimationUpdate', this);\n    }\n  }\n  /**\n   * Pause the animation.\n   */\n  public pause() {\n    if (!this.isPlaying) return;\n    this.clearTimer();\n    for (const videoReader of this.player.videoReaders) {\n      videoReader.pause();\n    }\n    this.isPlaying = false;\n    this.eventManager.emit('onAnimationPause', this);\n  }\n  /**\n   * Stop the animation.\n   */\n  public async stop(notification = true) {\n    this.clearTimer();\n    this.playTime = 0;\n    this.player.setProgress(0);\n    this.playFrame = 0;\n    await this.flush();\n    for (const videoReader of this.player.videoReaders) {\n      videoReader.stop();\n    }\n    this.isPlaying = false;\n    if (notification) {\n      this.eventManager.emit('onAnimationCancel', this);\n    }\n  }\n  /**\n   * Set the number of times the animation will repeat. The default is 1, which means the animation\n   * will play only once. 0 means the animation will play infinity times.\n   */\n  public setRepeatCount(repeatCount: number) {\n    this.repeatCount = repeatCount < 0 ? 0 : repeatCount - 1;\n  }\n  /**\n   * Returns the current progress of play position, the value is from 0.0 to 1.0. It is applied only\n   * when the composition is not null.\n   */\n  public getProgress(): number {\n    return this.player.getProgress();\n  }\n  /**\n   * Returns the current frame.\n   */\n  public currentFrame(): number {\n    return this.player.currentFrame();\n  }\n  /**\n   * Set the progress of play position, the value is from 0.0 to 1.0.\n   */\n  public setProgress(progress: number): number {\n    this.playTime = progress * this.duration();\n    this.startTime = this.getNowTime() * 1000 - this.playTime;\n    if (!this.isPlaying) {\n      this.player.setProgress(progress);\n    }\n    return progress;\n  }\n  /**\n   * Return the value of videoEnabled property.\n   */\n  public videoEnabled(): boolean {\n    return this.player.videoEnabled();\n  }\n  /**\n   * If set false, will skip video layer drawing.\n   */\n  public setVideoEnabled(enable: boolean) {\n    this.player.setVideoEnabled(enable);\n  }\n  /**\n   * If set to true, PAG renderer caches an internal bitmap representation of the static content for\n   * each layer. This caching can increase performance for layers that contain complex vector content.\n   * The execution speed can be significantly faster depending on the complexity of the content, but\n   * it requires extra graphics memory. The default value is true.\n   */\n  public cacheEnabled(): boolean {\n    return this.player.cacheEnabled();\n  }\n  /**\n   * Set the value of cacheEnabled property.\n   */\n  public setCacheEnabled(enable: boolean) {\n    this.player.setCacheEnabled(enable);\n  }\n  /**\n   * This value defines the scale factor for internal graphics caches, ranges from 0.0 to 1.0. The\n   * scale factors less than 1.0 may result in blurred output, but it can reduce the usage of graphics\n   * memory which leads to better performance. The default value is 1.0.\n   */\n  public cacheScale(): number {\n    return this.player.cacheScale();\n  }\n  /**\n   * Set the value of cacheScale property.\n   */\n  public setCacheScale(value: number) {\n    this.player.setCacheScale(value);\n  }\n  /**\n   * The maximum frame rate for rendering. If set to a value less than the actual frame rate from\n   * PAGFile, it drops frames but increases performance. Otherwise, it has no effect. The default\n   * value is 60.\n   */\n  public maxFrameRate(): number {\n    return this.player.maxFrameRate();\n  }\n  /**\n   * Set the maximum frame rate for rendering.\n   */\n  public setMaxFrameRate(value: number) {\n    this.player.setMaxFrameRate(value);\n  }\n  /**\n   * Returns the current scale mode.\n   */\n  public scaleMode(): PAGScaleMode {\n    return this.player.scaleMode();\n  }\n  /**\n   * Specifies the rule of how to scale the pag content to fit the surface size. The matrix\n   * changes when this method is called.\n   */\n  public setScaleMode(value: PAGScaleMode) {\n    this.player.setScaleMode(value);\n  }\n  /**\n   * Call this method to render current position immediately. If the play() method is already\n   * called, there is no need to call it. Returns true if the content has changed.\n   */\n  public async flush() {\n    const clock = new Clock();\n    const res = await this.player.flushInternal((res) => {\n      if (this.pagViewOptions.useCanvas2D && res && PAGModule.globalCanvas.canvas) {\n        if (!this.canvasContext) this.canvasContext = this.canvasElement?.getContext('2d') as CanvasRenderingContext2D;\n        const compositeOperation = this.canvasContext!.globalCompositeOperation;\n        this.canvasContext!.globalCompositeOperation = 'copy';\n        this.canvasContext?.drawImage(\n          PAGModule.globalCanvas.canvas,\n          0,\n          PAGModule.globalCanvas.canvas.height - this.rawHeight,\n          this.rawWidth,\n          this.rawHeight,\n          0,\n          0,\n          this.canvasContext.canvas.width,\n          this.canvasContext.canvas.height,\n        );\n        this.canvasContext!.globalCompositeOperation = compositeOperation;\n      }\n      clock.mark('flush');\n      this.setDebugData({ flushTime: clock.measure('', 'flush') });\n      this.updateFPS();\n    });\n    this.eventManager.emit('onAnimationUpdate', this);\n    if (res) {\n      this.eventManager.emit('onAnimationFlushed', this);\n    }\n    return res;\n  }\n  /**\n   * Free the cache created by the pag view immediately. Can be called to reduce memory pressure.\n   */\n  public freeCache() {\n    this.pagSurface?.freeCache();\n  }\n  /**\n   * Returns the current PAGComposition for PAGView to render as content.\n   */\n  public getComposition() {\n    return this.player.getComposition();\n  }\n  /**\n   * Sets a new PAGComposition for PAGView to render as content.\n   * Note: If the composition is already added to another PAGView, it will be removed from\n   * the previous PAGView.\n   */\n  public setComposition(pagComposition: PAGComposition) {\n    this.player.setComposition(pagComposition);\n  }\n  /**\n   * Returns a copy of current matrix.\n   */\n  public matrix() {\n    return this.player.matrix();\n  }\n  /**\n   * Set the transformation which will be applied to the composition. The scaleMode property\n   * will be set to PAGScaleMode::None when this method is called.\n   */\n  public setMatrix(matrix: Matrix) {\n    this.player.setMatrix(matrix);\n  }\n\n  public getLayersUnderPoint(localX: number, localY: number) {\n    return this.player.getLayersUnderPoint(localX, localY);\n  }\n  /**\n   * Update size when changed canvas size.\n   */\n  public updateSize() {\n    if (!this.canvasElement) {\n      throw new Error('Canvas element is not found!');\n    }\n    this.rawWidth = this.canvasElement.width;\n    this.rawHeight = this.canvasElement.height;\n    if (!this.pagGlContext) return;\n    const pagSurface = PAGView.makePAGSurface(this.pagGlContext, this.rawWidth, this.rawHeight);\n    this.player.setSurface(pagSurface);\n    this.pagSurface?.destroy();\n    this.pagSurface = pagSurface;\n  }\n  /**\n   * Prepares the player for the next flush() call. It collects all CPU tasks from the current\n   * progress of the composition and runs them asynchronously in parallel. It is usually used for\n   * speeding up the first frame rendering.\n   */\n  public prepare() {\n    return this.player.prepare();\n  }\n  /**\n   * Returns a ImageBitmap object capturing the contents of the PAGView. Subsequent rendering of\n   * the PAGView will not be captured. Returns null if the PAGView hasn't been presented yet.\n   */\n  public makeSnapshot() {\n    return createImageBitmap(this.canvasElement!);\n  }\n\n  public destroy() {\n    this.clearTimer();\n    this.player.destroy();\n    this.pagSurface?.destroy();\n    if (this.pagViewOptions.useCanvas2D) {\n      PAGModule.globalCanvas.release();\n    } else {\n      this.renderCanvas?.release();\n    }\n    this.pagGlContext?.destroy();\n    this.pagGlContext = null;\n    this.canvasContext = null;\n    this.canvasElement = null;\n    this.isDestroyed = true;\n  }\n\n  public getDebugData() {\n    return this.debugData;\n  }\n\n  public setDebugData(data: DebugData) {\n    this.debugData = { ...this.debugData, ...data };\n  }\n\n  protected async flushLoop(force = false) {\n    if (!this.isPlaying) {\n      return;\n    }\n    this.setTimer();\n    if (this.flushingNextFrame) return;\n    try {\n      this.flushingNextFrame = true;\n      await this.flushNextFrame(force);\n      this.flushingNextFrame = false;\n    } catch (e: any) {\n      this.flushingNextFrame = false;\n      if (e.message !== 'The play() request was interrupted because the document was hidden!') {\n        this.clearTimer();\n      }\n      throw e;\n    }\n  }\n\n  protected async flushNextFrame(force = false) {\n    const duration = this.duration();\n    this.playTime = this.getNowTime() * 1000 - this.startTime;\n    const playFrame = Math.floor((this.playTime / 1000000) * this.frameRate);\n    const count = Math.floor(this.playTime / duration);\n    if (!force && this.repeatCount >= 0 && count > this.repeatCount) {\n      this.clearTimer();\n      this.player.setProgress(1);\n      await this.flush();\n      this.playTime = 0;\n      this.isPlaying = false;\n      this.repeatedTimes = 0;\n      this.eventManager.emit('onAnimationEnd', this);\n      return true;\n    }\n    if (!force && this.repeatedTimes === count && this.playFrame === playFrame) {\n      return false;\n    }\n    if (this.repeatedTimes < count) {\n      this.eventManager.emit('onAnimationRepeat', this);\n    }\n    this.player.setProgress((this.playTime % duration) / duration);\n    const res = await this.flush();\n    if (this.needResetStartTime()) {\n      // Decoding BMP takes too much time and makes the video reader seek repeatedly.\n      this.startTime = this.getNowTime() * 1000 - this.playTime;\n    }\n    this.playFrame = playFrame;\n    this.repeatedTimes = count;\n    return res;\n  }\n\n  protected getNowTime() {\n    try {\n      return performance.now();\n    } catch (e) {\n      return Date.now();\n    }\n  }\n\n  protected setTimer() {\n    if (WORKER) {\n      this.timer = self.setTimeout(() => {\n        this.flushLoop();\n      }, (1 / this.frameRate) * 1000);\n    } else {\n      this.timer = globalThis.requestAnimationFrame(() => {\n        this.flushLoop();\n      });\n    }\n  }\n\n  protected clearTimer(): void {\n    if (this.timer) {\n      if (WORKER) {\n        self.clearTimeout(this.timer);\n      } else {\n        globalThis.cancelAnimationFrame(this.timer);\n      }\n      this.timer = null;\n    }\n  }\n\n  protected resetSize(useScale = true) {\n    if (!this.canvasElement) {\n      throw new Error('Canvas element is not found!');\n    }\n    if (!useScale || isOffscreenCanvas(this.canvasElement)) {\n      this.rawWidth = this.canvasElement.width;\n      this.rawHeight = this.canvasElement.height;\n      return;\n    }\n    const canvas = this.canvasElement as HTMLCanvasElement;\n    const displaySize = calculateDisplaySize(canvas);\n    canvas.style.width = `${displaySize.width}px`;\n    canvas.style.height = `${displaySize.height}px`;\n    this.rawWidth = displaySize.width * globalThis.devicePixelRatio;\n    this.rawHeight = displaySize.height * globalThis.devicePixelRatio;\n    canvas.width = this.rawWidth;\n    canvas.height = this.rawHeight;\n  }\n\n  private updateFPS() {\n    let now: number;\n    try {\n      now = performance.now();\n    } catch (e) {\n      now = Date.now();\n    }\n    this.fpsBuffer = this.fpsBuffer.filter((value) => now - value <= 1000);\n    this.fpsBuffer.push(now);\n    this.setDebugData({ FPS: this.fpsBuffer.length });\n  }\n\n  private needResetStartTime() {\n    for (const VideoReader of this.player.videoReaders) {\n      if (VideoReader.isSought) return true;\n    }\n    return false;\n  }\n}\n","const fontNames = ['Arial', '\"Courier New\"', 'Georgia', '\"Times New Roman\"', '\"Trebuchet MS\"', 'Verdana'];\n\nexport const defaultFontNames = (() => {\n  return ['emoji'].concat(...fontNames);\n})();\n\nexport const getFontFamilies = (name: string, style = ''): string[] => {\n  if (!name) return [];\n  const nameChars = name.split(' ');\n  let names = [];\n  if (nameChars.length === 1) {\n    names.push(name);\n  } else {\n    names.push(nameChars.join(''));\n    names.push(nameChars.join(' '));\n  }\n  const fontFamilies = names.reduce((pre: string[], cur: string) => {\n    if (!style) {\n      pre.push(`\"${cur}\"`);\n    } else {\n      pre.push(`\"${cur} ${style}\"`);\n      pre.push(`\"${cur}-${style}\"`);\n    }\n    return pre;\n  }, []);\n  // Fallback font when style is not found.\n  if (style !== '') {\n    fontFamilies.push(`\"${name}\"`);\n  }\n  return fontFamilies;\n};","import { readFile } from './utils/common';\nimport { defaultFontNames } from '@tgfx/utils/font-family';\nimport { wasmAwaitRewind, wasmAsyncMethod, destroyVerify } from './utils/decorators';\nimport { PAGModule } from './pag-module';\n\n@destroyVerify\n@wasmAwaitRewind\nexport class PAGFont {\n  /**\n   * Create PAGFont instance.\n   */\n  public static create(fontFamily: string, fontStyle: string) {\n    const wasmIns = PAGModule._PAGFont._create(fontFamily, fontStyle);\n    if (!wasmIns) throw new Error('Create PAGFont fail!');\n    return new PAGFont(wasmIns);\n  }\n\n  /**\n   * Register custom font family in the browser.\n   */\n  @wasmAsyncMethod\n  public static async registerFont(family: string, data: File) {\n    const buffer = (await readFile(data)) as ArrayBuffer;\n    if (!buffer || !(buffer.byteLength > 0)) {\n      throw new Error('Initialize PAGFont data not be empty!');\n    }\n    const dataUint8Array = new Uint8Array(buffer);\n    const fontFace = new FontFace(family, dataUint8Array);\n    document.fonts.add(fontFace);\n    await fontFace.load();\n  }\n\n  /**\n   * Register fallback font names from pag.\n   */\n  public static registerFallbackFontNames(fontNames: String[] = []) {\n    /**\n     * Cannot determine whether a certain word exists in the font on the web environment.\n     * Because the canvas has font fallback when drawing.\n     * The fonts registered here are mainly used to put words in a list in order, and the list can put up to UINT16_MAX words.\n     * The emoji font family also has emoji words.\n     */\n    const vectorNames = new PAGModule.VectorString();\n    const names = fontNames.concat(defaultFontNames);\n    for (const name of names) {\n      vectorNames.push_back(name);\n    }\n    PAGModule._PAGFont._SetFallbackFontNames(vectorNames);\n    vectorNames.delete();\n  }\n\n  public wasmIns: any;\n  public isDestroyed = false;\n\n  public readonly fontFamily: string;\n  public readonly fontStyle: string;\n\n  public constructor(wasmIns: any) {\n    this.wasmIns = wasmIns;\n    this.fontFamily = this.wasmIns.fontFamily;\n    this.fontStyle = this.wasmIns.fontStyle;\n  }\n\n  public destroy() {\n    this.wasmIns.delete();\n    this.isDestroyed = true;\n  }\n}\n","type K = keyof HTMLVideoElementEventMap;\n\nlet eventHandlers: {\n  [key in K]?: {\n    node: HTMLVideoElement;\n    handler: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any;\n    capture: boolean;\n  }[];\n} = {};\n\nexport const addListener = (\n  node: HTMLVideoElement,\n  event: K,\n  handler: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any,\n  capture = false,\n) => {\n  if (!(event in eventHandlers)) {\n    eventHandlers[event] = [];\n  }\n  eventHandlers[event]?.push({ node: node, handler: handler, capture: capture });\n  node.addEventListener(event, handler, capture);\n};\n\nexport const removeListener = (\n  targetNode: HTMLElement,\n  event: K,\n  targetHandler: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any,\n) => {\n  if (!(event in eventHandlers)) return;\n  eventHandlers[event]\n    ?.filter(({ node, handler }) => node === targetNode && handler === targetHandler)\n    .forEach(({ node, handler, capture }) => node.removeEventListener(event, handler, capture));\n};\n\nexport const removeAllListeners = (targetNode: HTMLElement, event: K) => {\n  if (!(event in eventHandlers)) return;\n  eventHandlers[event]\n    ?.filter(({ node }) => node === targetNode)\n    .forEach(({ node, handler, capture }) => node.removeEventListener(event, handler, capture));\n\n  eventHandlers[event] = eventHandlers[event]?.filter(({ node }) => node !== targetNode);\n};\n","export enum WorkerMessageType {\n  PAGInit = 'PAGInit',\n  // PAGView static methods\n  PAGView_init = 'PAGView.init',\n  // PAGView instance methods\n  PAGView_duration = 'PAGView.duration',\n  PAGView_play = 'PAGView.play',\n  PAGView_pause = 'PAGView.pause',\n  PAGView_stop = 'PAGView.stop',\n  PAGView_setRepeatCount = 'PAGView.setRepeatCount',\n  PAGView_getProgress = 'PAGView.getProgress',\n  PAGView_currentFrame = 'PAGView.currentFrame',\n  PAGView_setProgress = 'PAGView.setProgress',\n  PAGView_scaleMode = 'PAGView.scaleMode',\n  PAGView_setScaleMode = 'PAGView.setScaleMode',\n  PAGView_flush = 'PAGView.flush',\n  PAGView_getDebugData = 'PAGView.getDebugData',\n  PAGView_destroy = 'PAGView.destroy',\n  // PAGFile static methods\n  PAGFile_load = 'PAGFile.load',\n  // PAGFile instance methods\n  PAGFile_getTextData = 'PAGFile.getTextData',\n  PAGFile_replaceText = 'PAGFile.replaceText',\n  PAGFile_replaceImage = 'PAGFile.replaceImage',\n  PAGFile_destroy = 'PAGFile.destroy',\n  // PAGImage static methods\n  PAGImage_fromSource = 'PAGImage.fromSource',\n  PAGImage_destroy = 'PAGImage.destroy',\n  // VideoReader static methods\n  VideoReader_constructor = 'VideoReader.constructor',\n  // VideoReader instance methods\n  VideoReader_prepare = 'VideoReader.prepare',\n  VideoReader_play = 'VideoReader.play',\n  VideoReader_pause = 'VideoReader.pause',\n  VideoReader_stop = 'VideoReader.stop',\n  VideoReader_getError = 'VideoReader.getError',\n  // Binding video reader\n  PAGModule_linkVideoReader = 'PAGModule.linkVideoReader',\n  // TextDocument instance methods\n  TextDocument_delete = 'TextDocument.delete',\n}\n","import type { WorkerMessage } from './worker';\n\nlet messageCount = 0;\nconst generateMessageName = (name: string) => `${name}_${messageCount++}`;\n\nexport interface WorkerInterface {\n  postMessage: (message: any, transfer: Transferable[]) => void;\n  addEventListener: (type: string, listener: (event: MessageEvent) => void) => void;\n  removeEventListener: (type: string, listener: (event: MessageEvent) => void) => void;\n}\n\nexport const postMessage = <T>(\n  worker: WorkerInterface,\n  message: WorkerMessage,\n  callback: (...args: any[]) => T,\n  transfer: (OffscreenCanvas | Transferable)[] = [],\n): Promise<T> => {\n  return new Promise((resolve) => {\n    const name = generateMessageName(message.name);\n    const handle = (event: MessageEvent<WorkerMessage>) => {\n      if (event.data.name === name) {\n        worker.removeEventListener('message', handle);\n        resolve(callback(...event.data.args));\n      }\n    };\n    worker.addEventListener('message', handle);\n    worker.postMessage({ name, args: message.args }, transfer);\n  });\n};\n","export class BitmapImage {\n  public bitmap: ImageBitmap | null;\n\n  public constructor(bitmap: ImageBitmap | null) {\n    this.bitmap = bitmap;\n  }\n\n  public setBitmap(bitmap: ImageBitmap) {\n    if (this.bitmap) {\n      this.bitmap.close();\n    }\n    this.bitmap = bitmap;\n  }\n}\n","import { WorkerMessageType } from './events';\nimport { postMessage } from './utils';\n\nimport { BitmapImage } from '@tgfx/core/bitmap-image';\n\nexport class WorkerVideoReader {\n  public bitmap: ImageBitmap | null = null;\n  public isSought = false;\n  public isPlaying = false;\n\n  private proxyId: number;\n  private bitmapImage: BitmapImage = new BitmapImage(null);\n\n  public constructor(proxyId: number) {\n    this.proxyId = proxyId;\n  }\n\n  public prepare(targetFrame: number, playbackRate: number) {\n    return new Promise<void>((resolve) => {\n      postMessage(\n        self,\n        { name: WorkerMessageType.VideoReader_prepare, args: [this.proxyId, targetFrame, playbackRate] },\n        (res) => {\n          this.bitmapImage.setBitmap(res);\n          resolve();\n        },\n      );\n    });\n  }\n\n  public getVideo() {\n    return this.bitmapImage;\n  }\n\n  public onDestroy() {\n    self.postMessage({ name: 'VideoReader.onDestroy', args: [this.proxyId] });\n  }\n\n  public play() {\n    return new Promise<void>((resolve) => {\n      postMessage(self, { name: WorkerMessageType.VideoReader_play, args: [this.proxyId] }, () => {\n        resolve();\n      });\n    });\n  }\n\n  public pause() {\n    postMessage(self, { name: WorkerMessageType.VideoReader_pause, args: [this.proxyId] }, () => {});\n  }\n\n  public stop() {\n    postMessage(self, { name: WorkerMessageType.VideoReader_stop, args: [this.proxyId] }, () => {});\n  }\n\n  public getError() {\n    return new Promise<any>((resolve) => {\n      postMessage(self, { name: WorkerMessageType.VideoReader_getError, args: [this.proxyId] }, (res) => {\n        resolve(res);\n      });\n    });\n  }\n}\n","import {\n  VIDEO_DECODE_WAIT_FRAME,\n  VIDEO_DECODE_SEEK_TIMEOUT_FRAME,\n  VIDEO_PLAYBACK_RATE_MAX,\n  VIDEO_PLAYBACK_RATE_MIN,\n} from '../constant';\nimport { addListener, removeListener, removeAllListeners } from '../utils/video-listener';\nimport { IPHONE, WECHAT, SAFARI_OR_IOS_WEBVIEW, WORKER } from '../utils/ua';\nimport { PAGModule } from '../pag-module';\nimport { WorkerMessageType } from '../worker/events';\nimport { WorkerVideoReader } from '../worker/video-reader';\nimport { postMessage } from '../worker/utils';\n\nimport type { TimeRange, VideoReader as VideoReaderInterfaces } from '../interfaces';\nimport type { PAGPlayer } from '../pag-player';\nimport { isInstanceOf } from '../utils/type-utils';\n\nconst UHD_RESOLUTION = 3840;\n\n// Get video initiated token on Wechat browser.\nconst getWechatNetwork = () => {\n  return new Promise<void>((resolve) => {\n    window.WeixinJSBridge.invoke(\n      'getNetworkType',\n      {},\n      () => {\n        resolve();\n      },\n      () => {\n        resolve();\n      },\n    );\n  });\n};\n\nconst waitVideoCanPlay = (videoElement: HTMLVideoElement) => {\n  return new Promise((resolve) => {\n    const canplayHandle = () => {\n      removeListener(videoElement, 'canplay', canplayHandle);\n      clearTimeout(timer);\n      resolve(true);\n    };\n    addListener(videoElement, 'canplay', canplayHandle);\n    const timer = setTimeout(() => {\n      removeListener(videoElement, 'canplay', canplayHandle);\n      resolve(false);\n    }, 1000);\n  });\n};\n\nexport class VideoReader {\n  public static async create(\n    source: Uint8Array | HTMLVideoElement,\n    width: number,\n    height: number,\n    frameRate: number,\n    staticTimeRanges: TimeRange[],\n  ): Promise<VideoReaderInterfaces> {\n    if (WORKER) {\n      const proxyId = await new Promise<number>((resolve) => {\n        // TODO: source as HTMLVideoElement in WebWorker version.\n        const uint8Array = source as Uint8Array;\n        const buffer = uint8Array.buffer.slice(uint8Array.byteOffset, uint8Array.byteOffset + uint8Array.byteLength);\n        postMessage(\n          self,\n          {\n            name: WorkerMessageType.VideoReader_constructor,\n            args: [buffer, width, height, frameRate, staticTimeRanges, true],\n          },\n          (res) => {\n            resolve(res);\n          },\n          [buffer],\n        );\n      });\n      const videoReader = new WorkerVideoReader(proxyId);\n      PAGModule.currentPlayer?.linkVideoReader(videoReader);\n      return videoReader;\n    }\n    return new VideoReader(source, width, height, frameRate, staticTimeRanges);\n  }\n\n  public isSought = false;\n  public isPlaying = false;\n  public bitmap: ImageBitmap | null = null;\n\n  private videoEl: HTMLVideoElement | null = null;\n  private frameRate = 0;\n  private canplay = false;\n  private staticTimeRanges: StaticTimeRanges | null = null;\n  private disablePlaybackRate = false;\n  private error: any = null;\n  private player: PAGPlayer | null = null;\n  private width = 0;\n  private height = 0;\n  private bitmapCanvas: OffscreenCanvas | null = null;\n  private bitmapCtx: OffscreenCanvasRenderingContext2D | null = null;\n\n  public constructor(\n    source: Uint8Array | HTMLVideoElement,\n    width: number,\n    height: number,\n    frameRate: number,\n    staticTimeRanges: TimeRange[],\n    isWorker = false,\n  ) {\n    if (isInstanceOf(source, globalThis.HTMLVideoElement)) {\n      this.videoEl = source as HTMLVideoElement;\n      this.canplay = true;\n    } else {\n      this.videoEl = document.createElement('video');\n      this.videoEl.style.display = 'none';\n      this.videoEl.muted = true;\n      this.videoEl.playsInline = true;\n      this.videoEl.preload = 'auto'; // use load() will make a bug on Chrome.\n      this.videoEl.width = width;\n      this.videoEl.height = height;\n      waitVideoCanPlay(this.videoEl).then(() => {\n        this.canplay = true;\n      });\n      const blob = new Blob([source as Uint8Array], { type: 'video/mp4' });\n      this.videoEl.src = URL.createObjectURL(blob);\n      if (IPHONE) {\n        // use load() will make a bug on Chrome.\n        this.videoEl.load();\n      }\n    }\n    this.frameRate = frameRate;\n    this.width = width;\n    this.height = height;\n    this.staticTimeRanges = new StaticTimeRanges(staticTimeRanges);\n    if (UHD_RESOLUTION < width || UHD_RESOLUTION < height) {\n      this.disablePlaybackRate = true;\n    }\n    if (!isWorker) {\n      this.linkPlayer(PAGModule.currentPlayer);\n    }\n  }\n\n  public async prepare(targetFrame: number, playbackRate: number) {\n    this.setError(null); // reset error\n    this.isSought = false; // reset seek status\n    const { currentTime } = this.videoEl!;\n    const targetTime = targetFrame / this.frameRate;\n    if (currentTime === 0 && targetTime === 0) {\n      if (!this.canplay && !SAFARI_OR_IOS_WEBVIEW) {\n        await waitVideoCanPlay(this.videoEl!);\n      } else {\n        try {\n          await this.play();\n        } catch (e) {\n          this.setError(e);\n        }\n        await new Promise<void>((resolve) => {\n          requestAnimationFrame(() => {\n            this.pause();\n            resolve();\n          });\n        });\n      }\n    } else {\n      if (Math.round(targetTime * this.frameRate) === Math.round(currentTime * this.frameRate)) {\n        // Current frame\n      } else if (this.staticTimeRanges?.contains(targetFrame)) {\n        // Static frame\n        await this.seek(targetTime, false);\n        return;\n      } else if (Math.abs(currentTime - targetTime) < (1 / this.frameRate) * VIDEO_DECODE_WAIT_FRAME) {\n        // Within tolerable frame rate deviation\n      } else {\n        // Seek and play\n        this.isSought = true;\n        await this.seek(targetTime);\n        return;\n      }\n    }\n\n    const targetPlaybackRate = Math.min(Math.max(playbackRate, VIDEO_PLAYBACK_RATE_MIN), VIDEO_PLAYBACK_RATE_MAX);\n    if (!this.disablePlaybackRate && this.videoEl!.playbackRate !== targetPlaybackRate) {\n      this.videoEl!.playbackRate = targetPlaybackRate;\n    }\n\n    if (this.isPlaying && this.videoEl!.paused) {\n      try {\n        await this.play();\n      } catch (e) {\n        this.setError(e);\n      }\n    }\n  }\n\n  public getVideo() {\n    return this.videoEl;\n  }\n\n  // Only work in web worker version\n  public async generateBitmap() {\n    // Batter than createImageBitmap from video element in benchmark\n    if (!this.bitmapCanvas) {\n      this.bitmapCanvas = new OffscreenCanvas(this.width, this.height);\n      this.bitmapCanvas!.width = this.width;\n      this.bitmapCanvas!.height = this.height;\n      this.bitmapCtx = this.bitmapCanvas.getContext('2d') as OffscreenCanvasRenderingContext2D | null;\n    }\n    this.bitmapCtx?.fillRect(0, 0, this.width, this.height);\n    this.bitmapCtx?.drawImage(this.videoEl as HTMLVideoElement, 0, 0, this.width, this.height);\n    this.bitmap = await createImageBitmap(this.bitmapCanvas);\n    return this.bitmap;\n  }\n\n  public async play() {\n    if (!this.videoEl!.paused) return;\n    if (WECHAT && window.WeixinJSBridge) {\n      await getWechatNetwork();\n    }\n    if (document.visibilityState !== 'visible') {\n      const visibilityHandle = () => {\n        if (document.visibilityState === 'visible') {\n          if (this.videoEl) this.videoEl.play();\n          window.removeEventListener('visibilitychange', visibilityHandle);\n        }\n      };\n      window.addEventListener('visibilitychange', visibilityHandle);\n      throw new Error('The play() request was interrupted because the document was hidden!');\n    }\n    await this.videoEl?.play();\n  }\n\n  public pause() {\n    this.isPlaying = false;\n    if (this.videoEl!.paused) return;\n    this.videoEl?.pause();\n  }\n\n  public stop() {\n    this.isPlaying = false;\n    if (!this.videoEl!.paused) {\n      this.videoEl?.pause();\n    }\n    this.videoEl!.currentTime = 0;\n  }\n\n  public getError() {\n    return this.error;\n  }\n\n  public onDestroy() {\n    if (this.player) {\n      this.player.unlinkVideoReader(this);\n    }\n    removeAllListeners(this.videoEl!, 'playing');\n    removeAllListeners(this.videoEl!, 'timeupdate');\n    this.videoEl = null;\n    this.bitmapCanvas = null;\n    this.bitmapCtx = null;\n  }\n\n  private seek(targetTime: number, play = true) {\n    return new Promise<void>((resolve) => {\n      let isCallback = false;\n      let timer: any = null;\n      const setVideoState = async () => {\n        if (play && this.videoEl!.paused) {\n          try {\n            await this.play();\n          } catch (e) {\n            this.setError(e);\n          }\n        } else if (!play && !this.videoEl!.paused) {\n          this.videoEl?.pause();\n        }\n      };\n      const seekCallback = async () => {\n        if (!this.videoEl) {\n          this.setError(new Error(\"Video element doesn't exist!\"));\n          resolve();\n          return;\n        }\n        removeListener(this.videoEl, 'seeked', seekCallback);\n        await setVideoState();\n        isCallback = true;\n        clearTimeout(timer);\n        timer = null;\n        resolve();\n      };\n      if (!this.videoEl) {\n        this.setError(new Error(\"Video element doesn't exist!\"));\n        resolve();\n        return;\n      }\n      addListener(this.videoEl, 'seeked', seekCallback);\n      this.videoEl!.currentTime = targetTime;\n      // Timeout\n      timer = setTimeout(() => {\n        if (!isCallback) {\n          if (!this.videoEl) {\n            this.setError(new Error(\"Video element doesn't exist!\"));\n            resolve();\n            return;\n          } else {\n            removeListener(this.videoEl, 'seeked', seekCallback);\n            setVideoState();\n            resolve();\n          }\n        }\n      }, (1000 / this.frameRate) * VIDEO_DECODE_SEEK_TIMEOUT_FRAME);\n    });\n  }\n\n  private setError(e: any) {\n    this.error = e;\n  }\n\n  private linkPlayer(player: PAGPlayer | null) {\n    this.player = player;\n    if (player) {\n      player.linkVideoReader(this);\n    }\n  }\n}\n\nexport class StaticTimeRanges {\n  private timeRanges: TimeRange[];\n\n  public constructor(timeRanges: TimeRange[]) {\n    this.timeRanges = timeRanges;\n  }\n\n  public contains(targetFrame: number) {\n    if (this.timeRanges.length === 0) return false;\n    for (let timeRange of this.timeRanges) {\n      if (timeRange.start <= targetFrame && targetFrame < timeRange.end) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","import { DEFAULT_CANVAS_SIZE, WEBGL_CONTEXT_ATTRIBUTES } from '../constant';\nimport { BackendContext } from './backend-context';\n\nexport class GlobalCanvas {\n  private _canvas: HTMLCanvasElement | OffscreenCanvas | null = null;\n  private _glContext: BackendContext | null = null;\n  private width = DEFAULT_CANVAS_SIZE;\n  private height = DEFAULT_CANVAS_SIZE;\n  private retainCount = 0;\n\n  public retain() {\n    if (this.retainCount === 0) {\n      try {\n        this._canvas = new OffscreenCanvas(0, 0);\n      } catch (error) {\n        this._canvas = document.createElement('canvas');\n      }\n      this._canvas.width = this.width;\n      this._canvas.height = this.height;\n\n      const gl = this._canvas.getContext('webgl', WEBGL_CONTEXT_ATTRIBUTES) as WebGLRenderingContext;\n      if (!gl) throw new Error('Canvas context is not WebGL!');\n      this._glContext = BackendContext.from(gl);\n    }\n    this.retainCount += 1;\n  }\n\n  public release() {\n    this.retainCount -= 1;\n    if (this.retainCount === 0) {\n      if (!this._glContext) return;\n      this._glContext.destroy();\n      this._glContext = null;\n      this._canvas = null;\n    }\n  }\n\n  public get canvas() {\n    return this._canvas;\n  }\n\n  public get glContext() {\n    return this._glContext;\n  }\n\n  public setCanvasSize(width = DEFAULT_CANVAS_SIZE, height = DEFAULT_CANVAS_SIZE) {\n    this.width = width;\n    this.height = height;\n    if (this._glContext && this._canvas) {\n      this._canvas.width = width;\n      this._canvas.height = height;\n    }\n  }\n}\n","import { PAGModule } from './pag-module';\nimport { PAGFont } from './pag-font';\nimport { PAGLayer } from './pag-layer';\nimport { destroyVerify, wasmAwaitRewind } from './utils/decorators';\n\nimport type { Color, TextDocument } from './types';\n\n@destroyVerify\n@wasmAwaitRewind\nexport class PAGTextLayer extends PAGLayer {\n  public static make(\n    duration: number,\n    text: string,\n    fontSize: number,\n    fontFamily: string,\n    fontStyle: string,\n  ): PAGTextLayer;\n  public static make(duration: number, textDocumentHandle: TextDocument): PAGTextLayer;\n  public static make(\n    duration: number,\n    text: string | TextDocument,\n    fontSize = 0,\n    fontFamily = '',\n    fontStyle = '',\n  ): PAGTextLayer {\n    if (typeof text === 'string') {\n      return new PAGTextLayer(PAGModule._PAGTextLayer._Make(duration, text, fontSize, fontFamily, fontStyle));\n    } else {\n      return new PAGTextLayer(PAGModule._PAGTextLayer._Make(duration, text));\n    }\n  }\n\n  /**\n   * Returns the text layer’s fill color.\n   */\n  public fillColor(): Color {\n    return this.wasmIns._fillColor() as Color;\n  }\n  /**\n   * Set the text layer’s fill color.\n   */\n  public setFillColor(value: Color) {\n    this.wasmIns._setFillColor(value);\n  }\n  /**\n   * Returns the text layer's font.\n   */\n  public font(): PAGFont {\n    return new PAGFont(this.wasmIns._font());\n  }\n  /**\n   * Set the text layer's font.\n   */\n  public setFont(pagFont: PAGFont) {\n    this.wasmIns._setFont(pagFont.wasmIns);\n  }\n  /**\n   * Returns the text layer's font size.\n   */\n  public fontSize(): number {\n    return this.wasmIns._fontSize() as number;\n  }\n  /**\n   * Set the text layer's font size.\n   */\n  public setFontSize(size: number) {\n    this.wasmIns._setFontSize(size);\n  }\n  /**\n   * Returns the text layer's stroke color.\n   */\n  public strokeColor(): Color {\n    return this.wasmIns._strokeColor() as Color;\n  }\n  /**\n   * Set the text layer's stroke color.\n   */\n  public setStrokeColor(value: Color) {\n    this.wasmIns._setStrokeColor(value);\n  }\n  /**\n   * Returns the text layer's text.\n   */\n  public text(): string {\n    return this.wasmIns._text() as string;\n  }\n  /**\n   * Set the text layer's text.\n   */\n  public setText(text: string) {\n    this.wasmIns._setText(text);\n  }\n  /**\n   * Reset the text layer to its default text data.\n   */\n  public reset() {\n    this.wasmIns._reset();\n  }\n}\n","import { PAGModule } from './pag-module';\nimport { PAGLayer } from './pag-layer';\nimport { destroyVerify, wasmAwaitRewind } from './utils/decorators';\nimport { proxyVector } from './utils/type-utils';\n\nimport type { PAGImage } from './pag-image';\nimport type { PAGVideoRange } from './types';\n\n@destroyVerify\n@wasmAwaitRewind\nexport class PAGImageLayer extends PAGLayer {\n  /**\n   * Make a empty PAGImageLayer with specified size.\n   */\n  public static make(width: number, height: number, duration: number): PAGImageLayer {\n    const wasmIns = PAGModule._PAGImageLayer._Make(width, height, duration);\n    if (!wasmIns) throw new Error('Make PAGImageLayer fail!');\n    return new PAGImageLayer(wasmIns);\n  }\n\n  /**\n   * Returns the content duration in microseconds, which indicates the minimal length required for\n   * replacement.\n   */\n  public contentDuration(): number {\n    return this.wasmIns._contentDuration() as number;\n  }\n  /**\n   * Returns the time ranges of the source video for replacement.\n   */\n  public getVideoRanges(): PAGVideoRange[] {\n    return this.wasmIns._getVideoRanges();\n  }\n  /**\n   * [Deprecated]\n   * Replace the original image content with the specified PAGImage object.\n   * Passing in null for the image parameter resets the layer to its default image content.\n   * The replaceImage() method modifies all associated PAGImageLayers that have the same\n   * editableIndex to this layer.\n   *\n   * @param image The PAGImage object to replace with.\n   */\n  public replaceImage(pagImage: PAGImage) {\n    this.wasmIns._replaceImage(pagImage.wasmIns);\n  }\n  /**\n   * Replace the original image content with the specified PAGImage object.\n   * Passing in null for the image parameter resets the layer to its default image content.\n   * The setImage() method only modifies the content of the calling PAGImageLayer.\n   *\n   * @param image The PAGImage object to replace with.\n   */\n  public setImage(pagImage: PAGImage) {\n    this.wasmIns._setImage(pagImage.wasmIns);\n  }\n  /**\n   * Converts the time from the PAGImageLayer's timeline to the replacement content's timeline. The\n   * time is in microseconds.\n   */\n  public layerTimeToContent(layerTime: number): number {\n    return this.wasmIns._layerTimeToContent(layerTime) as number;\n  }\n  /**\n   * Converts the time from the replacement content's timeline to the PAGLayer's timeline. The time\n   * is in microseconds.\n   */\n  public contentTimeToLayer(contentTime: number): number {\n    return this.wasmIns._contentTimeToLayer(contentTime) as number;\n  }\n  /**\n   * The default image data of this layer, which is webp format.\n   */\n  public imageBytes(): Uint8Array | null {\n    return this.wasmIns._imageBytes();\n  }\n}\n","import { PAGModule } from './pag-module';\nimport { PAGLayer } from './pag-layer';\nimport { destroyVerify, wasmAwaitRewind } from './utils/decorators';\n\nimport type { Color } from './types';\n\n@destroyVerify\n@wasmAwaitRewind\nexport class PAGSolidLayer extends PAGLayer {\n  /**\n   * Make a empty PAGSolidLayer with specified size.\n   */\n  public static make(duration: number, width: number, height: number, solidColor: Color, opacity: number) {\n    const wasmIns = PAGModule._PAGSolidLayer._Make(duration, width, height, solidColor, opacity);\n    if (!wasmIns) throw new Error('Make PAGSolidLayer fail!');\n    return new PAGSolidLayer(wasmIns);\n  }\n  /**\n   * Returns the layer's solid color.\n   */\n  public solidColor(): Color {\n    return this.wasmIns._solidColor() as Color;\n  }\n  /**\n   * Set the the layer's solid color.\n   */\n  public setSolidColor(color: Color) {\n    this.wasmIns._setSolidColor(color);\n  }\n}\n","export const measureText = (imageData: ImageData) => {\n  const imageDataInt32Array = new Int32Array(imageData.data.buffer);\n  let left = getLeftPixel(imageDataInt32Array, imageData.width, imageData.height);\n  let top = getTopPixel(imageDataInt32Array, imageData.width, imageData.height);\n  let right = getRightPixel(imageDataInt32Array, imageData.width, imageData.height);\n  let bottom = getBottomPixel(imageDataInt32Array, imageData.width, imageData.height);\n  return { left, top, right, bottom };\n};\n\nexport const getLeftPixel = (imageDataArray: Int32Array, width: number, height: number) => {\n  const verticalCount = imageDataArray.length / width;\n  const acrossCount = imageDataArray.length / height;\n  for (let i = 0; i < acrossCount; i++) {\n    for (let j = 0; j < verticalCount; j++) {\n      if (imageDataArray[i + j * width] !== 0) return i;\n    }\n  }\n  return acrossCount;\n};\n\nexport const getTopPixel = (imageDataArray: Int32Array, width: number, height: number) => {\n  const verticalCount = imageDataArray.length / width;\n  const acrossCount = imageDataArray.length / height;\n  for (let i = 0; i < verticalCount; i++) {\n    for (let j = 0; j < acrossCount; j++) {\n      if (imageDataArray[i * width + j] !== 0) return i;\n    }\n  }\n  return verticalCount;\n};\n\nexport const getRightPixel = (imageDataArray: Int32Array, width: number, height: number) => {\n  const verticalCount = imageDataArray.length / width;\n  const acrossCount = imageDataArray.length / height;\n  for (let i = acrossCount - 1; i > 0; i--) {\n    for (let j = verticalCount - 1; j > 0; j--) {\n      if (imageDataArray[i + width * j] !== 0) return i;\n    }\n  }\n  return 0;\n};\n\nexport const getBottomPixel = (imageDataArray: Int32Array, width: number, height: number) => {\n  const verticalCount = imageDataArray.length / width;\n  const acrossCount = imageDataArray.length / height;\n  for (let i = verticalCount - 1; i > 0; i--) {\n    for (let j = acrossCount - 1; j > 0; j--) {\n      if (imageDataArray[i * width + j] !== 0) return i;\n    }\n  }\n  return 0;\n};","import { measureText } from '../utils/measure-text';\nimport { defaultFontNames, getFontFamilies } from '../utils/font-family';\nimport { getCanvas2D } from '../utils/canvas';\n\nimport type { Rect } from '../types';\n\nexport class ScalerContext {\n  public static canvas: HTMLCanvasElement | OffscreenCanvas;\n  public static context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D;\n\n  public static setCanvas(canvas: HTMLCanvasElement | OffscreenCanvas) {\n    ScalerContext.canvas = canvas;\n  }\n\n  public static setContext(context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D) {\n    ScalerContext.context = context;\n  }\n\n  public static isUnicodePropertyEscapeSupported(): boolean {\n    try {\n      // eslint-disable-next-line prefer-regex-literals\n      const regex = new RegExp(\"\\\\p{L}\", \"u\");\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  public static isEmoji(text: string): boolean {\n    let emojiRegExp: RegExp;\n    if (this.isUnicodePropertyEscapeSupported()) {\n      emojiRegExp = /\\p{Extended_Pictographic}|[#*0-9]\\uFE0F?\\u20E3|[\\uD83C\\uDDE6-\\uD83C\\uDDFF]/u;\n    } else {\n      emojiRegExp = /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/;\n    }\n    return emojiRegExp.test(text);\n  }\n\n  private readonly fontName: string;\n  private readonly fontStyle: string;\n  private readonly size: number;\n  private readonly fauxBold: boolean;\n  private readonly fauxItalic: boolean;\n\n  private fontBoundingBoxMap: { key: string; value: Rect }[] = [];\n\n  public constructor(fontName: string, fontStyle: string, size: number, fauxBold = false, fauxItalic = false) {\n    this.fontName = fontName;\n    this.fontStyle = fontStyle;\n    this.size = size;\n    this.fauxBold = fauxBold;\n    this.fauxItalic = fauxItalic;\n    this.loadCanvas();\n  }\n\n  public fontString() {\n    const attributes = [];\n    // css font-style\n    if (this.fauxItalic) {\n      attributes.push('italic');\n    }\n    // css font-weight\n    if (this.fauxBold) {\n      attributes.push('bold');\n    }\n    // css font-size\n    attributes.push(`${this.size}px`);\n    // css font-family\n    const fallbackFontNames = defaultFontNames.concat();\n    fallbackFontNames.unshift(...getFontFamilies(this.fontName, this.fontStyle));\n    attributes.push(`${fallbackFontNames.join(',')}`);\n    return attributes.join(' ');\n  }\n\n  public getTextAdvance(text: string) {\n    const { context } = ScalerContext;\n    context.font = this.fontString();\n    return context.measureText(text).width;\n  }\n\n  public getTextBounds(text: string) {\n    const { context } = ScalerContext;\n    context.font = this.fontString();\n    const metrics = this.measureText(context, text);\n\n    const bounds: Rect = {\n      left: Math.floor(-metrics.actualBoundingBoxLeft),\n      top: Math.floor(-metrics.actualBoundingBoxAscent),\n      right: Math.ceil(metrics.actualBoundingBoxRight),\n      bottom: Math.ceil(metrics.actualBoundingBoxDescent),\n    };\n    return bounds;\n  }\n\n  public generateFontMetrics() {\n    const { context } = ScalerContext;\n    context.font = this.fontString();\n    const metrics = this.measureText(context, '中');\n    const capHeight = metrics.actualBoundingBoxAscent;\n    const xMetrics = this.measureText(context, 'x');\n    const xHeight = xMetrics.actualBoundingBoxAscent;\n    return {\n      ascent: -metrics.fontBoundingBoxAscent,\n      descent: metrics.fontBoundingBoxDescent,\n      xHeight,\n      capHeight,\n    };\n  }\n\n  public generateImage(text: string, bounds: Rect) {\n    const canvas = getCanvas2D(bounds.right - bounds.left, bounds.bottom - bounds.top);\n    const context = canvas.getContext('2d') as CanvasRenderingContext2D;\n    context.font = this.fontString();\n    context.fillText(text, -bounds.left, -bounds.top);\n    return canvas;\n  }\n\n  protected loadCanvas() {\n    if (!ScalerContext.canvas) {\n      ScalerContext.setCanvas(getCanvas2D(10, 10));\n      // https://html.spec.whatwg.org/multipage/canvas.html#concept-canvas-will-read-frequently\n      ScalerContext.setContext(\n        (ScalerContext.canvas as HTMLCanvasElement | OffscreenCanvas).getContext('2d', { willReadFrequently: true }) as\n          | CanvasRenderingContext2D\n          | OffscreenCanvasRenderingContext2D,\n      );\n    }\n  }\n\n  private measureText(ctx: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D, text: string): TextMetrics {\n    const metrics = ctx.measureText(text);\n    if (metrics?.actualBoundingBoxAscent) return metrics;\n    ctx.canvas.width = this.size * 1.5;\n    ctx.canvas.height = this.size * 1.5;\n    const pos = [0, this.size];\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.font = this.fontString();\n    ctx.fillText(text, pos[0], pos[1]);\n    const imageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n    const { left, top, right, bottom } = measureText(imageData);\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n    let fontMeasure: Rect;\n    const fontBoundingBox = this.fontBoundingBoxMap.find((item) => item.key === this.fontName);\n    if (fontBoundingBox) {\n      fontMeasure = fontBoundingBox.value;\n    } else {\n      ctx.font = this.fontString();\n      ctx.fillText('测', pos[0], pos[1]);\n      const fontImageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n      fontMeasure = measureText(fontImageData);\n      this.fontBoundingBoxMap.push({ key: this.fontName, value: fontMeasure });\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    }\n\n    return {\n      actualBoundingBoxAscent: pos[1] - top,\n      actualBoundingBoxRight: right - pos[0],\n      actualBoundingBoxDescent: bottom - pos[1],\n      actualBoundingBoxLeft: pos[0] - left,\n      fontBoundingBoxAscent: fontMeasure.bottom - fontMeasure.top,\n      fontBoundingBoxDescent: 0,\n      width: fontMeasure.right - fontMeasure.left,\n    };\n  }\n}\n","import { PAGModule } from '../pag-module';\nimport { ctor, Point, Vector } from '../types';\nimport { ScalerContext } from '@tgfx/core/scaler-context';\nimport { Matrix } from './matrix';\n\nexport interface WebFont {\n  name: string;\n  style: string;\n  size: number;\n  bold: boolean;\n  italic: boolean;\n}\n\nexport class WebMask {\n  public static create(canvas: HTMLCanvasElement | OffscreenCanvas) {\n    return new WebMask(canvas);\n  }\n\n  private static getLineCap(cap: ctor): CanvasLineCap {\n    switch (cap) {\n      case PAGModule.TGFXLineCap.Round:\n        return 'round';\n      case PAGModule.TGFXLineCap.Square:\n        return 'square';\n      default:\n        return 'butt';\n    }\n  }\n\n  private static getLineJoin(join: ctor): CanvasLineJoin {\n    switch (join) {\n      case PAGModule.TGFXLineJoin.Round:\n        return 'round';\n      case PAGModule.TGFXLineJoin.Bevel:\n        return 'bevel';\n      default:\n        return 'miter';\n    }\n  }\n\n  protected canvas: HTMLCanvasElement | OffscreenCanvas;\n  private context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D;\n\n  public constructor(canvas: HTMLCanvasElement | OffscreenCanvas) {\n    this.canvas = canvas;\n    this.context = this.canvas.getContext('2d') as CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D;\n  }\n\n  public updateCanvas(canvas: HTMLCanvasElement | OffscreenCanvas) {\n    this.canvas = canvas;\n  }\n\n  public fillPath(path: Path2D, fillType: ctor) {\n    this.context.setTransform(1, 0, 0, 1, 0, 0);\n    if (\n      fillType === PAGModule.TGFXPathFillType.InverseWinding ||\n      fillType === PAGModule.TGFXPathFillType.InverseEvenOdd\n    ) {\n      this.context.clip(path, fillType === PAGModule.TGFXPathFillType.InverseEvenOdd ? 'evenodd' : 'nonzero');\n      this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    } else {\n      this.context.fill(path, fillType === PAGModule.TGFXPathFillType.EvenOdd ? 'evenodd' : 'nonzero');\n    }\n  }\n\n  public fillText(webFont: WebFont, texts: Vector<string>, positions: Vector<Point>, matrixWasmIns: any) {\n    const scalerContext = new ScalerContext(webFont.name, webFont.style, webFont.size, webFont.bold, webFont.italic);\n    const matrix = new Matrix(matrixWasmIns);\n    this.context.setTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n    this.context.font = scalerContext.fontString();\n    for (let i = 0; i < texts.size(); i++) {\n      const position = positions.get(i);\n      this.context.fillText(texts.get(i), position.x, position.y);\n    }\n  }\n\n  public strokeText(\n    webFont: WebFont,\n    stroke: { width: number; cap: ctor; join: ctor; miterLimit: number },\n    texts: Vector<string>,\n    positions: Vector<Point>,\n    matrixWasmIns: any,\n  ) {\n    if (stroke.width < 0.5) {\n      return;\n    }\n    const scalerContext = new ScalerContext(webFont.name, webFont.style, webFont.size, webFont.bold, webFont.italic);\n    const matrix = new Matrix(matrixWasmIns);\n    this.context.setTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);\n    this.context.font = scalerContext.fontString();\n    this.context.lineJoin = WebMask.getLineJoin(stroke.join);\n    this.context.miterLimit = stroke.miterLimit;\n    this.context.lineCap = WebMask.getLineCap(stroke.cap);\n    this.context.lineWidth = stroke.width;\n    for (let i = 0; i < texts.size(); i++) {\n      const position = positions.get(i);\n      this.context.strokeText(texts.get(i), position.x, position.y);\n    }\n  }\n\n  public clear() {\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n}\n","import { IPHONE } from './ua';\n\nimport type { PAG } from '../types';\n\nexport const setMixin = (module: PAG) => {\n  module.traceImage = function (info, pixels) {\n    const canvas = document.createElement('canvas');\n    canvas.width = info.width;\n    canvas.height = info.height;\n    const context = canvas.getContext('2d') as CanvasRenderingContext2D;\n    const imageData = new ImageData(new Uint8ClampedArray(pixels), canvas.width, canvas.height);\n    context.putImageData(imageData, 0, 0);\n    document.body.appendChild(canvas);\n  };\n  module.registerSoftwareDecoderFactory = function (factory = null) {\n    module._registerSoftwareDecoderFactory(factory);\n  };\n  module.SDKVersion = function () {\n    return module._SDKVersion();\n  };\n  module.isIPhone = () => IPHONE;\n};\n","import { getCanvas2D, releaseCanvas2D, isCanvas } from './utils/canvas';\nimport { writeBufferToWasm } from './utils/buffer';\nimport { BitmapImage } from './core/bitmap-image';\nimport { isInstanceOf } from './utils/type-utils';\n\nimport type { EmscriptenGL, TGFX } from './types';\nimport type { wx } from './wechat/interfaces';\n\ndeclare const wx: wx;\n\nexport const createImage = (source: string) => {\n  return new Promise<HTMLImageElement | null>((resolve) => {\n    const image = new Image();\n    image.onload = function () {\n      resolve(image);\n    };\n    image.onerror = function () {\n      console.error('image create from bytes error.');\n      resolve(null);\n    };\n    image.src = source;\n  });\n};\n\nexport const createImageFromBytes = (bytes: ArrayBuffer) => {\n  const blob = new Blob([bytes], { type: 'image/*' });\n  return createImage(URL.createObjectURL(blob));\n};\n\nexport const readImagePixels = (module: TGFX, image: CanvasImageSource, width: number, height: number) => {\n  if (!image) {\n    return null;\n  }\n  const canvas = getCanvas2D(width, height);\n  const ctx = canvas.getContext('2d') as CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D | null;\n  if (!ctx) {\n    return null;\n  }\n  ctx.drawImage(image, 0, 0, width, height);\n  const { data } = ctx.getImageData(0, 0, width, height);\n  releaseCanvas2D(canvas);\n  if (data.length === 0) {\n    return null;\n  }\n  return writeBufferToWasm(module, data);\n};\n\nexport const hasWebpSupport = () => {\n  try {\n    return document.createElement('canvas').toDataURL('image/webp', 0.5).indexOf('data:image/webp') === 0;\n  } catch (err) {\n    return false;\n  }\n};\n\nexport const getSourceSize = (source: TexImageSource | OffscreenCanvas) => {\n  if (isInstanceOf(source, globalThis.HTMLVideoElement)) {\n    return {\n      width: (source as HTMLVideoElement).videoWidth,\n      height: (source as HTMLVideoElement).videoHeight,\n    };\n  }\n  return { width: source.width, height: source.height };\n};\n\nexport const uploadToTexture = (\n  GL: EmscriptenGL,\n  source: TexImageSource | OffscreenCanvas | BitmapImage,\n  textureID: number,\n  alphaOnly: boolean,\n) => {\n  let renderSource = source instanceof BitmapImage ? source.bitmap : source;\n  if (!renderSource) return;\n  const gl = GL.currentContext?.GLctx as WebGLRenderingContext;\n  gl.bindTexture(gl.TEXTURE_2D, GL.textures[textureID]);\n  if (alphaOnly) {\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, gl.ALPHA, gl.UNSIGNED_BYTE, renderSource);\n  } else {\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, gl.RGBA, gl.UNSIGNED_BYTE, renderSource);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n  }\n};\n\nexport const isAndroidMiniprogram = () => {\n  if (typeof wx !== 'undefined' && wx.getSystemInfoSync) {\n    return wx.getSystemInfoSync().platform === 'android';\n  }\n};\n\nexport const releaseNativeImage = (source: TexImageSource | OffscreenCanvas) => {\n  if (isInstanceOf(source, globalThis.ImageBitmap)) {\n    (source as ImageBitmap).close();\n  } else if (isCanvas(source)) {\n    releaseCanvas2D(source as OffscreenCanvas | HTMLCanvasElement);\n  }\n};\n\nexport const getBytesFromPath = async (module: TGFX, path: string) => {\n  const buffer = await fetch(path).then((res) => res.arrayBuffer());\n  return writeBufferToWasm(module, buffer);\n};\n\nexport { getCanvas2D as createCanvas2D };","import { PAG } from './types';\nimport { setPAGModule } from './pag-module';\nimport { PAGFile } from './pag-file';\nimport { PAGSurface } from './pag-surface';\nimport { PAGPlayer } from './pag-player';\nimport { PAGImage } from './pag-image';\nimport { PAGView } from './pag-view';\nimport { PAGFont } from './pag-font';\nimport { PAGLayer } from './pag-layer';\nimport { VideoReader } from './core/video-reader';\nimport { GlobalCanvas } from './core/global-canvas';\nimport { BackendContext } from './core/backend-context';\nimport { PAGComposition } from './pag-composition';\nimport { PAGTextLayer } from './pag-text-layer';\nimport { PAGImageLayer } from './pag-image-layer';\nimport { PAGSolidLayer } from './pag-solid-layer';\nimport { Matrix } from './core/matrix';\nimport { WebMask } from './core/web-mask';\nimport { RenderCanvas } from './core/render-canvas';\nimport { setMixin } from './utils/mixin';\nimport * as tgfx from '@tgfx/tgfx'\nimport { ScalerContext } from '@tgfx/core/scaler-context';\n\n/**\n * Binding pag js module on pag webassembly module.\n */\nexport const binding = (module: PAG) => {\n  setPAGModule(module);\n  module.module = module;\n  module.PAGFile = PAGFile;\n  module.PAGPlayer = PAGPlayer;\n  module.PAGView = PAGView;\n  module.PAGFont = PAGFont;\n  module.PAGImage = PAGImage;\n  module.PAGLayer = PAGLayer;\n  module.PAGComposition = PAGComposition;\n  module.PAGSurface = PAGSurface;\n  module.PAGTextLayer = PAGTextLayer;\n  module.PAGImageLayer = PAGImageLayer;\n  module.PAGSolidLayer = PAGSolidLayer;\n  module.VideoReader = VideoReader;\n  module.ScalerContext = ScalerContext;\n  module.WebMask = WebMask;\n  module.GlobalCanvas = GlobalCanvas;\n  module.BackendContext = BackendContext;\n  module.Matrix = Matrix;\n  module.RenderCanvas = RenderCanvas;\n  setMixin(module);\n  module.tgfx = { ...tgfx };\n};\n","\nvar PAGInit = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  \n  return (\nfunction(PAGInit) {\n  PAGInit = PAGInit || {};\n\nvar Module=typeof PAGInit!=\"undefined\"?PAGInit:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts==\"function\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var POINTER_SIZE=4;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;if(!Module[\"noFSInit\"]&&!FS.init.initialized)FS.init();FS.ignorePermissions=false;TTY.init();callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){{if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}var wasmBinaryFile;wasmBinaryFile=\"libpag.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;exports=Asyncify.instrumentWasmExports(exports);Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"hc\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"jc\"];addOnInit(Module[\"asm\"][\"ic\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch==\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);exports=Asyncify.instrumentWasmExports(exports);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync().catch(readyPromiseReject);return{}}var tempDouble;var tempI64;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){callbacks.shift()(Module)}}function handleException(e){if(e instanceof ExitStatus||e==\"unwind\"){return EXITSTATUS}quit_(1,e)}function ___assert_fail(condition,filename,line,func){abort(\"Assertion failed: \"+UTF8ToString(condition)+\", at: \"+[filename?UTF8ToString(filename):\"unknown filename\",line,func?UTF8ToString(func):\"unknown function\"])}function ___cxa_allocate_exception(size){return _malloc(size+24)+24}function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-24;this.set_type=function(type){HEAPU32[this.ptr+4>>2]=type};this.get_type=function(){return HEAPU32[this.ptr+4>>2]};this.set_destructor=function(destructor){HEAPU32[this.ptr+8>>2]=destructor};this.get_destructor=function(){return HEAPU32[this.ptr+8>>2]};this.set_refcount=function(refcount){HEAP32[this.ptr>>2]=refcount};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+12>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+13>>0]!=0};this.init=function(type,destructor){this.set_adjusted_ptr(0);this.set_type(type);this.set_destructor(destructor);this.set_refcount(0);this.set_caught(false);this.set_rethrown(false)};this.add_ref=function(){var value=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=value+1};this.release_ref=function(){var prev=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=prev-1;return prev===1};this.set_adjusted_ptr=function(adjustedPtr){HEAPU32[this.ptr+16>>2]=adjustedPtr};this.get_adjusted_ptr=function(){return HEAPU32[this.ptr+16>>2]};this.get_exception_ptr=function(){var isPointer=___cxa_is_pointer_type(this.get_type());if(isPointer){return HEAPU32[this.excPtr>>2]}var adjusted=this.get_adjusted_ptr();if(adjusted!==0)return adjusted;return this.excPtr}}var exceptionLast=0;var uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw ptr}function setErrNo(value){HEAP32[___errno_location()>>2]=value;return value}var PATH={isAbs:path=>path.charAt(0)===\"/\",splitPath:filename=>{var splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;return splitPathRe.exec(filename).slice(1)},normalizeArray:(parts,allowAboveRoot)=>{var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1)}else if(last===\"..\"){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift(\"..\")}}return parts},normalize:path=>{var isAbsolute=PATH.isAbs(path),trailingSlash=path.substr(-1)===\"/\";path=PATH.normalizeArray(path.split(\"/\").filter(p=>!!p),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\"}if(path&&trailingSlash){path+=\"/\"}return(isAbsolute?\"/\":\"\")+path},dirname:path=>{var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return\".\"}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir},basename:path=>{if(path===\"/\")return\"/\";path=PATH.normalize(path);path=path.replace(/\\/$/,\"\");var lastSlash=path.lastIndexOf(\"/\");if(lastSlash===-1)return path;return path.substr(lastSlash+1)},join:function(){var paths=Array.prototype.slice.call(arguments);return PATH.normalize(paths.join(\"/\"))},join2:(l,r)=>{return PATH.normalize(l+\"/\"+r)}};function getRandomDevice(){if(typeof crypto==\"object\"&&typeof crypto[\"getRandomValues\"]==\"function\"){var randomBuffer=new Uint8Array(1);return()=>{crypto.getRandomValues(randomBuffer);return randomBuffer[0]}}else return()=>abort(\"randomDevice\")}var PATH_FS={resolve:function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!=\"string\"){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){return\"\"}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=PATH.isAbs(path)}resolvedPath=PATH.normalizeArray(resolvedPath.split(\"/\").filter(p=>!!p),!resolvedAbsolute).join(\"/\");return(resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\"},relative:(from,to)=>{from=PATH_FS.resolve(from).substr(1);to=PATH_FS.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!==\"\")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\"\")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split(\"/\"));var toParts=trim(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\")}};function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}var TTY={ttys:[],init:function(){},shutdown:function(){},register:function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)},stream_ops:{open:function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(43)}stream.tty=tty;stream.seekable=false},close:function(stream){stream.tty.ops.fsync(stream.tty)},fsync:function(stream){stream.tty.ops.fsync(stream.tty)},read:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(60)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(60)}try{for(var i=0;i<length;i++){stream.tty.ops.put_char(stream.tty,buffer[offset+i])}}catch(e){throw new FS.ErrnoError(29)}if(length){stream.node.timestamp=Date.now()}return i}},default_tty_ops:{get_char:function(tty){if(!tty.input.length){var result=null;if(typeof window!=\"undefined\"&&typeof window.prompt==\"function\"){result=window.prompt(\"Input: \");if(result!==null){result+=\"\\n\"}}else if(typeof readline==\"function\"){result=readline();if(result!==null){result+=\"\\n\"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()},put_char:function(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},fsync:function(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[]}}},default_tty1_ops:{put_char:function(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},fsync:function(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[]}}}};function mmapAlloc(size){abort()}var MEMFS={ops_table:null,mount:function(mount){return MEMFS.createNode(null,\"/\",16384|511,0)},createNode:function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(63)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node;parent.timestamp=node.timestamp}return node},getFileDataAsTypedArray:function(node){if(!node.contents)return new Uint8Array(0);if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)},expandFileStorage:function(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)>>>0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0)},resizeFileStorage:function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0}else{var oldContents=node.contents;node.contents=new Uint8Array(newSize);if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize}},node_ops:{getattr:function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr},setattr:function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}},lookup:function(parent,name){throw FS.genericErrors[44]},mknod:function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)},rename:function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(55)}}}delete old_node.parent.contents[old_node.name];old_node.parent.timestamp=Date.now();old_node.name=new_name;new_dir.contents[new_name]=old_node;new_dir.timestamp=old_node.parent.timestamp;old_node.parent=new_dir},unlink:function(parent,name){delete parent.contents[name];parent.timestamp=Date.now()},rmdir:function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(55)}delete parent.contents[name];parent.timestamp=Date.now()},readdir:function(node){var entries=[\".\",\"..\"];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries},symlink:function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node},readlink:function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(28)}return node.link}},stream_ops:{read:function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size},write:function(stream,buffer,offset,length,position,canOwn){if(buffer.buffer===HEAP8.buffer){canOwn=false}if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=buffer.slice(offset,offset+length);node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray){node.contents.set(buffer.subarray(offset,offset+length),position)}else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length},llseek:function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(28)}return position},allocate:function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)},mmap:function(stream,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&contents.buffer===buffer){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<contents.length){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48)}HEAP8.set(contents,ptr)}return{ptr:ptr,allocated:allocated}},msync:function(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}if(mmapFlags&2){return 0}var bytesWritten=MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0}}};function asyncLoad(url,onload,onerror,noRunDep){var dep=!noRunDep?getUniqueRunDependency(\"al \"+url):\"\";readAsync(url,arrayBuffer=>{assert(arrayBuffer,'Loading data file \"'+url+'\" failed (no arrayBuffer).');onload(new Uint8Array(arrayBuffer));if(dep)removeRunDependency(dep)},event=>{if(onerror){onerror()}else{throw'Loading data file \"'+url+'\" failed.'}});if(dep)addRunDependency(dep)}var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:(path,opts={})=>{path=PATH_FS.resolve(FS.cwd(),path);if(!path)return{path:\"\",node:null};var defaults={follow_mount:true,recurse_count:0};opts=Object.assign(defaults,opts);if(opts.recurse_count>8){throw new FS.ErrnoError(32)}var parts=PATH.normalizeArray(path.split(\"/\").filter(p=>!!p),false);var current=FS.root;var current_path=\"/\";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH_FS.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count+1});current=lookup.node;if(count++>40){throw new FS.ErrnoError(32)}}}}return{path:current_path,node:current}},getPath:node=>{var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!==\"/\"?mount+\"/\"+path:mount+path}path=path?node.name+\"/\"+path:node.name;node=node.parent}},hashName:(parentid,name)=>{var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length},hashAddNode:node=>{var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node},hashRemoveNode:node=>{var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}},lookupNode:(parent,name)=>{var errCode=FS.mayLookup(parent);if(errCode){throw new FS.ErrnoError(errCode,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)},createNode:(parent,name,mode,rdev)=>{var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node},destroyNode:node=>{FS.hashRemoveNode(node)},isRoot:node=>{return node===node.parent},isMountpoint:node=>{return!!node.mounted},isFile:mode=>{return(mode&61440)===32768},isDir:mode=>{return(mode&61440)===16384},isLink:mode=>{return(mode&61440)===40960},isChrdev:mode=>{return(mode&61440)===8192},isBlkdev:mode=>{return(mode&61440)===24576},isFIFO:mode=>{return(mode&61440)===4096},isSocket:mode=>{return(mode&49152)===49152},flagModes:{\"r\":0,\"r+\":2,\"w\":577,\"w+\":578,\"a\":1089,\"a+\":1090},modeStringToFlags:str=>{var flags=FS.flagModes[str];if(typeof flags==\"undefined\"){throw new Error(\"Unknown file open mode: \"+str)}return flags},flagsToPermissionString:flag=>{var perms=[\"r\",\"w\",\"rw\"][flag&3];if(flag&512){perms+=\"w\"}return perms},nodePermissions:(node,perms)=>{if(FS.ignorePermissions){return 0}if(perms.includes(\"r\")&&!(node.mode&292)){return 2}else if(perms.includes(\"w\")&&!(node.mode&146)){return 2}else if(perms.includes(\"x\")&&!(node.mode&73)){return 2}return 0},mayLookup:dir=>{var errCode=FS.nodePermissions(dir,\"x\");if(errCode)return errCode;if(!dir.node_ops.lookup)return 2;return 0},mayCreate:(dir,name)=>{try{var node=FS.lookupNode(dir,name);return 20}catch(e){}return FS.nodePermissions(dir,\"wx\")},mayDelete:(dir,name,isdir)=>{var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var errCode=FS.nodePermissions(dir,\"wx\");if(errCode){return errCode}if(isdir){if(!FS.isDir(node.mode)){return 54}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return 10}}else{if(FS.isDir(node.mode)){return 31}}return 0},mayOpen:(node,flags)=>{if(!node){return 44}if(FS.isLink(node.mode)){return 32}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!==\"r\"||flags&512){return 31}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))},MAX_OPEN_FDS:4096,nextfd:(fd_start=0,fd_end=FS.MAX_OPEN_FDS)=>{for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(33)},getStream:fd=>FS.streams[fd],createStream:(stream,fd_start,fd_end)=>{if(!FS.FSStream){FS.FSStream=function(){this.shared={}};FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{get:function(){return this.node},set:function(val){this.node=val}},isRead:{get:function(){return(this.flags&2097155)!==1}},isWrite:{get:function(){return(this.flags&2097155)!==0}},isAppend:{get:function(){return this.flags&1024}},flags:{get:function(){return this.shared.flags},set:function(val){this.shared.flags=val}},position:{get:function(){return this.shared.position},set:function(val){this.shared.position=val}}})}stream=Object.assign(new FS.FSStream,stream);var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream},closeStream:fd=>{FS.streams[fd]=null},chrdev_stream_ops:{open:stream=>{var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}},llseek:()=>{throw new FS.ErrnoError(70)}},major:dev=>dev>>8,minor:dev=>dev&255,makedev:(ma,mi)=>ma<<8|mi,registerDevice:(dev,ops)=>{FS.devices[dev]={stream_ops:ops}},getDevice:dev=>FS.devices[dev],getMounts:mount=>{var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts},syncfs:(populate,callback)=>{if(typeof populate==\"function\"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){err(\"warning: \"+FS.syncFSRequests+\" FS.syncfs operations in flight at once, probably just doing extra work\")}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(errCode){FS.syncFSRequests--;return callback(errCode)}function done(errCode){if(errCode){if(!done.errored){done.errored=true;return doCallback(errCode)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach(mount=>{if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)})},mount:(type,opts,mountpoint)=>{var root=mountpoint===\"/\";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(10)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot},unmount:mountpoint=>{var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(28)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach(hash=>{var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.includes(current.mount)){FS.destroyNode(current)}current=next}});node.mounted=null;var idx=node.mount.mounts.indexOf(mount);node.mount.mounts.splice(idx,1)},lookup:(parent,name)=>{return parent.node_ops.lookup(parent,name)},mknod:(path,mode,dev)=>{var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name===\".\"||name===\"..\"){throw new FS.ErrnoError(28)}var errCode=FS.mayCreate(parent,name);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(63)}return parent.node_ops.mknod(parent,name,mode,dev)},create:(path,mode)=>{mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)},mkdir:(path,mode)=>{mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)},mkdirTree:(path,mode)=>{var dirs=path.split(\"/\");var d=\"\";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+=\"/\"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=20)throw e}}},mkdev:(path,mode,dev)=>{if(typeof dev==\"undefined\"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)},symlink:(oldpath,newpath)=>{if(!PATH_FS.resolve(oldpath)){throw new FS.ErrnoError(44)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var newname=PATH.basename(newpath);var errCode=FS.mayCreate(parent,newname);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(63)}return parent.node_ops.symlink(parent,newname,oldpath)},rename:(old_path,new_path)=>{var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node;if(!old_dir||!new_dir)throw new FS.ErrnoError(44);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(75)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH_FS.relative(old_path,new_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(28)}relative=PATH_FS.relative(new_path,old_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(55)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var errCode=FS.mayDelete(old_dir,old_name,isdir);if(errCode){throw new FS.ErrnoError(errCode)}errCode=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(errCode){throw new FS.ErrnoError(errCode)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(63)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(10)}if(new_dir!==old_dir){errCode=FS.nodePermissions(old_dir,\"w\");if(errCode){throw new FS.ErrnoError(errCode)}}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}},rmdir:path=>{var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,true);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node)},readdir:path=>{var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(54)}return node.node_ops.readdir(node)},unlink:path=>{var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,false);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.unlink(parent,name);FS.destroyNode(node)},readlink:path=>{var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(44)}if(!link.node_ops.readlink){throw new FS.ErrnoError(28)}return PATH_FS.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))},stat:(path,dontFollow)=>{var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(44)}if(!node.node_ops.getattr){throw new FS.ErrnoError(63)}return node.node_ops.getattr(node)},lstat:path=>{return FS.stat(path,true)},chmod:(path,mode,dontFollow)=>{var node;if(typeof path==\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})},lchmod:(path,mode)=>{FS.chmod(path,mode,true)},fchmod:(fd,mode)=>{var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chmod(stream.node,mode)},chown:(path,uid,gid,dontFollow)=>{var node;if(typeof path==\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{timestamp:Date.now()})},lchown:(path,uid,gid)=>{FS.chown(path,uid,gid,true)},fchown:(fd,uid,gid)=>{var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chown(stream.node,uid,gid)},truncate:(path,len)=>{if(len<0){throw new FS.ErrnoError(28)}var node;if(typeof path==\"string\"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(31)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(28)}var errCode=FS.nodePermissions(node,\"w\");if(errCode){throw new FS.ErrnoError(errCode)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})},ftruncate:(fd,len)=>{var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(28)}FS.truncate(stream.node,len)},utime:(path,atime,mtime)=>{var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})},open:(path,flags,mode)=>{if(path===\"\"){throw new FS.ErrnoError(44)}flags=typeof flags==\"string\"?FS.modeStringToFlags(flags):flags;mode=typeof mode==\"undefined\"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path==\"object\"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(20)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(44)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}if(!created){var errCode=FS.mayOpen(node,flags);if(errCode){throw new FS.ErrnoError(errCode)}}if(flags&512&&!created){FS.truncate(node,0)}flags&=~(128|512|131072);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false});if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module[\"logReadFiles\"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1}}return stream},close:stream=>{if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null},isClosed:stream=>{return stream.fd===null},llseek:(stream,offset,whence)=>{if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(70)}if(whence!=0&&whence!=1&&whence!=2){throw new FS.ErrnoError(28)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position},read:(stream,buffer,offset,length,position)=>{if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.read){throw new FS.ErrnoError(28)}var seeking=typeof position!=\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead},write:(stream,buffer,offset,length,position,canOwn)=>{if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.write){throw new FS.ErrnoError(28)}if(stream.seekable&&stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!=\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;return bytesWritten},allocate:(stream,offset,length)=>{if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(offset<0||length<=0){throw new FS.ErrnoError(28)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(43)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(138)}stream.stream_ops.allocate(stream,offset,length)},mmap:(stream,length,position,prot,flags)=>{if((prot&2)!==0&&(flags&2)===0&&(stream.flags&2097155)!==2){throw new FS.ErrnoError(2)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(2)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(43)}return stream.stream_ops.mmap(stream,length,position,prot,flags)},msync:(stream,buffer,offset,length,mmapFlags)=>{if(!stream||!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)},munmap:stream=>0,ioctl:(stream,cmd,arg)=>{if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(59)}return stream.stream_ops.ioctl(stream,cmd,arg)},readFile:(path,opts={})=>{opts.flags=opts.flags||0;opts.encoding=opts.encoding||\"binary\";if(opts.encoding!==\"utf8\"&&opts.encoding!==\"binary\"){throw new Error('Invalid encoding type \"'+opts.encoding+'\"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding===\"utf8\"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding===\"binary\"){ret=buf}FS.close(stream);return ret},writeFile:(path,data,opts={})=>{opts.flags=opts.flags||577;var stream=FS.open(path,opts.flags,opts.mode);if(typeof data==\"string\"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error(\"Unsupported data type\")}FS.close(stream)},cwd:()=>FS.currentPath,chdir:path=>{var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(44)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(54)}var errCode=FS.nodePermissions(lookup.node,\"x\");if(errCode){throw new FS.ErrnoError(errCode)}FS.currentPath=lookup.path},createDefaultDirectories:()=>{FS.mkdir(\"/tmp\");FS.mkdir(\"/home\");FS.mkdir(\"/home/web_user\")},createDefaultDevices:()=>{FS.mkdir(\"/dev\");FS.registerDevice(FS.makedev(1,3),{read:()=>0,write:(stream,buffer,offset,length,pos)=>length});FS.mkdev(\"/dev/null\",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev(\"/dev/tty\",FS.makedev(5,0));FS.mkdev(\"/dev/tty1\",FS.makedev(6,0));var random_device=getRandomDevice();FS.createDevice(\"/dev\",\"random\",random_device);FS.createDevice(\"/dev\",\"urandom\",random_device);FS.mkdir(\"/dev/shm\");FS.mkdir(\"/dev/shm/tmp\")},createSpecialDirectories:()=>{FS.mkdir(\"/proc\");var proc_self=FS.mkdir(\"/proc/self\");FS.mkdir(\"/proc/self/fd\");FS.mount({mount:()=>{var node=FS.createNode(proc_self,\"fd\",16384|511,73);node.node_ops={lookup:(parent,name)=>{var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);var ret={parent:null,mount:{mountpoint:\"fake\"},node_ops:{readlink:()=>stream.path}};ret.parent=ret;return ret}};return node}},{},\"/proc/self/fd\")},createStandardStreams:()=>{if(Module[\"stdin\"]){FS.createDevice(\"/dev\",\"stdin\",Module[\"stdin\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdin\")}if(Module[\"stdout\"]){FS.createDevice(\"/dev\",\"stdout\",null,Module[\"stdout\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdout\")}if(Module[\"stderr\"]){FS.createDevice(\"/dev\",\"stderr\",null,Module[\"stderr\"])}else{FS.symlink(\"/dev/tty1\",\"/dev/stderr\")}var stdin=FS.open(\"/dev/stdin\",0);var stdout=FS.open(\"/dev/stdout\",1);var stderr=FS.open(\"/dev/stderr\",1)},ensureErrnoError:()=>{if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=function(errno){this.errno=errno};this.setErrno(errno);this.message=\"FS error\"};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[44].forEach(code=>{FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack=\"<generic error, no stack>\"})},staticInit:()=>{FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},\"/\");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={\"MEMFS\":MEMFS}},init:(input,output,error)=>{FS.init.initialized=true;FS.ensureErrnoError();Module[\"stdin\"]=input||Module[\"stdin\"];Module[\"stdout\"]=output||Module[\"stdout\"];Module[\"stderr\"]=error||Module[\"stderr\"];FS.createStandardStreams()},quit:()=>{FS.init.initialized=false;for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}},getMode:(canRead,canWrite)=>{var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode},findObject:(path,dontResolveLastLink)=>{var ret=FS.analyzePath(path,dontResolveLastLink);if(!ret.exists){return null}return ret.object},analyzePath:(path,dontResolveLastLink)=>{try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path===\"/\"}catch(e){ret.error=e.errno}return ret},createPath:(parent,path,canRead,canWrite)=>{parent=typeof parent==\"string\"?parent:FS.getPath(parent);var parts=path.split(\"/\").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current},createFile:(parent,name,properties,canRead,canWrite)=>{var path=PATH.join2(typeof parent==\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)},createDataFile:(parent,name,data,canRead,canWrite,canOwn)=>{var path=name;if(parent){parent=typeof parent==\"string\"?parent:FS.getPath(parent);path=name?PATH.join2(parent,name):parent}var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data==\"string\"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,577);FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node},createDevice:(parent,name,input,output)=>{var path=PATH.join2(typeof parent==\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:stream=>{stream.seekable=false},close:stream=>{if(output&&output.buffer&&output.buffer.length){output(10)}},read:(stream,buffer,offset,length,pos)=>{var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:(stream,buffer,offset,length,pos)=>{for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(29)}}if(length){stream.node.timestamp=Date.now()}return i}});return FS.mkdev(path,mode,dev)},forceLoadFile:obj=>{if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;if(typeof XMLHttpRequest!=\"undefined\"){throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\")}else if(read_){try{obj.contents=intArrayFromString(read_(obj.url),true);obj.usedBytes=obj.contents.length}catch(e){throw new FS.ErrnoError(29)}}else{throw new Error(\"Cannot load without read() or XMLHttpRequest.\")}},createLazyFile:(parent,name,url,canRead,canWrite)=>{function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open(\"HEAD\",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);var datalength=Number(xhr.getResponseHeader(\"Content-length\"));var header;var hasByteServing=(header=xhr.getResponseHeader(\"Accept-Ranges\"))&&header===\"bytes\";var usesGzip=(header=xhr.getResponseHeader(\"Content-Encoding\"))&&header===\"gzip\";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=(from,to)=>{if(from>to)throw new Error(\"invalid range (\"+from+\", \"+to+\") or no bytes requested!\");if(to>datalength-1)throw new Error(\"only \"+datalength+\" bytes available! programmer error!\");var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);if(datalength!==chunkSize)xhr.setRequestHeader(\"Range\",\"bytes=\"+from+\"-\"+to);xhr.responseType=\"arraybuffer\";if(xhr.overrideMimeType){xhr.overrideMimeType(\"text/plain; charset=x-user-defined\")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}return intArrayFromString(xhr.responseText||\"\",true)};var lazyArray=this;lazyArray.setDataGetter(chunkNum=>{var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]==\"undefined\"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]==\"undefined\")throw new Error(\"doXHR failed!\");return lazyArray.chunks[chunkNum]});if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;out(\"LazyFiles on gzip forces download of the whole file when length is accessed\")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!=\"undefined\"){if(!ENVIRONMENT_IS_WORKER)throw\"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._length}},chunkSize:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize}}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:function(){return this.contents.length}}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach(key=>{var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){FS.forceLoadFile(node);return fn.apply(null,arguments)}});function writeChunks(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size}stream_ops.read=(stream,buffer,offset,length,position)=>{FS.forceLoadFile(node);return writeChunks(stream,buffer,offset,length,position)};stream_ops.mmap=(stream,length,position,prot,flags)=>{FS.forceLoadFile(node);var ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48)}writeChunks(stream,HEAP8,ptr,length,position);return{ptr:ptr,allocated:true}};node.stream_ops=stream_ops;return node},createPreloadedFile:(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish)=>{var fullname=name?PATH_FS.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency(\"cp \"+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}if(Browser.handledByPreloadPlugin(byteArray,fullname,finish,()=>{if(onerror)onerror();removeRunDependency(dep)})){return}finish(byteArray)}addRunDependency(dep);if(typeof url==\"string\"){asyncLoad(url,byteArray=>processData(byteArray),onerror)}else{processData(url)}},indexedDB:()=>{return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:()=>{return\"EM_FS_\"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:\"FILE_DATA\",saveFilesToDB:(paths,onload,onerror)=>{onload=onload||(()=>{});onerror=onerror||(()=>{});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=()=>{out(\"creating db\");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=()=>{var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],\"readwrite\");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(path=>{var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=()=>{ok++;if(ok+fail==total)finish()};putRequest.onerror=()=>{fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror},loadFilesFromDB:(paths,onload,onerror)=>{onload=onload||(()=>{});onerror=onerror||(()=>{});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=()=>{var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],\"readonly\")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(path=>{var getRequest=files.get(path);getRequest.onsuccess=()=>{if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=()=>{fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror}};var SYSCALLS={DEFAULT_POLLMASK:5,calculateAt:function(dirfd,path,allowEmpty){if(PATH.isAbs(path)){return path}var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=SYSCALLS.getStreamFromFD(dirfd);dir=dirstream.path}if(path.length==0){if(!allowEmpty){throw new FS.ErrnoError(44)}return dir}return PATH.join2(dir,path)},doStat:function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-54}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAPU32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;tempI64=[stat.size>>>0,(tempDouble=stat.size,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+40>>2]=tempI64[0],HEAP32[buf+44>>2]=tempI64[1];HEAP32[buf+48>>2]=4096;HEAP32[buf+52>>2]=stat.blocks;tempI64=[Math.floor(stat.atime.getTime()/1e3)>>>0,(tempDouble=Math.floor(stat.atime.getTime()/1e3),+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+56>>2]=tempI64[0],HEAP32[buf+60>>2]=tempI64[1];HEAPU32[buf+64>>2]=0;tempI64=[Math.floor(stat.mtime.getTime()/1e3)>>>0,(tempDouble=Math.floor(stat.mtime.getTime()/1e3),+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+72>>2]=tempI64[0],HEAP32[buf+76>>2]=tempI64[1];HEAPU32[buf+80>>2]=0;tempI64=[Math.floor(stat.ctime.getTime()/1e3)>>>0,(tempDouble=Math.floor(stat.ctime.getTime()/1e3),+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+88>>2]=tempI64[0],HEAP32[buf+92>>2]=tempI64[1];HEAPU32[buf+96>>2]=0;tempI64=[stat.ino>>>0,(tempDouble=stat.ino,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+104>>2]=tempI64[0],HEAP32[buf+108>>2]=tempI64[1];return 0},doMsync:function(addr,stream,len,flags,offset){var buffer=HEAPU8.slice(addr,addr+len);FS.msync(stream,buffer,offset,len,flags)},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},getStreamFromFD:function(fd){var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);return stream}};function ___syscall_fcntl64(fd,cmd,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(fd);switch(cmd){case 0:{var arg=SYSCALLS.get();if(arg<0){return-28}var newStream;newStream=FS.createStream(stream,arg);return newStream.fd}case 1:case 2:return 0;case 3:return stream.flags;case 4:{var arg=SYSCALLS.get();stream.flags|=arg;return 0}case 5:{var arg=SYSCALLS.get();var offset=0;HEAP16[arg+offset>>1]=2;return 0}case 6:case 7:return 0;case 16:case 8:return-28;case 9:setErrNo(28);return-1;default:{return-28}}}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_ioctl(fd,op,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(fd);switch(op){case 21509:case 21505:{if(!stream.tty)return-59;return 0}case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:{if(!stream.tty)return-59;return 0}case 21519:{if(!stream.tty)return-59;var argp=SYSCALLS.get();HEAP32[argp>>2]=0;return 0}case 21520:{if(!stream.tty)return-59;return-28}case 21531:{var argp=SYSCALLS.get();return FS.ioctl(stream,op,argp)}case 21523:{if(!stream.tty)return-59;return 0}case 21524:{if(!stream.tty)return-59;return 0}default:return-28}}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_openat(dirfd,path,flags,varargs){SYSCALLS.varargs=varargs;try{path=SYSCALLS.getStr(path);path=SYSCALLS.calculateAt(dirfd,path);var mode=varargs?SYSCALLS.get():0;return FS.open(path,flags,mode).fd}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}var structRegistrations={};function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAP32[pointer>>2])}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}return name}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\")(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}};return errorClass}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach((dt,i)=>{if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(()=>{typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}}function __embind_finalize_value_object(structType){var reg=structRegistrations[structType];delete structRegistrations[structType];var rawConstructor=reg.rawConstructor;var rawDestructor=reg.rawDestructor;var fieldRecords=reg.fields;var fieldTypes=fieldRecords.map(field=>field.getterReturnType).concat(fieldRecords.map(field=>field.setterArgumentType));whenDependentTypesAreResolved([structType],fieldTypes,fieldTypes=>{var fields={};fieldRecords.forEach((field,i)=>{var fieldName=field.fieldName;var getterReturnType=fieldTypes[i];var getter=field.getter;var getterContext=field.getterContext;var setterArgumentType=fieldTypes[i+fieldRecords.length];var setter=field.setter;var setterContext=field.setterContext;fields[fieldName]={read:ptr=>{return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))},write:(ptr,o)=>{var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,o));runDestructors(destructors)}}});return[{name:reg.name,\"fromWireType\":function(ptr){var rv={};for(var i in fields){rv[i]=fields[i].read(ptr)}rawDestructor(ptr);return rv},\"toWireType\":function(destructors,o){for(var fieldName in fields){if(!(fieldName in o)){throw new TypeError('Missing field:  \"'+fieldName+'\"')}}var ptr=rawConstructor();for(fieldName in fields){fields[fieldName].write(ptr,o[fieldName])}if(destructors!==null){destructors.push(rawDestructor,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:rawDestructor}]})}function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(cb=>cb())}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":8,\"readValueFromPointer\":function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])},destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")}var finalizationRegistry=false;function detachFinalizer(handle){}function runDestructor($$){if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}}function releaseClassHandle($$){$$.count.value-=1;var toDelete=0===$$.count.value;if(toDelete){runDestructor($$)}}function downcastPointer(ptr,ptrClass,desiredClass){if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)}var registeredPointers={};function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv}var deletionQueue=[];function flushPendingDeletes(){while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}}var delayFunction=undefined;function setDelayFunction(fn){delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}}function init_embind(){Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr}function getInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]}function makeClassHandle(prototype,record){if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return attachFinalizer(Object.create(prototype,{$$:{value:record}}))}function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}function attachFinalizer(handle){if(\"undefined\"===typeof FinalizationRegistry){attachFinalizer=handle=>handle;return handle}finalizationRegistry=new FinalizationRegistry(info=>{releaseClassHandle(info.$$)});attachFinalizer=handle=>{var $$=handle.$$;var hasSmartPtr=!!$$.smartPtr;if(hasSmartPtr){var info={$$:$$};finalizationRegistry.register(handle,info,handle)}return handle};detachFinalizer=handle=>finalizationRegistry.unregister(handle);return attachFinalizer(handle)}function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=attachFinalizer(Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}}));clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}detachFinalizer(this);releaseClassHandle(this.$$);if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}}function ClassHandle_isDeleted(){return!this.$$.ptr}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}function init_ClassHandle(){ClassHandle.prototype[\"isAliasOf\"]=ClassHandle_isAliasOf;ClassHandle.prototype[\"clone\"]=ClassHandle_clone;ClassHandle.prototype[\"delete\"]=ClassHandle_delete;ClassHandle.prototype[\"isDeleted\"]=ClassHandle_isDeleted;ClassHandle.prototype[\"deleteLater\"]=ClassHandle_deleteLater}function ClassHandle(){}function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(\"Expected null or instance of \"+desiredClass.name+\", got an instance of \"+ptrClass.name)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+embindRepr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle.$$){throwBindingError('Cannot pass \"'+embindRepr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,Emval.toHandle(function(){clonedHandle[\"delete\"]()}));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+embindRepr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+handle.$$.ptrType.name+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr)}}function RegisteredPointer_deleteObject(handle){if(handle!==null){handle[\"delete\"]()}}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype[\"argPackAdvance\"]=8;RegisteredPointer.prototype[\"readValueFromPointer\"]=simpleReadValueFromPointer;RegisteredPointer.prototype[\"deleteObject\"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype[\"fromWireType\"]=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function dynCallLegacy(sig,ptr,args){var f=Module[\"dynCall_\"+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr)}function dynCall(sig,ptr,args){return dynCallLegacy(sig,ptr,args)}function getDynCaller(sig,ptr){var argCache=[];return function(){argCache.length=0;Object.assign(argCache,arguments);return dynCall(sig,ptr,argCache)}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(){return getDynCaller(signature,rawFunction)}var fp=makeDynCaller();if(typeof fp!=\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast)}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast)}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(\"Cannot construct \"+name+\" due to unbound types\",[baseClassRawType])});whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(legalFunctionName,function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError(\"Tried to invoke ctor of \"+name+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(registeredClass.constructor_body).toString()+\") parameters instead!\")}return body.apply(this,arguments)});var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]})}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function runAndAbortIfError(func){try{return func()}catch(e){abort(e)}}function callUserCallback(func){if(ABORT){return}try{func()}catch(e){handleException(e)}}var Asyncify={State:{Normal:0,Unwinding:1,Rewinding:2,Disabled:3},state:0,StackSize:4096,currData:null,handleSleepReturnValue:0,exportCallStack:[],callStackNameToId:{},callStackIdToName:{},callStackId:0,asyncPromiseHandlers:null,sleepCallbacks:[],getCallStackId:function(funcName){var id=Asyncify.callStackNameToId[funcName];if(id===undefined){id=Asyncify.callStackId++;Asyncify.callStackNameToId[funcName]=id;Asyncify.callStackIdToName[id]=funcName}return id},instrumentWasmImports:function(imports){var ASYNCIFY_IMPORTS=[\"env.invoke_*\",\"env.emscripten_sleep\",\"env.emscripten_wget\",\"env.emscripten_wget_data\",\"env.emscripten_idb_load\",\"env.emscripten_idb_store\",\"env.emscripten_idb_delete\",\"env.emscripten_idb_exists\",\"env.emscripten_idb_load_blob\",\"env.emscripten_idb_store_blob\",\"env.SDL_Delay\",\"env.emscripten_scan_registers\",\"env.emscripten_lazy_load_code\",\"env.emscripten_fiber_swap\",\"wasi_snapshot_preview1.fd_sync\",\"env.__wasi_fd_sync\",\"env._emval_await\",\"env._dlopen_js\",\"env.__asyncjs__*\"].map(x=>x.split(\".\")[1]);for(var x in imports){(function(x){var original=imports[x];var sig=original.sig;if(typeof original==\"function\"){var isAsyncifyImport=ASYNCIFY_IMPORTS.indexOf(x)>=0||x.startsWith(\"__asyncjs__\")}})(x)}},instrumentWasmExports:function(exports){var ret={};for(var x in exports){(function(x){var original=exports[x];if(typeof original==\"function\"){ret[x]=function(){Asyncify.exportCallStack.push(x);try{return original.apply(null,arguments)}finally{if(!ABORT){var y=Asyncify.exportCallStack.pop();assert(y===x);Asyncify.maybeStopUnwind()}}}}else{ret[x]=original}})(x)}return ret},maybeStopUnwind:function(){if(Asyncify.currData&&Asyncify.state===Asyncify.State.Unwinding&&Asyncify.exportCallStack.length===0){Asyncify.state=Asyncify.State.Normal;runAndAbortIfError(_asyncify_stop_unwind);if(typeof Fibers!=\"undefined\"){Fibers.trampoline()}}},whenDone:function(){return new Promise((resolve,reject)=>{Asyncify.asyncPromiseHandlers={resolve:resolve,reject:reject}})},allocateData:function(){var ptr=_malloc(12+Asyncify.StackSize);Asyncify.setDataHeader(ptr,ptr+12,Asyncify.StackSize);Asyncify.setDataRewindFunc(ptr);return ptr},setDataHeader:function(ptr,stack,stackSize){HEAP32[ptr>>2]=stack;HEAP32[ptr+4>>2]=stack+stackSize},setDataRewindFunc:function(ptr){var bottomOfCallStack=Asyncify.exportCallStack[0];var rewindId=Asyncify.getCallStackId(bottomOfCallStack);HEAP32[ptr+8>>2]=rewindId},getDataRewindFunc:function(ptr){var id=HEAP32[ptr+8>>2];var name=Asyncify.callStackIdToName[id];var func=Module[\"asm\"][name];return func},doRewind:function(ptr){var start=Asyncify.getDataRewindFunc(ptr);return start()},handleSleep:function(startAsync){if(ABORT)return;if(Asyncify.state===Asyncify.State.Normal){var reachedCallback=false;var reachedAfterCallback=false;startAsync(handleSleepReturnValue=>{if(ABORT)return;Asyncify.handleSleepReturnValue=handleSleepReturnValue||0;reachedCallback=true;if(!reachedAfterCallback){return}Asyncify.state=Asyncify.State.Rewinding;runAndAbortIfError(()=>_asyncify_start_rewind(Asyncify.currData));if(typeof Browser!=\"undefined\"&&Browser.mainLoop.func){Browser.mainLoop.resume()}var asyncWasmReturnValue,isError=false;try{asyncWasmReturnValue=Asyncify.doRewind(Asyncify.currData)}catch(err){asyncWasmReturnValue=err;isError=true}var handled=false;if(!Asyncify.currData){var asyncPromiseHandlers=Asyncify.asyncPromiseHandlers;if(asyncPromiseHandlers){Asyncify.asyncPromiseHandlers=null;(isError?asyncPromiseHandlers.reject:asyncPromiseHandlers.resolve)(asyncWasmReturnValue);handled=true}}if(isError&&!handled){throw asyncWasmReturnValue}});reachedAfterCallback=true;if(!reachedCallback){Asyncify.state=Asyncify.State.Unwinding;Asyncify.currData=Asyncify.allocateData();if(typeof Browser!=\"undefined\"&&Browser.mainLoop.func){Browser.mainLoop.pause()}runAndAbortIfError(()=>_asyncify_start_unwind(Asyncify.currData))}}else if(Asyncify.state===Asyncify.State.Rewinding){Asyncify.state=Asyncify.State.Normal;runAndAbortIfError(_asyncify_stop_rewind);_free(Asyncify.currData);Asyncify.currData=null;Asyncify.sleepCallbacks.forEach(func=>callUserCallback(func))}else{abort(\"invalid state: \"+Asyncify.state)}return Asyncify.handleSleepReturnValue},handleAsync:function(startAsync){return Asyncify.handleSleep(wakeUp=>{startAsync().then(wakeUp)})}};function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";args1.push(\"Asyncify\");args2.push(Asyncify);invokerFnBody+=\"function onDone(\"+(returns?\"rv\":\"\")+\") {\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";invokerFnBody+=\"return Asyncify.currData ? Asyncify.whenDone().then(onDone) : onDone(\"+(returns?\"rv\":\"\")+\");\\n\";invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAPU32[firstElement+i*4>>2])}return array}function __embind_register_class_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,fn){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}if(methodName.startsWith(\"@@\")){methodName=Symbol[methodName.substring(2)]}var proto=classType.registeredClass.constructor;if(undefined===proto[methodName]){unboundTypesHandler.argCount=argCount-1;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-1]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));var func=craftInvokerFunction(humanName,invokerArgsArray,null,rawInvoker,fn);if(undefined===proto[methodName].overloadTable){func.argCount=argCount-1;proto[methodName]=func}else{proto[methodName].overloadTable[argCount-1]=func}return[]});return[]})}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){assert(argCount>0);var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=\"constructor \"+classType.name;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\"+(argCount-1)+\") for class '\"+classType.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\")}classType.registeredClass.constructor_body[argCount-1]=()=>{throwUnboundTypeError(\"Cannot construct \"+classType.name+\" due to unbound types\",rawArgTypes)};whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){argTypes.splice(1,0,null);classType.registeredClass.constructor_body[argCount-1]=craftInvokerFunction(humanName,argTypes,null,invoker,rawConstructor);return[]});return[]})}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;if(methodName.startsWith(\"@@\")){methodName=Symbol[methodName.substring(2)]}if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]});return[]})}function validateThis(this_,classType,humanName){if(!(this_ instanceof Object)){throwBindingError(humanName+' with invalid \"this\": '+this_)}if(!(this_ instanceof classType.registeredClass.constructor)){throwBindingError(humanName+' incompatible with \"this\" of type '+this_.constructor.name)}if(!this_.$$.ptr){throwBindingError(\"cannot call emscripten binding method \"+humanName+\" on deleted object\")}return upcastPointer(this_.$$.ptr,this_.$$.ptrType.registeredClass,classType.registeredClass)}function __embind_register_class_property(classType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){fieldName=readLatin1String(fieldName);getter=embind__requireFunction(getterSignature,getter);whenDependentTypesAreResolved([],[classType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+fieldName;var desc={get:function(){throwUnboundTypeError(\"Cannot access \"+humanName+\" due to unbound types\",[getterReturnType,setterArgumentType])},enumerable:true,configurable:true};if(setter){desc.set=()=>{throwUnboundTypeError(\"Cannot access \"+humanName+\" due to unbound types\",[getterReturnType,setterArgumentType])}}else{desc.set=v=>{throwBindingError(humanName+\" is a read-only property\")}}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);whenDependentTypesAreResolved([],setter?[getterReturnType,setterArgumentType]:[getterReturnType],function(types){var getterReturnType=types[0];var desc={get:function(){var ptr=validateThis(this,classType,humanName+\" getter\");return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))},enumerable:true};if(setter){setter=embind__requireFunction(setterSignature,setter);var setterArgumentType=types[1];desc.set=function(v){var ptr=validateThis(this,classType,humanName+\" setter\");var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,v));runDestructors(destructors)}}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);return[]});return[]})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}var Emval={toValue:handle=>{if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value},toHandle:value=>{switch(value){case undefined:return 1;case null:return 2;case true:return 3;case false:return 4;default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}};function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(handle){var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":function(destructors,value){return Emval.toHandle(value)},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function enumReadValueFromPointer(name,shift,signed){switch(shift){case 0:return function(pointer){var heap=signed?HEAP8:HEAPU8;return this[\"fromWireType\"](heap[pointer])};case 1:return function(pointer){var heap=signed?HEAP16:HEAPU16;return this[\"fromWireType\"](heap[pointer>>1])};case 2:return function(pointer){var heap=signed?HEAP32:HEAPU32;return this[\"fromWireType\"](heap[pointer>>2])};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_enum(rawType,name,size,isSigned){var shift=getShiftFromSize(size);name=readLatin1String(name);function ctor(){}ctor.values={};registerType(rawType,{name:name,constructor:ctor,\"fromWireType\":function(c){return this.constructor.values[c]},\"toWireType\":function(destructors,c){return c.value},\"argPackAdvance\":8,\"readValueFromPointer\":enumReadValueFromPointer(name,shift,isSigned),destructorFunction:null});exposePublicSymbol(name,ctor)}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl}function __embind_register_enum_value(rawEnumType,name,enumValue){var enumType=requireRegisteredType(rawEnumType,\"enum\");name=readLatin1String(name);var Enum=enumType.constructor;var Value=Object.create(enumType.constructor.prototype,{value:{value:enumValue},constructor:{value:createNamedFunction(enumType.name+\"_\"+name,function(){})}});Enum.values[enumValue]=Value;Enum[name]=Value}function embindRepr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 3:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(value){return value},\"toWireType\":function(destructors,value){return value},\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn){var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,function(){throwUnboundTypeError(\"Cannot call \"+name+\" due to unbound types\",argTypes)},argCount-1);whenDependentTypesAreResolved([],argTypes,function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn),argCount-1);return[]})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=value=>value<<bitshift>>>bitshift}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_smart_ptr(rawType,rawPointeeType,name,sharingPolicy,getPointeeSignature,rawGetPointee,constructorSignature,rawConstructor,shareSignature,rawShare,destructorSignature,rawDestructor){name=readLatin1String(name);rawGetPointee=embind__requireFunction(getPointeeSignature,rawGetPointee);rawConstructor=embind__requireFunction(constructorSignature,rawConstructor);rawShare=embind__requireFunction(shareSignature,rawShare);rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);whenDependentTypesAreResolved([rawType],[rawPointeeType],function(pointeeType){pointeeType=pointeeType[0];var registeredPointer=new RegisteredPointer(name,pointeeType.registeredClass,false,false,true,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor);return[registeredPointer]})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var payload=value+4;var str;if(stdStringIsUTF8){var decodeStartPtr=payload;for(var i=0;i<=length;++i){var currentBytePtr=payload+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[payload+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var length;var valueIsOfTypeString=typeof value==\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){length=lengthBytesUTF8(value)}else{length=value.length}var base=_malloc(4+length+1);var ptr=base+4;HEAPU32[base>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+i]=value[i]}}}if(destructors!==null){destructors.push(_free,base)}return base},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}var UTF16Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function UTF16ToString(ptr,maxBytesToRead){var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder){return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr))}else{var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str}}function stringToUTF16(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr}function lengthBytesUTF16(str){return str.length*2}function UTF32ToString(ptr,maxBytesToRead){var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str}function stringToUTF32(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr}function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=()=>HEAPU16;shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=()=>HEAPU32;shift=2}registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":function(destructors,value){if(!(typeof value==\"string\")){throwBindingError(\"Cannot pass non-string to C++ string type \"+name)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_value_object(rawType,name,constructorSignature,rawConstructor,destructorSignature,rawDestructor){structRegistrations[rawType]={name:readLatin1String(name),rawConstructor:embind__requireFunction(constructorSignature,rawConstructor),rawDestructor:embind__requireFunction(destructorSignature,rawDestructor),fields:[]}}function __embind_register_value_object_field(structType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){structRegistrations[structType].fields.push({fieldName:readLatin1String(fieldName),getterReturnType:getterReturnType,getter:embind__requireFunction(getterSignature,getter),getterContext:getterContext,setterArgumentType:setterArgumentType,setter:embind__requireFunction(setterSignature,setter),setterContext:setterContext})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":function(){return undefined},\"toWireType\":function(destructors,o){return undefined}})}var nowIsMonotonic=true;function __emscripten_get_now_is_monotonic(){return nowIsMonotonic}function __emval_as(handle,returnType,destructorsRef){handle=Emval.toValue(handle);returnType=requireRegisteredType(returnType,\"emval::as\");var destructors=[];var rd=Emval.toHandle(destructors);HEAPU32[destructorsRef>>2]=rd;return returnType[\"toWireType\"](destructors,handle)}function __emval_await(promise){return Asyncify.handleAsync(()=>{promise=Emval.toValue(promise);return promise.then(Emval.toHandle)})}function emval_lookupTypes(argCount,argTypes){var a=new Array(argCount);for(var i=0;i<argCount;++i){a[i]=requireRegisteredType(HEAPU32[argTypes+i*POINTER_SIZE>>2],\"parameter \"+i)}return a}function __emval_call(handle,argCount,argTypes,argv){handle=Emval.toValue(handle);var types=emval_lookupTypes(argCount,argTypes);var args=new Array(argCount);for(var i=0;i<argCount;++i){var type=types[i];args[i]=type[\"readValueFromPointer\"](argv);argv+=type[\"argPackAdvance\"]}var rv=handle.apply(undefined,args);return Emval.toHandle(rv)}function emval_allocateDestructors(destructorsRef){var destructors=[];HEAPU32[destructorsRef>>2]=Emval.toHandle(destructors);return destructors}var emval_symbols={};function getStringOrSymbol(address){var symbol=emval_symbols[address];if(symbol===undefined){return readLatin1String(address)}return symbol}var emval_methodCallers=[];function __emval_call_method(caller,handle,methodName,destructorsRef,args){caller=emval_methodCallers[caller];handle=Emval.toValue(handle);methodName=getStringOrSymbol(methodName);return caller(handle,methodName,emval_allocateDestructors(destructorsRef),args)}function __emval_call_void_method(caller,handle,methodName,args){caller=emval_methodCallers[caller];handle=Emval.toValue(handle);methodName=getStringOrSymbol(methodName);caller(handle,methodName,null,args)}function __emval_equals(first,second){first=Emval.toValue(first);second=Emval.toValue(second);return first==second}function emval_get_global(){if(typeof globalThis==\"object\"){return globalThis}return function(){return Function}()(\"return this\")()}function __emval_get_global(name){if(name===0){return Emval.toHandle(emval_get_global())}else{name=getStringOrSymbol(name);return Emval.toHandle(emval_get_global()[name])}}function emval_addMethodCaller(caller){var id=emval_methodCallers.length;emval_methodCallers.push(caller);return id}var emval_registeredMethods=[];function __emval_get_method_caller(argCount,argTypes){var types=emval_lookupTypes(argCount,argTypes);var retType=types[0];var signatureName=retType.name+\"_$\"+types.slice(1).map(function(t){return t.name}).join(\"_\")+\"$\";var returnId=emval_registeredMethods[signatureName];if(returnId!==undefined){return returnId}var params=[\"retType\"];var args=[retType];var argsList=\"\";for(var i=0;i<argCount-1;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;params.push(\"argType\"+i);args.push(types[1+i])}var functionName=makeLegalFunctionName(\"methodCaller_\"+signatureName);var functionBody=\"return function \"+functionName+\"(handle, name, destructors, args) {\\n\";var offset=0;for(var i=0;i<argCount-1;++i){functionBody+=\"    var arg\"+i+\" = argType\"+i+\".readValueFromPointer(args\"+(offset?\"+\"+offset:\"\")+\");\\n\";offset+=types[i+1][\"argPackAdvance\"]}functionBody+=\"    var rv = handle[name](\"+argsList+\");\\n\";for(var i=0;i<argCount-1;++i){if(types[i+1][\"deleteObject\"]){functionBody+=\"    argType\"+i+\".deleteObject(arg\"+i+\");\\n\"}}if(!retType.isVoid){functionBody+=\"    return retType.toWireType(destructors, rv);\\n\"}functionBody+=\"};\\n\";params.push(functionBody);var invokerFunction=new_(Function,params).apply(null,args);returnId=emval_addMethodCaller(invokerFunction);emval_registeredMethods[signatureName]=returnId;return returnId}function __emval_get_module_property(name){name=getStringOrSymbol(name);return Emval.toHandle(Module[name])}function __emval_get_property(handle,key){handle=Emval.toValue(handle);key=Emval.toValue(key);return Emval.toHandle(handle[key])}function __emval_incref(handle){if(handle>4){emval_handle_array[handle].refcount+=1}}function __emval_instanceof(object,constructor){object=Emval.toValue(object);constructor=Emval.toValue(constructor);return object instanceof constructor}function craftEmvalAllocator(argCount){var argsList=\"\";for(var i=0;i<argCount;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i}var getMemory=()=>HEAPU32;var functionBody=\"return function emval_allocator_\"+argCount+\"(constructor, argTypes, args) {\\n\"+\"  var HEAPU32 = getMemory();\\n\";for(var i=0;i<argCount;++i){functionBody+=\"var argType\"+i+\" = requireRegisteredType(HEAPU32[((argTypes)>>2)], 'parameter \"+i+\"');\\n\"+\"var arg\"+i+\" = argType\"+i+\".readValueFromPointer(args);\\n\"+\"args += argType\"+i+\"['argPackAdvance'];\\n\"+\"argTypes += 4;\\n\"}functionBody+=\"var obj = new constructor(\"+argsList+\");\\n\"+\"return valueToHandle(obj);\\n\"+\"}\\n\";return new Function(\"requireRegisteredType\",\"Module\",\"valueToHandle\",\"getMemory\",functionBody)(requireRegisteredType,Module,Emval.toHandle,getMemory)}var emval_newers={};function __emval_new(handle,argCount,argTypes,args){handle=Emval.toValue(handle);var newer=emval_newers[argCount];if(!newer){newer=craftEmvalAllocator(argCount);emval_newers[argCount]=newer}return newer(handle,argTypes,args)}function __emval_new_array(){return Emval.toHandle([])}function __emval_new_cstring(v){return Emval.toHandle(getStringOrSymbol(v))}function __emval_new_object(){return Emval.toHandle({})}function __emval_run_destructors(handle){var destructors=Emval.toValue(handle);runDestructors(destructors);__emval_decref(handle)}function __emval_set_property(handle,key,value){handle=Emval.toValue(handle);key=Emval.toValue(key);value=Emval.toValue(value);handle[key]=value}function __emval_take_value(type,arg){type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](arg);return Emval.toHandle(v)}function _abort(){abort(\"\")}var JSEvents={inEventHandler:0,removeAllEventListeners:function(){for(var i=JSEvents.eventHandlers.length-1;i>=0;--i){JSEvents._removeHandler(i)}JSEvents.eventHandlers=[];JSEvents.deferredCalls=[]},registerRemoveEventListeners:function(){if(!JSEvents.removeEventListenersRegistered){__ATEXIT__.push(JSEvents.removeAllEventListeners);JSEvents.removeEventListenersRegistered=true}},deferredCalls:[],deferCall:function(targetFunction,precedence,argsList){function arraysHaveEqualContent(arrA,arrB){if(arrA.length!=arrB.length)return false;for(var i in arrA){if(arrA[i]!=arrB[i])return false}return true}for(var i in JSEvents.deferredCalls){var call=JSEvents.deferredCalls[i];if(call.targetFunction==targetFunction&&arraysHaveEqualContent(call.argsList,argsList)){return}}JSEvents.deferredCalls.push({targetFunction:targetFunction,precedence:precedence,argsList:argsList});JSEvents.deferredCalls.sort(function(x,y){return x.precedence<y.precedence})},removeDeferredCalls:function(targetFunction){for(var i=0;i<JSEvents.deferredCalls.length;++i){if(JSEvents.deferredCalls[i].targetFunction==targetFunction){JSEvents.deferredCalls.splice(i,1);--i}}},canPerformEventHandlerRequests:function(){return JSEvents.inEventHandler&&JSEvents.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!JSEvents.canPerformEventHandlerRequests()){return}for(var i=0;i<JSEvents.deferredCalls.length;++i){var call=JSEvents.deferredCalls[i];JSEvents.deferredCalls.splice(i,1);--i;call.targetFunction.apply(null,call.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(target,eventTypeString){for(var i=0;i<JSEvents.eventHandlers.length;++i){if(JSEvents.eventHandlers[i].target==target&&(!eventTypeString||eventTypeString==JSEvents.eventHandlers[i].eventTypeString)){JSEvents._removeHandler(i--)}}},_removeHandler:function(i){var h=JSEvents.eventHandlers[i];h.target.removeEventListener(h.eventTypeString,h.eventListenerFunc,h.useCapture);JSEvents.eventHandlers.splice(i,1)},registerOrRemoveHandler:function(eventHandler){var jsEventHandler=function jsEventHandler(event){++JSEvents.inEventHandler;JSEvents.currentEventHandler=eventHandler;JSEvents.runDeferredCalls();eventHandler.handlerFunc(event);JSEvents.runDeferredCalls();--JSEvents.inEventHandler};if(eventHandler.callbackfunc){eventHandler.eventListenerFunc=jsEventHandler;eventHandler.target.addEventListener(eventHandler.eventTypeString,jsEventHandler,eventHandler.useCapture);JSEvents.eventHandlers.push(eventHandler);JSEvents.registerRemoveEventListeners()}else{for(var i=0;i<JSEvents.eventHandlers.length;++i){if(JSEvents.eventHandlers[i].target==eventHandler.target&&JSEvents.eventHandlers[i].eventTypeString==eventHandler.eventTypeString){JSEvents._removeHandler(i--)}}}},getNodeNameForTarget:function(target){if(!target)return\"\";if(target==window)return\"#window\";if(target==screen)return\"#screen\";return target&&target.nodeName?target.nodeName:\"\"},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function maybeCStringToJsString(cString){return cString>2?UTF8ToString(cString):cString}var specialHTMLTargets=[0,typeof document!=\"undefined\"?document:0,typeof window!=\"undefined\"?window:0];function findEventTarget(target){target=maybeCStringToJsString(target);var domElement=specialHTMLTargets[target]||(typeof document!=\"undefined\"?document.querySelector(target):undefined);return domElement}function findCanvasEventTarget(target){return findEventTarget(target)}function _emscripten_get_canvas_element_size(target,width,height){var canvas=findCanvasEventTarget(target);if(!canvas)return-4;HEAP32[width>>2]=canvas.width;HEAP32[height>>2]=canvas.height}var _emscripten_get_now;_emscripten_get_now=()=>performance.now();function __webgl_enable_ANGLE_instanced_arrays(ctx){var ext=ctx.getExtension(\"ANGLE_instanced_arrays\");if(ext){ctx[\"vertexAttribDivisor\"]=function(index,divisor){ext[\"vertexAttribDivisorANGLE\"](index,divisor)};ctx[\"drawArraysInstanced\"]=function(mode,first,count,primcount){ext[\"drawArraysInstancedANGLE\"](mode,first,count,primcount)};ctx[\"drawElementsInstanced\"]=function(mode,count,type,indices,primcount){ext[\"drawElementsInstancedANGLE\"](mode,count,type,indices,primcount)};return 1}}function __webgl_enable_OES_vertex_array_object(ctx){var ext=ctx.getExtension(\"OES_vertex_array_object\");if(ext){ctx[\"createVertexArray\"]=function(){return ext[\"createVertexArrayOES\"]()};ctx[\"deleteVertexArray\"]=function(vao){ext[\"deleteVertexArrayOES\"](vao)};ctx[\"bindVertexArray\"]=function(vao){ext[\"bindVertexArrayOES\"](vao)};ctx[\"isVertexArray\"]=function(vao){return ext[\"isVertexArrayOES\"](vao)};return 1}}function __webgl_enable_WEBGL_draw_buffers(ctx){var ext=ctx.getExtension(\"WEBGL_draw_buffers\");if(ext){ctx[\"drawBuffers\"]=function(n,bufs){ext[\"drawBuffersWEBGL\"](n,bufs)};return 1}}function __webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(ctx){return!!(ctx.dibvbi=ctx.getExtension(\"WEBGL_draw_instanced_base_vertex_base_instance\"))}function __webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(ctx){return!!(ctx.mdibvbi=ctx.getExtension(\"WEBGL_multi_draw_instanced_base_vertex_base_instance\"))}function __webgl_enable_WEBGL_multi_draw(ctx){return!!(ctx.multiDrawWebgl=ctx.getExtension(\"WEBGL_multi_draw\"))}var GL={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:[],offscreenCanvases:{},queries:[],samplers:[],transformFeedbacks:[],syncs:[],stringCache:{},stringiCache:{},unpackAlignment:4,recordError:function recordError(errorCode){if(!GL.lastError){GL.lastError=errorCode}},getNewId:function(table){var ret=GL.counter++;for(var i=table.length;i<ret;i++){table[i]=null}return ret},getSource:function(shader,count,string,length){var source=\"\";for(var i=0;i<count;++i){var len=length?HEAP32[length+i*4>>2]:-1;source+=UTF8ToString(HEAP32[string+i*4>>2],len<0?undefined:len)}return source},createContext:function(canvas,webGLContextAttributes){if(!canvas.getContextSafariWebGL2Fixed){canvas.getContextSafariWebGL2Fixed=canvas.getContext;function fixedGetContext(ver,attrs){var gl=canvas.getContextSafariWebGL2Fixed(ver,attrs);return ver==\"webgl\"==gl instanceof WebGLRenderingContext?gl:null}canvas.getContext=fixedGetContext}var ctx=webGLContextAttributes.majorVersion>1?canvas.getContext(\"webgl2\",webGLContextAttributes):canvas.getContext(\"webgl\",webGLContextAttributes);if(!ctx)return 0;var handle=GL.registerContext(ctx,webGLContextAttributes);return handle},registerContext:function(ctx,webGLContextAttributes){var handle=GL.getNewId(GL.contexts);var context={handle:handle,attributes:webGLContextAttributes,version:webGLContextAttributes.majorVersion,GLctx:ctx};if(ctx.canvas)ctx.canvas.GLctxObject=context;GL.contexts[handle]=context;if(typeof webGLContextAttributes.enableExtensionsByDefault==\"undefined\"||webGLContextAttributes.enableExtensionsByDefault){GL.initExtensions(context)}return handle},makeContextCurrent:function(contextHandle){GL.currentContext=GL.contexts[contextHandle];Module.ctx=GLctx=GL.currentContext&&GL.currentContext.GLctx;return!(contextHandle&&!GLctx)},getContext:function(contextHandle){return GL.contexts[contextHandle]},deleteContext:function(contextHandle){if(GL.currentContext===GL.contexts[contextHandle])GL.currentContext=null;if(typeof JSEvents==\"object\")JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas);if(GL.contexts[contextHandle]&&GL.contexts[contextHandle].GLctx.canvas)GL.contexts[contextHandle].GLctx.canvas.GLctxObject=undefined;GL.contexts[contextHandle]=null},initExtensions:function(context){if(!context)context=GL.currentContext;if(context.initExtensionsDone)return;context.initExtensionsDone=true;var GLctx=context.GLctx;__webgl_enable_ANGLE_instanced_arrays(GLctx);__webgl_enable_OES_vertex_array_object(GLctx);__webgl_enable_WEBGL_draw_buffers(GLctx);__webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(GLctx);__webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(GLctx);if(context.version>=2){GLctx.disjointTimerQueryExt=GLctx.getExtension(\"EXT_disjoint_timer_query_webgl2\")}if(context.version<2||!GLctx.disjointTimerQueryExt){GLctx.disjointTimerQueryExt=GLctx.getExtension(\"EXT_disjoint_timer_query\")}__webgl_enable_WEBGL_multi_draw(GLctx);var exts=GLctx.getSupportedExtensions()||[];exts.forEach(function(ext){if(!ext.includes(\"lose_context\")&&!ext.includes(\"debug\")){GLctx.getExtension(ext)}})}};function _emscripten_glActiveTexture(x0){GLctx[\"activeTexture\"](x0)}function _emscripten_glAttachShader(program,shader){GLctx.attachShader(GL.programs[program],GL.shaders[shader])}function _emscripten_glBindAttribLocation(program,index,name){GLctx.bindAttribLocation(GL.programs[program],index,UTF8ToString(name))}function _emscripten_glBindBuffer(target,buffer){if(target==35051){GLctx.currentPixelPackBufferBinding=buffer}else if(target==35052){GLctx.currentPixelUnpackBufferBinding=buffer}GLctx.bindBuffer(target,GL.buffers[buffer])}function _emscripten_glBindFramebuffer(target,framebuffer){GLctx.bindFramebuffer(target,GL.framebuffers[framebuffer])}function _emscripten_glBindRenderbuffer(target,renderbuffer){GLctx.bindRenderbuffer(target,GL.renderbuffers[renderbuffer])}function _emscripten_glBindTexture(target,texture){GLctx.bindTexture(target,GL.textures[texture])}function _emscripten_glBindVertexArray(vao){GLctx[\"bindVertexArray\"](GL.vaos[vao])}function _emscripten_glBindVertexArrayOES(vao){GLctx[\"bindVertexArray\"](GL.vaos[vao])}function _emscripten_glBlendColor(x0,x1,x2,x3){GLctx[\"blendColor\"](x0,x1,x2,x3)}function _emscripten_glBlendEquation(x0){GLctx[\"blendEquation\"](x0)}function _emscripten_glBlendEquationSeparate(x0,x1){GLctx[\"blendEquationSeparate\"](x0,x1)}function _emscripten_glBlendFunc(x0,x1){GLctx[\"blendFunc\"](x0,x1)}function _emscripten_glBlitFramebuffer(x0,x1,x2,x3,x4,x5,x6,x7,x8,x9){GLctx[\"blitFramebuffer\"](x0,x1,x2,x3,x4,x5,x6,x7,x8,x9)}function _emscripten_glBufferData(target,size,data,usage){if(GL.currentContext.version>=2){if(data&&size){GLctx.bufferData(target,HEAPU8,usage,data,size)}else{GLctx.bufferData(target,size,usage)}}else{GLctx.bufferData(target,data?HEAPU8.subarray(data,data+size):size,usage)}}function _emscripten_glCheckFramebufferStatus(x0){return GLctx[\"checkFramebufferStatus\"](x0)}function _emscripten_glClear(x0){GLctx[\"clear\"](x0)}function _emscripten_glClearColor(x0,x1,x2,x3){GLctx[\"clearColor\"](x0,x1,x2,x3)}function _emscripten_glClearStencil(x0){GLctx[\"clearStencil\"](x0)}function _emscripten_glColorMask(red,green,blue,alpha){GLctx.colorMask(!!red,!!green,!!blue,!!alpha)}function _emscripten_glCompileShader(shader){GLctx.compileShader(GL.shaders[shader])}function _emscripten_glCopyTexSubImage2D(x0,x1,x2,x3,x4,x5,x6,x7){GLctx[\"copyTexSubImage2D\"](x0,x1,x2,x3,x4,x5,x6,x7)}function _emscripten_glCreateProgram(){var id=GL.getNewId(GL.programs);var program=GLctx.createProgram();program.name=id;program.maxUniformLength=program.maxAttributeLength=program.maxUniformBlockNameLength=0;program.uniformIdCounter=1;GL.programs[id]=program;return id}function _emscripten_glCreateShader(shaderType){var id=GL.getNewId(GL.shaders);GL.shaders[id]=GLctx.createShader(shaderType);return id}function _emscripten_glDeleteBuffers(n,buffers){for(var i=0;i<n;i++){var id=HEAP32[buffers+i*4>>2];var buffer=GL.buffers[id];if(!buffer)continue;GLctx.deleteBuffer(buffer);buffer.name=0;GL.buffers[id]=null;if(id==GLctx.currentPixelPackBufferBinding)GLctx.currentPixelPackBufferBinding=0;if(id==GLctx.currentPixelUnpackBufferBinding)GLctx.currentPixelUnpackBufferBinding=0}}function _emscripten_glDeleteFramebuffers(n,framebuffers){for(var i=0;i<n;++i){var id=HEAP32[framebuffers+i*4>>2];var framebuffer=GL.framebuffers[id];if(!framebuffer)continue;GLctx.deleteFramebuffer(framebuffer);framebuffer.name=0;GL.framebuffers[id]=null}}function _emscripten_glDeleteProgram(id){if(!id)return;var program=GL.programs[id];if(!program){GL.recordError(1281);return}GLctx.deleteProgram(program);program.name=0;GL.programs[id]=null}function _emscripten_glDeleteRenderbuffers(n,renderbuffers){for(var i=0;i<n;i++){var id=HEAP32[renderbuffers+i*4>>2];var renderbuffer=GL.renderbuffers[id];if(!renderbuffer)continue;GLctx.deleteRenderbuffer(renderbuffer);renderbuffer.name=0;GL.renderbuffers[id]=null}}function _emscripten_glDeleteShader(id){if(!id)return;var shader=GL.shaders[id];if(!shader){GL.recordError(1281);return}GLctx.deleteShader(shader);GL.shaders[id]=null}function _emscripten_glDeleteSync(id){if(!id)return;var sync=GL.syncs[id];if(!sync){GL.recordError(1281);return}GLctx.deleteSync(sync);sync.name=0;GL.syncs[id]=null}function _emscripten_glDeleteTextures(n,textures){for(var i=0;i<n;i++){var id=HEAP32[textures+i*4>>2];var texture=GL.textures[id];if(!texture)continue;GLctx.deleteTexture(texture);texture.name=0;GL.textures[id]=null}}function _emscripten_glDeleteVertexArrays(n,vaos){for(var i=0;i<n;i++){var id=HEAP32[vaos+i*4>>2];GLctx[\"deleteVertexArray\"](GL.vaos[id]);GL.vaos[id]=null}}function _emscripten_glDeleteVertexArraysOES(n,vaos){for(var i=0;i<n;i++){var id=HEAP32[vaos+i*4>>2];GLctx[\"deleteVertexArray\"](GL.vaos[id]);GL.vaos[id]=null}}function _emscripten_glDepthMask(flag){GLctx.depthMask(!!flag)}function _emscripten_glDisable(x0){GLctx[\"disable\"](x0)}function _emscripten_glDisableVertexAttribArray(index){GLctx.disableVertexAttribArray(index)}function _emscripten_glDrawArrays(mode,first,count){GLctx.drawArrays(mode,first,count)}function _emscripten_glDrawElements(mode,count,type,indices){GLctx.drawElements(mode,count,type,indices)}function _emscripten_glEnable(x0){GLctx[\"enable\"](x0)}function _emscripten_glEnableVertexAttribArray(index){GLctx.enableVertexAttribArray(index)}function _emscripten_glFenceSync(condition,flags){var sync=GLctx.fenceSync(condition,flags);if(sync){var id=GL.getNewId(GL.syncs);sync.name=id;GL.syncs[id]=sync;return id}return 0}function _emscripten_glFinish(){GLctx[\"finish\"]()}function _emscripten_glFlush(){GLctx[\"flush\"]()}function _emscripten_glFramebufferRenderbuffer(target,attachment,renderbuffertarget,renderbuffer){GLctx.framebufferRenderbuffer(target,attachment,renderbuffertarget,GL.renderbuffers[renderbuffer])}function _emscripten_glFramebufferTexture2D(target,attachment,textarget,texture,level){GLctx.framebufferTexture2D(target,attachment,textarget,GL.textures[texture],level)}function __glGenObject(n,buffers,createFunction,objectTable){for(var i=0;i<n;i++){var buffer=GLctx[createFunction]();var id=buffer&&GL.getNewId(objectTable);if(buffer){buffer.name=id;objectTable[id]=buffer}else{GL.recordError(1282)}HEAP32[buffers+i*4>>2]=id}}function _emscripten_glGenBuffers(n,buffers){__glGenObject(n,buffers,\"createBuffer\",GL.buffers)}function _emscripten_glGenFramebuffers(n,ids){__glGenObject(n,ids,\"createFramebuffer\",GL.framebuffers)}function _emscripten_glGenRenderbuffers(n,renderbuffers){__glGenObject(n,renderbuffers,\"createRenderbuffer\",GL.renderbuffers)}function _emscripten_glGenTextures(n,textures){__glGenObject(n,textures,\"createTexture\",GL.textures)}function _emscripten_glGenVertexArrays(n,arrays){__glGenObject(n,arrays,\"createVertexArray\",GL.vaos)}function _emscripten_glGenVertexArraysOES(n,arrays){__glGenObject(n,arrays,\"createVertexArray\",GL.vaos)}function _emscripten_glGetAttribLocation(program,name){return GLctx.getAttribLocation(GL.programs[program],UTF8ToString(name))}function _emscripten_glGetBufferParameteriv(target,value,data){if(!data){GL.recordError(1281);return}HEAP32[data>>2]=GLctx.getBufferParameter(target,value)}function _emscripten_glGetError(){var error=GLctx.getError()||GL.lastError;GL.lastError=0;return error}function _emscripten_glGetFramebufferAttachmentParameteriv(target,attachment,pname,params){var result=GLctx.getFramebufferAttachmentParameter(target,attachment,pname);if(result instanceof WebGLRenderbuffer||result instanceof WebGLTexture){result=result.name|0}HEAP32[params>>2]=result}function writeI53ToI64(ptr,num){HEAPU32[ptr>>2]=num;HEAPU32[ptr+4>>2]=(num-HEAPU32[ptr>>2])/4294967296}function emscriptenWebGLGet(name_,p,type){if(!p){GL.recordError(1281);return}var ret=undefined;switch(name_){case 36346:ret=1;break;case 36344:if(type!=0&&type!=1){GL.recordError(1280)}return;case 34814:case 36345:ret=0;break;case 34466:var formats=GLctx.getParameter(34467);ret=formats?formats.length:0;break;case 33309:if(GL.currentContext.version<2){GL.recordError(1282);return}var exts=GLctx.getSupportedExtensions()||[];ret=2*exts.length;break;case 33307:case 33308:if(GL.currentContext.version<2){GL.recordError(1280);return}ret=name_==33307?3:0;break}if(ret===undefined){var result=GLctx.getParameter(name_);switch(typeof result){case\"number\":ret=result;break;case\"boolean\":ret=result?1:0;break;case\"string\":GL.recordError(1280);return;case\"object\":if(result===null){switch(name_){case 34964:case 35725:case 34965:case 36006:case 36007:case 32873:case 34229:case 36662:case 36663:case 35053:case 35055:case 36010:case 35097:case 35869:case 32874:case 36389:case 35983:case 35368:case 34068:{ret=0;break}default:{GL.recordError(1280);return}}}else if(result instanceof Float32Array||result instanceof Uint32Array||result instanceof Int32Array||result instanceof Array){for(var i=0;i<result.length;++i){switch(type){case 0:HEAP32[p+i*4>>2]=result[i];break;case 2:HEAPF32[p+i*4>>2]=result[i];break;case 4:HEAP8[p+i>>0]=result[i]?1:0;break}}return}else{try{ret=result.name|0}catch(e){GL.recordError(1280);err(\"GL_INVALID_ENUM in glGet\"+type+\"v: Unknown object returned from WebGL getParameter(\"+name_+\")! (error: \"+e+\")\");return}}break;default:GL.recordError(1280);err(\"GL_INVALID_ENUM in glGet\"+type+\"v: Native code calling glGet\"+type+\"v(\"+name_+\") and it returns \"+result+\" of type \"+typeof result+\"!\");return}}switch(type){case 1:writeI53ToI64(p,ret);break;case 0:HEAP32[p>>2]=ret;break;case 2:HEAPF32[p>>2]=ret;break;case 4:HEAP8[p>>0]=ret?1:0;break}}function _emscripten_glGetIntegerv(name_,p){emscriptenWebGLGet(name_,p,0)}function _emscripten_glGetProgramInfoLog(program,maxLength,length,infoLog){var log=GLctx.getProgramInfoLog(GL.programs[program]);if(log===null)log=\"(unknown error)\";var numBytesWrittenExclNull=maxLength>0&&infoLog?stringToUTF8(log,infoLog,maxLength):0;if(length)HEAP32[length>>2]=numBytesWrittenExclNull}function _emscripten_glGetProgramiv(program,pname,p){if(!p){GL.recordError(1281);return}if(program>=GL.counter){GL.recordError(1281);return}program=GL.programs[program];if(pname==35716){var log=GLctx.getProgramInfoLog(program);if(log===null)log=\"(unknown error)\";HEAP32[p>>2]=log.length+1}else if(pname==35719){if(!program.maxUniformLength){for(var i=0;i<GLctx.getProgramParameter(program,35718);++i){program.maxUniformLength=Math.max(program.maxUniformLength,GLctx.getActiveUniform(program,i).name.length+1)}}HEAP32[p>>2]=program.maxUniformLength}else if(pname==35722){if(!program.maxAttributeLength){for(var i=0;i<GLctx.getProgramParameter(program,35721);++i){program.maxAttributeLength=Math.max(program.maxAttributeLength,GLctx.getActiveAttrib(program,i).name.length+1)}}HEAP32[p>>2]=program.maxAttributeLength}else if(pname==35381){if(!program.maxUniformBlockNameLength){for(var i=0;i<GLctx.getProgramParameter(program,35382);++i){program.maxUniformBlockNameLength=Math.max(program.maxUniformBlockNameLength,GLctx.getActiveUniformBlockName(program,i).length+1)}}HEAP32[p>>2]=program.maxUniformBlockNameLength}else{HEAP32[p>>2]=GLctx.getProgramParameter(program,pname)}}function _emscripten_glGetRenderbufferParameteriv(target,pname,params){if(!params){GL.recordError(1281);return}HEAP32[params>>2]=GLctx.getRenderbufferParameter(target,pname)}function _emscripten_glGetShaderInfoLog(shader,maxLength,length,infoLog){var log=GLctx.getShaderInfoLog(GL.shaders[shader]);if(log===null)log=\"(unknown error)\";var numBytesWrittenExclNull=maxLength>0&&infoLog?stringToUTF8(log,infoLog,maxLength):0;if(length)HEAP32[length>>2]=numBytesWrittenExclNull}function _emscripten_glGetShaderPrecisionFormat(shaderType,precisionType,range,precision){var result=GLctx.getShaderPrecisionFormat(shaderType,precisionType);HEAP32[range>>2]=result.rangeMin;HEAP32[range+4>>2]=result.rangeMax;HEAP32[precision>>2]=result.precision}function _emscripten_glGetShaderiv(shader,pname,p){if(!p){GL.recordError(1281);return}if(pname==35716){var log=GLctx.getShaderInfoLog(GL.shaders[shader]);if(log===null)log=\"(unknown error)\";var logLength=log?log.length+1:0;HEAP32[p>>2]=logLength}else if(pname==35720){var source=GLctx.getShaderSource(GL.shaders[shader]);var sourceLength=source?source.length+1:0;HEAP32[p>>2]=sourceLength}else{HEAP32[p>>2]=GLctx.getShaderParameter(GL.shaders[shader],pname)}}function stringToNewUTF8(jsString){var length=lengthBytesUTF8(jsString)+1;var cString=_malloc(length);stringToUTF8(jsString,cString,length);return cString}function _emscripten_glGetString(name_){var ret=GL.stringCache[name_];if(!ret){switch(name_){case 7939:var exts=GLctx.getSupportedExtensions()||[];exts=exts.concat(exts.map(function(e){return\"GL_\"+e}));ret=stringToNewUTF8(exts.join(\" \"));break;case 7936:case 7937:case 37445:case 37446:var s=GLctx.getParameter(name_);if(!s){GL.recordError(1280)}ret=s&&stringToNewUTF8(s);break;case 7938:var glVersion=GLctx.getParameter(7938);if(GL.currentContext.version>=2)glVersion=\"OpenGL ES 3.0 (\"+glVersion+\")\";else{glVersion=\"OpenGL ES 2.0 (\"+glVersion+\")\"}ret=stringToNewUTF8(glVersion);break;case 35724:var glslVersion=GLctx.getParameter(35724);var ver_re=/^WebGL GLSL ES ([0-9]\\.[0-9][0-9]?)(?:$| .*)/;var ver_num=glslVersion.match(ver_re);if(ver_num!==null){if(ver_num[1].length==3)ver_num[1]=ver_num[1]+\"0\";glslVersion=\"OpenGL ES GLSL ES \"+ver_num[1]+\" (\"+glslVersion+\")\"}ret=stringToNewUTF8(glslVersion);break;default:GL.recordError(1280)}GL.stringCache[name_]=ret}return ret}function _emscripten_glGetStringi(name,index){if(GL.currentContext.version<2){GL.recordError(1282);return 0}var stringiCache=GL.stringiCache[name];if(stringiCache){if(index<0||index>=stringiCache.length){GL.recordError(1281);return 0}return stringiCache[index]}switch(name){case 7939:var exts=GLctx.getSupportedExtensions()||[];exts=exts.concat(exts.map(function(e){return\"GL_\"+e}));exts=exts.map(function(e){return stringToNewUTF8(e)});stringiCache=GL.stringiCache[name]=exts;if(index<0||index>=stringiCache.length){GL.recordError(1281);return 0}return stringiCache[index];default:GL.recordError(1280);return 0}}function jstoi_q(str){return parseInt(str)}function webglGetLeftBracePos(name){return name.slice(-1)==\"]\"&&name.lastIndexOf(\"[\")}function webglPrepareUniformLocationsBeforeFirstUse(program){var uniformLocsById=program.uniformLocsById,uniformSizeAndIdsByName=program.uniformSizeAndIdsByName,i,j;if(!uniformLocsById){program.uniformLocsById=uniformLocsById={};program.uniformArrayNamesById={};for(i=0;i<GLctx.getProgramParameter(program,35718);++i){var u=GLctx.getActiveUniform(program,i);var nm=u.name;var sz=u.size;var lb=webglGetLeftBracePos(nm);var arrayName=lb>0?nm.slice(0,lb):nm;var id=program.uniformIdCounter;program.uniformIdCounter+=sz;uniformSizeAndIdsByName[arrayName]=[sz,id];for(j=0;j<sz;++j){uniformLocsById[id]=j;program.uniformArrayNamesById[id++]=arrayName}}}}function _emscripten_glGetUniformLocation(program,name){name=UTF8ToString(name);if(program=GL.programs[program]){webglPrepareUniformLocationsBeforeFirstUse(program);var uniformLocsById=program.uniformLocsById;var arrayIndex=0;var uniformBaseName=name;var leftBrace=webglGetLeftBracePos(name);if(leftBrace>0){arrayIndex=jstoi_q(name.slice(leftBrace+1))>>>0;uniformBaseName=name.slice(0,leftBrace)}var sizeAndId=program.uniformSizeAndIdsByName[uniformBaseName];if(sizeAndId&&arrayIndex<sizeAndId[0]){arrayIndex+=sizeAndId[1];if(uniformLocsById[arrayIndex]=uniformLocsById[arrayIndex]||GLctx.getUniformLocation(program,name)){return arrayIndex}}}else{GL.recordError(1281)}return-1}function _emscripten_glIsEnabled(x0){return GLctx[\"isEnabled\"](x0)}function _emscripten_glIsTexture(id){var texture=GL.textures[id];if(!texture)return 0;return GLctx.isTexture(texture)}function _emscripten_glLineWidth(x0){GLctx[\"lineWidth\"](x0)}function _emscripten_glLinkProgram(program){program=GL.programs[program];GLctx.linkProgram(program);program.uniformLocsById=0;program.uniformSizeAndIdsByName={}}function _emscripten_glPixelStorei(pname,param){if(pname==3317){GL.unpackAlignment=param}GLctx.pixelStorei(pname,param)}function computeUnpackAlignedImageSize(width,height,sizePerPixel,alignment){function roundedToNextMultipleOf(x,y){return x+y-1&-y}var plainRowSize=width*sizePerPixel;var alignedRowSize=roundedToNextMultipleOf(plainRowSize,alignment);return height*alignedRowSize}function __colorChannelsInGlTextureFormat(format){var colorChannels={5:3,6:4,8:2,29502:3,29504:4,26917:2,26918:2,29846:3,29847:4};return colorChannels[format-6402]||1}function heapObjectForWebGLType(type){type-=5120;if(type==0)return HEAP8;if(type==1)return HEAPU8;if(type==2)return HEAP16;if(type==4)return HEAP32;if(type==6)return HEAPF32;if(type==5||type==28922||type==28520||type==30779||type==30782)return HEAPU32;return HEAPU16}function heapAccessShiftForWebGLHeap(heap){return 31-Math.clz32(heap.BYTES_PER_ELEMENT)}function emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,internalFormat){var heap=heapObjectForWebGLType(type);var shift=heapAccessShiftForWebGLHeap(heap);var byteSize=1<<shift;var sizePerPixel=__colorChannelsInGlTextureFormat(format)*byteSize;var bytes=computeUnpackAlignedImageSize(width,height,sizePerPixel,GL.unpackAlignment);return heap.subarray(pixels>>shift,pixels+bytes>>shift)}function _emscripten_glReadPixels(x,y,width,height,format,type,pixels){if(GL.currentContext.version>=2){if(GLctx.currentPixelPackBufferBinding){GLctx.readPixels(x,y,width,height,format,type,pixels)}else{var heap=heapObjectForWebGLType(type);GLctx.readPixels(x,y,width,height,format,type,heap,pixels>>heapAccessShiftForWebGLHeap(heap))}return}var pixelData=emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,format);if(!pixelData){GL.recordError(1280);return}GLctx.readPixels(x,y,width,height,format,type,pixelData)}function _emscripten_glRenderbufferStorage(x0,x1,x2,x3){GLctx[\"renderbufferStorage\"](x0,x1,x2,x3)}function _emscripten_glRenderbufferStorageMultisample(x0,x1,x2,x3,x4){GLctx[\"renderbufferStorageMultisample\"](x0,x1,x2,x3,x4)}function _emscripten_glScissor(x0,x1,x2,x3){GLctx[\"scissor\"](x0,x1,x2,x3)}function _emscripten_glShaderSource(shader,count,string,length){var source=GL.getSource(shader,count,string,length);GLctx.shaderSource(GL.shaders[shader],source)}function _emscripten_glTexImage2D(target,level,internalFormat,width,height,border,format,type,pixels){if(GL.currentContext.version>=2){if(GLctx.currentPixelUnpackBufferBinding){GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,pixels)}else if(pixels){var heap=heapObjectForWebGLType(type);GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,heap,pixels>>heapAccessShiftForWebGLHeap(heap))}else{GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,null)}return}GLctx.texImage2D(target,level,internalFormat,width,height,border,format,type,pixels?emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,internalFormat):null)}function _emscripten_glTexParameterf(x0,x1,x2){GLctx[\"texParameterf\"](x0,x1,x2)}function _emscripten_glTexParameterfv(target,pname,params){var param=HEAPF32[params>>2];GLctx.texParameterf(target,pname,param)}function _emscripten_glTexParameteri(x0,x1,x2){GLctx[\"texParameteri\"](x0,x1,x2)}function _emscripten_glTexParameteriv(target,pname,params){var param=HEAP32[params>>2];GLctx.texParameteri(target,pname,param)}function _emscripten_glTexSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels){if(GL.currentContext.version>=2){if(GLctx.currentPixelUnpackBufferBinding){GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels)}else if(pixels){var heap=heapObjectForWebGLType(type);GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,heap,pixels>>heapAccessShiftForWebGLHeap(heap))}else{GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,null)}return}var pixelData=null;if(pixels)pixelData=emscriptenWebGLGetTexPixelData(type,format,width,height,pixels,0);GLctx.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixelData)}function webglGetUniformLocation(location){var p=GLctx.currentProgram;if(p){var webglLoc=p.uniformLocsById[location];if(typeof webglLoc==\"number\"){p.uniformLocsById[location]=webglLoc=GLctx.getUniformLocation(p,p.uniformArrayNamesById[location]+(webglLoc>0?\"[\"+webglLoc+\"]\":\"\"))}return webglLoc}else{GL.recordError(1282)}}function _emscripten_glUniform1f(location,v0){GLctx.uniform1f(webglGetUniformLocation(location),v0)}var miniTempWebGLFloatBuffers=[];function _emscripten_glUniform1fv(location,count,value){if(GL.currentContext.version>=2){count&&GLctx.uniform1fv(webglGetUniformLocation(location),HEAPF32,value>>2,count);return}if(count<=288){var view=miniTempWebGLFloatBuffers[count-1];for(var i=0;i<count;++i){view[i]=HEAPF32[value+4*i>>2]}}else{var view=HEAPF32.subarray(value>>2,value+count*4>>2)}GLctx.uniform1fv(webglGetUniformLocation(location),view)}function _emscripten_glUniform1i(location,v0){GLctx.uniform1i(webglGetUniformLocation(location),v0)}var __miniTempWebGLIntBuffers=[];function _emscripten_glUniform1iv(location,count,value){if(GL.currentContext.version>=2){count&&GLctx.uniform1iv(webglGetUniformLocation(location),HEAP32,value>>2,count);return}if(count<=288){var view=__miniTempWebGLIntBuffers[count-1];for(var i=0;i<count;++i){view[i]=HEAP32[value+4*i>>2]}}else{var view=HEAP32.subarray(value>>2,value+count*4>>2)}GLctx.uniform1iv(webglGetUniformLocation(location),view)}function _emscripten_glUniform2f(location,v0,v1){GLctx.uniform2f(webglGetUniformLocation(location),v0,v1)}function _emscripten_glUniform2fv(location,count,value){if(GL.currentContext.version>=2){count&&GLctx.uniform2fv(webglGetUniformLocation(location),HEAPF32,value>>2,count*2);return}if(count<=144){var view=miniTempWebGLFloatBuffers[2*count-1];for(var i=0;i<2*count;i+=2){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2]}}else{var view=HEAPF32.subarray(value>>2,value+count*8>>2)}GLctx.uniform2fv(webglGetUniformLocation(location),view)}function _emscripten_glUniform2i(location,v0,v1){GLctx.uniform2i(webglGetUniformLocation(location),v0,v1)}function _emscripten_glUniform2iv(location,count,value){if(GL.currentContext.version>=2){count&&GLctx.uniform2iv(webglGetUniformLocation(location),HEAP32,value>>2,count*2);return}if(count<=144){var view=__miniTempWebGLIntBuffers[2*count-1];for(var i=0;i<2*count;i+=2){view[i]=HEAP32[value+4*i>>2];view[i+1]=HEAP32[value+(4*i+4)>>2]}}else{var view=HEAP32.subarray(value>>2,value+count*8>>2)}GLctx.uniform2iv(webglGetUniformLocation(location),view)}function _emscripten_glUniform3f(location,v0,v1,v2){GLctx.uniform3f(webglGetUniformLocation(location),v0,v1,v2)}function _emscripten_glUniform3fv(location,count,value){if(GL.currentContext.version>=2){count&&GLctx.uniform3fv(webglGetUniformLocation(location),HEAPF32,value>>2,count*3);return}if(count<=96){var view=miniTempWebGLFloatBuffers[3*count-1];for(var i=0;i<3*count;i+=3){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2]}}else{var view=HEAPF32.subarray(value>>2,value+count*12>>2)}GLctx.uniform3fv(webglGetUniformLocation(location),view)}function _emscripten_glUniform3i(location,v0,v1,v2){GLctx.uniform3i(webglGetUniformLocation(location),v0,v1,v2)}function _emscripten_glUniform3iv(location,count,value){if(GL.currentContext.version>=2){count&&GLctx.uniform3iv(webglGetUniformLocation(location),HEAP32,value>>2,count*3);return}if(count<=96){var view=__miniTempWebGLIntBuffers[3*count-1];for(var i=0;i<3*count;i+=3){view[i]=HEAP32[value+4*i>>2];view[i+1]=HEAP32[value+(4*i+4)>>2];view[i+2]=HEAP32[value+(4*i+8)>>2]}}else{var view=HEAP32.subarray(value>>2,value+count*12>>2)}GLctx.uniform3iv(webglGetUniformLocation(location),view)}function _emscripten_glUniform4f(location,v0,v1,v2,v3){GLctx.uniform4f(webglGetUniformLocation(location),v0,v1,v2,v3)}function _emscripten_glUniform4fv(location,count,value){if(GL.currentContext.version>=2){count&&GLctx.uniform4fv(webglGetUniformLocation(location),HEAPF32,value>>2,count*4);return}if(count<=72){var view=miniTempWebGLFloatBuffers[4*count-1];var heap=HEAPF32;value>>=2;for(var i=0;i<4*count;i+=4){var dst=value+i;view[i]=heap[dst];view[i+1]=heap[dst+1];view[i+2]=heap[dst+2];view[i+3]=heap[dst+3]}}else{var view=HEAPF32.subarray(value>>2,value+count*16>>2)}GLctx.uniform4fv(webglGetUniformLocation(location),view)}function _emscripten_glUniform4i(location,v0,v1,v2,v3){GLctx.uniform4i(webglGetUniformLocation(location),v0,v1,v2,v3)}function _emscripten_glUniform4iv(location,count,value){if(GL.currentContext.version>=2){count&&GLctx.uniform4iv(webglGetUniformLocation(location),HEAP32,value>>2,count*4);return}if(count<=72){var view=__miniTempWebGLIntBuffers[4*count-1];for(var i=0;i<4*count;i+=4){view[i]=HEAP32[value+4*i>>2];view[i+1]=HEAP32[value+(4*i+4)>>2];view[i+2]=HEAP32[value+(4*i+8)>>2];view[i+3]=HEAP32[value+(4*i+12)>>2]}}else{var view=HEAP32.subarray(value>>2,value+count*16>>2)}GLctx.uniform4iv(webglGetUniformLocation(location),view)}function _emscripten_glUniformMatrix2fv(location,count,transpose,value){if(GL.currentContext.version>=2){count&&GLctx.uniformMatrix2fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*4);return}if(count<=72){var view=miniTempWebGLFloatBuffers[4*count-1];for(var i=0;i<4*count;i+=4){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2];view[i+3]=HEAPF32[value+(4*i+12)>>2]}}else{var view=HEAPF32.subarray(value>>2,value+count*16>>2)}GLctx.uniformMatrix2fv(webglGetUniformLocation(location),!!transpose,view)}function _emscripten_glUniformMatrix3fv(location,count,transpose,value){if(GL.currentContext.version>=2){count&&GLctx.uniformMatrix3fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*9);return}if(count<=32){var view=miniTempWebGLFloatBuffers[9*count-1];for(var i=0;i<9*count;i+=9){view[i]=HEAPF32[value+4*i>>2];view[i+1]=HEAPF32[value+(4*i+4)>>2];view[i+2]=HEAPF32[value+(4*i+8)>>2];view[i+3]=HEAPF32[value+(4*i+12)>>2];view[i+4]=HEAPF32[value+(4*i+16)>>2];view[i+5]=HEAPF32[value+(4*i+20)>>2];view[i+6]=HEAPF32[value+(4*i+24)>>2];view[i+7]=HEAPF32[value+(4*i+28)>>2];view[i+8]=HEAPF32[value+(4*i+32)>>2]}}else{var view=HEAPF32.subarray(value>>2,value+count*36>>2)}GLctx.uniformMatrix3fv(webglGetUniformLocation(location),!!transpose,view)}function _emscripten_glUniformMatrix4fv(location,count,transpose,value){if(GL.currentContext.version>=2){count&&GLctx.uniformMatrix4fv(webglGetUniformLocation(location),!!transpose,HEAPF32,value>>2,count*16);return}if(count<=18){var view=miniTempWebGLFloatBuffers[16*count-1];var heap=HEAPF32;value>>=2;for(var i=0;i<16*count;i+=16){var dst=value+i;view[i]=heap[dst];view[i+1]=heap[dst+1];view[i+2]=heap[dst+2];view[i+3]=heap[dst+3];view[i+4]=heap[dst+4];view[i+5]=heap[dst+5];view[i+6]=heap[dst+6];view[i+7]=heap[dst+7];view[i+8]=heap[dst+8];view[i+9]=heap[dst+9];view[i+10]=heap[dst+10];view[i+11]=heap[dst+11];view[i+12]=heap[dst+12];view[i+13]=heap[dst+13];view[i+14]=heap[dst+14];view[i+15]=heap[dst+15]}}else{var view=HEAPF32.subarray(value>>2,value+count*64>>2)}GLctx.uniformMatrix4fv(webglGetUniformLocation(location),!!transpose,view)}function _emscripten_glUseProgram(program){program=GL.programs[program];GLctx.useProgram(program);GLctx.currentProgram=program}function _emscripten_glVertexAttrib1f(x0,x1){GLctx[\"vertexAttrib1f\"](x0,x1)}function _emscripten_glVertexAttrib2fv(index,v){GLctx.vertexAttrib2f(index,HEAPF32[v>>2],HEAPF32[v+4>>2])}function _emscripten_glVertexAttrib3fv(index,v){GLctx.vertexAttrib3f(index,HEAPF32[v>>2],HEAPF32[v+4>>2],HEAPF32[v+8>>2])}function _emscripten_glVertexAttrib4fv(index,v){GLctx.vertexAttrib4f(index,HEAPF32[v>>2],HEAPF32[v+4>>2],HEAPF32[v+8>>2],HEAPF32[v+12>>2])}function _emscripten_glVertexAttribPointer(index,size,type,normalized,stride,ptr){GLctx.vertexAttribPointer(index,size,type,!!normalized,stride,ptr)}function _emscripten_glViewport(x0,x1,x2,x3){GLctx[\"viewport\"](x0,x1,x2,x3)}function convertI32PairToI53(lo,hi){return(lo>>>0)+hi*4294967296}function _emscripten_glWaitSync(sync,flags,timeoutLo,timeoutHi){GLctx.waitSync(GL.syncs[sync],flags,convertI32PairToI53(timeoutLo,timeoutHi))}function getHeapMax(){return 2147483648}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}let alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var __emscripten_webgl_power_preferences=[\"default\",\"low-power\",\"high-performance\"];function _emscripten_webgl_do_create_context(target,attributes){var a=attributes>>2;var powerPreference=HEAP32[a+(24>>2)];var contextAttributes={\"alpha\":!!HEAP32[a+(0>>2)],\"depth\":!!HEAP32[a+(4>>2)],\"stencil\":!!HEAP32[a+(8>>2)],\"antialias\":!!HEAP32[a+(12>>2)],\"premultipliedAlpha\":!!HEAP32[a+(16>>2)],\"preserveDrawingBuffer\":!!HEAP32[a+(20>>2)],\"powerPreference\":__emscripten_webgl_power_preferences[powerPreference],\"failIfMajorPerformanceCaveat\":!!HEAP32[a+(28>>2)],majorVersion:HEAP32[a+(32>>2)],minorVersion:HEAP32[a+(36>>2)],enableExtensionsByDefault:HEAP32[a+(40>>2)],explicitSwapControl:HEAP32[a+(44>>2)],proxyContextToMainThread:HEAP32[a+(48>>2)],renderViaOffscreenBackBuffer:HEAP32[a+(52>>2)]};var canvas=findCanvasEventTarget(target);if(!canvas){return 0}if(contextAttributes.explicitSwapControl){return 0}var contextHandle=GL.createContext(canvas,contextAttributes);return contextHandle}var _emscripten_webgl_create_context=_emscripten_webgl_do_create_context;function _emscripten_webgl_destroy_context(contextHandle){if(GL.currentContext==contextHandle)GL.currentContext=0;GL.deleteContext(contextHandle)}function _emscripten_webgl_do_get_current_context(){return GL.currentContext?GL.currentContext.handle:0}var _emscripten_webgl_get_current_context=_emscripten_webgl_do_get_current_context;function _emscripten_webgl_init_context_attributes(attributes){var a=attributes>>2;for(var i=0;i<56>>2;++i){HEAP32[a+i]=0}HEAP32[a+(0>>2)]=HEAP32[a+(4>>2)]=HEAP32[a+(12>>2)]=HEAP32[a+(16>>2)]=HEAP32[a+(32>>2)]=HEAP32[a+(40>>2)]=1}function _emscripten_webgl_make_context_current(contextHandle){var success=GL.makeContextCurrent(contextHandle);return success?0:-5}function _fd_close(fd){try{var stream=SYSCALLS.getStreamFromFD(fd);FS.close(stream);return 0}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function doReadv(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break}return ret}function _fd_read(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=doReadv(stream,iov,iovcnt);HEAPU32[pnum>>2]=num;return 0}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function convertI32PairToI53Checked(lo,hi){return hi+2097152>>>0<4194305-!!lo?(lo>>>0)+hi*4294967296:NaN}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){try{var offset=convertI32PairToI53Checked(offset_low,offset_high);if(isNaN(offset))return 61;var stream=SYSCALLS.getStreamFromFD(fd);FS.llseek(stream,offset,whence);tempI64=[stream.position>>>0,(tempDouble=stream.position,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[newOffset>>2]=tempI64[0],HEAP32[newOffset+4>>2]=tempI64[1];if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function doWritev(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr}return ret}function _fd_write(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=doWritev(stream,iov,iovcnt);HEAPU32[pnum>>2]=num;return 0}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}var FSNode=function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev};var readMode=292|73;var writeMode=146;Object.defineProperties(FSNode.prototype,{read:{get:function(){return(this.mode&readMode)===readMode},set:function(val){val?this.mode|=readMode:this.mode&=~readMode}},write:{get:function(){return(this.mode&writeMode)===writeMode},set:function(val){val?this.mode|=writeMode:this.mode&=~writeMode}},isFolder:{get:function(){return FS.isDir(this.mode)}},isDevice:{get:function(){return FS.isChrdev(this.mode)}}});FS.FSNode=FSNode;FS.staticInit();InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");init_ClassHandle();init_embind();init_RegisteredPointer();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");init_emval();var GLctx;var miniTempWebGLFloatBuffersStorage=new Float32Array(288);for(var i=0;i<288;++i){miniTempWebGLFloatBuffers[i]=miniTempWebGLFloatBuffersStorage.subarray(0,i+1)}var __miniTempWebGLIntBuffersStorage=new Int32Array(288);for(var i=0;i<288;++i){__miniTempWebGLIntBuffers[i]=__miniTempWebGLIntBuffersStorage.subarray(0,i+1)}var asmLibraryArg={\"d\":___assert_fail,\"A\":___cxa_allocate_exception,\"z\":___cxa_throw,\"G\":___syscall_fcntl64,\"fb\":___syscall_ioctl,\"hb\":___syscall_openat,\"o\":__embind_finalize_value_object,\"ab\":__embind_register_bigint,\"jb\":__embind_register_bool,\"f\":__embind_register_class,\"e\":__embind_register_class_class_function,\"r\":__embind_register_class_constructor,\"a\":__embind_register_class_function,\"b\":__embind_register_class_property,\"ib\":__embind_register_emval,\"t\":__embind_register_enum,\"Xa\":__embind_register_enum_value,\"I\":__embind_register_float,\"D\":__embind_register_function,\"m\":__embind_register_integer,\"h\":__embind_register_memory_view,\"j\":__embind_register_smart_ptr,\"H\":__embind_register_std_string,\"w\":__embind_register_std_wstring,\"p\":__embind_register_value_object,\"v\":__embind_register_value_object_field,\"kb\":__embind_register_void,\"bb\":__emscripten_get_now_is_monotonic,\"x\":__emval_as,\"U\":__emval_await,\"gb\":__emval_call,\"g\":__emval_call_method,\"k\":__emval_call_void_method,\"u\":__emval_decref,\"Wa\":__emval_equals,\"ob\":__emval_get_global,\"c\":__emval_get_method_caller,\"_a\":__emval_get_module_property,\"J\":__emval_get_property,\"y\":__emval_incref,\"mb\":__emval_instanceof,\"nb\":__emval_new,\"Za\":__emval_new_array,\"lb\":__emval_new_cstring,\"Ya\":__emval_new_object,\"xa\":__emval_run_destructors,\"s\":__emval_set_property,\"l\":__emval_take_value,\"q\":_abort,\"B\":_emscripten_get_canvas_element_size,\"db\":_emscripten_get_now,\"Ta\":_emscripten_glActiveTexture,\"Sa\":_emscripten_glAttachShader,\"Qa\":_emscripten_glBindAttribLocation,\"Pa\":_emscripten_glBindBuffer,\"Oa\":_emscripten_glBindFramebuffer,\"Na\":_emscripten_glBindRenderbuffer,\"Ma\":_emscripten_glBindTexture,\"zb\":_emscripten_glBindVertexArray,\"wb\":_emscripten_glBindVertexArrayOES,\"La\":_emscripten_glBlendColor,\"Ka\":_emscripten_glBlendEquation,\"Ab\":_emscripten_glBlendEquationSeparate,\"Ja\":_emscripten_glBlendFunc,\"rb\":_emscripten_glBlitFramebuffer,\"Ia\":_emscripten_glBufferData,\"Ha\":_emscripten_glCheckFramebufferStatus,\"Ga\":_emscripten_glClear,\"Fa\":_emscripten_glClearColor,\"Ea\":_emscripten_glClearStencil,\"Da\":_emscripten_glColorMask,\"Ca\":_emscripten_glCompileShader,\"Ba\":_emscripten_glCopyTexSubImage2D,\"Aa\":_emscripten_glCreateProgram,\"za\":_emscripten_glCreateShader,\"ya\":_emscripten_glDeleteBuffers,\"wa\":_emscripten_glDeleteFramebuffers,\"va\":_emscripten_glDeleteProgram,\"ua\":_emscripten_glDeleteRenderbuffers,\"ta\":_emscripten_glDeleteShader,\"sb\":_emscripten_glDeleteSync,\"sa\":_emscripten_glDeleteTextures,\"yb\":_emscripten_glDeleteVertexArrays,\"vb\":_emscripten_glDeleteVertexArraysOES,\"ra\":_emscripten_glDepthMask,\"qa\":_emscripten_glDisable,\"pa\":_emscripten_glDisableVertexAttribArray,\"oa\":_emscripten_glDrawArrays,\"na\":_emscripten_glDrawElements,\"ma\":_emscripten_glEnable,\"la\":_emscripten_glEnableVertexAttribArray,\"tb\":_emscripten_glFenceSync,\"ka\":_emscripten_glFinish,\"ja\":_emscripten_glFlush,\"ia\":_emscripten_glFramebufferRenderbuffer,\"ha\":_emscripten_glFramebufferTexture2D,\"ga\":_emscripten_glGenBuffers,\"fa\":_emscripten_glGenFramebuffers,\"ea\":_emscripten_glGenRenderbuffers,\"da\":_emscripten_glGenTextures,\"xb\":_emscripten_glGenVertexArrays,\"ub\":_emscripten_glGenVertexArraysOES,\"Bb\":_emscripten_glGetAttribLocation,\"ca\":_emscripten_glGetBufferParameteriv,\"ba\":_emscripten_glGetError,\"aa\":_emscripten_glGetFramebufferAttachmentParameteriv,\"$\":_emscripten_glGetIntegerv,\"_\":_emscripten_glGetProgramInfoLog,\"Z\":_emscripten_glGetProgramiv,\"Y\":_emscripten_glGetRenderbufferParameteriv,\"X\":_emscripten_glGetShaderInfoLog,\"W\":_emscripten_glGetShaderPrecisionFormat,\"V\":_emscripten_glGetShaderiv,\"T\":_emscripten_glGetString,\"S\":_emscripten_glGetStringi,\"R\":_emscripten_glGetUniformLocation,\"Ra\":_emscripten_glIsEnabled,\"Q\":_emscripten_glIsTexture,\"P\":_emscripten_glLineWidth,\"O\":_emscripten_glLinkProgram,\"N\":_emscripten_glPixelStorei,\"M\":_emscripten_glReadPixels,\"L\":_emscripten_glRenderbufferStorage,\"qb\":_emscripten_glRenderbufferStorageMultisample,\"K\":_emscripten_glScissor,\"gc\":_emscripten_glShaderSource,\"fc\":_emscripten_glTexImage2D,\"ec\":_emscripten_glTexParameterf,\"dc\":_emscripten_glTexParameterfv,\"cc\":_emscripten_glTexParameteri,\"bc\":_emscripten_glTexParameteriv,\"ac\":_emscripten_glTexSubImage2D,\"$b\":_emscripten_glUniform1f,\"_b\":_emscripten_glUniform1fv,\"Zb\":_emscripten_glUniform1i,\"Yb\":_emscripten_glUniform1iv,\"Xb\":_emscripten_glUniform2f,\"Wb\":_emscripten_glUniform2fv,\"Vb\":_emscripten_glUniform2i,\"Ub\":_emscripten_glUniform2iv,\"Tb\":_emscripten_glUniform3f,\"Sb\":_emscripten_glUniform3fv,\"Rb\":_emscripten_glUniform3i,\"Qb\":_emscripten_glUniform3iv,\"Pb\":_emscripten_glUniform4f,\"Ob\":_emscripten_glUniform4fv,\"Nb\":_emscripten_glUniform4i,\"Mb\":_emscripten_glUniform4iv,\"Lb\":_emscripten_glUniformMatrix2fv,\"Kb\":_emscripten_glUniformMatrix3fv,\"Jb\":_emscripten_glUniformMatrix4fv,\"Ib\":_emscripten_glUseProgram,\"Hb\":_emscripten_glVertexAttrib1f,\"Gb\":_emscripten_glVertexAttrib2fv,\"Fb\":_emscripten_glVertexAttrib3fv,\"Eb\":_emscripten_glVertexAttrib4fv,\"Db\":_emscripten_glVertexAttribPointer,\"Cb\":_emscripten_glViewport,\"pb\":_emscripten_glWaitSync,\"cb\":_emscripten_resize_heap,\"Ua\":_emscripten_webgl_create_context,\"C\":_emscripten_webgl_destroy_context,\"n\":_emscripten_webgl_get_current_context,\"Va\":_emscripten_webgl_init_context_attributes,\"i\":_emscripten_webgl_make_context_current,\"E\":_fd_close,\"eb\":_fd_read,\"$a\":_fd_seek,\"F\":_fd_write};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"ic\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"kc\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"lc\"]).apply(null,arguments)};var ___getTypeName=Module[\"___getTypeName\"]=function(){return(___getTypeName=Module[\"___getTypeName\"]=Module[\"asm\"][\"mc\"]).apply(null,arguments)};var __embind_initialize_bindings=Module[\"__embind_initialize_bindings\"]=function(){return(__embind_initialize_bindings=Module[\"__embind_initialize_bindings\"]=Module[\"asm\"][\"nc\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"oc\"]).apply(null,arguments)};var ___cxa_is_pointer_type=Module[\"___cxa_is_pointer_type\"]=function(){return(___cxa_is_pointer_type=Module[\"___cxa_is_pointer_type\"]=Module[\"asm\"][\"pc\"]).apply(null,arguments)};var dynCall_ii=Module[\"dynCall_ii\"]=function(){return(dynCall_ii=Module[\"dynCall_ii\"]=Module[\"asm\"][\"qc\"]).apply(null,arguments)};var dynCall_vi=Module[\"dynCall_vi\"]=function(){return(dynCall_vi=Module[\"dynCall_vi\"]=Module[\"asm\"][\"rc\"]).apply(null,arguments)};var dynCall_ji=Module[\"dynCall_ji\"]=function(){return(dynCall_ji=Module[\"dynCall_ji\"]=Module[\"asm\"][\"sc\"]).apply(null,arguments)};var dynCall_iii=Module[\"dynCall_iii\"]=function(){return(dynCall_iii=Module[\"dynCall_iii\"]=Module[\"asm\"][\"tc\"]).apply(null,arguments)};var dynCall_iij=Module[\"dynCall_iij\"]=function(){return(dynCall_iij=Module[\"dynCall_iij\"]=Module[\"asm\"][\"uc\"]).apply(null,arguments)};var dynCall_viiij=Module[\"dynCall_viiij\"]=function(){return(dynCall_viiij=Module[\"dynCall_viiij\"]=Module[\"asm\"][\"vc\"]).apply(null,arguments)};var dynCall_viii=Module[\"dynCall_viii\"]=function(){return(dynCall_viii=Module[\"dynCall_viii\"]=Module[\"asm\"][\"wc\"]).apply(null,arguments)};var dynCall_vii=Module[\"dynCall_vii\"]=function(){return(dynCall_vii=Module[\"dynCall_vii\"]=Module[\"asm\"][\"xc\"]).apply(null,arguments)};var dynCall_v=Module[\"dynCall_v\"]=function(){return(dynCall_v=Module[\"dynCall_v\"]=Module[\"asm\"][\"yc\"]).apply(null,arguments)};var dynCall_viij=Module[\"dynCall_viij\"]=function(){return(dynCall_viij=Module[\"dynCall_viij\"]=Module[\"asm\"][\"zc\"]).apply(null,arguments)};var dynCall_fij=Module[\"dynCall_fij\"]=function(){return(dynCall_fij=Module[\"dynCall_fij\"]=Module[\"asm\"][\"Ac\"]).apply(null,arguments)};var dynCall_viiii=Module[\"dynCall_viiii\"]=function(){return(dynCall_viiii=Module[\"dynCall_viiii\"]=Module[\"asm\"][\"Bc\"]).apply(null,arguments)};var dynCall_fii=Module[\"dynCall_fii\"]=function(){return(dynCall_fii=Module[\"dynCall_fii\"]=Module[\"asm\"][\"Cc\"]).apply(null,arguments)};var dynCall_fif=Module[\"dynCall_fif\"]=function(){return(dynCall_fif=Module[\"dynCall_fif\"]=Module[\"asm\"][\"Dc\"]).apply(null,arguments)};var dynCall_iiiff=Module[\"dynCall_iiiff\"]=function(){return(dynCall_iiiff=Module[\"dynCall_iiiff\"]=Module[\"asm\"][\"Ec\"]).apply(null,arguments)};var dynCall_vijiii=Module[\"dynCall_vijiii\"]=function(){return(dynCall_vijiii=Module[\"dynCall_vijiii\"]=Module[\"asm\"][\"Fc\"]).apply(null,arguments)};var dynCall_viiiii=Module[\"dynCall_viiiii\"]=function(){return(dynCall_viiiii=Module[\"dynCall_viiiii\"]=Module[\"asm\"][\"Gc\"]).apply(null,arguments)};var dynCall_iiiiii=Module[\"dynCall_iiiiii\"]=function(){return(dynCall_iiiiii=Module[\"dynCall_iiiiii\"]=Module[\"asm\"][\"Hc\"]).apply(null,arguments)};var dynCall_iiii=Module[\"dynCall_iiii\"]=function(){return(dynCall_iiii=Module[\"dynCall_iiii\"]=Module[\"asm\"][\"Ic\"]).apply(null,arguments)};var dynCall_vij=Module[\"dynCall_vij\"]=function(){return(dynCall_vij=Module[\"dynCall_vij\"]=Module[\"asm\"][\"Jc\"]).apply(null,arguments)};var dynCall_iiiiiii=Module[\"dynCall_iiiiiii\"]=function(){return(dynCall_iiiiiii=Module[\"dynCall_iiiiiii\"]=Module[\"asm\"][\"Kc\"]).apply(null,arguments)};var dynCall_viiff=Module[\"dynCall_viiff\"]=function(){return(dynCall_viiff=Module[\"dynCall_viiff\"]=Module[\"asm\"][\"Lc\"]).apply(null,arguments)};var dynCall_iiij=Module[\"dynCall_iiij\"]=function(){return(dynCall_iiij=Module[\"dynCall_iiij\"]=Module[\"asm\"][\"Mc\"]).apply(null,arguments)};var dynCall_iiiii=Module[\"dynCall_iiiii\"]=function(){return(dynCall_iiiii=Module[\"dynCall_iiiii\"]=Module[\"asm\"][\"Nc\"]).apply(null,arguments)};var dynCall_viif=Module[\"dynCall_viif\"]=function(){return(dynCall_viif=Module[\"dynCall_viif\"]=Module[\"asm\"][\"Oc\"]).apply(null,arguments)};var dynCall_viiffff=Module[\"dynCall_viiffff\"]=function(){return(dynCall_viiffff=Module[\"dynCall_viiffff\"]=Module[\"asm\"][\"Pc\"]).apply(null,arguments)};var dynCall_iiifii=Module[\"dynCall_iiifii\"]=function(){return(dynCall_iiifii=Module[\"dynCall_iiifii\"]=Module[\"asm\"][\"Qc\"]).apply(null,arguments)};var dynCall_iiiffii=Module[\"dynCall_iiiffii\"]=function(){return(dynCall_iiiffii=Module[\"dynCall_iiiffii\"]=Module[\"asm\"][\"Rc\"]).apply(null,arguments)};var dynCall_iiiij=Module[\"dynCall_iiiij\"]=function(){return(dynCall_iiiij=Module[\"dynCall_iiiij\"]=Module[\"asm\"][\"Sc\"]).apply(null,arguments)};var dynCall_viiiiii=Module[\"dynCall_viiiiii\"]=function(){return(dynCall_viiiiii=Module[\"dynCall_viiiiii\"]=Module[\"asm\"][\"Tc\"]).apply(null,arguments)};var dynCall_iiiiiiii=Module[\"dynCall_iiiiiiii\"]=function(){return(dynCall_iiiiiiii=Module[\"dynCall_iiiiiiii\"]=Module[\"asm\"][\"Uc\"]).apply(null,arguments)};var dynCall_jii=Module[\"dynCall_jii\"]=function(){return(dynCall_jii=Module[\"dynCall_jii\"]=Module[\"asm\"][\"Vc\"]).apply(null,arguments)};var dynCall_jij=Module[\"dynCall_jij\"]=function(){return(dynCall_jij=Module[\"dynCall_jij\"]=Module[\"asm\"][\"Wc\"]).apply(null,arguments)};var dynCall_fi=Module[\"dynCall_fi\"]=function(){return(dynCall_fi=Module[\"dynCall_fi\"]=Module[\"asm\"][\"Xc\"]).apply(null,arguments)};var dynCall_jijf=Module[\"dynCall_jijf\"]=function(){return(dynCall_jijf=Module[\"dynCall_jijf\"]=Module[\"asm\"][\"Yc\"]).apply(null,arguments)};var dynCall_i=Module[\"dynCall_i\"]=function(){return(dynCall_i=Module[\"dynCall_i\"]=Module[\"asm\"][\"Zc\"]).apply(null,arguments)};var dynCall_vif=Module[\"dynCall_vif\"]=function(){return(dynCall_vif=Module[\"dynCall_vif\"]=Module[\"asm\"][\"_c\"]).apply(null,arguments)};var dynCall_di=Module[\"dynCall_di\"]=function(){return(dynCall_di=Module[\"dynCall_di\"]=Module[\"asm\"][\"$c\"]).apply(null,arguments)};var dynCall_vid=Module[\"dynCall_vid\"]=function(){return(dynCall_vid=Module[\"dynCall_vid\"]=Module[\"asm\"][\"ad\"]).apply(null,arguments)};var dynCall_iiiifii=Module[\"dynCall_iiiifii\"]=function(){return(dynCall_iiiifii=Module[\"dynCall_iiiifii\"]=Module[\"asm\"][\"bd\"]).apply(null,arguments)};var dynCall_iiiffi=Module[\"dynCall_iiiffi\"]=function(){return(dynCall_iiiffi=Module[\"dynCall_iiiffi\"]=Module[\"asm\"][\"cd\"]).apply(null,arguments)};var dynCall_vifffffffff=Module[\"dynCall_vifffffffff\"]=function(){return(dynCall_vifffffffff=Module[\"dynCall_vifffffffff\"]=Module[\"asm\"][\"dd\"]).apply(null,arguments)};var dynCall_iifffffffff=Module[\"dynCall_iifffffffff\"]=function(){return(dynCall_iifffffffff=Module[\"dynCall_iifffffffff\"]=Module[\"asm\"][\"ed\"]).apply(null,arguments)};var dynCall_iiff=Module[\"dynCall_iiff\"]=function(){return(dynCall_iiff=Module[\"dynCall_iiff\"]=Module[\"asm\"][\"fd\"]).apply(null,arguments)};var dynCall_iif=Module[\"dynCall_iif\"]=function(){return(dynCall_iif=Module[\"dynCall_iif\"]=Module[\"asm\"][\"gd\"]).apply(null,arguments)};var dynCall_viff=Module[\"dynCall_viff\"]=function(){return(dynCall_viff=Module[\"dynCall_viff\"]=Module[\"asm\"][\"hd\"]).apply(null,arguments)};var dynCall_viffffff=Module[\"dynCall_viffffff\"]=function(){return(dynCall_viffffff=Module[\"dynCall_viffffff\"]=Module[\"asm\"][\"id\"]).apply(null,arguments)};var dynCall_dii=Module[\"dynCall_dii\"]=function(){return(dynCall_dii=Module[\"dynCall_dii\"]=Module[\"asm\"][\"jd\"]).apply(null,arguments)};var dynCall_viid=Module[\"dynCall_viid\"]=function(){return(dynCall_viid=Module[\"dynCall_viid\"]=Module[\"asm\"][\"kd\"]).apply(null,arguments)};var dynCall_iiiiffi=Module[\"dynCall_iiiiffi\"]=function(){return(dynCall_iiiiffi=Module[\"dynCall_iiiiffi\"]=Module[\"asm\"][\"ld\"]).apply(null,arguments)};var dynCall_fiii=Module[\"dynCall_fiii\"]=function(){return(dynCall_fiii=Module[\"dynCall_fiii\"]=Module[\"asm\"][\"md\"]).apply(null,arguments)};var dynCall_viiif=Module[\"dynCall_viiif\"]=function(){return(dynCall_viiif=Module[\"dynCall_viiif\"]=Module[\"asm\"][\"nd\"]).apply(null,arguments)};var dynCall_viifffffffff=Module[\"dynCall_viifffffffff\"]=function(){return(dynCall_viifffffffff=Module[\"dynCall_viifffffffff\"]=Module[\"asm\"][\"od\"]).apply(null,arguments)};var dynCall_viiffffff=Module[\"dynCall_viiffffff\"]=function(){return(dynCall_viiffffff=Module[\"dynCall_viiffffff\"]=Module[\"asm\"][\"pd\"]).apply(null,arguments)};var dynCall_viifff=Module[\"dynCall_viifff\"]=function(){return(dynCall_viifff=Module[\"dynCall_viifff\"]=Module[\"asm\"][\"qd\"]).apply(null,arguments)};var dynCall_viiifii=Module[\"dynCall_viiifii\"]=function(){return(dynCall_viiifii=Module[\"dynCall_viiifii\"]=Module[\"asm\"][\"rd\"]).apply(null,arguments)};var dynCall_viiiiiii=Module[\"dynCall_viiiiiii\"]=function(){return(dynCall_viiiiiii=Module[\"dynCall_viiiiiii\"]=Module[\"asm\"][\"sd\"]).apply(null,arguments)};var dynCall_viffff=Module[\"dynCall_viffff\"]=function(){return(dynCall_viffff=Module[\"dynCall_viffff\"]=Module[\"asm\"][\"td\"]).apply(null,arguments)};var dynCall_vifff=Module[\"dynCall_vifff\"]=function(){return(dynCall_vifff=Module[\"dynCall_vifff\"]=Module[\"asm\"][\"ud\"]).apply(null,arguments)};var dynCall_iiffi=Module[\"dynCall_iiffi\"]=function(){return(dynCall_iiffi=Module[\"dynCall_iiffi\"]=Module[\"asm\"][\"vd\"]).apply(null,arguments)};var dynCall_iifii=Module[\"dynCall_iifii\"]=function(){return(dynCall_iifii=Module[\"dynCall_iifii\"]=Module[\"asm\"][\"wd\"]).apply(null,arguments)};var dynCall_iiifi=Module[\"dynCall_iiifi\"]=function(){return(dynCall_iiifi=Module[\"dynCall_iiifi\"]=Module[\"asm\"][\"xd\"]).apply(null,arguments)};var dynCall_iiiiij=Module[\"dynCall_iiiiij\"]=function(){return(dynCall_iiiiij=Module[\"dynCall_iiiiij\"]=Module[\"asm\"][\"yd\"]).apply(null,arguments)};var dynCall_iijj=Module[\"dynCall_iijj\"]=function(){return(dynCall_iijj=Module[\"dynCall_iijj\"]=Module[\"asm\"][\"zd\"]).apply(null,arguments)};var dynCall_vffff=Module[\"dynCall_vffff\"]=function(){return(dynCall_vffff=Module[\"dynCall_vffff\"]=Module[\"asm\"][\"Ad\"]).apply(null,arguments)};var dynCall_viiiiiiii=Module[\"dynCall_viiiiiiii\"]=function(){return(dynCall_viiiiiiii=Module[\"dynCall_viiiiiiii\"]=Module[\"asm\"][\"Bd\"]).apply(null,arguments)};var dynCall_vf=Module[\"dynCall_vf\"]=function(){return(dynCall_vf=Module[\"dynCall_vf\"]=Module[\"asm\"][\"Cd\"]).apply(null,arguments)};var dynCall_viiiiiiiii=Module[\"dynCall_viiiiiiiii\"]=function(){return(dynCall_viiiiiiiii=Module[\"dynCall_viiiiiiiii\"]=Module[\"asm\"][\"Dd\"]).apply(null,arguments)};var dynCall_viiiiiiiiii=Module[\"dynCall_viiiiiiiiii\"]=function(){return(dynCall_viiiiiiiiii=Module[\"dynCall_viiiiiiiiii\"]=Module[\"asm\"][\"Ed\"]).apply(null,arguments)};var dynCall_fiifiii=Module[\"dynCall_fiifiii\"]=function(){return(dynCall_fiifiii=Module[\"dynCall_fiifiii\"]=Module[\"asm\"][\"Fd\"]).apply(null,arguments)};var dynCall_iiifiii=Module[\"dynCall_iiifiii\"]=function(){return(dynCall_iiifiii=Module[\"dynCall_iiifiii\"]=Module[\"asm\"][\"Gd\"]).apply(null,arguments)};var dynCall_viiifiii=Module[\"dynCall_viiifiii\"]=function(){return(dynCall_viiifiii=Module[\"dynCall_viiifiii\"]=Module[\"asm\"][\"Hd\"]).apply(null,arguments)};var dynCall_vifii=Module[\"dynCall_vifii\"]=function(){return(dynCall_vifii=Module[\"dynCall_vifii\"]=Module[\"asm\"][\"Id\"]).apply(null,arguments)};var dynCall_viifd=Module[\"dynCall_viifd\"]=function(){return(dynCall_viifd=Module[\"dynCall_viifd\"]=Module[\"asm\"][\"Jd\"]).apply(null,arguments)};var dynCall_viddi=Module[\"dynCall_viddi\"]=function(){return(dynCall_viddi=Module[\"dynCall_viddi\"]=Module[\"asm\"][\"Kd\"]).apply(null,arguments)};var dynCall_viiiiiffii=Module[\"dynCall_viiiiiffii\"]=function(){return(dynCall_viiiiiffii=Module[\"dynCall_viiiiiffii\"]=Module[\"asm\"][\"Ld\"]).apply(null,arguments)};var dynCall_jiiii=Module[\"dynCall_jiiii\"]=function(){return(dynCall_jiiii=Module[\"dynCall_jiiii\"]=Module[\"asm\"][\"Md\"]).apply(null,arguments)};var dynCall_jiji=Module[\"dynCall_jiji\"]=function(){return(dynCall_jiji=Module[\"dynCall_jiji\"]=Module[\"asm\"][\"Nd\"]).apply(null,arguments)};var dynCall_iidiiii=Module[\"dynCall_iidiiii\"]=function(){return(dynCall_iidiiii=Module[\"dynCall_iidiiii\"]=Module[\"asm\"][\"Od\"]).apply(null,arguments)};var _asyncify_start_unwind=Module[\"_asyncify_start_unwind\"]=function(){return(_asyncify_start_unwind=Module[\"_asyncify_start_unwind\"]=Module[\"asm\"][\"Pd\"]).apply(null,arguments)};var _asyncify_stop_unwind=Module[\"_asyncify_stop_unwind\"]=function(){return(_asyncify_stop_unwind=Module[\"_asyncify_stop_unwind\"]=Module[\"asm\"][\"Qd\"]).apply(null,arguments)};var _asyncify_start_rewind=Module[\"_asyncify_start_rewind\"]=function(){return(_asyncify_start_rewind=Module[\"_asyncify_start_rewind\"]=Module[\"asm\"][\"Rd\"]).apply(null,arguments)};var _asyncify_stop_rewind=Module[\"_asyncify_stop_rewind\"]=function(){return(_asyncify_stop_rewind=Module[\"_asyncify_stop_rewind\"]=Module[\"asm\"][\"Sd\"]).apply(null,arguments)};Module[\"GL\"]=GL;Module[\"Asyncify\"]=Asyncify;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return PAGInit.ready\n}\n);\n})();\nexport default PAGInit;","export interface Task {\n  fn: () => Promise<any>;\n}\n\nexport class WebAssemblyQueue {\n  private executing = false;\n  private queue: Task[] = [];\n\n  public exec<T>(fn: (...args: any[]) => any, scope: any, ...args: any[]): Promise<T> {\n    return new Promise((resolve, reject) => {\n      const copyFn = async () => {\n        if (!fn) {\n          reject(new Error('Function is null!'));\n          return;\n        }\n        try {\n          const res = await fn.call(scope, ...args);\n          resolve(res);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      this.queue.push({\n        fn: copyFn,\n      });\n      if (this.executing) return;\n      this.execNextTask();\n    });\n  }\n\n  private execNextTask() {\n    if (this.queue.length < 1) {\n      this.executing = false;\n      return;\n    }\n    this.executing = true;\n    const task = this.queue.shift() as Task;\n    task.fn().then(() => {\n      this.execNextTask();\n    });\n  }\n}\n","import { WorkerMessageType } from './events';\nimport * as types from '../types';\n\nimport type { ModuleOption, PAGInit } from '../pag';\nimport type { PAGFile } from '../pag-file';\nimport type { PAGView } from '../pag-view';\nimport type { PAGImage } from '../pag-image';\n\ndeclare global {\n  interface Window {\n    PAG: types.PAG;\n  }\n}\n\nexport interface WorkerMessage {\n  name: string;\n  args: any[];\n}\nconst pagFiles: (PAGFile & { [prop: string]: any })[] = [];\nconst registerPAGFile = (pagFile: PAGFile) => {\n  pagFiles.push(pagFile);\n  return pagFiles.length - 1;\n};\nconst deletePAGFile = (key: number) => {\n  (pagFiles[key] as any) = null;\n};\n\nconst pagViews: (PAGView & { [prop: string]: any })[] = [];\nconst registerPAGView = (pagView: PAGView) => {\n  pagViews.push(pagView);\n  return pagViews.length - 1;\n};\nconst deletePAGView = (key: number) => {\n  (pagViews[key] as any) = null;\n};\n\nconst pagImages: PAGImage[] = [];\nconst registerPAGImage = (pagImage: PAGImage) => {\n  pagImages.push(pagImage);\n  return pagImages.length - 1;\n};\nconst deletePAGImage = (key: number) => {\n  (pagImages[key] as any) = null;\n};\n\nconst textDataMap: (types.TextDocument & { [prop: string]: any })[] = [];\nconst registerTextData = (textData: types.TextDocument) => {\n  textDataMap.push(textData);\n  return textDataMap.length - 1;\n};\nconst deleteTextData = (key: number) => {\n  (textDataMap[key] as any) = null;\n};\n\nconst workerInit = (init: typeof PAGInit) => {\n  onmessage = async (event: MessageEvent<WorkerMessage>) => {\n    const messageHandles: { [prop: string]: (event: MessageEvent<WorkerMessage>) => void } = {\n      [WorkerMessageType.PAGInit]: (event) => {\n        const option: ModuleOption = {};\n        if (event.data.args[0]) {\n          option.locateFile = () => event.data.args[0].fileUrl;\n        }\n        init(option).then((module: types.PAG) => {\n          self.PAG = module;\n          self.postMessage({ name: event.data.name, args: [] });\n        });\n      },\n      [WorkerMessageType.PAGFile_load]: async (event) => {\n        const key = registerPAGFile(await self.PAG.PAGFile.load(event.data.args[0]));\n        self.postMessage({ name: event.data.name, args: [key] });\n      },\n      [WorkerMessageType.PAGView_init]: async (event) => {\n        const [pagFileKey, canvas, option] = event.data.args;\n        const key = registerPAGView((await self.PAG.PAGView.init(pagFiles[pagFileKey], canvas, option)) as PAGView);\n        self.postMessage({ name: event.data.name, args: [key] });\n      },\n      [WorkerMessageType.PAGView_destroy]: async (event) => {\n        const [pagViewKey] = event.data.args;\n        pagViews[pagViewKey].destroy();\n        deletePAGView(pagViewKey);\n        self.postMessage({ name: event.data.name, args: [] });\n      },\n      [WorkerMessageType.PAGFile_getTextData]: async (event) => {\n        const [pagFileKey, editableTextIndex] = event.data.args;\n        const textData = pagFiles[pagFileKey].getTextData(editableTextIndex) as types.TextDocument & {\n          [prop: string]: any;\n        };\n        let virtualTextData: { [key: string]: any } = {};\n        for (const key in textData) {\n          if (typeof textData[key] !== 'function') {\n            virtualTextData[key] = textData[key];\n          }\n        }\n        virtualTextData.key = registerTextData(textData);\n        self.postMessage({ name: event.data.name, args: [virtualTextData] });\n      },\n      [WorkerMessageType.PAGFile_replaceText]: async (event) => {\n        const [pagFileKey, editableTextIndex, virtualTextData] = event.data.args;\n        const textData = textDataMap[virtualTextData.key];\n        for (const key in virtualTextData) {\n          if (key !== 'key') {\n            textData[key] = virtualTextData[key];\n          }\n        }\n        pagFiles[pagFileKey].replaceText(editableTextIndex, textData);\n        self.postMessage({ name: event.data.name, args: [] });\n      },\n      [WorkerMessageType.PAGFile_replaceImage]: async (event) => {\n        const [pagFileKey, editableImageIndex, pagImageKey] = event.data.args;\n        const pagImage = pagImages[pagImageKey];\n        pagFiles[pagFileKey].replaceImage(editableImageIndex, pagImage);\n        self.postMessage({ name: event.data.name, args: [] });\n      },\n      [WorkerMessageType.PAGFile_destroy]: async (event) => {\n        const [pagFileKey] = event.data.args;\n        pagFiles[pagFileKey].destroy();\n        deletePAGFile(pagFileKey);\n        self.postMessage({ name: event.data.name, args: [] });\n      },\n      [WorkerMessageType.PAGImage_fromSource]: async (event) => {\n        const [bitmap] = event.data.args;\n        const key = registerPAGImage(self.PAG.PAGImage.fromSource(bitmap));\n        self.postMessage({ name: event.data.name, args: [key] });\n      },\n      [WorkerMessageType.PAGImage_destroy]: async (event) => {\n        const [pagImageKey] = event.data.args;\n        pagImages[pagImageKey].destroy();\n        deletePAGImage(pagImageKey);\n        self.postMessage({ name: event.data.name, args: [] });\n      },\n      [WorkerMessageType.TextDocument_delete]: async (event) => {\n        const [textDataKey] = event.data.args;\n        textDataMap[textDataKey].delete();\n        deleteTextData(textDataKey);\n        self.postMessage({ name: event.data.name, args: [] });\n      },\n    };\n\n    const name = event.data.name.split('_')[0];\n\n    if (messageHandles[name]) {\n      messageHandles[name](event);\n      return;\n    }\n\n    const [type, fnName] = name.split('.') as [string, string];\n    const key = event.data.args[0];\n    if (type === 'PAGFile') {\n      const pagFile = pagFiles[key];\n      if (!pagFile) throw new Error(\"pagFile doesn't exist\");\n      const fn = pagFile[fnName] as Function;\n      if (!fn) throw new Error(`PAGFile.${fnName} doesn't exist`);\n      const res = await fn.call(pagFile, ...event.data.args.slice(1));\n      self.postMessage({ name: event.data.name, args: [res] });\n      return;\n    }\n    if (type === 'PAGView') {\n      const pagView = pagViews[key];\n      if (!pagView) throw new Error(\"pagView doesn't exist\");\n      const fn = pagView[fnName] as Function;\n      if (!fn) throw new Error(`PAGView.${fnName} doesn't exist`);\n      const res = await fn.call(pagView, ...event.data.args.slice(1));\n      self.postMessage({ name: event.data.name, args: [res] });\n      return;\n    }\n  };\n};\n\nexport { workerInit };\n","import './utils/polyfills';\nimport { binding } from './binding';\nimport * as types from './types';\nimport createPAG from './wasm/libpag';\nimport { WebAssemblyQueue } from './utils/queue';\nimport { workerInit } from './worker/worker';\nimport { WORKER } from './utils/ua';\n\nexport interface ModuleOption {\n  /**\n   * Link to wasm file.\n   */\n  locateFile?: (file: 'libpag.wasm') => string;\n}\n\n/**\n * Initialize pag webassembly module.\n */\nconst PAGInit = (moduleOption: ModuleOption = {}): Promise<types.PAG> =>\n  createPAG(moduleOption)\n    .then((module: types.PAG) => {\n      binding(module);\n      module.webAssemblyQueue = new WebAssemblyQueue();\n      module.globalCanvas = new module.GlobalCanvas();\n      module.PAGFont.registerFallbackFontNames();\n      return module;\n    })\n    .catch((error: any) => {\n      console.error(error);\n      throw new Error('PAGInit fail! Please check .wasm file path valid.');\n    });\n\nif (WORKER) {\n  workerInit(PAGInit);\n}\n\nexport { PAGInit, types };\n"],"names":["PAGScaleMode","PAGViewListenerEvent","ParagraphJustification","TextDirection","LayerType","PAGTimeStretchMode","MatrixIndex","DecoderResult","ColorType","AlphaType","__decorateClass","isInstanceOf","wasmIns","res","__spreadValues","nav","ANDROID","MOBILE","IPHONE","SAFARI_OR_IOS_WEBVIEW","WORKER","WorkerMessageType","PAGInit","i","err","exports","buffer","errno","xhr","lazyArray","byteArray","typeConverters","fieldTypes","handle","x","classType","getterReturnType","desc","setterArgumentType","argTypes","jsEventHandler","GLctx","event","key","createPAG"],"mappings":"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"}