{"version":3,"file":"pag.min.js","sources":["../src/base/utils/clock.ts","../src/codec/types.ts","../src/codec/tags/tag-header.ts","../src/constant.ts","../src/base/color.ts","../src/base/utils/verify.ts","../src/base/composition.ts","../src/base/video-composition.ts","../src/base/ratio.ts","../src/base/point.ts","../src/base/layer.ts","../src/codec/data-types.ts","../src/codec/tags/composition-attributes.ts","../src/codec/context.ts","../src/base/utils/error-map.ts","../src/codec/utils/byte-array.ts","../src/base/byte-data.ts","../src/base/video-frame.ts","../src/base/sequence.ts","../src/base/video-sequence.ts","../src/codec/utils/byte-utils.ts","../src/codec/nalu-start-code.ts","../src/codec/tags/video-composition-tag.ts","../src/codec/tags/video-sequence-tag.ts","../src/base/effects/effect.ts","../src/base/time-range.ts","../src/base/vector-composition.ts","../src/base/property.ts","../src/base/transform-2d.ts","../src/base/pre-compose-layer.ts","../src/base/shape-layer.ts","../src/base/solid-layer.ts","../src/base/un-defined-layer.ts","../src/base/keyframe.ts","../src/base/animatable-property.ts","../src/codec/attribute-helper.ts","../src/base/utils/interpolate.ts","../src/base/utils/interpolator.ts","../src/base/keyframes/multi-dimension-point-keyframe.ts","../src/base/keyframes/single-ease-keyframe.ts","../src/codec/attributes.ts","../src/codec/tags/tag-attributes.ts","../src/codec/tags/layer-tag.ts","../src/codec/tags/solid-layer.ts","../src/codec/tags/read-composition-reference.ts","../src/codec/tags/vector-composition-tag.ts","../src/codec/tags/file-tags.ts","../src/pag-codec.ts","../src/pag-file.ts","../src/types.ts","../src/decorators.ts","../src/view/utils.ts","../src/base/utils/event-manager.ts","../src/view/context.ts","../src/generator/mp4-generator.ts","../src/generator/mp4-box-helper.ts","../src/view/video-listener.ts","../src/view/video-reader.ts","../src/view/view.ts","../src/view/pag-2d-view.ts","../src/view/shader.ts","../src/view/pag-webgl-view.ts","../src/pag-view.ts"],"sourcesContent":["let getTime: () => number;\ntry {\n  getTime = performance.now.bind(performance);\n} catch (e) {\n  getTime = Date.now;\n}\n\nexport class Clock {\n  private startTime: number;\n  private markers: { [key: string]: number };\n\n  public constructor() {\n    this.startTime = getTime();\n    this.markers = {};\n  }\n\n  public reset() {\n    this.startTime = getTime();\n    this.markers = {};\n  }\n\n  public mark(key: string) {\n    if (!key) {\n      console.log('Clock.mark(): An empty marker name was specified!');\n      return;\n    }\n    if (Object.keys(this.markers).find((markerKey) => markerKey === key)) {\n      console.log(`Clock.mark(): The specified marker name '${key}' already exists!`);\n      return;\n    }\n    this.markers[key] = getTime();\n  }\n\n  public measure(makerFrom: string, makerTo: string) {\n    let start;\n    let end;\n    if (!makerFrom) {\n      start = this.startTime;\n    } else {\n      if (!Object.keys(this.markers).find((markerKey) => markerKey === makerFrom)) {\n        console.log(`Clock.measure(): The specified makerFrom '${makerFrom}' does not exist!`);\n        return 0;\n      }\n      start = this.markers[makerFrom];\n    }\n    if (!makerTo) {\n      end = getTime();\n    } else {\n      if (!Object.keys(this.markers).find((markerKey) => markerKey === makerTo)) {\n        console.log(`Clock.measure(): The specified makerTo '${makerTo}' does not exist!`);\n        return 0;\n      }\n      end = this.markers[makerTo];\n    }\n    return end - start;\n  }\n}\n","export const enum CompositionType {\n  Unknown,\n  Vector,\n  Bitmap,\n  Video,\n}\n\nexport const enum TagCode {\n  End = 0,\n  FontTables = 1,\n  VectorCompositionBlock = 2,\n  CompositionAttributes = 3,\n  ImageTables = 4,\n  LayerBlock = 5,\n  LayerAttributes = 6,\n  SolidColor = 7,\n  TextSource = 8,\n  TextPathOption = 9,\n  TextMoreOption = 10,\n  ImageReference = 11,\n  CompositionReference = 12,\n  Transform2D = 13,\n  MaskBlock = 14,\n  ShapeGroup = 15,\n  Rectangle = 16,\n  Ellipse = 17,\n  PolyStar = 18,\n  ShapePath = 19,\n  Fill = 20,\n  Stroke = 21,\n  GradientFill = 22,\n  GradientStroke = 23,\n  MergePaths = 24,\n  TrimPaths = 25,\n  Repeater = 26,\n  RoundCorners = 27,\n  Performance = 28,\n  DropShadowStyle = 29,\n  InnerShadowStyle = 30,\n  OuterGlowStyle = 31,\n  InnerGlowStyle = 32,\n  BevelAndEmbossStyle = 33,\n  SatinStyle = 34,\n  ColorOverlayStyle = 35,\n  GradientOverlayStyle = 36,\n  StrokeStyle = 37,\n  TintEffect = 38,\n  FillEffect = 39,\n  StrokeEffect = 40,\n  TritoneEffect = 41,\n  DropShadowEffect = 42,\n  RadialWipeEffect = 43,\n  DisplacementMapEffect = 44,\n  BitmapCompositionBlock = 45,\n  BitmapSequence = 46,\n  ImageBytes = 47,\n  ImageBytes2 = 48,\n  ImageBytes3 = 49,\n  VideoCompositionBlock = 50,\n  VideoSequence = 51,\n  LayerAttributesV2 = 52,\n  // add new tags here...\n  Count,\n}\n","import { TagCode } from '../types';\n\nimport type { ByteArray } from '../utils/byte-array';\n\nexport interface TagHeader {\n  code: TagCode;\n  length: number;\n}\n\nexport const readTagHeader = (byteBuffer: ByteArray): TagHeader => {\n  const codeAndLength: number = byteBuffer.readUint16();\n  let length: number = (codeAndLength & 63) >>> 0;\n  const code: number = codeAndLength >> 6;\n  if (length === 63) {\n    length = byteBuffer.readUint32();\n  }\n  if (byteBuffer.context.tagLevel < code) {\n    byteBuffer.context.tagLevel = code;\n  }\n  return { code, length };\n};\n\nexport function readTags<T>(byteArray: ByteArray, parameter: T, reader: Function) {\n  let header = readTagHeader(byteArray);\n  while (header.code !== TagCode.End) {\n    const tagBytes = byteArray.readBytes(header.length);\n    reader(tagBytes, header.code, parameter);\n    if (byteArray.context.tagLevel < tagBytes.context.tagLevel) {\n      byteArray.context.tagLevel = tagBytes.context.tagLevel;\n    }\n    header = readTagHeader(byteArray);\n  }\n}\n","export const ZERO_ID = 0;\nexport const ZERO_TIME = 0;\nexport const OPAQUE = 255;\nexport const TRANSPARENT = 0;\n\n/**\n * Default WebGL ContextAttributes\n */\nexport const WEBGL_CONTEXT_ATTRIBUTES = {\n  alpha: true,\n  depth: false,\n  stencil: false,\n  antialias: true,\n};\n\n// 混合模式\nexport const enum BlendMode {\n  Normal = 0,\n  Multiply = 1,\n  Screen = 2,\n  Overlay = 3,\n  Darken = 4,\n  Lighten = 5,\n  ColorDodge = 6,\n  ColorBurn = 7,\n  HardLight = 8,\n  SoftLight = 9,\n  Difference = 10,\n  Exclusion = 11,\n  Hue = 12,\n  Saturation = 13,\n  Color = 14,\n  Luminosity = 15,\n\n  // modes used only when rendering.\n  DestinationIn = 21,\n  DestinationOut = 22,\n  DestinationATop = 23,\n  SourceIn = 24,\n  SourceOut = 25,\n  Xor = 26,\n}\n\n// 路径动作\nexport const enum PathVerb {\n  MoveTo,\n  LineTo,\n  CurveTo,\n  Close,\n}\n\n// 关键帧的差值器类型\nexport const enum KeyframeInterpolationType {\n  None = 0,\n  Linear = 1,\n  Bezier = 2,\n  Hold = 3,\n}\n\n// 段落对齐\nexport const enum ParagraphJustification {\n  LeftJustify = 0,\n  CenterJustify = 1,\n  RightJustify = 2,\n  FullJustifyLastLineLeft = 3,\n  FullJustifyLastLineRight = 4,\n  FullJustifyLastLineCenter = 5,\n  FullJustifyLastLineFull = 6,\n}\n\nexport const IS_IOS = navigator && /(ios|ipad|iphone)/.test(navigator.userAgent.toLowerCase());\n","export interface Color {\n  red: number; // in the range [0 - 255]\n  green: number;\n  blue: number;\n}\n\nexport const Black: Color = { red: 0, green: 0, blue: 0 };\nexport const White: Color = { red: 255, green: 255, blue: 255 };\nexport const Red: Color = { red: 255, green: 0, blue: 0 };\nexport const Green: Color = { red: 0, green: 255, blue: 0 };\nexport const Blue: Color = { red: 0, green: 0, blue: 255 };\n","export const verifyFailed = () => {\n  console.error('PAG Verify Failed!');\n};\n\nexport const verifyAndReturn = (expression: boolean): boolean => {\n  if (expression) {\n    return true;\n  }\n  console.error('PAG Verify Failed!');\n  return false;\n};\n","import { ZERO_ID, ZERO_TIME } from '../constant';\nimport { Color, White } from './color';\nimport { CompositionType } from '../codec/types';\nimport { TimeRange } from './time-range';\nimport { verifyAndReturn } from './utils/verify';\n\nexport class Composition {\n  private static cacheIDCount = 1;\n\n  /**\n   * A unique identifier for this item.\n   */\n  public id: number = ZERO_ID;\n  /**\n   * The width of the Composition.\n   */\n  public width = 0;\n  /**\n   * The height of the item.\n   */\n  public height = 0;\n  /**\n   * The total duration of the item.\n   */\n  public duration: number = ZERO_TIME;\n  /**\n   * The frame rate of the Composition.\n   */\n  public frameRate = 30;\n  /**\n   * The background color of the composition.\n   */\n  public backgroundColor: Color = White;\n  public cacheID = 0;\n\n  public constructor() {\n    this.cacheID = Composition.cacheIDCount;\n    Composition.cacheIDCount += 1;\n  }\n\n  /**\n   * The type of the Composition.\n   */\n  public type(): CompositionType {\n    return CompositionType.Unknown;\n  }\n\n  /**\n   * Returns the static time ranges of this composition.\n   */\n  public getStaticTimeRanges(): Array<TimeRange> {\n    return [];\n  }\n\n  public verify(): boolean {\n    return verifyAndReturn(this.width > 0 && this.height > 0 && this.duration > 0 && this.frameRate > 0);\n  }\n}\n","import { Composition } from './composition';\nimport { CompositionType } from '../codec/types';\nimport { TimeRange } from './time-range';\nimport { VideoSequence } from './video-sequence';\nimport { verifyFailed } from './utils/verify';\n\nexport class VideoComposition extends Composition {\n  public hasAlpha = false;\n  public sequences: Array<VideoSequence> = [];\n\n  private staticTimeRanges: Array<TimeRange> = [];\n  private staticTimeRangeUpdated = false;\n\n  public type(): CompositionType {\n    return CompositionType.Video;\n  }\n\n  public getStaticTimeRanges(): Array<TimeRange> {\n    if (!this.staticTimeRangeUpdated) {\n      this.staticTimeRangeUpdated = true;\n      this.updateStaticTimeRanges();\n    }\n    return this.staticTimeRanges;\n  }\n\n  public updateStaticTimeRanges(): void {\n    if (this.duration <= 1) return;\n    if (this.sequences.length > 0) {\n      let sequence = this.sequences[0];\n      for (let i = 1; i < this.sequences.length; i++) {\n        const item = this.sequences[i];\n        if (item.frameRate > sequence.frameRate) sequence = item;\n      }\n      const timeScale = this.frameRate / sequence.frameRate;\n      for (const timeRange of sequence.staticTimeRanges) {\n        timeRange.start = Math.round(timeRange.start * timeScale);\n        timeRange.end = Math.round(timeRange.end * timeScale);\n        this.staticTimeRanges.push(timeRange);\n      }\n    } else {\n      const range: TimeRange = { start: 0, end: this.duration - 1 };\n      this.staticTimeRanges.push(range);\n    }\n  }\n\n  public hasImageContent(): boolean {\n    return true;\n  }\n\n  public verify(): boolean {\n    if (!super.verify() || this.sequences.length <= 0) {\n      verifyFailed();\n      return false;\n    }\n    for (const sequence of this.sequences) {\n      if (!sequence || !sequence.verify()) {\n        verifyFailed();\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","export class Ratio {\n  public numerator = 1;\n  public denominator = 1;\n\n  public constructor(numerator: number, denominator: number) {\n    this.numerator = numerator;\n    this.denominator = denominator;\n  }\n\n  public value(): number {\n    return this.numerator / this.denominator;\n  }\n}\n\nexport const DefaultRatio = new Ratio(1, 1);\n","export class Point {\n  public x: number;\n  public y: number;\n  public constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nexport const ZERO_POINT = new Point(0, 0);\n","import { TimeRange } from './time-range';\nimport { VectorComposition } from './vector-composition';\nimport { Ratio, DefaultRatio } from './ratio';\nimport { BlendMode, ZERO_ID, ZERO_TIME } from '../constant';\nimport { Transform2D } from './transform-2d';\nimport { Property } from './property';\nimport { Mask } from './mask';\nimport { Effect } from './effects/effect';\nimport { Point } from './point';\nimport { verifyFailed } from './utils/verify';\nimport { AnimatableProperty } from './animatable-property';\n\nexport const enum LayerStyleType {\n  Unknown,\n  DropShadow,\n  Stroke,\n}\n\nexport class LayerStyle {\n  public type(): LayerStyleType {\n    return LayerStyleType.Unknown;\n  }\n\n  public excludeVaryingRanges(_timeRanges: Array<TimeRange>): void {}\n\n  public gotoFrame(_time: number): void {}\n\n  public verify(): boolean {\n    return false;\n  }\n}\n\nexport const enum TrackMatteType {\n  None = 0,\n  Alpha = 1,\n  AlphaInverted = 2,\n  Luma = 3,\n  LumaInverted = 4,\n}\n\nexport const enum LayerType {\n  Unknown,\n  undefined,\n  Solid,\n  Text,\n  Shape,\n  Image,\n  PreCompose,\n}\n\nexport class Layer {\n  /**\n   * Te id of the layer.\n   */\n  public id = 0;\n  /**\n   * The parent of this layer.\n   */\n  public parent: Layer | undefined = undefined; // layer reference\n\n  public containingComposition: VectorComposition | undefined = undefined; // composition reference\n\n  /**\n   * The time stretch percentage of the layer.\n   */\n  public stretch: Ratio = DefaultRatio;\n  /**\n   * The start time of the layer, indicates the start position of the visible range. It could be a negative value.\n   */\n  public startTime = ZERO_ID;\n  /**\n   * The duration of the layer, indicates the length of the visible range.\n   */\n  public duration: number = ZERO_TIME;\n  /**\n   * When true, the layer' automatic orientation is enabled.\n   */\n  public autoOrientation = false;\n  /**\n   * The transformation of the layer.\n   */\n  public transform: Transform2D | undefined = undefined;\n  /**\n   * When false, the layer should be skipped during the rendering loop.\n   */\n  public isActive = true;\n  /**\n   * The blending mode of the layer.\n   */\n  public blendMode: BlendMode = BlendMode.Normal;\n  /**\n   * If layer has a track matte, specifies the way it is applied.\n   */\n  public trackMatteType: TrackMatteType = TrackMatteType.None;\n  public trackMatteLayer: Layer | undefined = undefined;\n  public timeRemap: Property<number> | undefined = undefined;\n  public masks: Array<Mask> | undefined = undefined;\n  public effects: Array<Effect> | undefined = undefined;\n  public layerStyles: Array<LayerStyle> | undefined = undefined;\n\n  public layerCache: Cache | undefined = undefined;\n\n  private maxScale: Point | undefined = undefined;\n\n  public type(): LayerType {\n    return LayerType.Unknown;\n  }\n\n  public excludeVaryingRanges(timeRanges: Array<TimeRange>): void {\n    this.transform?.excludeVaryingRanges(timeRanges);\n    if (this.timeRemap !== undefined) {\n      this.timeRemap.excludeVaryingRanges(timeRanges);\n    }\n    if (this.masks !== undefined) {\n      for (const mask of this.masks) {\n        mask.excludeVaryingRanges(timeRanges);\n      }\n    }\n    if (this.effects !== undefined && this.effects.length > 0) {\n      for (const effect of this.effects) {\n        effect.excludeVaryingRanges(timeRanges);\n      }\n    }\n    if (this.layerStyles !== undefined && this.layerStyles.length > 0) {\n      for (const layerStyle of this.layerStyles) {\n        layerStyle.excludeVaryingRanges(timeRanges);\n      }\n    }\n  }\n\n  public gotoFrame(frame: number): void {\n    this.transform?.gotoFrame(frame);\n    if (this.timeRemap !== undefined) {\n      this.timeRemap.gotoFrame(frame);\n    }\n    if (this.masks !== undefined && this.masks.length > 0) {\n      for (const mask of this.masks) {\n        mask.gotoFrame(frame);\n      }\n    }\n    if (this.effects !== undefined && this.effects.length > 0) {\n      for (const effect of this.effects) {\n        effect.gotoFrame(frame);\n      }\n    }\n    if (this.layerStyles !== undefined && this.layerStyles.length > 0) {\n      for (const layerStyle of this.layerStyles) {\n        layerStyle.gotoFrame(frame);\n      }\n    }\n  }\n\n  public verify(): boolean {\n    if (!this.containingComposition || this.duration <= 0 || !this.transform) {\n      verifyFailed();\n      return false;\n    }\n    if (!this.transform.verify()) {\n      verifyFailed();\n      return false;\n    }\n    if (this.masks && this.masks.length > 0) {\n      for (const mask of this.masks) {\n        if (!mask || !mask.verify()) {\n          verifyFailed();\n          return false;\n        }\n      }\n    }\n\n    if (this.layerStyles && this.layerStyles.length > 0) {\n      for (const layerStyle of this.layerStyles) {\n        if (!layerStyle || !layerStyle.verify()) {\n          verifyFailed();\n          return false;\n        }\n      }\n    }\n\n    if (this.effects && this.effects.length > 0) {\n      for (const effect of this.effects) {\n        if (!effect || !effect.verify()) {\n          verifyFailed();\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  public getMaxScaleFactor(): Point {\n    if (this.maxScale !== undefined) {\n      return this.maxScale;\n    }\n    this.maxScale = new Point(1, 1);\n    const property = this.transform!.scale;\n    if (property.animatable()) {\n      const { keyframes } = property as AnimatableProperty<Point>;\n      let scaleX = Math.abs(keyframes[0].startValue!.x);\n      let scaleY = Math.abs(keyframes[0].startValue!.y);\n      if (keyframes !== undefined && keyframes.length > 0) {\n        for (const keyframe of keyframes) {\n          const x = Math.abs(keyframe.endValue!.x);\n          const y = Math.abs(keyframe.endValue!.y);\n          if (scaleX < x) {\n            scaleX = x;\n          }\n          if (scaleY < y) {\n            scaleY = y;\n          }\n        }\n      }\n      this.maxScale.x = scaleX;\n      this.maxScale.y = scaleY;\n    } else {\n      this.maxScale.x = Math.abs(property.value.x);\n      this.maxScale.y = Math.abs(property.value.y);\n    }\n    if (this.parent !== undefined) {\n      const parentScale = this.parent.getMaxScaleFactor();\n      this.maxScale.x *= parentScale.x;\n      this.maxScale.y *= parentScale.y;\n    }\n    return this.maxScale;\n  }\n}\n","import { Color } from '../base/color';\nimport { Composition } from '../base/composition';\nimport { Ratio } from '../base/ratio';\nimport { ByteArray } from './utils/byte-array';\nimport { Point } from '../base/point';\nimport { Layer } from '../base/layer';\nimport { Mask } from '../base/mask';\n\nexport const SPATIAL_PRECISION = 0.05;\nexport const BEZIER_PRECISION = 0.005;\n\nexport const readRatio = (byteArray: ByteArray): Ratio => {\n  const numeratorValue: number = byteArray.readEncodeInt32();\n  const denominatorValue: number = byteArray.readEncodedUint32();\n  const ration: Ratio = new Ratio(numeratorValue, denominatorValue);\n  return ration;\n};\n\nexport const readColor = (byteArray: ByteArray): Color => {\n  const redNum: number = byteArray.readUint8();\n  const greenNum: number = byteArray.readUint8();\n  const blueNum: number = byteArray.readUint8();\n  const color: Color = { red: redNum, green: greenNum, blue: blueNum };\n  return color;\n};\n\nexport const readTime = (byteArray: ByteArray): number => byteArray.readEncodedUint64();\n\nexport const readFloat = (byteArray: ByteArray): number => byteArray.readFloat32();\n\nexport const readBoolean = (byteArray: ByteArray): boolean => byteArray.readBitBoolean();\n\nexport const readEnum = (byteArray: ByteArray): number => byteArray.readUint8();\n\nexport const readID = (byteArray: ByteArray): number => byteArray.readEncodedUint32();\n\nexport const readLayerID = (byteArray: ByteArray): Layer => {\n  const id = byteArray.readEncodedUint32();\n  if (id === 0) throw new Error('Layer ID is 0');\n  const layer: Layer = new Layer();\n  layer.id = id;\n  return layer;\n};\n\nexport const readMaskID = (byteArray: ByteArray): Mask => {\n  const id: number = byteArray.readEncodedUint32();\n  if (id === 0) throw new Error('Mask ID is 0');\n  const mask: Mask = new Mask();\n  mask.id = id;\n  return mask;\n};\n\nexport const readCompositionID = (byteArray: ByteArray): Composition => {\n  const id: number = byteArray.readEncodedUint32();\n  if (id === 0) throw new Error('Composition ID is 0');\n  const composition: Composition = new Composition();\n  composition.id = id;\n  return composition;\n};\n\nexport const readString = (byteArray: ByteArray): string => byteArray.readUTF8String();\n\nexport function ReadOpacity(byteArray: ByteArray): number {\n  return byteArray.readUint8();\n}\n\nexport const readPoint = (byteArray: ByteArray): Point => {\n  const x: number = byteArray.readFloat32();\n  const y: number = byteArray.readFloat32();\n  return new Point(x, y);\n};\n","import { Composition } from '../../base/composition';\nimport { readColor, readTime } from '../data-types';\nimport { ByteArray } from '../utils/byte-array';\n\nexport const readCompositionAttributes = (byteArray: ByteArray, composition: Composition) => {\n  composition.width = byteArray.readEncodeInt32();\n  composition.height = byteArray.readEncodeInt32();\n  composition.duration = readTime(byteArray);\n  composition.frameRate = byteArray.readFloat32();\n  composition.backgroundColor = readColor(byteArray);\n};\n","import { Composition } from '../base/composition';\n\nexport class Context {\n  public tagLevel = 0;\n  public compositions: Array<Composition> = [];\n\n  private errorMessages: string[] = [];\n\n  public throwException(message: string) {\n    this.errorMessages.push(message);\n  }\n\n  public releaseCompositions(): Array<Composition> {\n    const compositions = this.compositions.slice();\n    this.compositions = [];\n    return compositions;\n  }\n}\n","export const ErrorMessage = {\n  PAGDecodeError: 'PAG file decode error!',\n};\n","import { Context } from '../context';\nimport { ErrorMessage } from '../../base/utils/error-map';\n\nconst LENGTH_FOR_STORE_NUM_BITS = 5;\n\nexport class ByteArray {\n  public context: Context;\n\n  private readonly littleEndian: boolean;\n  private dataView: DataView;\n  private _position = 0;\n  private bitPosition = 0;\n\n  public constructor(buffer: ArrayBuffer, littleEndian?: boolean) {\n    this.dataView = new DataView(buffer);\n    this.littleEndian = !!littleEndian;\n    this.context = new Context();\n  }\n\n  public get length(): number {\n    return this.dataView.byteLength;\n  }\n\n  public get bytesAvailable(): number {\n    return this.dataView.byteLength - this._position;\n  }\n\n  public data(): ArrayBuffer {\n    return this.dataView.buffer;\n  }\n\n  public get position(): number {\n    return this._position;\n  }\n\n  public alignWithBytes() {\n    this.bitPosition = this._position * 8;\n  }\n\n  public readBoolean(): boolean {\n    const value = this.dataView.getInt8(this._position);\n    this._position += 1;\n    this.positonChanged();\n    return Boolean(value);\n  }\n\n  public readChar(): string {\n    if (this._position >= this.length) throw new Error(ErrorMessage.PAGDecodeError);\n    const value = this.dataView.getInt8(this._position);\n    this._position += 1;\n    this.positonChanged();\n    return String.fromCharCode(value);\n  }\n\n  public readUint8(): number {\n    if (this._position >= this.length) throw new Error(ErrorMessage.PAGDecodeError);\n    const value = this.dataView.getUint8(this._position);\n    this._position += 1;\n    this.positonChanged();\n    return value;\n  }\n\n  public readInt8(): number {\n    if (this._position >= this.length) throw new Error(ErrorMessage.PAGDecodeError);\n    const value = this.dataView.getInt8(this._position);\n    this._position += 1;\n    this.positonChanged();\n    return value;\n  }\n\n  public readInt16(): number {\n    if (this._position >= this.length - 1) throw new Error(ErrorMessage.PAGDecodeError);\n    const value = this.dataView.getInt16(this._position, this.littleEndian);\n    this._position += 2;\n    this.positonChanged();\n    return value;\n  }\n\n  public readUint16(): number {\n    if (this._position >= this.length - 1) throw new Error(ErrorMessage.PAGDecodeError);\n    const value = this.dataView.getUint16(this._position, this.littleEndian);\n    this._position += 2;\n    this.positonChanged();\n    return value;\n  }\n\n  public readInt24(): number {\n    if (this._position >= this.length - 2) throw new Error(ErrorMessage.PAGDecodeError);\n    const left = this.dataView.getInt16(this._position, this.littleEndian);\n    const right = this.dataView.getInt8(this._position + 2);\n    this._position += 3;\n    this.positonChanged();\n    return this.littleEndian ? left + 2 ** 16 * right : 2 ** 16 * left + right;\n  }\n\n  public readUint24(): number {\n    if (this._position >= this.length - 2) throw new Error(ErrorMessage.PAGDecodeError);\n    const left = this.dataView.getUint16(this._position, this.littleEndian);\n    const right = this.dataView.getUint8(this._position + 2);\n    this._position += 3;\n    this.positonChanged();\n    return this.littleEndian ? left + 2 ** 16 * right : 2 ** 16 * left + right;\n  }\n\n  public readInt32(): number {\n    if (this._position >= this.length - 3) throw new Error(ErrorMessage.PAGDecodeError);\n    const value = this.dataView.getInt32(this._position, this.littleEndian);\n    this._position += 4;\n    this.positonChanged();\n    return value;\n  }\n\n  public readUint32(): number {\n    if (this._position >= this.length - 3) throw new Error(ErrorMessage.PAGDecodeError);\n    const value = this.dataView.getUint32(this._position, this.littleEndian);\n    this._position += 4;\n    this.positonChanged();\n    return value;\n  }\n\n  public readInt64(): number {\n    if (this._position >= this.length - 7) throw new Error(ErrorMessage.PAGDecodeError);\n    const left = this.dataView.getInt32(this._position, this.littleEndian);\n    const right = this.dataView.getInt32(this._position + 4, this.littleEndian);\n    this._position += 8;\n    this.positonChanged();\n    return this.littleEndian ? left + 2 ** 32 * right : 2 ** 32 * left + right;\n  }\n\n  public readUint64(): number {\n    if (this._position >= this.length - 7) throw new Error(ErrorMessage.PAGDecodeError);\n    const left = this.dataView.getUint32(this._position, this.littleEndian);\n    const right = this.dataView.getUint32(this._position + 4, this.littleEndian);\n    this._position += 8;\n    this.positonChanged();\n    return this.littleEndian ? left + 2 ** 32 * right : 2 ** 32 * left + right;\n  }\n\n  public readFloat32(): number {\n    if (this._position >= this.length - 3) throw new Error(ErrorMessage.PAGDecodeError);\n    const value = this.dataView.getFloat32(this._position, this.littleEndian);\n    this._position += 4;\n    this.positonChanged();\n    return value;\n  }\n\n  public readDouble(): number {\n    if (this._position >= this.length - 7) throw new Error(ErrorMessage.PAGDecodeError);\n    const value = this.dataView.getFloat64(this._position, this.littleEndian);\n    this._position += 8;\n    this.positonChanged();\n    return value;\n  }\n\n  public readUTF8String(): string {\n    if (this._position >= this.length) throw new Error(ErrorMessage.PAGDecodeError);\n    let encoded = '';\n    let dataLength = 0;\n    for (let i = this._position; i < this.length; i++) {\n      if (this.dataView.getUint8(i) === 0) {\n        break;\n      }\n      encoded += `%${this.dataView.getUint8(i).toString(16)}`;\n      dataLength += 1;\n    }\n    this._position += dataLength;\n    this.positonChanged();\n    return decodeURIComponent(encoded);\n  }\n\n  public readEncodedUint32(): number {\n    const valueMask = 127;\n    const hasNext = 128;\n    let value = 0;\n    let byte = 0;\n    for (let i = 0; i < 32; i += 7) {\n      if (this._position >= this.length) {\n        throw Error('readEncodedUint32 End of file was encountered.');\n      }\n      byte = this.dataView.getUint8(this._position);\n      this._position += 1;\n      value |= (byte & valueMask) << i;\n      if ((byte & hasNext) === 0) {\n        break;\n      }\n    }\n    this.positonChanged();\n    return value;\n  }\n\n  public readEncodeInt32(): number {\n    const data = this.readEncodedUint32();\n    const value = data >> 1;\n    return (data & 1) > 0 ? -value : value;\n  }\n\n  public readEncodedUint64(): number {\n    const valueMask = 127;\n    const hasNext = 128;\n    let value = 0;\n    let byte = 0;\n    for (let i = 0; i < 64; i += 7) {\n      if (this._position >= this.length) {\n        throw Error('readEncodedUint64 End of file was encountered.');\n      }\n      byte = this.dataView.getUint8(this._position);\n      this._position += 1;\n      value |= (byte & valueMask) << i;\n      if ((byte & hasNext) === 0) {\n        break;\n      }\n    }\n    this.positonChanged();\n    return value;\n  }\n\n  public readEncodeInt64(): number {\n    const data = this.readEncodedUint64();\n    const value = data << 0;\n    return (data & 1) > 0 ? -value : value;\n  }\n\n  public readBytes(length?: number): ByteArray {\n    const len = length || this.length - this._position;\n    if (this._position > this.length - len) throw new Error(ErrorMessage.PAGDecodeError);\n    const newBuffer = this.dataView.buffer.slice(this._position, this._position + len);\n    this._position += len;\n    this.positonChanged();\n    return new ByteArray(newBuffer, this.littleEndian);\n  }\n\n  public readUBits(numBits: number): number {\n    const bitMasks: number[] = [0, 1, 3, 7, 15, 31, 63, 127, 255];\n    let value = 0;\n    if (this.bitPosition > this.length * 8 - numBits) throw new Error(ErrorMessage.PAGDecodeError);\n    let pos = 0;\n    while (pos < numBits) {\n      const bytePosition = Math.floor(this.bitPosition * 0.125);\n      const bitPosition = this.bitPosition % 8;\n      let byte = this.dataView.getUint8(bytePosition) >> bitPosition;\n      const bitLength = Math.min(8 - bitPosition, numBits - pos);\n      byte &= bitMasks[bitLength];\n      value |= byte << pos;\n      pos += bitLength;\n      this.bitPosition += bitLength;\n    }\n    this.bitPositionChanged();\n    return value;\n  }\n\n  public readBits(numBits: number): number {\n    let value = this.readUBits(numBits);\n    value <<= 32 - numBits;\n    const data = value << 0;\n    return data >> (32 - numBits);\n  }\n\n  public readNumBits(): number {\n    return this.readUBits(LENGTH_FOR_STORE_NUM_BITS) + 1;\n  }\n\n  public readInt32List(count: number): number[] {\n    const numBits = this.readNumBits();\n    const value = new Array(count);\n    for (let i = 0; i < count; i++) {\n      value[i] = this.readBits(numBits);\n    }\n    return value;\n  }\n\n  public readUint32List(count: number): number[] {\n    const numBits = this.readNumBits();\n    const value = new Array(count);\n    for (let i = 0; i < count; i++) {\n      value[i] = this.readUBits(numBits);\n    }\n    return value;\n  }\n\n  public readBitBoolean() {\n    return this.readUBits(1) !== 0;\n  }\n\n  public readFloatList(count: number, precision: number): number[] {\n    const numBits = this.readNumBits();\n    const value = new Array(count);\n    for (let i = 0; i < count; i++) {\n      value[i] = this.readBits(numBits) * precision;\n    }\n    return value;\n  }\n\n  private bitPositionChanged() {\n    this._position = Math.ceil(this.bitPosition * 0.125);\n  }\n\n  private positonChanged() {\n    this.bitPosition = this._position * 8;\n  }\n}\n","import { ByteArray } from '../codec/utils/byte-array';\n\nexport class ByteData {\n  public data: ByteArray;\n  public length = 0;\n\n  public constructor(data: ByteArray, length: number) {\n    this.data = data;\n    this.length = length;\n  }\n}\n","import { ByteArray } from '../codec/utils/byte-array';\nimport { ByteData } from './byte-data';\n\nexport class VideoFrame {\n  public isKeyframe = false;\n  public frame = 0;\n  public fileBytes: ByteData = new ByteData(new ByteArray(new ArrayBuffer(0)), 0);\n}\n","import { Composition } from './composition';\nimport { verifyAndReturn } from './utils/verify';\n\nexport class Sequence {\n  public composition: Composition | undefined = undefined;\n  public id = 0;\n  public width = 0;\n  public height = 0;\n  public frameRate = 0;\n  public frameCount = 0;\n  public isKeyFrameFlags: Array<boolean> = [];\n\n  public verify() {\n    return verifyAndReturn(this.composition !== undefined && this.width > 0 && this.height > 0 && this.frameRate > 0);\n  }\n}\n","import { ByteData } from './byte-data';\nimport { Sequence } from './sequence';\nimport { TimeRange } from './time-range';\nimport { verifyFailed } from './utils/verify';\nimport { VideoFrame } from './video-frame';\n\nexport class VideoSequence extends Sequence {\n  public alphaStartX = 0;\n  public alphaStartY = 0;\n  public frames: Array<VideoFrame> = [];\n  public headers: Array<ByteData> = [];\n  public staticTimeRanges: Array<TimeRange> = [];\n\n  public verify(): boolean {\n    if (!super.verify() || this.frames.length <= 0) {\n      verifyFailed();\n      return false;\n    }\n    for (const frame of this.frames) {\n      if (!frame || !frame.fileBytes) {\n        verifyFailed();\n        return false;\n      }\n    }\n    for (const header of this.headers) {\n      if (!header) {\n        verifyFailed();\n        return false;\n      }\n    }\n    return true;\n  }\n  // The exact total width and height of the picture were not recorded when the video sequence frame\n  // was exported，You need to do the calculation yourself with width and alphaStartX，\n  // If an odd size is encountered, the exporter plugin automatically increments by one，\n  // This matches the rules for exporter plugin。\n  public getVideoWidth() {\n    let videoWidth = this.alphaStartX + this.width;\n    if (videoWidth % 2 === 1) {\n      videoWidth += 1;\n    }\n    return videoWidth;\n  }\n\n  public getVideoHeight() {\n    let videoHeight = this.alphaStartY + this.height;\n    if (videoHeight % 2 === 1) {\n      videoHeight += 1;\n    }\n    return videoHeight;\n  }\n}\n","export const memcpy = (dst: ArrayBuffer, dstOffset: number, src: ArrayBuffer, srcOffset: number, num: number) => {\n  if (\n    dstOffset >= dst.byteLength ||\n    srcOffset >= src.byteLength ||\n    src.byteLength - srcOffset > dst.byteLength - dstOffset ||\n    num > src.byteLength\n  )\n    return;\n  const dstUint8Array = new Uint8Array(dst);\n  const srcUint8Array = new Uint8Array(src, srcOffset, num);\n  dstUint8Array.set(srcUint8Array, dstOffset);\n};\n\nexport const concatUint8Arrays = (arrays: Array<Uint8Array>) => {\n  let totalLength = 0;\n  for (const arr of arrays) {\n    totalLength += arr.byteLength;\n  }\n  const result = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const arr of arrays) {\n    result.set(arr, offset);\n    offset += arr.byteLength;\n  }\n  return result;\n};\n","import { ByteData } from '../base/byte-data';\nimport { ByteArray } from './utils/byte-array';\nimport { memcpy } from './utils/byte-utils';\n\nexport const readByteDataWithStartCode = (byteArray: ByteArray) => {\n  const length = byteArray.readEncodedUint32();\n  const bytes = byteArray.readBytes(length);\n  if (length === 0) throw new Error('Read start code with length 0!');\n  const data = new ArrayBuffer(length + 4);\n  const dataView = new DataView(data);\n  dataView.setUint32(0, length);\n  memcpy(data, 4, bytes.data(), 0, length);\n  return new ByteData(new ByteArray(data), length + 4);\n};\n","import { VideoComposition } from '../../base/video-composition';\nimport { TagCode } from '../types';\nimport { ByteArray } from '../utils/byte-array';\nimport { readCompositionAttributes } from './composition-attributes';\nimport { readTags } from './tag-header';\nimport { readVideoSequence } from './video-sequence-tag';\n\nexport const readVideoComposition = (byteArray: ByteArray): VideoComposition => {\n  const composition = new VideoComposition();\n  composition.id = byteArray.readEncodedUint32();\n  composition.hasAlpha = byteArray.readBoolean();\n  const parameter = { composition, hasAlpha: composition.hasAlpha };\n  readTags(byteArray, parameter, ReadTagsOfVideoComposition);\n  return composition;\n};\n\nexport const ReadTagsOfVideoComposition = (\n  byteArray: ByteArray,\n  code: TagCode,\n  parameter: { composition: VideoComposition; hasAlpha: boolean },\n) => {\n  const { composition } = parameter;\n  switch (code) {\n    case TagCode.CompositionAttributes:\n      readCompositionAttributes(byteArray, composition);\n      break;\n    case TagCode.VideoSequence: {\n      const sequence = readVideoSequence(byteArray, parameter.hasAlpha);\n      sequence.composition = composition;\n      composition.sequences.push(sequence);\n      break;\n    }\n    default:\n      break;\n  }\n};\n","import { TimeRange } from '../../base/time-range';\nimport { VideoFrame } from '../../base/video-frame';\nimport { VideoSequence } from '../../base/video-sequence';\nimport { readTime } from '../data-types';\nimport { readByteDataWithStartCode } from '../nalu-start-code';\nimport { ByteArray } from '../utils/byte-array';\n\nexport const readVideoSequence = (byteArray: ByteArray, hasAlpha: boolean): VideoSequence => {\n  const videoSequence = new VideoSequence();\n  videoSequence.width = byteArray.readEncodeInt32();\n  videoSequence.height = byteArray.readEncodeInt32();\n  videoSequence.frameRate = byteArray.readFloat32();\n  if (hasAlpha) {\n    videoSequence.alphaStartX = byteArray.readEncodeInt32();\n    videoSequence.alphaStartY = byteArray.readEncodeInt32();\n  }\n\n  const sps = readByteDataWithStartCode(byteArray);\n  const pps = readByteDataWithStartCode(byteArray);\n  videoSequence.headers.push(sps, pps);\n\n  videoSequence.frameCount = byteArray.readEncodedUint32();\n  for (let i = 0; i < videoSequence.frameCount; i++) {\n    const videoFrame = new VideoFrame();\n    videoFrame.isKeyframe = byteArray.readBitBoolean();\n    videoSequence.frames.push(videoFrame);\n  }\n  for (let i = 0; i < videoSequence.frameCount; i++) {\n    const videoFrame = videoSequence.frames[i];\n    videoFrame.frame = readTime(byteArray);\n    videoFrame.fileBytes = readByteDataWithStartCode(byteArray);\n  }\n\n  if (byteArray.bytesAvailable > 0) {\n    const count = byteArray.readEncodedUint32();\n    for (let i = 0; i < count; i++) {\n      const staticTimeRange: TimeRange = { start: 0, end: 0 };\n      staticTimeRange.start = readTime(byteArray);\n      staticTimeRange.end = readTime(byteArray);\n      videoSequence.staticTimeRanges.push(staticTimeRange);\n    }\n  }\n\n  return videoSequence;\n};\n","import { Mask } from '../mask';\nimport { Property } from '../property';\nimport { TimeRange } from '../time-range';\n\nexport const enum EffectType {\n  Unknown,\n  Tint,\n  Fill,\n  Stroke,\n  Tritone,\n  DropShadow,\n  RadialWipe,\n  DisplacementMap,\n}\n\nexport class Effect {\n  public effectOpacity: Property<number> | undefined;\n  public maskReferences: Array<Mask> | undefined; // mask reference\n\n  public type(): EffectType {\n    return EffectType.Unknown;\n  }\n\n  public excludeVaryingRanges(_timeRanges: Array<TimeRange>): void {}\n\n  public gotoFrame(_time: number): void {}\n\n  public verify(): boolean {\n    return false;\n  }\n}\n","export interface TimeRange {\n  start: number;\n  end: number;\n}\n\nexport function subtractFromTimeRanges(timeRanges: Array<TimeRange>, startTime: number, endTime: number) {\n  if (endTime < startTime) {\n    return;\n  }\n  const size = timeRanges.length;\n  for (let i = size - 1; i >= 0; i--) {\n    const timeRange = timeRanges[i];\n    if (timeRange.end < startTime || timeRange.start > endTime) {\n      continue;\n    }\n    if (timeRange.start < startTime && timeRange.end > endTime) {\n      const range = { start: endTime + 1, end: timeRange.end };\n      timeRange.end = startTime - 1;\n      if (range.end > range.start) {\n        timeRanges.splice(i + 1, 0, range);\n      }\n      if (timeRange.end <= timeRange.start) {\n        timeRanges.splice(i, 1);\n      }\n      break;\n    }\n    if (timeRange.start >= startTime && timeRange.end <= endTime) {\n      timeRanges.splice(i, 1);\n    } else if (timeRange.start < startTime) {\n      timeRange.end = startTime - 1;\n      if (timeRange.end <= timeRange.start) {\n        timeRanges.splice(i, 1);\n      }\n    } else {\n      timeRange.start = endTime + 1;\n      if (timeRange.end <= timeRange.start) {\n        timeRanges.splice(i, 1);\n      }\n    }\n  }\n}\n\nexport function splitTimeRangesAt(timeRanges: Array<TimeRange>, startTime: number) {\n  const size = timeRanges.length;\n  for (let i = size - 1; i >= 0; i--) {\n    const timeRange = timeRanges[i];\n    if (timeRange.start === startTime || timeRange.end <= startTime) {\n      break;\n    }\n    if (timeRange.start < startTime && timeRange.end > startTime) {\n      const range = { start: startTime, end: timeRange.end };\n      timeRange.end = startTime - 1;\n      if (range.end > range.start) {\n        timeRanges.splice(i + 1, 0, range);\n      }\n      if (timeRange.end <= timeRange.start) {\n        timeRanges.splice(i, 1);\n      }\n      break;\n    }\n  }\n}\n\nfunction findTimeRangeAt(timeRanges: Array<TimeRange>, position: number, start: number, end: number): number {\n  if (start > end) {\n    return -1;\n  }\n  const index = Math.ceil((start + end) * 0.5);\n  const timeRange = timeRanges[index];\n  if (timeRange.start > position) {\n    return findTimeRangeAt(timeRanges, position, start, index - 1);\n  }\n  if (timeRange.end < position) {\n    return findTimeRangeAt(timeRanges, position, index + 1, end);\n  }\n  return index;\n}\n\nexport function convertFrameByStaticTimeRanges(timeRanges: Array<TimeRange>, frame: number): number {\n  const index = findTimeRangeAt(timeRanges, frame, 0, timeRanges.length - 1);\n  return index !== -1 ? timeRanges[index].start : frame;\n}\n","import { CompositionType } from '../codec/types';\nimport { Composition } from './composition';\nimport { Layer } from './layer';\nimport { splitTimeRangesAt, TimeRange } from './time-range';\nimport { verifyFailed } from './utils/verify';\n\nexport class VectorComposition extends Composition {\n  public layers: Array<Layer> = [];\n\n  private staticTimeRanges: Array<TimeRange> = [];\n  private staticTimeRangeUpdated = false;\n\n  public type(): CompositionType {\n    return CompositionType.Vector;\n  }\n\n  /**\n   * Returns the static time ranges of this composition.\n   */\n  public getStaticTimeRanges(): Array<TimeRange> {\n    if (!this.staticTimeRangeUpdated) {\n      this.staticTimeRangeUpdated = true;\n      this.updateStaticTimeRanges();\n    }\n    return this.staticTimeRanges;\n  }\n\n  public verify(): boolean {\n    if (!super.verify()) {\n      verifyFailed();\n      return false;\n    }\n    for (const layer of this.layers) {\n      if (!layer || !layer.verify()) {\n        verifyFailed();\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private updateStaticTimeRanges() {\n    if (this.duration > 1) {\n      const range = { start: 0, end: this.duration - 1 };\n      this.staticTimeRanges = [range];\n      for (const layer of this.layers) {\n        if (this.staticTimeRanges.length <= 0) {\n          break;\n        }\n        layer.excludeVaryingRanges(this.staticTimeRanges);\n        splitTimeRangesAt(this.staticTimeRanges, layer.startTime);\n        splitTimeRangesAt(this.staticTimeRanges, layer.startTime + layer.duration);\n      }\n    }\n  }\n}\n","import { TimeRange } from './time-range';\n\nexport class Property<T> {\n  public value: T;\n\n  public constructor(value: T) {\n    this.value = value;\n  }\n\n  public animatable(): boolean {\n    return false;\n  }\n\n  public excludeVaryingRanges(_timeRanges: Array<TimeRange>): void {}\n\n  public gotoFrame(_time: number): void {}\n}\n","import { OPAQUE } from '../constant';\nimport { Point, ZERO_POINT } from './point';\nimport { Property } from './property';\n\nimport type { TimeRange } from './time-range';\n\nexport class Transform2D {\n  public static createDefaultTransform2D() {\n    const transform = new Transform2D();\n\n    return transform;\n  }\n\n  public anchorPoint: Property<Point>; // spatial\n  public position: Property<Point>; // spatial\n  public xPosition: Property<number>;\n  public yPosition: Property<number>;\n  public scale: Property<Point>; // multidimensional\n  public rotation: Property<number>;\n  public opacity: Property<number>;\n\n  public constructor() {\n    this.anchorPoint = new Property<Point>(ZERO_POINT);\n    this.position = new Property<Point>(ZERO_POINT);\n    this.xPosition = new Property<number>(0);\n    this.yPosition = new Property<number>(0);\n    this.scale = new Property<Point>(new Point(1, 1));\n    this.rotation = new Property<number>(0);\n    this.opacity = new Property<number>(OPAQUE);\n  }\n\n  public excludeVaryingRanges(timeRanges: Array<TimeRange>): void {\n    this.anchorPoint.excludeVaryingRanges(timeRanges);\n    if (this.position !== undefined) {\n      this.position.excludeVaryingRanges(timeRanges);\n    } else {\n      this.xPosition.excludeVaryingRanges(timeRanges);\n      this.yPosition.excludeVaryingRanges(timeRanges);\n    }\n    this.scale.excludeVaryingRanges(timeRanges);\n    this.rotation.excludeVaryingRanges(timeRanges);\n    this.opacity.excludeVaryingRanges(timeRanges);\n  }\n\n  public gotoFrame(frame: number): void {\n    this.anchorPoint.gotoFrame(frame);\n    if (this.position !== undefined) {\n      this.position.gotoFrame(frame);\n    } else {\n      this.xPosition.gotoFrame(frame);\n      this.yPosition.gotoFrame(frame);\n    }\n    this.scale.gotoFrame(frame);\n    this.rotation.gotoFrame(frame);\n    this.opacity.gotoFrame(frame);\n  }\n\n  public verify(): boolean {\n    return (\n      this.anchorPoint !== undefined &&\n      (this.position !== undefined || (this.xPosition !== undefined && this.yPosition !== undefined)) &&\n      this.scale !== undefined &&\n      this.rotation !== undefined &&\n      this.opacity !== undefined\n    );\n  }\n}\n","import { ZERO_TIME } from '../constant';\nimport { Composition } from './composition';\nimport { Layer, LayerType } from './layer';\nimport { TimeRange } from './time-range';\nimport { Transform2D } from './transform-2d';\n\nexport class PreComposeLayer extends Layer {\n  public static wrap(composition: Composition) {\n    const layer = new PreComposeLayer();\n    layer.duration = composition.duration;\n    const transform = new Transform2D();\n    layer.transform = transform;\n    layer.composition = composition;\n    return layer;\n  }\n\n  /**\n   * composition reference\n   */\n  public composition: Composition | undefined = undefined;\n\n  /**\n   * Indicates when the first frame of the composition shows in the layer's timeline. It could be a negative value.\n   */\n  public compositionStartTime: number = ZERO_TIME;\n\n  private staticTimeRanges: Array<TimeRange> | undefined = undefined;\n  private staticTimeRangeUpdated = false;\n\n  public type(): LayerType {\n    return LayerType.PreCompose;\n  }\n\n  public excludeVaryingRanges(timeRanges: Array<TimeRange>): void {\n    super.excludeVaryingRanges(timeRanges);\n    if (!timeRanges || timeRanges.length === 0) {\n      return;\n    }\n    this.updateStaticTimeRanges();\n  }\n\n  public gotoFrame(frame: number): void {\n    super.gotoFrame(frame);\n  }\n\n  public verify(): boolean {\n    if (!super.verify()) {\n      return false;\n    }\n    if (this.composition) {\n      return true;\n    }\n    return false;\n  }\n\n  private updateStaticTimeRanges(): void {\n    if (this.staticTimeRangeUpdated) {\n      return;\n    }\n    this.staticTimeRangeUpdated = true;\n    const ranges = this.composition?.getStaticTimeRanges();\n    if (!ranges) return;\n    for (let i = ranges.length - 1; i >= 0; i--) {\n      const range: TimeRange = ranges[i];\n      range.start += this.compositionStartTime;\n      range.end += this.compositionStartTime;\n      if (range.end <= this.startTime) {\n        ranges.pop();\n      } else if (range.start < this.startTime) {\n        range.start = 0;\n      } else if (range.start >= this.startTime + this.duration - 1) {\n        ranges.pop();\n      } else if (range.end > this.startTime + this.duration - 1) {\n        range.end = this.startTime + this.duration - 1;\n      }\n    }\n    this.staticTimeRanges = ranges;\n  }\n}\n","import { Layer, LayerType } from './layer';\nimport { ShapeElement } from './shape-element';\nimport { TimeRange } from './time-range';\n\nexport class ShapeLayer extends Layer {\n  private contents: Array<ShapeElement> = [];\n\n  public type(): LayerType {\n    return LayerType.Shape;\n  }\n\n  public excludeVaryingRanges(timeRanges: Array<TimeRange>) {\n    super.excludeVaryingRanges(timeRanges);\n    for (const element of this.contents) {\n      element.excludeVaryingRanges(timeRanges);\n    }\n  }\n\n  public gotoFrame(frame: number) {\n    super.gotoFrame(frame);\n    for (const element of this.contents) {\n      element.gotoFrame(frame);\n    }\n  }\n\n  public verify(): boolean {\n    if (!super.verify()) {\n      return false;\n    }\n\n    for (const element of this.contents) {\n      if (element === undefined || !element.verify()) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import { Black, Color } from './color';\nimport { Layer, LayerType } from './layer';\nimport { TimeRange } from './time-range';\nimport { verifyAndReturn, verifyFailed } from './utils/verify';\n\nexport class SolidLayer extends Layer {\n  public solidColor: Color = Black;\n  public width = 0;\n  public height = 0;\n\n  public type(): LayerType {\n    return LayerType.Solid;\n  }\n\n  public excludeVaryingRanges(timeRanges: Array<TimeRange>) {\n    super.excludeVaryingRanges(timeRanges);\n  }\n\n  public gotoFrame(frame: number) {\n    super.gotoFrame(frame);\n  }\n\n  public verify(): boolean {\n    if (!super.verify()) {\n      verifyFailed();\n      return false;\n    }\n    return verifyAndReturn(this.width > 0 && this.height > 0);\n  }\n}\n","import { Layer, LayerType } from './layer';\n\nexport class UnDefinedLayer extends Layer {\n  public type(): LayerType {\n    return LayerType.undefined;\n  }\n}\n","import { KeyframeInterpolationType } from '../constant';\nimport { Point, ZERO_POINT } from './point';\n\nexport class Keyframe<T> {\n  public startValue: T | undefined;\n  public endValue: T | undefined;\n  public startTime = 0;\n  public endTime = 0;\n  public interpolationType: KeyframeInterpolationType = KeyframeInterpolationType.Hold; // 插补类型\n  public bezierOut: Array<Point> = [];\n  public bezierIn: Array<Point> = [];\n  public spatialOut: Point = ZERO_POINT;\n  public spatialIn: Point = ZERO_POINT;\n\n  public initialize(): void {}\n\n  public getValue(_time: number): any {\n    return this.startValue;\n  }\n\n  public containsTime(time: number): boolean {\n    return time >= this.startTime && time < this.endTime;\n  }\n}\n","import { KeyframeInterpolationType } from '../constant';\nimport { Keyframe } from './keyframe';\nimport { Property } from './property';\nimport { splitTimeRangesAt, subtractFromTimeRanges, TimeRange } from './time-range';\n\nexport class AnimatableProperty<T> extends Property<T> {\n  private lastKeyframeIndex = 0;\n\n  public constructor(public keyframes: Array<Keyframe<T>>) {\n    if (!keyframes || keyframes.length === 0) throw new Error('keyframes is required');\n    if (keyframes[0].startValue === undefined) throw new Error('startValue is required');\n    super(keyframes[0].startValue);\n    for (const keyframe of keyframes) {\n      keyframe.initialize();\n    }\n  }\n\n  public animatable(): boolean {\n    return true;\n  }\n\n  public excludeVaryingRanges(timeRanges: Array<TimeRange>): void {\n    for (const keyframe of this.keyframes) {\n      switch (keyframe.interpolationType) {\n        case KeyframeInterpolationType.Bezier:\n        case KeyframeInterpolationType.Linear:\n          subtractFromTimeRanges(timeRanges, keyframe.startTime, keyframe.endTime - 1);\n          break;\n        default:\n          splitTimeRangesAt(timeRanges, keyframe.startTime);\n          splitTimeRangesAt(timeRanges, keyframe.endTime);\n          break;\n      }\n    }\n  }\n\n  public gotoFrame(frame: number): void {\n    let lastKeyframe = this.keyframes[this.lastKeyframeIndex];\n    if (lastKeyframe.containsTime(frame)) {\n      this.value = lastKeyframe.getValue(frame);\n      return;\n    }\n    if (frame < lastKeyframe.startTime) {\n      while (this.lastKeyframeIndex > 0) {\n        this.lastKeyframeIndex -= 1;\n        if (this.keyframes[this.lastKeyframeIndex].containsTime(frame)) {\n          break;\n        }\n      }\n    } else {\n      while (this.lastKeyframeIndex < this.keyframes.length - 1) {\n        this.lastKeyframeIndex += 1;\n        if (this.keyframes[this.lastKeyframeIndex].containsTime(frame)) {\n          break;\n        }\n      }\n    }\n    lastKeyframe = this.keyframes[this.lastKeyframeIndex];\n    if (lastKeyframe.startValue !== undefined && frame <= lastKeyframe.startTime) {\n      this.value = lastKeyframe.startValue;\n    } else if (lastKeyframe.endValue !== undefined && frame >= lastKeyframe.endTime) {\n      this.value = lastKeyframe.endValue;\n    } else {\n      this.value = lastKeyframe.getValue(frame);\n    }\n  }\n}\n","import { TagCode } from './types';\nimport { ByteArray } from './utils/byte-array';\nimport { Keyframe } from '../base/keyframe';\nimport { Property } from '../base/property';\nimport { BEZIER_PRECISION, readTime } from './data-types';\nimport { KeyframeInterpolationType } from '../constant';\nimport { AnimatableProperty } from '../base/animatable-property';\n\nexport const enum AttributeType {\n  Value,\n  FixedValue, // always exists, no need to store a flag.\n  SimpleProperty,\n  DiscreteProperty,\n  MultiDimensionProperty,\n  SpatialProperty,\n  BitFlag, // save bool value as a flag\n  Custom, // save a flag to indicate whether it should trigger a custom reading / writing action.\n}\n\nexport interface AttributeFlag {\n  /**\n   * Indicates whether or not this value is exist.\n   */\n  exist: boolean;\n  /**\n   * Indicates whether or not the size of this property's keyframes is greater than zero.\n   */\n  animatable: boolean;\n  /**\n   * Indicates whether or not this property has spatial values.\n   */\n  hasSpatial: boolean;\n}\n\nexport const readTagBlock = <T>(byteArray: ByteArray, parameter: T, blockConfig: BlockConfig) => {\n  const tagConfig: BlockConfig = blockConfig;\n  const flags: Array<AttributeFlag> = [];\n  if (!tagConfig.configs || tagConfig.configs.length === 0) {\n    return parameter;\n  }\n  for (const config of tagConfig.configs) {\n    const flag = readAttributeFlag(byteArray, config);\n    flags.push(flag);\n  }\n  byteArray.alignWithBytes();\n  let index = 0;\n  for (const config of tagConfig.configs) {\n    const flag = flags[index];\n    const target = config.key;\n    config.readAttribute(byteArray, flag, parameter as any as Object, target);\n    index += 1;\n  }\n  return parameter;\n};\n\nexport class BlockConfig {\n  public tagCode: TagCode = TagCode.End;\n  public configs: Array<BaseAttribute> = [];\n\n  public constructor(tagCode: TagCode) {\n    this.tagCode = tagCode;\n  }\n}\n\nexport class BaseAttribute {\n  public attributeType: AttributeType;\n  public defaultValue: any;\n  public key: string;\n\n  public constructor(key: string, attributeType: AttributeType, defaultValue: any) {\n    this.attributeType = attributeType;\n    this.defaultValue = defaultValue;\n    this.key = key;\n  }\n\n  public readAttribute(_byteArray: ByteArray, _flag: AttributeFlag, _targetClass: object, _target: string) {}\n\n  public readValue(_byteArray: ByteArray): any {\n    return undefined;\n  }\n\n  public readValueList(_byteArray: ByteArray, _list: Array<any>, _count: number) {}\n\n  public dimensionality(): number {\n    return 1;\n  }\n\n  public newKeyframe(_flag: AttributeFlag): Keyframe<any> {\n    return new Keyframe<any>();\n  }\n}\n\nexport const readAttribute = (\n  byteArray: ByteArray,\n  flag: AttributeFlag,\n  targetClass: { [key: string]: any },\n  target: string,\n  config: BaseAttribute,\n) => {\n  if (config.attributeType === AttributeType.BitFlag) {\n    targetClass[target] = flag.exist;\n  } else if (config.attributeType === AttributeType.FixedValue) {\n    targetClass[target] = config.readValue(byteArray);\n  } else if (config.attributeType === AttributeType.Value) {\n    targetClass[target] = readValue(byteArray, config, flag);\n  } else {\n    targetClass[target] = readProperty(byteArray, config, flag);\n  }\n};\n\nexport const readProperty = <T>(byteArray: ByteArray, config: BaseAttribute, flag: AttributeFlag): any => {\n  let property: Property<T>;\n  if (flag.exist) {\n    if (flag.animatable) {\n      const keyframes: Array<Keyframe<T>> = readKeyframes(byteArray, config, flag);\n      if (!keyframes || keyframes.length === 0) {\n        throw new Error('Wrong number of keyframes!');\n      }\n      readTimeAndValue(byteArray, keyframes, config);\n      readTimeEase(byteArray, keyframes, config);\n      if (flag.hasSpatial) {\n        readSpatialEase(byteArray, keyframes);\n      }\n      property = new AnimatableProperty<T>(keyframes);\n    } else {\n      property = new Property<T>(readValue(byteArray, config, flag));\n    }\n  } else {\n    property = new Property<T>(config.defaultValue);\n  }\n  return property;\n};\n\nexport const readValue = (byteArray: ByteArray, config: BaseAttribute, flag: AttributeFlag): any => {\n  if (flag.exist) {\n    return config.readValue(byteArray);\n  }\n  return config.defaultValue;\n};\n\nexport const readAttributeFlag = (byteArray: ByteArray, config: BaseAttribute): AttributeFlag => {\n  const flag: AttributeFlag = { exist: false, animatable: false, hasSpatial: false };\n  const { attributeType } = config;\n  if (attributeType === AttributeType.FixedValue) {\n    flag.exist = true;\n    return flag;\n  }\n  flag.exist = byteArray.readBitBoolean();\n  if (\n    !flag.exist ||\n    attributeType === AttributeType.Value ||\n    attributeType === AttributeType.BitFlag ||\n    attributeType === AttributeType.Custom\n  ) {\n    return flag;\n  }\n  flag.animatable = byteArray.readBitBoolean();\n  if (!flag.animatable || attributeType !== AttributeType.SpatialProperty) {\n    return flag;\n  }\n  flag.hasSpatial = byteArray.readBitBoolean();\n  return flag;\n};\n\nexport const readKeyframes = <T>(\n  byteArray: ByteArray,\n  config: BaseAttribute,\n  flag: AttributeFlag,\n): Array<Keyframe<T>> => {\n  const keyframes: Array<any> = [];\n  const numFrames: number = byteArray.readEncodedUint32();\n  for (let i = 0; i < numFrames; i++) {\n    let keyframe: Keyframe<T>;\n    if (config.attributeType === AttributeType.DiscreteProperty) {\n      keyframe = new Keyframe<T>();\n    } else {\n      const interpolationType = byteArray.readUBits(2) as KeyframeInterpolationType;\n      if (interpolationType === KeyframeInterpolationType.Hold) {\n        keyframe = new Keyframe<T>();\n      } else {\n        keyframe = config.newKeyframe(flag);\n        keyframe.interpolationType = interpolationType;\n      }\n    }\n    keyframes.push(keyframe);\n  }\n\n  return keyframes;\n};\n\nconst readTimeAndValue = <T>(byteArray: ByteArray, keyframes: Array<Keyframe<T>>, config: BaseAttribute) => {\n  const numFrames: number = keyframes.length;\n  keyframes[0].startTime = readTime(byteArray);\n  for (let i = 0; i < numFrames; i++) {\n    const time: number = readTime(byteArray);\n    keyframes[i].endTime = time;\n    if (i < numFrames - 1) {\n      keyframes[i + 1].startTime = time;\n    }\n  }\n  const list: Array<T> = [];\n  config.readValueList(byteArray, list, numFrames + 1);\n  let index = 0;\n  keyframes[0].startValue = list[index];\n  index += 1;\n  for (let i = 0; i < numFrames; i++) {\n    const value = list[index];\n    index += 1;\n    keyframes[i].endValue = value;\n    if (i < numFrames - 1) {\n      keyframes[i + 1].startValue = value;\n    }\n  }\n};\n\nconst readTimeEase = <T>(byteArray: ByteArray, keyframes: Array<Keyframe<T>>, config: BaseAttribute) => {\n  const dimensionality: number =\n    config.attributeType === AttributeType.MultiDimensionProperty ? config.dimensionality() : 1;\n  const numBits: number = byteArray.readNumBits();\n  for (const keyframe of keyframes) {\n    if (keyframe.interpolationType !== KeyframeInterpolationType.Bezier) {\n      continue;\n    }\n    let x: number;\n    let y: number;\n    for (let i = 0; i < dimensionality; i++) {\n      x = byteArray.readBits(numBits) * BEZIER_PRECISION;\n      y = byteArray.readBits(numBits) * BEZIER_PRECISION;\n      keyframe.bezierOut.push({ x, y });\n      x = byteArray.readBits(numBits) * BEZIER_PRECISION;\n      y = byteArray.readBits(numBits) * BEZIER_PRECISION;\n      keyframe.bezierIn.push({ x, y });\n    }\n  }\n};\n\nconst readSpatialEase = <T>(_byteArray: ByteArray, _keyframes: Array<Keyframe<T>>) => {};\n","export function interpolateFloat(a: number, b: number, t: number): number {\n  return a + (b - a) * t;\n}\n","export class Interpolator {\n  public getInterpolation(input: number): number {\n    return input;\n  }\n}\n","import { KeyframeInterpolationType } from '../../constant';\nimport { Keyframe } from '../keyframe';\nimport { Point } from '../point';\nimport { interpolateFloat } from '../utils/interpolate';\nimport { Interpolator } from '../utils/interpolator';\n\nexport class MultiDimensionPointKeyframe extends Keyframe<Point> {\n  private xInterpolator: Interpolator | undefined;\n  private yInterpolator: Interpolator | undefined;\n\n  public initialize(): void {\n    super.initialize();\n    if (this.interpolationType === KeyframeInterpolationType.Bezier) {\n      // todo sun bezier\n    } else {\n      this.xInterpolator = new Interpolator();\n      this.yInterpolator = new Interpolator();\n    }\n  }\n\n  public getValue(time: number): Point {\n    const progress = (time - this.startTime) / (this.endTime - this.startTime);\n    const xProgress = this.xInterpolator?.getInterpolation(progress) ?? progress;\n    const yProgress = this.yInterpolator?.getInterpolation(progress) ?? progress;\n    const x = interpolateFloat(this.startValue!.x, this.endValue!.x, xProgress);\n    const y = interpolateFloat(this.startValue!.y, this.endValue!.y, yProgress);\n    return { x, y };\n  }\n}\n","import { KeyframeInterpolationType } from '../../constant';\nimport { Keyframe } from '../keyframe';\nimport { interpolateFloat } from '../utils/interpolate';\nimport { Interpolator } from '../utils/interpolator';\n\nexport class SingleEaseKeyframe<T> extends Keyframe<T> {\n  private interpolator: Interpolator | undefined;\n\n  public initialize() {\n    if (this.interpolationType === KeyframeInterpolationType.Bezier) {\n      // Bazier相关\n    } else {\n      this.interpolator = new Interpolator();\n    }\n  }\n\n  public getProgress(time: number): number {\n    const progress = (time - this.startTime) / (this.endTime - this.startTime);\n    return this.interpolator?.getInterpolation(progress) ?? progress;\n  }\n\n  public getValue(time: number): number {\n    const progress = this.getProgress(time);\n    return interpolateFloat(this.startValue as any as number, this.endValue as any as number, progress);\n  }\n}\n","import { Color } from '../base/color';\nimport { Composition } from '../base/composition';\nimport { Keyframe } from '../base/keyframe';\nimport { MultiDimensionPointKeyframe } from '../base/keyframes/multi-dimension-point-keyframe';\nimport { SingleEaseKeyframe } from '../base/keyframes/single-ease-keyframe';\nimport { Layer } from '../base/layer';\nimport { Point } from '../base/point';\nimport { Ratio } from '../base/ratio';\nimport { AttributeFlag, AttributeType, BaseAttribute, readAttribute } from './attribute-helper';\nimport {\n  readColor,\n  readCompositionID,\n  readLayerID,\n  readPoint,\n  readRatio,\n  readTime,\n  SPATIAL_PRECISION,\n} from './data-types';\nimport { ByteArray } from './utils/byte-array';\n\nexport interface BaseAttributeConfig<T> {\n  newKeyframe: (flag: AttributeFlag) => Keyframe<T>;\n}\n\nexport class FloatAttributeConfig extends BaseAttribute implements BaseAttributeConfig<number> {\n  public constructor(key: string, attributeType: AttributeType, defaultValue: any) {\n    super(key, attributeType, defaultValue);\n  }\n\n  public readAttribute(byteArray: ByteArray, flag: AttributeFlag, targetClass: object, target: string) {\n    readAttribute(byteArray, flag, targetClass, target, this);\n  }\n\n  public readValue(byteArray: ByteArray): number {\n    return byteArray.readFloat32();\n  }\n\n  public readValueList(byteArray: ByteArray, list: Array<number>, count: number) {\n    for (let i = 0; i < count; i++) {\n      list.push(this.readValue(byteArray));\n    }\n  }\n\n  public dimensionality(): number {\n    return 1;\n  }\n\n  public newKeyframe(_flag: AttributeFlag): Keyframe<number> {\n    return new SingleEaseKeyframe<number>();\n  }\n}\n\nexport class BOOLAttributeConfig extends BaseAttribute implements BaseAttributeConfig<Boolean> {\n  public constructor(key: string, attributeType: AttributeType, defaultValue: any) {\n    super(key, attributeType, defaultValue);\n  }\n\n  public readAttribute(byteArray: ByteArray, flag: AttributeFlag, targetClass: object, target: string) {\n    readAttribute(byteArray, flag, targetClass, target, this);\n  }\n\n  public readValue(byteArray: ByteArray): boolean {\n    return byteArray.readBoolean();\n  }\n\n  public readValueList(byteArray: ByteArray, list: Array<boolean>, count: number) {\n    for (let i = 0; i < count; i++) {\n      list.push(byteArray.readBitBoolean());\n    }\n  }\n\n  public dimensionality(): number {\n    return 1;\n  }\n\n  public newKeyframe(_flag: AttributeFlag): Keyframe<boolean> {\n    return new Keyframe<boolean>();\n  }\n}\n\nexport class Uint8AttributeConfig extends BaseAttribute implements BaseAttributeConfig<number> {\n  public constructor(key: string, attributeType: AttributeType, defaultValue: number) {\n    super(key, attributeType, defaultValue);\n  }\n\n  public readAttribute(byteArray: ByteArray, flag: AttributeFlag, targetClass: object, target: string) {\n    readAttribute(byteArray, flag, targetClass, target, this);\n  }\n\n  public readValue(byteArray: ByteArray): number {\n    return byteArray.readUint8();\n  }\n\n  public readValueList(byteArray: ByteArray, list: Array<number>, count: number) {\n    const valueList = byteArray.readUint32List(count);\n    for (let i = 0; i < count; i++) {\n      list.push(valueList[i]);\n    }\n  }\n\n  public dimensionality(): number {\n    return 1;\n  }\n\n  public newKeyframe(_flag: AttributeFlag): Keyframe<number> {\n    return new SingleEaseKeyframe<number>();\n  }\n}\n\nexport class AttributeConfigUint32 extends BaseAttribute implements BaseAttributeConfig<number> {\n  public constructor(key: string, attributeType: AttributeType, defaultValue: any) {\n    super(key, attributeType, defaultValue);\n  }\n\n  public readAttribute(byteArray: ByteArray, flag: AttributeFlag, targetClass: object, target: string) {\n    readAttribute(byteArray, flag, targetClass, target, this);\n  }\n\n  public readValue(byteArray: ByteArray): number {\n    return byteArray.readEncodedUint32();\n  }\n\n  public readValueList(byteArray: ByteArray, list: Array<number>, count: number) {\n    // eslint-disable-next-line no-param-reassign\n    list = byteArray.readUint32List(count);\n  }\n\n  public dimensionality(): number {\n    return 1;\n  }\n\n  public newKeyframe(_flag: AttributeFlag): Keyframe<number> {\n    return new SingleEaseKeyframe<number>();\n  }\n}\n\nexport class TimeAttributeConfig extends BaseAttribute implements BaseAttributeConfig<number> {\n  public constructor(key: string, attributeType: AttributeType, defaultValue: any) {\n    super(key, attributeType, defaultValue);\n  }\n\n  public readAttribute(byteArray: ByteArray, flag: AttributeFlag, targetClass: object, target: string) {\n    readAttribute(byteArray, flag, targetClass, target, this);\n  }\n\n  public readValue(byteArray: ByteArray): number {\n    return readTime(byteArray);\n  }\n\n  public readValueList(byteArray: ByteArray, list: Array<number>, count: number) {\n    for (let i = 0; i < count; i++) {\n      list[i] = this.readValue(byteArray);\n    }\n  }\n\n  public dimensionality(): number {\n    return 1;\n  }\n\n  public newKeyframe(_flag: AttributeFlag): Keyframe<number> {\n    return new SingleEaseKeyframe<number>();\n  }\n}\n\nexport class PointAttributeConfig extends BaseAttribute implements BaseAttributeConfig<Point> {\n  public constructor(key: string, attributeType: AttributeType, defaultValue: any) {\n    super(key, attributeType, defaultValue);\n  }\n\n  public readAttribute(byteArray: ByteArray, flag: AttributeFlag, targetClass: object, target: string) {\n    readAttribute(byteArray, flag, targetClass, target, this);\n  }\n\n  public readValue(byteArray: ByteArray): Point {\n    return readPoint(byteArray);\n  }\n\n  public readValueList(byteArray: ByteArray, list: Array<Point>, count: number) {\n    if (this.attributeType === AttributeType.SpatialProperty) {\n      const values: number[] = byteArray.readFloatList(count * 2, SPATIAL_PRECISION);\n      for (let i = 0; i < count; i++) {\n        list[i] || (list[i] = new Point(0, 0));\n        list[i].x = values[i];\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        list[i] = readPoint(byteArray);\n      }\n    }\n  }\n\n  public dimensionality(): number {\n    return 2;\n  }\n\n  public newKeyframe(_flag: AttributeFlag): Keyframe<Point> {\n    switch (this.attributeType) {\n      case AttributeType.MultiDimensionProperty:\n        return new MultiDimensionPointKeyframe();\n      default:\n        return new SingleEaseKeyframe<Point>();\n    }\n  }\n}\n\nexport class ColorAttributeConfig extends BaseAttribute implements BaseAttributeConfig<Color> {\n  public constructor(key: string, attributeType: AttributeType, defaultValue: any) {\n    super(key, attributeType, defaultValue);\n  }\n\n  public readAttribute(byteArray: ByteArray, flag: AttributeFlag, targetClass: object, target: string) {\n    readAttribute(byteArray, flag, targetClass, target, this);\n  }\n\n  public readValue(byteArray: ByteArray): Color {\n    return readColor(byteArray);\n  }\n\n  public readValueList(byteArray: ByteArray, list: Array<Color>, count: number) {\n    for (let i = 0; i < count; i++) {\n      list[i] = this.readValue(byteArray);\n    }\n  }\n\n  public dimensionality(): number {\n    return 3;\n  }\n\n  public newKeyframe(_flag: AttributeFlag): Keyframe<Color> {\n    return new SingleEaseKeyframe<Color>();\n  }\n}\n\nexport class RatioAttributeConfig extends BaseAttribute implements BaseAttributeConfig<Ratio> {\n  public constructor(key: string, attributeType: AttributeType, defaultValue: any) {\n    super(key, attributeType, defaultValue);\n  }\n\n  public readAttribute(byteArray: ByteArray, flag: AttributeFlag, targetClass: object, target: string) {\n    readAttribute(byteArray, flag, targetClass, target, this);\n  }\n\n  public readValue(byteArray: ByteArray): Ratio {\n    return readRatio(byteArray);\n  }\n\n  public readValueList(byteArray: ByteArray, list: Array<Ratio>, count: number) {\n    for (let i = 0; i < count; i++) {\n      list[i] = this.readValue(byteArray);\n    }\n  }\n\n  public dimensionality(): number {\n    return 1;\n  }\n\n  public newKeyframe(_flag: AttributeFlag): Keyframe<Ratio> {\n    return new SingleEaseKeyframe<Ratio>();\n  }\n}\n\nexport class StringAttributeConfig extends BaseAttribute implements BaseAttributeConfig<string> {\n  public constructor(key: string, attributeType: AttributeType, defaultValue: any) {\n    super(key, attributeType, defaultValue);\n  }\n\n  public readAttribute(byteArray: ByteArray, flag: AttributeFlag, targetClass: object, target: string) {\n    readAttribute(byteArray, flag, targetClass, target, this);\n  }\n\n  public readValue(byteArray: ByteArray): string {\n    return byteArray.readUTF8String();\n  }\n\n  public readValueList(byteArray: ByteArray, list: Array<string>, count: number) {\n    for (let i = 0; i < count; i++) {\n      list[i] = this.readValue(byteArray);\n    }\n  }\n\n  public dimensionality(): number {\n    return 1;\n  }\n\n  public newKeyframe(_flag: AttributeFlag): Keyframe<string> {\n    return new SingleEaseKeyframe<string>();\n  }\n}\n\nexport class LayerAttributeConfig extends BaseAttribute implements BaseAttributeConfig<Layer> {\n  public constructor(key: string, attributeType: AttributeType, defaultValue: any) {\n    super(key, attributeType, defaultValue);\n  }\n\n  public readAttribute(byteArray: ByteArray, flag: AttributeFlag, targetClass: object, target: string) {\n    readAttribute(byteArray, flag, targetClass, target, this);\n  }\n\n  public readValue(byteArray: ByteArray): Layer {\n    return readLayerID(byteArray);\n  }\n\n  public readValueList(byteArray: ByteArray, list: Array<Layer>, count: number) {\n    for (let i = 0; i < count; i++) {\n      list[i] = this.readValue(byteArray);\n    }\n  }\n\n  public dimensionality(): number {\n    return 1;\n  }\n\n  public newKeyframe(_flag: AttributeFlag): Keyframe<Layer> {\n    return new SingleEaseKeyframe<Layer>();\n  }\n}\n\nexport class CompositionAttributeConfig extends BaseAttribute implements BaseAttributeConfig<Composition> {\n  public constructor(key: string, attributeType: AttributeType, defaultValue: any) {\n    super(key, attributeType, defaultValue);\n  }\n\n  public readAttribute(byteArray: ByteArray, flag: AttributeFlag, targetClass: object, target: string) {\n    readAttribute(byteArray, flag, targetClass, target, this);\n  }\n\n  public readValue(byteArray: ByteArray): Composition {\n    return readCompositionID(byteArray);\n  }\n\n  public readValueList(byteArray: ByteArray, list: Array<Composition>, count: number) {\n    for (let i = 0; i < count; i++) {\n      list[i] = this.readValue(byteArray);\n    }\n  }\n\n  public dimensionality(): number {\n    return 1;\n  }\n\n  public newKeyframe(_flag: AttributeFlag): Keyframe<Composition> {\n    return new SingleEaseKeyframe<Composition>();\n  }\n}\n","import { TrackMatteType } from '../../base/layer';\nimport { Point, ZERO_POINT } from '../../base/point';\nimport { DefaultRatio } from '../../base/ratio';\nimport { BlendMode, OPAQUE, ZERO_TIME } from '../../constant';\nimport { TagCode } from '../types';\nimport { AttributeType, BlockConfig } from '../attribute-helper';\nimport {\n  BOOLAttributeConfig,\n  FloatAttributeConfig,\n  LayerAttributeConfig,\n  PointAttributeConfig,\n  RatioAttributeConfig,\n  StringAttributeConfig,\n  TimeAttributeConfig,\n  Uint8AttributeConfig,\n} from '../attributes';\n\nexport const readBlockConfigOfLayerAttributes: BlockConfig = {\n  tagCode: TagCode.LayerAttributes,\n  configs: [\n    new BOOLAttributeConfig('isActive', AttributeType.BitFlag, true),\n    new BOOLAttributeConfig('autoOrientation', AttributeType.BitFlag, false),\n    new LayerAttributeConfig('parent', AttributeType.Value, undefined),\n    new RatioAttributeConfig('stretch', AttributeType.Value, DefaultRatio),\n    new TimeAttributeConfig('startTime', AttributeType.Value, ZERO_TIME),\n    new Uint8AttributeConfig('blendMode', AttributeType.Value, BlendMode.Normal),\n    new Uint8AttributeConfig('trackMatteType', AttributeType.Value, TrackMatteType.None),\n    new FloatAttributeConfig('timeRemap', AttributeType.SimpleProperty, 0),\n    new TimeAttributeConfig('duration', AttributeType.FixedValue, ZERO_TIME),\n  ],\n};\n\nexport const readBlockConfigOfLayerAttributesV2: BlockConfig = {\n  tagCode: TagCode.LayerAttributesV2,\n  configs: [\n    new BOOLAttributeConfig('isActive', AttributeType.BitFlag, true),\n    new BOOLAttributeConfig('autoOrientation', AttributeType.BitFlag, false),\n    new LayerAttributeConfig('parent', AttributeType.Value, undefined),\n    new RatioAttributeConfig('stretch', AttributeType.Value, DefaultRatio),\n    new TimeAttributeConfig('startTime', AttributeType.Value, ZERO_TIME),\n    new Uint8AttributeConfig('blendMode', AttributeType.Value, BlendMode.Normal),\n    new Uint8AttributeConfig('trackMatteType', AttributeType.Value, TrackMatteType.None),\n    new FloatAttributeConfig('timeRemap', AttributeType.SimpleProperty, 0),\n    new TimeAttributeConfig('duration', AttributeType.FixedValue, ZERO_TIME),\n    new StringAttributeConfig('name', AttributeType.Value, ''),\n  ],\n};\n\nexport const readBlockConfigOfTransform2D: BlockConfig = {\n  tagCode: TagCode.Transform2D,\n  configs: [\n    new PointAttributeConfig('anchorPoint', AttributeType.SpatialProperty, ZERO_POINT),\n    new PointAttributeConfig('position', AttributeType.SpatialProperty, ZERO_POINT),\n    new FloatAttributeConfig('xPosition', AttributeType.SimpleProperty, 0),\n    new FloatAttributeConfig('yPosition', AttributeType.SimpleProperty, 0),\n    new PointAttributeConfig('scale', AttributeType.MultiDimensionProperty, new Point(1, 1)),\n    new FloatAttributeConfig('rotation', AttributeType.SimpleProperty, 0),\n    new Uint8AttributeConfig('opacity', AttributeType.SimpleProperty, OPAQUE),\n  ],\n};\n\nexport const readBlockConfigOfMask: BlockConfig = {\n  tagCode: TagCode.MaskBlock,\n  configs: [],\n};\n","import { Layer, LayerType } from '../../base/layer';\nimport { ZERO_POINT } from '../../base/point';\nimport { PreComposeLayer } from '../../base/pre-compose-layer';\nimport { ShapeLayer } from '../../base/shape-layer';\nimport { SolidLayer } from '../../base/solid-layer';\nimport { Transform2D } from '../../base/transform-2d';\nimport { UnDefinedLayer } from '../../base/un-defined-layer';\nimport { TagCode } from '../types';\nimport { readTagBlock } from '../attribute-helper';\nimport { ByteArray } from '../utils/byte-array';\nimport { readSolidColor } from './solid-layer';\nimport {\n  readBlockConfigOfLayerAttributes,\n  readBlockConfigOfLayerAttributesV2,\n  readBlockConfigOfTransform2D,\n} from './tag-attributes';\nimport { readTags } from './tag-header';\nimport { readCompositionReference } from './read-composition-reference';\nimport { Property } from '../../base/property';\n\nexport const readLayer = (byteArray: ByteArray): Layer => {\n  const layerType: LayerType = byteArray.readUint8();\n  let layer: Layer;\n  switch (layerType) {\n    case LayerType.undefined:\n      layer = new UnDefinedLayer();\n      break;\n    case LayerType.Solid:\n      layer = new SolidLayer();\n      break;\n    case LayerType.Shape:\n      layer = new ShapeLayer();\n      break;\n    case LayerType.PreCompose:\n      layer = new PreComposeLayer();\n      break;\n    default:\n      layer = new Layer();\n      break;\n  }\n  layer.id = byteArray.readEncodedUint32();\n  readTags(byteArray, layer, readTagsOfLayer);\n  return layer;\n};\n\nexport const readTagsOfLayer = (byteArray: ByteArray, code: TagCode, layer: Layer) => {\n  switch (code) {\n    case TagCode.LayerAttributes:\n      readTagBlock(byteArray, layer, readBlockConfigOfLayerAttributes);\n      if (layer.duration <= 0) layer.duration = 1;\n      break;\n    case TagCode.LayerAttributesV2:\n      readTagBlock(byteArray, layer, readBlockConfigOfLayerAttributesV2);\n      if (layer.duration <= 0) layer.duration = 1;\n      break;\n    case TagCode.Transform2D:\n      layer.transform = new Transform2D();\n      readTagBlock(byteArray, layer.transform, readBlockConfigOfTransform2D);\n      // hasPosition || (!hasXPosition && !hasXPosition)\n      if (\n        layer.transform.position.animatable() ||\n        layer.transform.position.value !== ZERO_POINT ||\n        (!(layer.transform.xPosition.animatable() || layer.transform.xPosition.value !== 0) &&\n          !(layer.transform.yPosition.animatable() || layer.transform.yPosition.value !== 0))\n      ) {\n        layer.transform.xPosition = new Property(0);\n        layer.transform.yPosition = new Property(0);\n      } else {\n        layer.transform.position = new Property(ZERO_POINT);\n      }\n      break;\n    case TagCode.SolidColor:\n      if (layer.type() === LayerType.Solid) {\n        readSolidColor(byteArray, layer as SolidLayer);\n      }\n      break;\n    case TagCode.CompositionReference:\n      if (layer.type() === LayerType.PreCompose) {\n        readCompositionReference(byteArray, layer as PreComposeLayer);\n      }\n      break;\n    default:\n      break;\n  }\n};\n","import { SolidLayer } from '../../base/solid-layer';\nimport { readColor } from '../data-types';\nimport { ByteArray } from '../utils/byte-array';\n\nexport function readSolidColor(byteArray: ByteArray, layer: SolidLayer) {\n  layer.solidColor = readColor(byteArray);\n  layer.width = byteArray.readEncodeInt32();\n  layer.height = byteArray.readEncodeInt32();\n}\n","import { ByteArray } from '../utils/byte-array';\nimport { PreComposeLayer } from '../../base/pre-compose-layer';\nimport { Composition } from '../../base/composition';\nimport { readTime } from '../data-types';\n\nexport function readCompositionReference(byteArray: ByteArray, layer: PreComposeLayer) {\n  const id = byteArray.readEncodedUint32();\n  if (id > 0) {\n    layer.composition = new Composition();\n    layer.composition.id = id;\n  }\n  layer.compositionStartTime = readTime(byteArray);\n}\n","import { EffectType } from '../../base/effects/effect';\nimport { FillEffect } from '../../base/effects/fill-effect';\nimport { StrokeEffect } from '../../base/effects/stroke-effect';\nimport { Layer, LayerType, TrackMatteType } from '../../base/layer';\nimport { Mask } from '../../base/mask';\nimport { TextLayer } from '../../base/text-layer';\nimport { VectorComposition } from '../../base/vector-composition';\nimport { TagCode } from '../types';\nimport { ByteArray } from '../utils/byte-array';\nimport { readCompositionAttributes } from './composition-attributes';\nimport { readLayer } from './layer-tag';\nimport { readTags } from './tag-header';\n\nexport const readVectorComposition = (byteArray: ByteArray): VectorComposition => {\n  const composition = new VectorComposition();\n  composition.id = byteArray.readEncodedUint32();\n  readTags(byteArray, composition, readTagsOfVectorComposition);\n  installArrayLayerReference(composition.layers);\n  return composition;\n};\n\nexport const readTagsOfVectorComposition = (byteArray: ByteArray, code: TagCode, composition: VectorComposition) => {\n  switch (code) {\n    case TagCode.CompositionAttributes:\n      readCompositionAttributes(byteArray, composition);\n      break;\n    case TagCode.LayerBlock:\n      composition.layers.push(readLayer(byteArray));\n      break;\n    default:\n      break;\n  }\n};\n\nexport const installArrayLayerReference = (layers: Array<Layer>) => {\n  if (layers && layers.length === 0) {\n    return;\n  }\n  const layerMap = new Map();\n  for (const layer of layers) {\n    if (!layer) {\n      continue;\n    }\n    installLayerReference(layer);\n    layerMap.set(layer.id, layer);\n  }\n\n  let index = 0;\n  for (const layer of layers) {\n    if (!layer) {\n      continue;\n    }\n    if (layer.parent !== undefined) {\n      const ID = layer.parent.id;\n      const result = layerMap.get(ID);\n      if (result !== undefined) {\n        layer.parent = result;\n      }\n    }\n    if (index > 0 && hasTrackMatte(layer.trackMatteType)) {\n      layer.trackMatteLayer = layers[index - 1];\n    }\n    if (layer.effects !== undefined && layer.effects.length > 0) {\n      for (const effect of layer.effects) {\n        if (!effect) {\n          continue;\n        }\n        if (effect.type() === EffectType.DisplacementMap) {\n          // let displacementMapEffect = <DisplacementMapEffect> effect;\n          // if (displacementMapEffect.displacementMapLayer != undefined) {\n          //     let ID = displacementMapEffect.displacementMapLayer.id;\n          //     let result = layerMap.get(ID);\n          //     if (result != undefined) {\n          //         displacementMapEffect.displacementMapLayer = result;\n          //     }\n          // }\n        }\n      }\n    }\n    index += 1;\n  }\n};\n\n/**\n * 将Layer里面的MaskID标识换成真正的Mask\n * @param layer\n */\nconst installLayerReference = (layer: Layer) => {\n  if (!layer || !layer.masks || layer.masks.length === 0) return;\n  const maskMap = new Map();\n  for (const mask of layer.masks) {\n    if (!mask) {\n      continue;\n    }\n    maskMap.set(mask.id, mask);\n  }\n\n  layer.effects?.forEach((effect) => {\n    if (!effect) return;\n    if (effect.maskReferences !== undefined && effect.maskReferences.length > 0) {\n      const maskReferences = new Array<Mask>();\n      effect.maskReferences.forEach((mask) => {\n        const ID = mask.id;\n        const result = maskMap.get(ID);\n        if (result !== undefined) {\n          maskReferences.push(result);\n        }\n      });\n      effect.maskReferences = maskReferences;\n    }\n    switch (effect.type()) {\n      case EffectType.Fill:\n        if ((effect as FillEffect).fillMask !== undefined) {\n          const ID = (effect as FillEffect).fillMask!.id;\n          const result = maskMap.get(ID);\n          if (result !== undefined) {\n            (effect as FillEffect).fillMask = result;\n          }\n        }\n        break;\n      case EffectType.Stroke: {\n        const strokeEffect = effect as StrokeEffect;\n        if (strokeEffect.path !== undefined) {\n          const ID = strokeEffect.path.id;\n          const result = maskMap.get(ID);\n          if (result !== undefined) {\n            strokeEffect.path = result;\n          }\n        }\n        break;\n      }\n      default:\n        break;\n    }\n  });\n\n  if (layer.type() === LayerType.Text) {\n    const { pathOption } = layer as TextLayer;\n    if (pathOption?.path) {\n      const ID = pathOption.path.id;\n      const result = maskMap.get(ID);\n      if (result !== undefined) {\n        pathOption.path = result;\n      }\n    }\n  }\n};\n\nexport const hasTrackMatte = (type: TrackMatteType): boolean => {\n  switch (type) {\n    case TrackMatteType.Alpha:\n    case TrackMatteType.AlphaInverted:\n      return true;\n    default:\n      return false;\n  }\n};\n","import { readVideoComposition } from './video-composition-tag';\nimport { readVectorComposition } from './vector-composition-tag';\nimport { TagCode } from '../types';\n\nimport type { Context } from '../context';\nimport type { ByteArray } from '../utils/byte-array';\n\nexport function readTagsOfFile(byteArray: ByteArray, code: TagCode, context: Context): void {\n  switch (code) {\n    case TagCode.VectorCompositionBlock:\n      context.compositions.push(readVectorComposition(byteArray));\n      break;\n    case TagCode.VideoCompositionBlock:\n      context.compositions.push(readVideoComposition(byteArray));\n      break;\n    default:\n      break;\n  }\n}\n","import { ByteArray } from './codec/utils/byte-array';\nimport { readTags } from './codec/tags/tag-header';\nimport { readTagsOfFile } from './codec/tags/file-tags';\nimport { Composition } from './base/composition';\nimport { CompositionType, TagCode } from './codec/types';\nimport { VectorComposition } from './base/vector-composition';\nimport { LayerType } from './base/layer';\nimport { PreComposeLayer } from './base/pre-compose-layer';\n\nexport const verifyAndMake = (compositions: Array<Composition>) => {\n  let success: boolean = compositions.length > 0;\n  for (const composition of compositions) {\n    if (!composition || !composition.verify()) {\n      success = false;\n      break;\n    }\n  }\n  if (!success) {\n    throw new Error('Verify composition failed!');\n  }\n};\n\n/**\n * 将Layer里面的compositionID标识换成真正的Composition\n */\nexport function installReference(compositions: Array<Composition>) {\n  if (!compositions || compositions.length === 0) return;\n  const compositionMap = new Map();\n  compositions.forEach((composition) => {\n    if (composition) {\n      compositionMap.set(composition.id, composition);\n    }\n  });\n  compositions.forEach((composition) => {\n    if (composition && composition.type() === CompositionType.Vector) {\n      const vectorComposition = composition as VectorComposition;\n      if (vectorComposition.layers && vectorComposition.layers.length > 0) {\n        vectorComposition.layers.forEach((layer) => {\n          layer.containingComposition = vectorComposition;\n          const preComposeLayer = layer as PreComposeLayer;\n          if (preComposeLayer.type() === LayerType.PreCompose && preComposeLayer.composition) {\n            const res = compositionMap.get(preComposeLayer.composition.id);\n            if (res) {\n              preComposeLayer.composition = res;\n            }\n          }\n        });\n      }\n    }\n  });\n}\n\nexport class PAGCodec {\n  public static maxSupportedTagLevel(): number {\n    return TagCode.Count - 1;\n  }\n}\n\n/**\n * Decode PAG File from bytes\n */\nexport const decode = (byteArray: ByteArray) => {\n  const bodyByteArray: ByteArray = readBodyBytes(byteArray);\n  const { context } = bodyByteArray;\n  readTags(bodyByteArray, context, readTagsOfFile);\n  installReference(context.compositions);\n  const compositions = context.releaseCompositions();\n  verifyAndMake(compositions);\n  return { compositions, tagLevel: context.tagLevel };\n};\n\nexport const readBodyBytes = (byteArray: ByteArray): ByteArray => {\n  if (byteArray.length < 11) throw new Error('PAG file is invalid!');\n  const P: number = byteArray.readInt8();\n  const A: number = byteArray.readInt8();\n  const G: number = byteArray.readInt8();\n  if (P !== 80 || A !== 65 || G !== 71) throw new Error('invalid PAG header!');\n  byteArray.readInt8(); // version\n  byteArray.readUint32(); // bodyLength\n  byteArray.readInt8(); // compression\n  return byteArray.readBytes();\n};\n","import { decode } from './pag-codec';\nimport { Composition } from './base/composition';\nimport { LayerType } from './base/layer';\nimport { VectorComposition } from './base/vector-composition';\nimport { ByteArray } from './codec/utils/byte-array';\nimport { CompositionType } from './codec/types';\nimport { TimeRange } from './base/time-range';\nimport { PreComposeLayer } from './base/pre-compose-layer';\nimport { VideoComposition } from './base/video-composition';\n\nexport class PAGFile {\n  public static fromArrayBuffer(arrayBuffer: ArrayBuffer): PAGFile {\n    if (!arrayBuffer || arrayBuffer.byteLength === 0) throw new Error(\"Can't read empty array buffer!\");\n    const byteArray = new ByteArray(arrayBuffer, true);\n    const { compositions, tagLevel } = decode(byteArray);\n    return new PAGFile(compositions, tagLevel);\n  }\n\n  public tagLevel = 1;\n  public mainComposition: Composition;\n  public compositions: Array<Composition> = [];\n  public numLayers = 0;\n  public duration: number;\n  public implDuration: number;\n  public scaledTimeRange: TimeRange = { start: 0, end: 0 };\n\n  public constructor(compositions: Array<Composition>, tagLevel: number) {\n    this.mainComposition = compositions[compositions.length - 1];\n    this.scaledTimeRange.start = 0;\n    this.scaledTimeRange.end = this.mainComposition.duration;\n    this.compositions = compositions;\n    this.duration = this.mainComposition.duration;\n    this.implDuration = (this.mainComposition.duration * 1000) / this.mainComposition.frameRate;\n    for (const composition of compositions) {\n      if (composition.type() !== CompositionType.Vector) {\n        this.numLayers += 1;\n        continue;\n      }\n      for (const layer of (composition as VectorComposition).layers) {\n        if (layer.type() === LayerType.PreCompose) {\n          continue;\n        }\n        this.numLayers += 1;\n      }\n    }\n    this.tagLevel = tagLevel;\n  }\n\n  public getVideoSequence() {\n    const compositionType = this.mainComposition.type();\n    if (compositionType === CompositionType.Video) {\n      return getVideoSequenceFromVideoComposition(this.mainComposition as VideoComposition);\n    } else if (compositionType === CompositionType.Vector) {\n      return getVideoSequenceFromVectorComposition(this.mainComposition as VectorComposition);\n    }\n  }\n}\n\nconst getVideoSequenceFromVideoComposition = (videoComposition: VideoComposition) => {\n  if (!videoComposition.sequences || videoComposition.sequences.length === 0) {\n    throw new Error('PAGFile has no BMP video sequence!');\n  }\n  return videoComposition.sequences[videoComposition.sequences.length - 1];\n};\n\nconst getVideoSequenceFromVectorComposition = (vectorComposition: VectorComposition) => {\n  const videoCompositions = getVideoComposition(vectorComposition);\n  if (videoCompositions.length > 1) throw new Error('PAGFile has more than one BMP video sequence!');\n  if (videoCompositions.length < 1) throw new Error('PAGFile has no BMP video sequence!');\n  const videoComposition = videoCompositions[0];\n  return getVideoSequenceFromVideoComposition(videoComposition);\n};\n\nconst getVideoComposition = (vectorComposition: VectorComposition) => {\n  const videoCompositions: VideoComposition[] = [];\n  vectorComposition.layers.forEach((layer) => {\n    if (layer.type() !== LayerType.PreCompose) return;\n    const { composition } = layer as PreComposeLayer;\n    if (composition?.type() === CompositionType.Video) {\n      videoCompositions.push(composition as VideoComposition);\n      return;\n    }\n    if (composition?.type() === CompositionType.Vector) {\n      videoCompositions.push(...getVideoComposition(composition as VectorComposition));\n    }\n  });\n  return videoCompositions;\n};\n","export interface VideoParam {\n  width: number; // VideoComposition width\n  height: number; // VideoComposition height\n  MP4Width: number; // MP4 width (with alpha)\n  MP4Height: number; // MP4 height (with alpha)\n  sequenceWidth: number; // VideoSequence width (without alpha)\n  sequenceHeight: number; // VideoSequence width (without alpha)\n  hasAlpha: boolean; // Whether the video has alpha\n  alphaStartX: number; // Alpha start x\n  alphaStartY: number; // Alpha start y\n}\n\nexport enum RenderingMode {\n  Canvas2D = '2d',\n  WebGL = 'WebGL',\n}\n\nexport enum EventName {\n  /**\n   * Notifies the start of the animation.\n   */\n  onAnimationStart = 'onAnimationStart',\n  /**\n   * Notifies the end of the animation.\n   */\n  onAnimationEnd = 'onAnimationEnd',\n  /**\n   * Notifies the cancellation of the animation.\n   */\n  onAnimationCancel = 'onAnimationCancel',\n  /**\n   * Notifies the repetition of the animation.\n   */\n  onAnimationRepeat = 'onAnimationRepeat',\n  /**\n   * Notifies the update of the animation.\n   */\n  onAnimationUpdate = 'onAnimationUpdate',\n  /**\n   * Notifies the play of the animation.\n   */\n  onAnimationPlay = 'onAnimationPlay',\n  /**\n   * Notifies the pause of the animation.\n   */\n  onAnimationPause = 'onAnimationPause',\n}\n\nexport enum ScaleMode {\n  None = 'None',\n  /**\n   * 拉伸内容到适应画布\n   */\n  Stretch = 'Stretch',\n  /**\n   * 根据原始比例缩放内容\n   */\n  LetterBox = 'LetterBox',\n  /**\n   * 根据原始比例被缩放适应，一个轴会被裁剪\n   */\n  Zoom = 'Zoom',\n}\n\nexport interface DebugData {\n  FPS?: number;\n  decodePAGFile?: number;\n  createDir?: number;\n  coverMP4?: number;\n  writeFile?: number;\n  createDecoder?: number;\n  getFrame?: number;\n  draw?:number;\n}\n","export function destroyVerify(constructor: any) {\n  let functions = Object.getOwnPropertyNames(constructor.prototype).filter(\n    (name) => name !== 'constructor' && typeof constructor.prototype[name] === 'function',\n  );\n\n  const proxyFn = (target: { [prop: string]: any }, methodName: string) => {\n    const fn = target[methodName];\n    target[methodName] = function (...args: any[]) {\n      if (this['destroyed']) {\n        console.error(`Don't call ${methodName} of the PAGView that is destroyed.`);\n        return;\n      }\n      return fn.call(this, ...args);\n    };\n  };\n  functions.forEach((name) => proxyFn(constructor.prototype, name));\n}\n","import type { PAGFile } from '../pag-file';\nimport type { VideoParam } from '../types';\nimport type { VideoSequence } from '../base/video-sequence';\n\nexport const detectWebGLContext = () => {\n  const canvas: HTMLCanvasElement = document.createElement('canvas');\n  const gl: RenderingContext | null = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n  return !!gl;\n};\n\nexport const createProgram = (gl: WebGLRenderingContext, vertexShaderSource: string, fragmentShaderSource: string) => {\n  const program = gl.createProgram();\n  if (!program) throw new Error('Failed to create program.');\n  const vShader = createShader(gl, vertexShaderSource, gl.VERTEX_SHADER);\n  if (!vShader) throw new Error('Failed to create vertex shader.');\n  gl.attachShader(program, vShader);\n  const fShader = createShader(gl, fragmentShaderSource, gl.FRAGMENT_SHADER);\n  if (!fShader) throw new Error('Failed to create fragment shader.');\n  gl.attachShader(program, fShader);\n  gl.linkProgram(program);\n\n  const programMessage = gl.getProgramInfoLog(program);\n  if (programMessage) console.log(programMessage);\n  const vShaderMessage = gl.getShaderInfoLog(vShader);\n  if (vShaderMessage) console.log(vShaderMessage);\n  const fShaderMessage = gl.getShaderInfoLog(fShader);\n  if (fShaderMessage) console.log(fShaderMessage);\n\n  return program;\n};\n\nconst createShader = (gl: WebGLRenderingContext, source: string, type: GLenum) => {\n  const shader = gl.createShader(type);\n  if (!shader) throw new Error('Failed to create shader.');\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  return shader;\n};\n\nexport const getShaderSourceFromString = (str: string) => str.replace(/^\\s+|\\s+$/g, '');\n\nexport const getVideoParam = (pagFile: PAGFile, videoSequence: VideoSequence) => {\n  const attribute: VideoParam = {\n    width: pagFile.mainComposition.width,\n    height: pagFile.mainComposition.height,\n    hasAlpha: videoSequence.alphaStartX > 0 || videoSequence.alphaStartY > 0,\n    alphaStartX: videoSequence.alphaStartX,\n    alphaStartY: videoSequence.alphaStartY,\n    sequenceWidth: videoSequence.width,\n    sequenceHeight: videoSequence.height,\n    MP4Width:\n      (videoSequence.width + videoSequence.alphaStartX) % 2 === 0\n        ? videoSequence.width + videoSequence.alphaStartX\n        : videoSequence.width + videoSequence.alphaStartX + 1, // Must be even number\n    MP4Height:\n      (videoSequence.height + videoSequence.alphaStartY) % 2 === 0\n        ? videoSequence.height + videoSequence.alphaStartY\n        : videoSequence.height + videoSequence.alphaStartY + 1, // Must be even number\n  };\n  return attribute;\n};\n\nexport const createAndSetupTexture = (gl: WebGLRenderingContext) => {\n  const texture = gl.createTexture();\n  if (!texture) throw new Error('Failed to create texture.');\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n\n  // Set up texture so we can render any size image and so we are\n  // working with pixels.\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n  return texture;\n};\n\n// Get video initiated token on Wechat browser.\nexport const getWechatNetwork = () => {\n  return new Promise<void>((resolve) => {\n    window.WeixinJSBridge.invoke(\n      'getNetworkType',\n      {},\n      () => {\n        resolve();\n      },\n      () => {\n        resolve();\n      },\n    );\n  });\n};\n","export type Listener = (...payload: any) => void;\n\ninterface ListenersMap {\n  [propName: string]: Listener[];\n}\n\nexport class EventManager {\n  private listenersMap: ListenersMap;\n\n  public constructor() {\n    this.listenersMap = {};\n  }\n\n  public on(eventName: string, listener: Listener) {\n    if (this.listenersMap[eventName] === undefined) {\n      this.listenersMap[eventName] = [];\n    }\n    this.listenersMap[eventName].push(listener);\n    return;\n  }\n\n  public off(eventName: string, listener?: Listener) {\n    const listenerList: Listener[] = this.listenersMap[eventName];\n    if (listenerList === undefined) return;\n    if (listener === undefined) {\n      delete this.listenersMap[eventName];\n      return;\n    }\n    const index = listenerList.findIndex((fn: Listener) => fn === listener);\n    listenerList.splice(index, 1);\n    return;\n  }\n\n  public emit(eventName: string, ...payload: any): boolean {\n    const listenerList: Listener[] = this.listenersMap[eventName];\n    if (listenerList === undefined || listenerList.length < 1) return false;\n    for (const listener of listenerList) {\n      listener(...payload);\n    }\n    return true;\n  }\n}\n","import { getVideoParam } from './utils';\nimport { RenderingMode, EventName, ScaleMode } from '../types';\nimport { EventManager, Listener } from '../base/utils/event-manager';\nimport { destroyVerify } from '../decorators';\n\nimport type { PAGFile } from '../pag-file';\nimport type { VideoParam, DebugData } from '../types';\nimport type { VideoSequence } from '../base/video-sequence';\n\nexport interface RenderOptions {\n  renderingMode?: RenderingMode;\n  useScale?: boolean;\n}\n\n@destroyVerify\nexport class Context {\n  protected canvas: HTMLCanvasElement | null;\n  protected canvasSize = { width: 0, height: 0 };\n  protected eventManager: EventManager;\n  protected playing = false;\n  protected videoParam: VideoParam;\n  protected viewportSize = { x: 0, y: 0, width: 0, height: 0, scaleX: 1, scaleY: 1 }; // viewport尺寸 WebGL坐标轴轴心在左下角|Canvas2D坐标轴轴心在左上角\n  protected destroyed = false;\n  protected videoSequence: VideoSequence;\n  protected renderTimer: number | null = null;\n  protected repeatCount = 0; // 设置动画重复的次数。默认值为 0，只播放一次。如为 -1 动画则无限播放。\n\n  private renderingMode: RenderingMode;\n  private viewScaleMode = ScaleMode.LetterBox;\n  private debugData: DebugData = {\n    FPS: 0,\n    decodePAGFile: 0,\n    createDir: 0,\n    coverMP4: 0,\n    writeFile: 0,\n    createDecoder: 0,\n    getFrame: 0,\n    draw: 0,\n  };\n\n  public constructor(pagFile: PAGFile, canvas: HTMLCanvasElement, options: RenderOptions) {\n    const videoSequence = pagFile.getVideoSequence();\n    if (!videoSequence) throw new Error('PAGFile has no BMP video sequence!');\n    delete videoSequence.composition;\n    this.videoSequence = videoSequence;\n    this.canvas = canvas;\n    this.videoParam = getVideoParam(pagFile, videoSequence);\n    this.eventManager = new EventManager();\n    this.renderingMode = options.renderingMode || RenderingMode.WebGL;\n    this.updateSize(options.useScale);\n    this.setScaleMode();\n  }\n  /**\n   * 是否播放中\n   */\n  public isPlaying() {\n    return this.playing;\n  }\n  /**\n   * 是否已经销毁\n   */\n  public isDestroyed() {\n    return this.destroyed;\n  }\n  /**\n   * 动画持续时间\n   */\n  public duration() {\n    return this.videoSequence.frameCount / this.videoSequence.frameRate;\n  }\n  /**\n   * 动画持续时间\n   */\n  public frameRate() {\n    return this.videoSequence.frameRate;\n  }\n  /**\n   * 设置动画重复的次数。默认值为 1，只播放一次。如为 0 动画则无限播放。\n   */\n  public setRepeatCount(repeatCount = 1) {\n    this.repeatCount = repeatCount < 0 ? -1 : repeatCount - 1;\n  }\n\n  /**\n   * 增加事件监听\n   */\n  public addListener(eventName: EventName, listener: Listener) {\n    return this.eventManager.on(eventName, listener);\n  }\n  /**\n   * 移除事件监听\n   */\n  public removeListener(eventName: EventName, listener?: Listener) {\n    return this.eventManager.off(eventName, listener);\n  }\n  /**\n   * 返回当前缩放模式\n   */\n  public scaleMode() {\n    return this.viewScaleMode;\n  }\n  /**\n   * 指定缩放内容的模式\n   */\n  public setScaleMode(scaleMode: ScaleMode = ScaleMode.LetterBox) {\n    this.viewScaleMode = scaleMode;\n    switch (scaleMode) {\n      case ScaleMode.None:\n        this.viewportSize = {\n          x: 0,\n          y: this.renderingMode === RenderingMode.WebGL ? this.canvas!.height - this.videoParam.height : 0,\n          width: this.videoParam.width,\n          height: this.videoParam.height,\n          scaleX: 1,\n          scaleY: 1,\n        };\n        break;\n      case ScaleMode.Stretch:\n        this.viewportSize = {\n          x: 0,\n          y: 0,\n          width: this.canvas!.width,\n          height: this.canvas!.height,\n          scaleX: this.canvas!.width / this.videoParam.sequenceWidth,\n          scaleY: this.canvas!.height / this.videoParam.sequenceHeight,\n        };\n        break;\n      case ScaleMode.LetterBox:\n        {\n          const scaleX = this.canvas!.width / this.videoParam.sequenceWidth;\n          const scaleY = this.canvas!.height / this.videoParam.sequenceHeight;\n          const scale = Math.min(scaleX, scaleY);\n          this.viewportSize = {\n            x: (this.canvas!.width - this.videoParam.sequenceWidth * scale) / 2,\n            y: (this.canvas!.height - this.videoParam.sequenceHeight * scale) / 2,\n            width: this.videoParam.sequenceWidth * scale,\n            height: this.videoParam.sequenceHeight * scale,\n            scaleX: scale,\n            scaleY: scale,\n          };\n        }\n        break;\n      case ScaleMode.Zoom:\n        {\n          const scaleX = this.canvas!.width / this.videoParam.sequenceWidth;\n          const scaleY = this.canvas!.height / this.videoParam.sequenceHeight;\n          const scale = Math.max(scaleX, scaleY);\n          this.viewportSize = {\n            x: (this.canvas!.width - this.videoParam.sequenceWidth * scale) / 2,\n            y: (this.canvas!.height - this.videoParam.sequenceHeight * scale) / 2,\n            width: this.videoParam.sequenceWidth * scale,\n            height: this.videoParam.sequenceHeight * scale,\n            scaleX: scale,\n            scaleY: scale,\n          };\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  public updateSize(useScale = true) {\n    if (!this.canvas) {\n      throw new Error('Canvas element is not found!');\n    }\n    let displaySize: { width: number; height: number };\n    const styleDeclaration = getComputedStyle(this.canvas as HTMLCanvasElement);\n    const computedSize = {\n      width: Number(styleDeclaration.width.replace('px', '')),\n      height: Number(styleDeclaration.height.replace('px', '')),\n    };\n    if (computedSize.width > 0 && computedSize.height > 0) {\n      displaySize = computedSize;\n    } else {\n      const styleSize = {\n        width: Number(this.canvas.style.width.replace('px', '')),\n        height: Number(this.canvas.style.height.replace('px', '')),\n      };\n      if (styleSize.width > 0 && styleSize.height > 0) {\n        displaySize = styleSize;\n      } else {\n        displaySize = {\n          width: this.canvas.width,\n          height: this.canvas.height,\n        };\n      }\n    }\n\n    if (!useScale) {\n      this.canvas!.width = this.canvas!.width || displaySize.width;\n      this.canvas!.height = this.canvas!.height || displaySize.height;\n      return;\n    }\n    this.canvas.style.width = `${displaySize.width}px`;\n    this.canvas.style.height = `${displaySize.height}px`;\n    console.log('aaa displaySize.width: '+ JSON.stringify(displaySize.width));\n    console.log('aaa displaySize.height: '+ JSON.stringify(displaySize.height));\n    console.log('aaa window.devicePixelRatio: '+ JSON.stringify(window.devicePixelRatio));\n    this.canvas.width = displaySize.width * window.devicePixelRatio;\n    this.canvas.height = displaySize.height * window.devicePixelRatio;\n    console.log('aaa this.canvas.width: '+ JSON.stringify(this.canvas.width));\n    console.log('aaa this.canvas.height: '+ JSON.stringify(this.canvas.height));\n  }\n\n  public getDebugData() {\n    return this.debugData;\n  }\n\n  public setDebugData(data: DebugData) {\n    this.debugData = { ...this.debugData, ...data };\n  }\n\n  protected loadContext() {}\n\n  protected clearRender() {}\n}\n","import type { ByteData } from '../base/byte-data';\nimport type { VideoSequence } from '../base/video-sequence';\n\nconst CORRECTION_UTC = 2082873600; // 1904-01-01 与 1970-1-1 相差的秒数\nconst DEFAULT_VOLUME = 1;\n\nexport interface MP4Flags {\n  isLeading: number;\n  isDependedOn: number;\n  hasRedundancy: number;\n  degradPrio: number;\n  isNonSync: number;\n  dependsOn: number;\n  isKeyFrame: boolean;\n}\n\nexport interface MP4Sample {\n  index: number;\n  size: number;\n  duration: number;\n  cts: number;\n  flags: MP4Flags;\n}\n\nexport interface MP4Track {\n  id: number;\n  type: string;\n  len: number;\n  sps: ByteData[];\n  pps: ByteData[];\n  width: number;\n  height: number;\n  timescale: number;\n  duration: number;\n  samples: MP4Sample[];\n  pts: number[];\n  implicitOffset: number;\n}\n\nexport interface BoxParam {\n  offset: number;\n  timescale: number;\n  duration: number;\n  sequenceNumber: number;\n  nalusBytesLen: number;\n  baseMediaDecodeTime: number;\n  track: MP4Track;\n  videoSequence: VideoSequence;\n  tracks: MP4Track[];\n}\n\nconst getCharCode = (name: string) => {\n  const res = [];\n  for (let index = 0; index < name.length; index++) {\n    res.push(name.charCodeAt(index));\n  }\n  return res;\n};\n\nconst toHexadecimal = (num: number) => [num >> 24, (num >> 16) & 0xff, (num >> 8) & 0xff, num & 0xff];\n\nconst makeBox = (type: number[], ...payload: Uint8Array[]): Uint8Array => {\n  let size = 8;\n  let i = payload.length;\n  const len = i;\n  while (i) {\n    i -= 1;\n    size += payload[i].byteLength;\n  }\n  const result = new Uint8Array(size);\n  result[0] = (size >> 24) & 0xff;\n  result[1] = (size >> 16) & 0xff;\n  result[2] = (size >> 8) & 0xff;\n  result[3] = size & 0xff;\n  result.set(type, 4);\n  // copy the payload into the result\n  for (i = 0, size = 8; i < len; ++i) {\n    // copy payload[i] array @ offset size\n    result.set(payload[i], size);\n    size += payload[i].byteLength;\n  }\n  return result;\n};\n\nexport class MP4Generator {\n  private param: BoxParam;\n\n  public constructor(boxParam: BoxParam) {\n    this.param = boxParam;\n  }\n\n  public ftyp() {\n    return makeBox(\n      getCharCode('ftyp'),\n      new Uint8Array(getCharCode('isom')), // major_brand\n      new Uint8Array([0, 0, 0, 1]), // minor_version\n      new Uint8Array(getCharCode('isom')), // compatible_brands\n      new Uint8Array(getCharCode('iso2')),\n      new Uint8Array(getCharCode('avc1')),\n      new Uint8Array(getCharCode('mp41')),\n    );\n  }\n\n  public moov() {\n    const traks = this.param.tracks.map((track) => this.trak(track)).reverse();\n    return makeBox(getCharCode('moov'), this.mvhd(), ...traks, this.mvex());\n  }\n\n  public moof() {\n    return makeBox(getCharCode('moof'), this.mfhd(), this.traf());\n  }\n\n  public mdat() {\n    const buffer = new Uint8Array(this.param.track.len);\n    let offset = 0;\n    this.param.videoSequence.headers.forEach((header) => {\n      buffer.set(new Uint8Array(header.data.data()), offset);\n      offset += header.length;\n    });\n\n    this.param.videoSequence.frames.forEach((frame, index) => {\n      buffer.set(new Uint8Array(frame.fileBytes.data.data()), offset);\n      offset += frame.fileBytes.length;\n    });\n    return makeBox(getCharCode('mdat'), buffer);\n  }\n\n  private mvhd() {\n    return makeBox(\n      getCharCode('mvhd'),\n      new Uint8Array([\n        0x00, // version 0\n        0x00,\n        0x00,\n        0x00, // flags\n        ...toHexadecimal(CORRECTION_UTC), // creation_time\n        ...toHexadecimal(CORRECTION_UTC), // modification_time\n        ...toHexadecimal(this.param.timescale), // timescale\n        ...toHexadecimal(this.param.duration), // duration\n        0x00,\n        0x01,\n        0x00,\n        0x00, // 1.0 rate\n        0x01,\n        0x00, // 1.0 volume\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x01,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x01,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x40,\n        0x00,\n        0x00,\n        0x00, // transformation: unity matrix\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00, // pre_defined\n        0x00,\n        0x00,\n        0x00,\n        0x02, // next_track_ID\n      ]),\n    );\n  }\n\n  private trak(track: MP4Track) {\n    return makeBox(getCharCode('trak'), this.tkhd(track), this.edts(track), this.mdia(track));\n  }\n\n  private tkhd(track: MP4Track) {\n    return makeBox(\n      getCharCode('tkhd'),\n      new Uint8Array([\n        0x00, // version 0\n        0x00,\n        0x00,\n        0x01, // flags\n        ...toHexadecimal(CORRECTION_UTC), // creation_time\n        ...toHexadecimal(CORRECTION_UTC), // modification_time\n        ...toHexadecimal(track.id), // track_ID\n        0x00,\n        0x00,\n        0x00,\n        0x00, // reserved\n        ...toHexadecimal(track.duration), // duration\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x00, // layer\n        0x00,\n        0x00, // alternate_group\n        (DEFAULT_VOLUME >> 0) & 0xff,\n        (((DEFAULT_VOLUME % 1) * 10) >> 0) & 0xff, // track volume // FIXME\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x01,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x01,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x40,\n        0x00,\n        0x00,\n        0x00, // transformation: unity matrix\n        (track.width >> 8) & 0xff,\n        track.width & 0xff,\n        0x00,\n        0x00, // width\n        (track.height >> 8) & 0xff,\n        track.height & 0xff,\n        0x00,\n        0x00, // height\n      ]),\n    );\n  }\n\n  private edts(track: MP4Track) {\n    return makeBox(getCharCode('edts'), this.elst(track));\n  }\n\n  private elst(track: MP4Track) {\n    return makeBox(\n      getCharCode('elst'),\n      new Uint8Array([\n        0x00, // version\n        0x00,\n        0x00,\n        0x00, // flags\n        ...toHexadecimal(1), // entry_count\n        ...toHexadecimal(track.duration),\n        ...toHexadecimal(track.implicitOffset * Math.floor(track.duration / track.samples.length)),\n        0x00,\n        0x01, // media_rate_integer\n        0x00,\n        0x00, // media_rate_integer\n      ]),\n    );\n  }\n\n  private mdia(track: MP4Track) {\n    return makeBox(getCharCode('mdia'), this.mdhd(), this.hdlr(), this.minf(track));\n  }\n\n  private mdhd() {\n    return makeBox(\n      getCharCode('mdhd'),\n      new Uint8Array([\n        0x00, // version 0\n        0x00,\n        0x00,\n        0x00, // flags\n        ...toHexadecimal(CORRECTION_UTC), // creation_time\n        ...toHexadecimal(CORRECTION_UTC), // modification_time\n        ...toHexadecimal(this.param.timescale), // timescale\n        ...toHexadecimal(0), // duration\n        0x55,\n        0xc4, // 'und' language (undetermined)\n        0x00,\n        0x00,\n      ]),\n    );\n  }\n\n  private hdlr() {\n    return makeBox(\n      getCharCode('hdlr'),\n      new Uint8Array([\n        0x00, // version 0\n        0x00,\n        0x00,\n        0x00, // flags\n        0x00,\n        0x00,\n        0x00,\n        0x00, // pre_defined\n        0x76,\n        0x69,\n        0x64,\n        0x65, // handler_type: 'vide'\n        0x00,\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x56,\n        0x69,\n        0x64,\n        0x65,\n        0x6f,\n        0x48,\n        0x61,\n        0x6e,\n        0x64,\n        0x6c,\n        0x65,\n        0x72,\n        0x00, // name: 'VideoHandler'\n      ]),\n    );\n  }\n\n  private minf(track: MP4Track) {\n    return makeBox(getCharCode('minf'), this.vmhd(), this.dinf(), this.stbl(track));\n  }\n\n  private vmhd() {\n    return makeBox(\n      getCharCode('vmhd'),\n      new Uint8Array([\n        0x00, // version\n        0x00,\n        0x00,\n        0x01, // flags\n        0x00,\n        0x00, // graphicsmode\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00, // opcolor\n      ]),\n    );\n  }\n\n  private dinf() {\n    return makeBox(getCharCode('dinf'), this.dref());\n  }\n\n  private dref() {\n    return makeBox(\n      getCharCode('dref'),\n      new Uint8Array([\n        0x00, // version 0\n        0x00,\n        0x00,\n        0x00, // flags\n        0x00,\n        0x00,\n        0x00,\n        0x01, // entry_count\n        0x00,\n        0x00,\n        0x00,\n        0x0c, // entry_size\n        0x75,\n        0x72,\n        0x6c,\n        0x20, // 'url' type\n        0x00, // version 0\n        0x00,\n        0x00,\n        0x01, // entry_flags\n      ]),\n    );\n  }\n\n  private stbl(track: MP4Track) {\n    return makeBox(\n      getCharCode('stbl'),\n      this.stsd(track),\n      this.stts(track),\n      this.ctts(track),\n      this.stss(track),\n      this.stsc(),\n      this.stsz(),\n      this.stco(),\n    );\n  }\n\n  private stsd(track: MP4Track) {\n    const data = [\n      0x00, // version 0\n      0x00,\n      0x00,\n      0x00, // flags\n      0x00,\n      0x00,\n      0x00,\n      0x01, // entry_count\n    ];\n    return makeBox(getCharCode('stsd'), new Uint8Array(data), this.avc1(track));\n  }\n\n  private avc1(track: MP4Track) {\n    const data = [\n      0x00,\n      0x00,\n      0x00, // reserved\n      0x00,\n      0x00,\n      0x00, // reserved\n      0x00,\n      0x01, // data_reference_index\n      0x00,\n      0x00, // pre_defined\n      0x00,\n      0x00, // reserved\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00, // pre_defined\n      (track.width >> 8) & 0xff,\n      track.width & 0xff, // width\n      (track.height >> 8) & 0xff,\n      track.height & 0xff, // height\n      0x00,\n      0x48,\n      0x00,\n      0x00, // horizresolution\n      0x00,\n      0x48,\n      0x00,\n      0x00, // vertresolution\n      0x00,\n      0x00,\n      0x00,\n      0x00, // reserved\n      0x00,\n      0x01, // frame_count\n      0x12,\n      0x62,\n      0x69,\n      0x6e,\n      0x65, // binelpro.ru\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00, // compressorname\n      0x00,\n      0x18, // depth = 24\n      0xff,\n      0xff,\n    ];\n    return makeBox(getCharCode('avc1'), new Uint8Array(data), this.avcc(track));\n  }\n\n  private avcc(track: MP4Track) {\n    let sps: number[] = [];\n    let pps: number[] = [];\n\n    track.sps.forEach((byteData) => {\n      const len = byteData.length - 4;\n      sps.push((len >>> 8) & 0xff);\n      sps.push(len & 0xff);\n      sps = sps.concat(Array.prototype.slice.call(new Uint8Array(byteData.data.data(), 4)));\n    });\n    track.pps.forEach((byteData) => {\n      const len = byteData.length - 4;\n      pps.push((len >>> 8) & 0xff);\n      pps.push(len & 0xff);\n      pps = pps.concat(Array.prototype.slice.call(new Uint8Array(byteData.data.data(), 4)));\n    });\n\n    const data = [\n      0x01, // version\n      sps[3], // profile\n      sps[4], // profile compat\n      sps[5], // level\n      0xfc | 3, // lengthSizeMinusOne, hard-coded to 4 bytes\n      0xe0 | track.sps.length, // 3bit reserved (111) + numOfSequenceParameterSets\n    ]\n      .concat(sps)\n      .concat([track.pps.length]) // numOfPictureParameterSets\n      .concat(pps);\n\n    return makeBox(getCharCode('avcC'), new Uint8Array(data));\n  }\n\n  private stts(track: MP4Track) {\n    return makeBox(\n      getCharCode('stts'),\n      new Uint8Array([\n        0x00, // version\n        0x00,\n        0x00,\n        0x00, // flags\n        ...toHexadecimal(1), // entry_count\n        ...toHexadecimal(track.samples.length), // sample_count\n        ...toHexadecimal(Math.floor(track.duration / track.samples.length)), // sample_offset\n      ]),\n    );\n  }\n\n  private ctts(track: MP4Track) {\n    const sampleCount = track.pts.length;\n    const sampleDelta = Math.floor(track.duration / sampleCount);\n    const data = [\n      0x00, // version\n      0x00,\n      0x00,\n      0x00, // flags\n      ...toHexadecimal(sampleCount), // entry_count\n    ];\n    for (let i = 0; i < sampleCount; i++) {\n      data.push(...toHexadecimal(1)); // sample_count\n      const dts = i * sampleDelta;\n      const pts = (track.pts[i] + track.implicitOffset) * sampleDelta;\n      data.push(...toHexadecimal(pts - dts)); // sample_offset\n    }\n    return makeBox(getCharCode('ctts'), new Uint8Array(data));\n  }\n\n  private stss(track: MP4Track) {\n    const iFrames = track.samples.filter((sample) => sample.flags.isKeyFrame).map((sample) => sample.index + 1);\n    const data = [\n      0x00, // version\n      0x00,\n      0x00,\n      0x00, // flags\n      ...toHexadecimal(iFrames.length),\n    ];\n    iFrames.forEach((iFrame) => {\n      data.push(...toHexadecimal(iFrame));\n    });\n    return makeBox(getCharCode('stss'), new Uint8Array(data));\n  }\n\n  private stsc() {\n    return makeBox(\n      getCharCode('stsc'),\n      new Uint8Array([\n        0x00, // version\n        0x00,\n        0x00,\n        0x00, // flags\n        0x00,\n        0x00,\n        0x00,\n        0x00, // entry_count\n      ]),\n    );\n  }\n\n  private stsz() {\n    return makeBox(\n      getCharCode('stsz'),\n      new Uint8Array([\n        0x00, // version\n        0x00,\n        0x00,\n        0x00, // flags\n        0x00,\n        0x00,\n        0x00,\n        0x00, // sample_size\n        0x00,\n        0x00,\n        0x00,\n        0x00, // sample_count\n      ]),\n    );\n  }\n\n  private stco() {\n    return makeBox(\n      getCharCode('stco'),\n      new Uint8Array([\n        0x00, // version\n        0x00,\n        0x00,\n        0x00, // flags\n        0x00,\n        0x00,\n        0x00,\n        0x00, // entry_count\n      ]),\n    );\n  }\n\n  private mvex() {\n    const trexs = this.param.tracks.map((track) => this.trex(track)).reverse();\n    return makeBox(getCharCode('mvex'), ...trexs);\n  }\n\n  private trex(track: MP4Track) {\n    return makeBox(\n      getCharCode('trex'),\n      new Uint8Array([\n        0x00, // version 0\n        0x00,\n        0x00,\n        0x00, // flags\n        track.id >> 24,\n        (track.id >> 16) & 0xff,\n        (track.id >> 8) & 0xff,\n        track.id & 0xff, // track_ID\n        0x00,\n        0x00,\n        0x00,\n        0x01, // default_sample_description_index\n        0x00,\n        0x00,\n        0x00,\n        0x00, // default_sample_duration\n        0x00,\n        0x00,\n        0x00,\n        0x00, // default_sample_size\n        0x00,\n        0x01,\n        0x00,\n        0x01, // default_sample_flags\n      ]),\n    );\n  }\n\n  private mfhd() {\n    return makeBox(\n      getCharCode('mfhd'),\n      new Uint8Array([\n        0x00,\n        0x00,\n        0x00,\n        0x00, // flags\n        this.param.sequenceNumber >> 24,\n        (this.param.sequenceNumber >> 16) & 0xff,\n        (this.param.sequenceNumber >> 8) & 0xff,\n        this.param.sequenceNumber & 0xff, // sequence_number\n      ]),\n    );\n  }\n\n  private traf() {\n    const sdtp = this.sdtp();\n    this.param.offset = sdtp.length + 72; // tfhd + tfdt + traf header + mfhd + moof header + mdat header\n    return makeBox(getCharCode('traf'), this.tfhd(), this.tfdt(), this.trun(), sdtp);\n  }\n\n  private tfhd() {\n    return makeBox(\n      getCharCode('tfhd'),\n      new Uint8Array([\n        0x00, // version 0\n        0x00,\n        0x00,\n        0x00, // flags\n        ...toHexadecimal(this.param.track.id), // track_ID\n      ]),\n    );\n  }\n\n  private tfdt() {\n    return makeBox(\n      getCharCode('tfdt'),\n      new Uint8Array([\n        0x00, // version 0\n        0x00,\n        0x00,\n        0x00, // flags\n        ...toHexadecimal(this.param.baseMediaDecodeTime), // baseMediaDecodeTime\n      ]),\n    );\n  }\n\n  private trun() {\n    const samples = this.param.track.samples || [];\n    const len = samples.length;\n    const arraylen = 12 + 16 * len;\n    this.param.offset += 8 + arraylen;\n    const data = [\n      0x00, // version 0\n      0x00,\n      0x0f,\n      0x01, // flags\n      ...toHexadecimal(len), // sample_count\n      ...toHexadecimal(this.param.offset), // data_offset\n    ];\n    this.param.track.samples.forEach((sample) => {\n      const paddingValue = 0;\n      const { duration, size, flags, cts } = sample;\n      data.push(...toHexadecimal(duration)); // sample_duration\n      data.push(...toHexadecimal(size)); // sample_size\n      data.push((flags.isLeading << 2) | flags.dependsOn);\n      data.push((flags.isDependedOn << 6) | (flags.hasRedundancy << 4) | (paddingValue << 1) | flags.isNonSync);\n      data.push(flags.degradPrio & (0xf0 << 8));\n      data.push(flags.degradPrio & 0x0f); // sample_flags\n      data.push(...toHexadecimal(cts)); // sample_composition_time_offset\n    });\n    return makeBox(getCharCode('trun'), new Uint8Array(data));\n  }\n\n  private sdtp() {\n    const buffer = new Uint8Array(4 + this.param.track.samples.length);\n    this.param.track.samples.forEach((sample, index) => {\n      buffer[index + 4] = (sample.flags.dependsOn << 4) | (sample.flags.isDependedOn << 2) | sample.flags.hasRedundancy;\n    });\n    return makeBox(getCharCode('sdtp'), buffer);\n  }\n}\n","import { VideoFrame } from '../base/video-frame';\nimport { VideoSequence } from '../base/video-sequence';\nimport { concatUint8Arrays } from '../codec/utils/byte-utils';\nimport { IS_IOS } from '../constant';\nimport { BoxParam, MP4Generator, MP4Track } from './mp4-generator';\n\nconst SEQUENCE_NUMBER = 1;\nconst BASE_MEDIA_DECODE_TIME = 0;\nconst BASE_MEDIA_TIME_SCALE = 6000;\n\nexport const coverToMp4 = (videoSequence: VideoSequence) => {\n  const sequence = IS_IOS ? getVirtualSequence(videoSequence) : videoSequence;\n  const mp4Track = makeMp4Track(sequence);\n  if (!mp4Track || mp4Track.len === 0) throw new Error('mp4Track is empty');\n  const boxParam: BoxParam = {\n    offset: 0,\n    tracks: [mp4Track],\n    track: mp4Track,\n    duration: mp4Track.duration,\n    timescale: mp4Track.timescale,\n    sequenceNumber: SEQUENCE_NUMBER,\n    baseMediaDecodeTime: BASE_MEDIA_DECODE_TIME,\n    nalusBytesLen: mp4Track.len,\n    videoSequence: sequence,\n  };\n  const mp4Generator = new MP4Generator(boxParam);\n  const ftyp = mp4Generator.ftyp();\n  const moov = mp4Generator.moov();\n  const moof = mp4Generator.moof();\n  const mdat = mp4Generator.mdat();\n\n  return concatUint8Arrays([ftyp, moov, moof, mdat]);\n};\n\nconst makeMp4Track = (videoSequence: VideoSequence) => {\n  if (videoSequence.headers.length < 2) throw new Error('Bad header data in video sequence!');\n  if (videoSequence.frames.length === 0) throw new Error('There is no frame data in the video sequence!');\n  const mp4Track: MP4Track = {\n    id: 1,\n    type: 'video',\n    timescale: BASE_MEDIA_TIME_SCALE,\n    duration: Math.floor((videoSequence.frames.length * BASE_MEDIA_TIME_SCALE) / videoSequence.frameRate),\n    width: videoSequence.getVideoWidth(),\n    height: videoSequence.getVideoHeight(),\n    sps: [videoSequence.headers[0]],\n    pps: [videoSequence.headers[1]],\n    implicitOffset: getImplicitOffset(videoSequence.frames),\n    len: 0,\n    pts: [],\n    samples: [],\n  };\n\n  const headerLen = videoSequence.headers.reduce((pre, cur) => pre + cur.length, 0);\n  const sampleDelta = mp4Track.duration / videoSequence.frames.length;\n  videoSequence.frames.forEach((frame, index) => {\n    let sampleSize = frame.fileBytes.length ?? 0;\n    if (index === 0) {\n      sampleSize += headerLen;\n    }\n    mp4Track.len += sampleSize;\n    mp4Track.pts.push(frame.frame);\n    mp4Track.samples.push({\n      index,\n      size: sampleSize,\n      duration: sampleDelta,\n      cts: (frame.frame + mp4Track.implicitOffset - index) * sampleDelta,\n      flags: {\n        isKeyFrame: frame.isKeyframe,\n        isNonSync: frame.isKeyframe ? 0 : 1,\n        dependsOn: frame.isKeyframe ? 2 : 1,\n        isLeading: 0,\n        isDependedOn: 0,\n        hasRedundancy: 0,\n        degradPrio: 0,\n      },\n    });\n  });\n  return mp4Track;\n};\n\nconst getImplicitOffset = (videoFrames: VideoFrame[]) => {\n  return Math.max(...videoFrames.map((videoFrame, index) => index - videoFrame.frame));\n};\n\nconst getVirtualSequence = (videoSequence: VideoSequence): VideoSequence => {\n  const len = videoSequence.frames.length;\n  for (let index = 0; index < videoSequence.frames.length; index++) {\n    const frame = { ...videoSequence.frames[index] };\n    if (frame.isKeyframe && index > 0) {\n      break;\n    }\n    frame.frame += len;\n    videoSequence.frames.push(frame);\n  }\n  return videoSequence;\n};\n","type K = keyof HTMLVideoElementEventMap;\n\nlet eventHandlers: {\n  [key in K]?: {\n    node: HTMLVideoElement;\n    handler: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => void;\n    capture: boolean;\n  }[];\n} = {};\n\nexport const addListener = (\n  node: HTMLVideoElement,\n  event: K,\n  handler: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => void,\n  capture = false,\n) => {\n  if (!(event in eventHandlers)) {\n    eventHandlers[event] = [];\n  }\n  eventHandlers[event]?.push({ node: node, handler: handler, capture: capture });\n  node.addEventListener(event, handler, capture);\n};\n\nexport const removeListener = (\n  targetNode: HTMLElement,\n  event: K,\n  targetHandler?: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => void,\n) => {\n  if (!(event in eventHandlers)) return;\n  if (targetHandler) {\n    eventHandlers[event]\n      ?.filter(({ node, handler }) => node === targetNode && handler === targetHandler)\n      .forEach(({ node, handler, capture }) => node.removeEventListener(event, handler, capture));\n    eventHandlers[event] = eventHandlers[event]?.filter(\n      ({ node, handler }) => !(node === targetNode && handler === targetHandler),\n    );\n  } else {\n    eventHandlers[event]\n      ?.filter(({ node }) => node === targetNode)\n      .forEach(({ node, handler, capture }) => node.removeEventListener(event, handler, capture));\n    eventHandlers[event] = eventHandlers[event]?.filter(({ node }) => node !== targetNode);\n  }\n};\n\nexport const removeAllListeners = (targetNode: HTMLElement) => {\n  Object.keys(eventHandlers).forEach((event) => {\n    const videoEvent = event as K;\n    eventHandlers[videoEvent]\n      ?.filter(({ node }) => node === targetNode)\n      .forEach(({ node, handler, capture }) => node.removeEventListener(videoEvent, handler, capture));\n\n    eventHandlers[videoEvent] = eventHandlers[videoEvent]?.filter(({ node }) => node !== targetNode);\n  });\n};\n","import { Clock } from '../base/utils/clock';\nimport { destroyVerify } from '../decorators';\nimport { coverToMp4 } from '../generator/mp4-box-helper';\nimport { getWechatNetwork } from './utils';\nimport { addListener, removeAllListeners, removeListener } from './video-listener';\n\nimport type { VideoSequence } from '../base/video-sequence';\n\ndeclare global {\n  interface Window {\n    WeixinJSBridge?: any;\n  }\n}\n\ntype K = keyof HTMLVideoElementEventMap;\n\nconst IS_WECHAT = navigator && /MicroMessenger/i.test(navigator.userAgent);\n\nconst playVideoElement = async (videoElement: HTMLVideoElement) => {\n  if (IS_WECHAT && window.WeixinJSBridge) {\n    await getWechatNetwork();\n  }\n  try {\n    await videoElement.play();\n  } catch (error: any) {\n    throw new Error(error.message);\n  }\n};\n\n@destroyVerify\nexport class VideoReader {\n  public static create(videoSequence: VideoSequence) {\n    const videoReader = new VideoReader(videoSequence);\n    const debugData = videoReader.load(videoSequence);\n    return { videoReader: videoReader, debugData: debugData };\n  }\n\n  protected destroyed = false;\n  protected frameRate = 0;\n\n  private _duration: number;\n  private videoElement: HTMLVideoElement | undefined;\n\n  public constructor(videoSequence: VideoSequence) {\n    this._duration = videoSequence.frameCount / videoSequence.frameRate;\n    this.frameRate = videoSequence.frameRate;\n  }\n\n  public getVideoElement(): HTMLVideoElement {\n    return this.videoElement as HTMLVideoElement;\n  }\n\n  public progress() {\n    return Math.round((this.videoElement!.currentTime / this._duration) * 100) / 100;\n  }\n\n  public duration() {\n    return this._duration;\n  }\n\n  public currentTime() {\n    return this.videoElement!.currentTime || 0;\n  }\n\n  public start() {\n    return playVideoElement(this.videoElement as HTMLVideoElement);\n  }\n\n  public pause() {\n    this.videoElement?.pause();\n  }\n\n  public seek(time: number) {\n    return new Promise<void>((resolve) => {\n      const seekCallback = () => {\n        removeListener(this.videoElement as HTMLVideoElement, 'seeked', seekCallback);\n        resolve();\n      };\n      addListener(this.videoElement as HTMLVideoElement, 'seeked', seekCallback);\n      this.videoElement!.currentTime = time;\n    });\n  }\n\n  public addListener(event: K, handler: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => void) {\n    addListener(this.videoElement as HTMLVideoElement, event, handler);\n  }\n\n  public removeAllListeners() {\n    removeAllListeners(this.videoElement as HTMLVideoElement);\n  }\n\n  public getFrameData(callback: any): any {\n    // NOP\n  }\n\n  public clearCallback() {\n    // NOP\n  }\n\n  public destroy() {\n    this.removeAllListeners();\n    this.videoElement = undefined;\n    this.destroyed = true;\n  }\n\n  protected load(videoSequence: VideoSequence): any {\n    this.videoElement = document.createElement('video');\n    this.videoElement.style.display = 'none';\n    this.videoElement.muted = true;\n    this.videoElement.playsInline = true;\n    const clock = new Clock();\n    const mp4Data = coverToMp4(videoSequence);\n    clock.mark('coverMP4');\n    this.videoElement.src = URL.createObjectURL(new Blob([mp4Data], { type: 'video/mp4' }));\n    this.videoElement.load();\n    return {\n      coverMP4: clock.measure('', 'coverMP4'),\n    };\n  }\n}\n","import { Context, RenderOptions } from './context';\nimport { getWechatNetwork } from './utils';\nimport { EventName } from '../types';\nimport { IS_IOS } from '../constant';\nimport { destroyVerify } from '../decorators';\n\nimport type { PAGFile } from '../pag-file';\nimport { VideoReader } from './video-reader';\nimport { VideoSequence } from '../base/video-sequence';\nimport { Clock } from '../base/utils/clock';\n\ndeclare global {\n  interface Window {\n    WeixinJSBridge?: any;\n  }\n}\n\nconst IS_WECHAT = navigator && /MicroMessenger/i.test(navigator.userAgent);\n\nexport const playVideoElement = async (videoElement: HTMLVideoElement) => {\n  if (IS_WECHAT && window.WeixinJSBridge) {\n    await getWechatNetwork();\n  }\n  try {\n    await videoElement.play();\n  } catch (error: any) {\n    throw new Error(error.message);\n  }\n};\n\n@destroyVerify\nexport class View extends Context {\n  protected videoReader: VideoReader;\n  protected fpsBuffer: number[] = [];\n  protected currentFrame = -1;\n  protected needSeek = false;\n\n  public constructor(pagFile: PAGFile, canvas: HTMLCanvasElement, options: RenderOptions) {\n    super(pagFile, canvas, options);\n    this.videoReader = this.createVideoReader(this.videoSequence);\n  }\n\n  /**\n   * 开始播放\n   */\n  public async play() {\n    if (this.playing) return;\n    this.playing = true;\n    await this.videoReader.start();\n    await this.flushLoop();\n    if (this.getProgress() === 0) {\n      this.eventManager.emit(EventName.onAnimationStart);\n    }\n    this.eventManager.emit(EventName.onAnimationPlay);\n  }\n  /**\n   * 暂停播放\n   */\n  public pause() {\n    if (!this.playing) return;\n    this.videoReader.pause();\n    this.clearTimer();\n    this.playing = false;\n    this.eventManager.emit(EventName.onAnimationPause);\n  }\n  /**\n   * 停止播放\n   */\n  public stop() {\n    this.videoReader.pause();\n    this.videoReader.seek(0);\n    this.clearRender();\n    this.playing = false;\n    this.eventManager.emit(EventName.onAnimationCancel);\n  }\n  /**\n   * 销毁播放实例\n   */\n  public destroy() {\n    this.clearTimer();\n    this.clearRender();\n    this.canvas = null;\n    this.videoReader.destroy();\n    this.destroyed = true;\n  }\n  /**\n   * 返回当前播放进度位置，取值范围为 0.0 到 1.0。\n   */\n  public getProgress() {\n    return this.currentFrame / this.videoSequence.frameCount;\n  }\n  /**\n   * 设置播放进度位置，取值范围为 0.0 到 1.0。\n   */\n  public setProgress(progress: number) {\n    if (progress < 0 || progress > 1) throw new Error('progress must be between 0.0 and 1.0!');\n    const currentFrame = Math.round(progress * this.videoSequence.frameCount);\n    if (this.currentFrame !== currentFrame) {\n      this.needSeek = true;\n      this.currentFrame = currentFrame;\n    }\n  }\n  /**\n   * 渲染当前进度画面\n   */\n  public flush() {\n    return this.flushInternal(true);\n  }\n\n  protected draw() {}\n\n  protected createVideoReader(videoSequence: VideoSequence) {\n    const { videoReader, debugData } = VideoReader.create(videoSequence);\n    this.setDebugData(debugData);\n    if (!IS_IOS) {\n      videoReader.addListener('ended', () => {\n        this.repeat();\n      });\n    }\n    return videoReader;\n  }\n\n  protected async repeat() {\n    // 循环结束\n    if (this.repeatCount === 0) {\n      this.setProgress(1);\n      await this.flushInternal(true);\n      this.videoReader.pause();\n      this.clearTimer();\n      this.playing = false;\n      this.eventManager.emit('onAnimationEnd');\n      return false;\n    }\n    // 次数循环\n    this.repeatCount -= 1;\n    if (IS_IOS) {\n      await this.videoReader.seek(0);\n    } else {\n      this.videoReader.start();\n    }\n    this.eventManager.emit('onAnimationRepeat');\n    return true;\n  }\n\n  protected flushLoop() {\n    this.renderTimer = window.requestAnimationFrame(() => {\n      this.flushLoop();\n    });\n    if (IS_IOS && this.duration() - this.videoReader.currentTime() <= 1 / this.frameRate()) {\n      this.repeat();\n    }\n    return this.flushInternal(false);\n  }\n\n  protected clearTimer() {\n    if (this.renderTimer) {\n      window.cancelAnimationFrame(this.renderTimer);\n      this.renderTimer = null;\n    }\n  }\n\n  protected updateFPS() {\n    let now: number;\n    try {\n      now = performance.now();\n    } catch (e) {\n      now = Date.now();\n    }\n    this.fpsBuffer = this.fpsBuffer.filter((value) => now - value <= 1000);\n    this.fpsBuffer.push(now);\n    this.setDebugData({ FPS: this.fpsBuffer.length });\n  }\n\n  protected async flushInternal(sync: boolean) {\n    const clock = new Clock();\n    if (this.needSeek) {\n      if (sync) {\n        await this.videoReader.seek(this.currentFrame / this.frameRate());\n      } else {\n        this.videoReader.seek(this.currentFrame / this.frameRate());\n      }\n      this.needSeek = false;\n    } else {\n      this.currentFrame = Math.floor(this.videoReader.currentTime() * this.frameRate());\n    }\n    this.draw();\n    clock.mark('draw');\n    this.setDebugData({ draw: clock.measure('', 'draw') });\n    this.updateFPS();\n    this.eventManager.emit(EventName.onAnimationUpdate);\n  }\n}\n","import { destroyVerify } from '../decorators';\nimport { PAGFile } from '../pag-file';\nimport { RenderOptions } from './context';\nimport { View } from './view';\n\n@destroyVerify\nexport class PAG2dView extends View {\n  private context: CanvasRenderingContext2D;\n  private renderCanvas2D: HTMLCanvasElement;\n  private renderCanvas2DContext: CanvasRenderingContext2D;\n\n  public constructor(pagFile: PAGFile, canvas: HTMLCanvasElement, options: RenderOptions) {\n    super(pagFile, canvas, options);\n    const context = this.canvas?.getContext('2d');\n    if (!context) throw new Error(\"Can't get 2d context!\");\n    this.context = context;\n    this.renderCanvas2D = document.createElement('canvas');\n    this.renderCanvas2D.width = this.videoParam.MP4Width;\n    this.renderCanvas2D.height = this.videoParam.MP4Height;\n    const renderCanvas2DContext = this.renderCanvas2D.getContext('2d');\n    if (!renderCanvas2DContext) throw new Error(\"Can't get 2d context!\");\n    this.renderCanvas2DContext = renderCanvas2DContext;\n  }\n\n  protected override draw() {\n    if (this.videoParam.hasAlpha) {\n      this.renderCanvas2DContext.clearRect(0, 0, this.renderCanvas2D.width, this.renderCanvas2D.height);\n      this.renderCanvas2DContext.drawImage(\n        this.videoReader.getVideoElement(),\n        0,\n        0,\n        this.renderCanvas2D.width,\n        this.renderCanvas2D.height,\n      );\n      const frameOne = this.renderCanvas2DContext.getImageData(\n        0,\n        0,\n        this.videoParam.sequenceWidth,\n        this.videoParam.sequenceHeight,\n      );\n      const frameTwo = this.renderCanvas2DContext.getImageData(\n        this.videoParam.alphaStartX,\n        this.videoParam.alphaStartY,\n        this.videoParam.sequenceWidth,\n        this.videoParam.sequenceHeight,\n      );\n      const length = frameOne.data.length / 4;\n      for (let i = 0; i < length; i++) {\n        frameOne.data[i * 4 + 3] = frameTwo.data[i * 4 + 0];\n      }\n      this.renderCanvas2DContext.clearRect(0, 0, this.renderCanvas2D.width, this.renderCanvas2D.height);\n      this.renderCanvas2DContext.putImageData(\n        frameOne,\n        0,\n        0,\n        0,\n        0,\n        this.videoParam.sequenceWidth,\n        this.videoParam.sequenceHeight,\n      );\n      this.context.clearRect(0, 0, this.canvas!.width, this.canvas!.height);\n      this.context.drawImage(\n        this.renderCanvas2D,\n        0,\n        0,\n        this.videoParam.sequenceWidth,\n        this.videoParam.sequenceHeight,\n        this.viewportSize.x,\n        this.viewportSize.y,\n        this.viewportSize.width,\n        this.viewportSize.height,\n      );\n    } else {\n      this.context.drawImage(\n        this.videoReader.getVideoElement(),\n        0,\n        0,\n        this.videoParam.MP4Width,\n        this.videoParam.MP4Height,\n        this.viewportSize.x,\n        this.viewportSize.y,\n        this.viewportSize.width,\n        this.viewportSize.height,\n      );\n    }\n  }\n\n  protected override clearRender() {\n    this.context.clearRect(0, 0, this.canvas!.width, this.canvas!.height);\n  }\n}\n","export const VERTEX_2D_SHADER = `\n      attribute vec2 a_position;\n      attribute vec2 a_texCoord;\n      \n      uniform vec2 u_resolution;\n      uniform vec2 u_scale;\n      \n      varying vec2 v_texCoord;\n    \n      \n      void main() {\n         // convert the rectangle from pixels to 0.0 to 1.0\n         vec2 zeroToOne = a_position / u_resolution;\n      \n         // convert from 0->1 to 0->2\n         vec2 zeroToTwo = zeroToOne * 2.0;\n      \n         // convert from 0->2 to -1->+1 (clipspace)\n         vec2 clipSpace = zeroToTwo - 1.0;\n      \n         gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\n      \n         // pass the texCoord to the fragment shader\n         // The GPU will interpolate this value between points.\n         v_texCoord = a_texCoord / u_scale;\n      }\n        `;\n\nexport const FRAGMENT_2D_SHADER = `\n      precision mediump float;\n      // our texture\n      uniform sampler2D u_image;\n      \n      // the texCoords passed in from the vertex shader.\n      varying vec2 v_texCoord;\n      \n      void main() {\n         gl_FragColor = texture2D(u_image, v_texCoord);\n      }\n         `;\nexport const FRAGMENT_2D_SHADER_TRANSPARENT = `\n      precision mediump float;\n      // our texture\n      uniform sampler2D u_image;\n      \n      // the texCoords passed in from the vertex shader.\n      varying vec2 v_texCoord;\n      uniform vec2 v_alphaStart;\n      \n      void main() {\n         vec4 color = texture2D(u_image, v_texCoord);\n         vec4 alpha = texture2D(u_image, vec2(v_texCoord.x + v_alphaStart.x, v_texCoord.y + v_alphaStart.y));\n         gl_FragColor = vec4(color.rgb * alpha.r, alpha.r);\n      }     \n         `;\n","import { WEBGL_CONTEXT_ATTRIBUTES } from '../constant';\nimport { destroyVerify } from '../decorators';\nimport { PAGFile } from '../pag-file';\nimport { RenderOptions } from './context';\nimport { FRAGMENT_2D_SHADER, FRAGMENT_2D_SHADER_TRANSPARENT, VERTEX_2D_SHADER } from './shader';\nimport { createAndSetupTexture, createProgram, detectWebGLContext, getShaderSourceFromString } from './utils';\nimport { View } from './view';\n\n@destroyVerify\nexport class PAGWebGLView extends View {\n  protected gl: WebGLRenderingContext;\n  protected scale: { x: number; y: number } = { x: 1, y: 1 };\n\n  private program: WebGLProgram;\n  private positionLocation = 0;\n  private texcoordLocation = 0;\n  private alphaStartLocation: WebGLUniformLocation | null = null;\n  private scaleLocation: WebGLUniformLocation | null = null;\n  private resolutionLocation: WebGLUniformLocation | null = null;\n  private positionBuffer: WebGLBuffer | null = null;\n  private texcoordBuffer: WebGLBuffer | null = null;\n  private originalVideoTexture: WebGLTexture | null = null;\n  private renderingTexture: WebGLTexture | null = null;\n  private renderingFbo: WebGLFramebuffer | null = null;\n\n  public constructor(pagFile: PAGFile, canvas: HTMLCanvasElement, options: RenderOptions) {\n    super(pagFile, canvas, options);\n    const gl = this.canvas?.getContext('webgl', {\n      ...WEBGL_CONTEXT_ATTRIBUTES,\n    });\n    if (!gl) throw new Error(\"Can't get WebGL context!\");\n    this.gl = gl;\n    if (this.videoParam.hasAlpha) {\n      this.program = createProgram(\n        this.gl,\n        getShaderSourceFromString(VERTEX_2D_SHADER),\n        getShaderSourceFromString(FRAGMENT_2D_SHADER_TRANSPARENT),\n      );\n    } else {\n      this.program = createProgram(\n        this.gl,\n        getShaderSourceFromString(VERTEX_2D_SHADER),\n        getShaderSourceFromString(FRAGMENT_2D_SHADER),\n      );\n    }\n    this.loadContext();\n  }\n\n  protected override loadContext() {\n    // look up where the vertex data needs to go.\n    if (!this.program) throw new Error('program is not initialized');\n    this.positionLocation = this.gl.getAttribLocation(this.program, 'a_position');\n    if (this.positionLocation === -1) throw new Error('unable to get attribute location for a_position');\n    this.scaleLocation = this.gl.getUniformLocation(this.program, 'u_scale');\n    if (this.scaleLocation === -1) throw new Error('unable to get attribute location for u_scale');\n    this.texcoordLocation = this.gl.getAttribLocation(this.program, 'a_texCoord');\n    if (this.texcoordLocation === -1) throw new Error('unable to get attribute location for a_texCoord');\n    if (this.videoParam.hasAlpha) {\n      this.alphaStartLocation = this.gl.getUniformLocation(this.program, 'v_alphaStart');\n      if (!this.alphaStartLocation) throw new Error('unable to get attribute location for v_alphaStart');\n    }\n    this.resolutionLocation = this.gl.getUniformLocation(this.program, 'u_resolution');\n    if (this.positionLocation === -1) throw new Error('unable to get attribute location for u_resolution');\n\n    // Create a buffer to put three 2d clip space points in\n    this.positionBuffer = this.gl.createBuffer();\n\n    // Bind it to ARRAY_BUFFER (think of it as ARRAY_BUFFER = positionBuffer)\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.positionBuffer);\n    // Set a rectangle the same size as the image.\n    this.setRectangle(this.gl, 0, 0, this.videoParam.MP4Width, this.videoParam.MP4Height);\n\n    // provide texture coordinates for the rectangle.\n    this.texcoordBuffer = this.gl.createBuffer();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.texcoordBuffer);\n    this.gl.bufferData(\n      this.gl.ARRAY_BUFFER,\n      new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]),\n      this.gl.STATIC_DRAW,\n    );\n\n    // Create texture and attach them to framebuffer.\n    this.renderingTexture = createAndSetupTexture(this.gl);\n    // make the texture the same size as the sequence.\n    this.gl.texImage2D(\n      this.gl.TEXTURE_2D,\n      0,\n      this.gl.RGBA,\n      this.videoParam.sequenceWidth,\n      this.videoParam.sequenceHeight,\n      0,\n      this.gl.RGBA,\n      this.gl.UNSIGNED_BYTE,\n      null,\n    );\n    // Create a framebuffer\n    this.renderingFbo = this.gl.createFramebuffer();\n    if (!this.renderingFbo) throw new Error('unable to create framebuffer');\n    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.renderingFbo);\n    // Attach a texture to it.\n    this.gl.framebufferTexture2D(\n      this.gl.FRAMEBUFFER,\n      this.gl.COLOR_ATTACHMENT0,\n      this.gl.TEXTURE_2D,\n      this.renderingTexture,\n      0,\n    );\n\n    // Create a texture and put the video in it.\n    this.originalVideoTexture = createAndSetupTexture(this.gl);\n  }\n\n  protected override draw() {\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.originalVideoTexture);\n    // Upload the video into the texture.\n    this.texImage2D();\n    // Clear the canvas\n    this.gl.clearColor(0, 0, 0, 0);\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n\n    // Tell it to use our program (pair of shaders)\n    this.gl.useProgram(this.program);\n\n    // Turn on the position attribute\n    this.gl.enableVertexAttribArray(this.positionLocation);\n\n    // Bind the position buffer\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.positionBuffer);\n\n    // Tell the position attribute how to get data out of positionBuffer (ARRAY_BUFFER)\n    const size = 2; // 2 components per iteration\n    const type: number = this.gl.FLOAT; // the data is 32bit floats\n    const normalize = false; // don't normalize the data\n    const stride = 0; // 0 = move forward size * sizeof(type) each iteration to get the next position\n    const offset = 0; // start at the beginning of the buffer\n    this.gl.vertexAttribPointer(this.positionLocation, size, type, normalize, stride, offset);\n\n    // Turn on the teccord attribute\n    this.gl.enableVertexAttribArray(this.texcoordLocation);\n\n    // Bind the position buffer.\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.texcoordBuffer);\n\n    this.gl.vertexAttribPointer(this.texcoordLocation, size, type, normalize, stride, offset);\n\n    if (this.videoParam.hasAlpha) {\n      this.gl.uniform2f(\n        this.alphaStartLocation,\n        this.videoParam.alphaStartX / this.videoParam.MP4Width / this.scale.x,\n        this.videoParam.alphaStartY / this.videoParam.MP4Height / this.scale.y,\n      );\n    }\n\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.originalVideoTexture);\n    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.renderingFbo);\n    this.gl.uniform2f(this.resolutionLocation, this.videoParam.sequenceWidth, this.videoParam.sequenceHeight);\n    this.gl.uniform2f(this.scaleLocation, this.scale.x, this.scale.y);\n    this.gl.viewport(0, 0, this.videoParam.sequenceWidth, this.videoParam.sequenceHeight);\n    const primitiveType: number = this.gl.TRIANGLES;\n    const count = 6;\n    this.gl.drawArrays(primitiveType, offset, count);\n    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\n    this.gl.uniform2f(this.resolutionLocation, this.videoParam.sequenceWidth, this.videoParam.sequenceHeight);\n    this.gl.viewport(this.viewportSize.x, this.viewportSize.y, this.viewportSize.width, this.viewportSize.height);\n    // const dpr = window.devicePixelRatio || 1;\n    // debugger\n    // this.gl.viewport(\n    //   this.viewportSize.x * dpr,\n    //   this.viewportSize.y * dpr,\n    //   this.viewportSize.width * dpr,\n    //   this.viewportSize.height * dpr,\n    // );\n    this.gl.drawArrays(primitiveType, offset, count);\n  }\n\n  protected override clearRender() {\n    this.gl.clearColor(0, 0, 0, 0);\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n  }\n\n  protected detectWebGLContext() {\n    return detectWebGLContext();\n  }\n\n  protected texImage2D() {\n    this.gl.texImage2D(\n      this.gl.TEXTURE_2D,\n      0,\n      this.gl.RGBA,\n      this.gl.RGBA,\n      this.gl.UNSIGNED_BYTE,\n      this.videoReader.getVideoElement(),\n    );\n  }\n\n  private setRectangle(gl: WebGLRenderingContext, x: number, y: number, width: number, height: number) {\n    const x1: number = x;\n    const x2: number = x + width;\n    const y1: number = y;\n    const y2: number = y + height;\n    // const dpr = window.devicePixelRatio || 1;\n    // const x1: number = x * dpr;\n    // const x2: number = (x + width) * dpr;\n    // const y1: number = y * dpr;\n    // const y2: number = (y + height) * dpr;\n    // debugger\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([x1, y1, x2, y1, x1, y2, x1, y2, x2, y1, x2, y2]), gl.STATIC_DRAW);\n  }\n}\n","import { Clock } from './base/utils/clock';\nimport { PAGFile } from './pag-file';\nimport { RenderingMode } from './types';\nimport { PAG2dView } from './view/pag-2d-view';\nimport { PAGWebGLView } from './view/pag-webgl-view';\n\nimport type { RenderOptions } from './view/context';\nimport type { View } from './view/view';\n\nexport class PAGView {\n  /**\n   * 实例化一个 PAGView 对象\n   * @param data PAG文件数据\n   * @param canvas 渲染画板\n   * @param options 渲染选项\n   * @returns PAGView 对象\n   */\n  public static init(data: ArrayBuffer, canvas: HTMLCanvasElement, options: RenderOptions = {}) {\n    const opts = {\n      renderingMode: RenderingMode.WebGL,\n      ...options,\n    };\n    const clock = new Clock();\n    const pagFile = PAGFile.fromArrayBuffer(data);\n    clock.mark('decode');\n    let pagView: View;\n    if (opts.renderingMode === RenderingMode.WebGL) {\n      pagView = new PAGWebGLView(pagFile, canvas, opts);\n    } else {\n      pagView = new PAG2dView(pagFile, canvas, opts);\n    }\n    pagView.setDebugData({ decodePAGFile: clock.measure('', 'decode') });\n    return pagView;\n  }\n}\n"],"names":["getTime","performance","now","bind","e","Date","Clock","constructor","this","startTime","markers","reset","mark","key","Object","keys","find","markerKey","console","log","measure","makerFrom","makerTo","start","end","CompositionType","CompositionType2","TagCode","TagCode2","readTagHeader","byteBuffer","codeAndLength","readUint16","length","code","readUint32","context","tagLevel","readTags","byteArray","parameter","reader","header","End","tagBytes","readBytes","WEBGL_CONTEXT_ATTRIBUTES","alpha","depth","stencil","antialias","BlendMode","KeyframeInterpolationType","IS_IOS","navigator","test","userAgent","toLowerCase","Black","red","green","blue","White","verifyFailed","error","verifyAndReturn","expression","_Composition","id","width","height","duration","frameRate","backgroundColor","cacheID","cacheIDCount","type","Unknown","getStaticTimeRanges","verify","Composition","VideoComposition","super","arguments","hasAlpha","sequences","staticTimeRanges","staticTimeRangeUpdated","Video","updateStaticTimeRanges","sequence","i","item","timeScale","timeRange","Math","round","push","range","hasImageContent","Ratio","numerator","denominator","value","DefaultRatio","Point","x","y","ZERO_POINT","TrackMatteType","LayerType","LayerType2","Layer","parent","containingComposition","stretch","autoOrientation","transform","isActive","blendMode","Normal","trackMatteType","trackMatteLayer","timeRemap","masks","effects","layerStyles","layerCache","maxScale","excludeVaryingRanges","timeRanges","_a","mask","effect","layerStyle","gotoFrame","frame","getMaxScaleFactor","property","scale","animatable","keyframes","scaleX","abs","startValue","scaleY","keyframe","endValue","parentScale","BEZIER_PRECISION","readColor","readUint8","readTime","readEncodedUint64","readPoint","readFloat32","readCompositionAttributes","composition","readEncodeInt32","Context","compositions","errorMessages","throwException","message","releaseCompositions","slice","ErrorMessage","ByteArray","buffer","littleEndian","_position","bitPosition","dataView","DataView","byteLength","bytesAvailable","data","position","alignWithBytes","readBoolean","getInt8","positonChanged","Boolean","readChar","Error","String","fromCharCode","getUint8","readInt8","readInt16","getInt16","getUint16","readInt24","left","right","readUint24","readInt32","getInt32","getUint32","readInt64","readUint64","getFloat32","readDouble","getFloat64","readUTF8String","encoded","dataLength","toString","decodeURIComponent","readEncodedUint32","byte","readEncodeInt64","len","newBuffer","readUBits","numBits","bitMasks","pos","bytePosition","floor","bitLength","min","bitPositionChanged","readBits","readNumBits","readInt32List","count","Array","readUint32List","readBitBoolean","readFloatList","precision","ceil","ByteData","VideoFrame","isKeyframe","fileBytes","ArrayBuffer","Sequence","frameCount","isKeyFrameFlags","VideoSequence","alphaStartX","alphaStartY","frames","headers","getVideoWidth","videoWidth","getVideoHeight","videoHeight","readByteDataWithStartCode","bytes","setUint32","dst","dstOffset","src","srcOffset","num","dstUint8Array","Uint8Array","srcUint8Array","set","memcpy","ReadTagsOfVideoComposition","CompositionAttributes","videoSequence","sps","pps","videoFrame","staticTimeRange","readVideoSequence","EffectType","EffectType2","subtractFromTimeRanges","endTime","splice","splitTimeRangesAt","VectorComposition","layers","Vector","layer","Property","_timeRanges","_time","Transform2D","static","anchorPoint","xPosition","yPosition","rotation","opacity","PreComposeLayer","compositionStartTime","PreCompose","ranges","pop","ShapeLayer","contents","Shape","element","SolidLayer","solidColor","Solid","UnDefinedLayer","undefined","Keyframe","interpolationType","Hold","bezierOut","bezierIn","spatialOut","spatialIn","initialize","getValue","containsTime","time","AnimatableProperty","lastKeyframeIndex","Bezier","Linear","lastKeyframe","AttributeType","AttributeType2","readTagBlock","blockConfig","tagConfig","flags","configs","config","flag","readAttributeFlag","index","target","readAttribute","BaseAttribute","attributeType","defaultValue","_byteArray","_flag","_targetClass","_target","readValue","readValueList","_list","_count","dimensionality","newKeyframe","targetClass","exist","readProperty","readKeyframes","readTimeAndValue","readTimeEase","hasSpatial","numFrames","list","interpolateFloat","a","b","t","Interpolator","getInterpolation","input","MultiDimensionPointKeyframe","xInterpolator","yInterpolator","_b","_c","_d","progress","xProgress","yProgress","SingleEaseKeyframe","interpolator","getProgress","FloatAttributeConfig","BOOLAttributeConfig","Uint8AttributeConfig","valueList","TimeAttributeConfig","PointAttributeConfig","SpatialProperty","values","MultiDimensionProperty","RatioAttributeConfig","numeratorValue","denominatorValue","readRatio","LayerAttributeConfig","readLayerID","readBlockConfigOfLayerAttributes","tagCode","LayerAttributes","BitFlag","Value","None","SimpleProperty","FixedValue","readBlockConfigOfLayerAttributesV2","LayerAttributesV2","readBlockConfigOfTransform2D","MaskBlock","readTagsOfLayer","SolidColor","readSolidColor","CompositionReference","readCompositionReference","readTagsOfVectorComposition","LayerBlock","readLayer","installArrayLayerReference","layerMap","Map","installLayerReference","ID","result","get","hasTrackMatte","DisplacementMap","maskMap","forEach","maskReferences","Fill","fillMask","Stroke","strokeEffect","path","Text","pathOption","Alpha","AlphaInverted","readTagsOfFile","VectorCompositionBlock","readVectorComposition","VideoCompositionBlock","readVideoComposition","decode","bodyByteArray","readBodyBytes","compositionMap","vectorComposition","preComposeLayer","res","installReference","success","verifyAndMake","P","A","G","PAGFile","numLayers","scaledTimeRange","mainComposition","implDuration","arrayBuffer","getVideoSequence","compositionType","getVideoSequenceFromVideoComposition","getVideoSequenceFromVectorComposition","videoComposition","videoCompositions","getVideoComposition","RenderingMode","EventName","ScaleMode","destroyVerify","functions","getOwnPropertyNames","prototype","filter","name","proxyFn","methodName","fn","args","call","createProgram","gl","vertexShaderSource","fragmentShaderSource","program","vShader","createShader","VERTEX_SHADER","attachShader","fShader","FRAGMENT_SHADER","linkProgram","programMessage","getProgramInfoLog","vShaderMessage","getShaderInfoLog","fShaderMessage","source","shader","shaderSource","compileShader","getShaderSourceFromString","str","replace","createAndSetupTexture","texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","EventManager","listenersMap","on","eventName","listener","off","listenerList","findIndex","emit","payload","pagFile","canvas","options","canvasSize","playing","viewportSize","destroyed","renderTimer","repeatCount","viewScaleMode","LetterBox","debugData","FPS","decodePAGFile","createDir","coverMP4","writeFile","createDecoder","getFrame","draw","videoParam","sequenceWidth","sequenceHeight","MP4Width","MP4Height","getVideoParam","eventManager","renderingMode","WebGL","updateSize","useScale","setScaleMode","isPlaying","isDestroyed","setRepeatCount","addListener","removeListener","scaleMode","Stretch","Zoom","max","displaySize","styleDeclaration","getComputedStyle","computedSize","Number","styleSize","style","JSON","stringify","window","devicePixelRatio","getDebugData","setDebugData","__spreadValues","loadContext","clearRender","__decorateClass","CORRECTION_UTC","getCharCode","charCodeAt","toHexadecimal","makeBox","size","MP4Generator","boxParam","param","ftyp","moov","traks","tracks","map","track","trak","reverse","mvhd","mvex","moof","mfhd","traf","mdat","offset","timescale","tkhd","edts","mdia","DEFAULT_VOLUME","elst","implicitOffset","samples","mdhd","hdlr","minf","vmhd","dinf","stbl","dref","stsd","stts","ctts","stss","stsc","stsz","stco","avc1","avcc","byteData","concat","sampleCount","pts","sampleDelta","dts","iFrames","sample","isKeyFrame","iFrame","trexs","trex","sequenceNumber","sdtp","tfhd","tfdt","trun","baseMediaDecodeTime","arraylen","cts","isLeading","dependsOn","isDependedOn","hasRedundancy","paddingValue","isNonSync","degradPrio","coverToMp4","getVirtualSequence","mp4Track","makeMp4Track","nalusBytesLen","mp4Generator","arrays","totalLength","arr","concatUint8Arrays","getImplicitOffset","headerLen","reduce","pre","cur","sampleSize","videoFrames","eventHandlers","node","event","handler","capture","addEventListener","IS_WECHAT","playVideoElement","async","videoElement","WeixinJSBridge","Promise","resolve","invoke","play","VideoReader","_duration","videoReader","load","getVideoElement","currentTime","pause","seek","seekCallback","targetNode","targetHandler","removeEventListener","removeAllListeners","videoEvent","getFrameData","callback","clearCallback","destroy","document","createElement","display","muted","playsInline","clock","mp4Data","URL","createObjectURL","Blob","View","fpsBuffer","currentFrame","needSeek","createVideoReader","flushLoop","onAnimationStart","onAnimationPlay","clearTimer","onAnimationPause","stop","onAnimationCancel","setProgress","flush","flushInternal","create","repeat","requestAnimationFrame","cancelAnimationFrame","updateFPS","sync","onAnimationUpdate","PAG2dView","getContext","renderCanvas2D","renderCanvas2DContext","clearRect","drawImage","frameOne","getImageData","frameTwo","putImageData","VERTEX_2D_SHADER","PAGWebGLView","positionLocation","texcoordLocation","alphaStartLocation","scaleLocation","resolutionLocation","positionBuffer","texcoordBuffer","originalVideoTexture","renderingTexture","renderingFbo","getAttribLocation","getUniformLocation","createBuffer","bindBuffer","ARRAY_BUFFER","setRectangle","bufferData","Float32Array","STATIC_DRAW","texImage2D","RGBA","UNSIGNED_BYTE","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","clearColor","clear","COLOR_BUFFER_BIT","useProgram","enableVertexAttribArray","FLOAT","vertexAttribPointer","uniform2f","viewport","primitiveType","TRIANGLES","drawArrays","detectWebGLContext","x1","x2","y1","y2","opts","fromArrayBuffer","pagView"],"mappings":"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Q1kB,KAAKulB,KAAKb,GACpF,CAEQW,KAAKX,GACJ,OAAAV,GACLH,GAAY,QACZ,IAAIlU,WAAW,CACb,EACA,EACA,EACA,KACGoU,GAAcH,OACdG,GAAcH,OACdG,GAAcW,EAAM9gB,IACvB,EACA,EACA,EACA,KACGmgB,GAAcW,EAAM3gB,UACvB,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACCyhB,EACEA,EACH,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,EACA,EACCd,EAAM7gB,OAAS,EAAK,IACP,IAAd6gB,EAAM7gB,MACN,EACA,EACC6gB,EAAM5gB,QAAU,EAAK,IACP,IAAf4gB,EAAM5gB,OACN,EACA,IAGN,CAEQwhB,KAAKZ,GACX,OAAOV,GAAQH,GAAY,QAAS7jB,KAAKylB,KAAKf,GAChD,CAEQe,KAAKf,GACJ,OAAAV,GACLH,GAAY,QACZ,IAAIlU,WAAW,CACb,EACA,EACA,EACA,KACGoU,GAAc,MACdA,GAAcW,EAAM3gB,aACpBggB,GAAcW,EAAMgB,eAAiBngB,KAAK4H,MAAMuX,EAAM3gB,SAAW2gB,EAAMiB,QAAQlkB,SAClF,EACA,EACA,EACA,IAGN,CAEQ8jB,KAAKb,GACX,OAAOV,GAAQH,GAAY,QAAS7jB,KAAK4lB,OAAQ5lB,KAAK6lB,OAAQ7lB,KAAK8lB,KAAKpB,GAC1E,CAEQkB,OACC,OAAA5B,GACLH,GAAY,QACZ,IAAIlU,WAAW,CACb,EACA,EACA,EACA,KACGoU,GAAcH,OACdG,GAAcH,OACdG,GAAc/jB,KAAKokB,MAAMgB,cACzBrB,GAAc,GACjB,GACA,IACA,EACA,IAGN,CAEQ8B,OACC,OAAA7B,GACLH,GAAY,QACZ,IAAIlU,WAAW,CACb,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IACA,IACA,IACA,IACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,IACA,IACA,IACA,IACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IAGN,CAEQmW,KAAKpB,GACX,OAAOV,GAAQH,GAAY,QAAS7jB,KAAK+lB,OAAQ/lB,KAAKgmB,OAAQhmB,KAAKimB,KAAKvB,GAC1E,CAEQqB,OACC,OAAA/B,GACLH,GAAY,QACZ,IAAIlU,WAAW,CACb,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAGN,CAEQqW,OACN,OAAOhC,GAAQH,GAAY,QAAS7jB,KAAKkmB,OAC3C,CAEQA,OACC,OAAAlC,GACLH,GAAY,QACZ,IAAIlU,WAAW,CACb,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,EACA,IAGN,CAEQsW,KAAKvB,GACJ,OAAAV,GACLH,GAAY,QACZ7jB,KAAKmmB,KAAKzB,GACV1kB,KAAKomB,KAAK1B,GACV1kB,KAAKqmB,KAAK3B,GACV1kB,KAAKsmB,KAAK5B,GACV1kB,KAAKumB,OACLvmB,KAAKwmB,OACLxmB,KAAKymB,OAET,CAEQN,KAAKzB,GAWJ,OAAAV,GAAQH,GAAY,QAAS,IAAIlU,WAV3B,CACX,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAEwD3P,KAAK0mB,KAAKhC,GACtE,CAEQgC,KAAKhC,GACX,MAAMla,EAAO,CACX,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACCka,EAAM7gB,OAAS,EAAK,IACP,IAAd6gB,EAAM7gB,MACL6gB,EAAM5gB,QAAU,EAAK,IACP,IAAf4gB,EAAM5gB,OACN,EACA,GACA,EACA,EACA,EACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,IACA,IACA,IACA,EACA,EACA,EA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"}