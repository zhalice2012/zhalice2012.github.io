{"version":3,"file":"pag.umd.js","sources":["../src/base/utils/clock.ts","../src/codec/types.ts","../src/codec/tags/tag-header.ts","../src/constant.ts","../src/base/color.ts","../src/base/utils/verify.ts","../src/base/composition.ts","../src/base/video-composition.ts","../src/base/ratio.ts","../src/base/point.ts","../src/base/layer.ts","../src/codec/data-types.ts","../src/codec/tags/composition-attributes.ts","../src/codec/context.ts","../src/base/utils/error-map.ts","../src/codec/utils/byte-array.ts","../src/base/byte-data.ts","../src/base/video-frame.ts","../src/base/sequence.ts","../src/base/video-sequence.ts","../src/codec/utils/byte-utils.ts","../src/codec/nalu-start-code.ts","../src/codec/tags/video-sequence-tag.ts","../src/codec/tags/video-composition-tag.ts","../src/base/effects/effect.ts","../src/base/time-range.ts","../src/base/vector-composition.ts","../src/base/property.ts","../src/base/transform-2d.ts","../src/base/pre-compose-layer.ts","../src/base/shape-layer.ts","../src/base/solid-layer.ts","../src/base/un-defined-layer.ts","../src/base/keyframe.ts","../src/base/animatable-property.ts","../src/codec/attribute-helper.ts","../src/codec/tags/solid-layer.ts","../src/base/utils/interpolate.ts","../src/base/utils/interpolator.ts","../src/base/keyframes/multi-dimension-point-keyframe.ts","../src/base/keyframes/single-ease-keyframe.ts","../src/codec/attributes.ts","../src/codec/tags/tag-attributes.ts","../src/codec/tags/read-composition-reference.ts","../src/codec/tags/layer-tag.ts","../src/codec/tags/vector-composition-tag.ts","../src/codec/tags/file-tags.ts","../src/pag-codec.ts","../src/pag-file.ts","../src/types.ts","../src/decorators.ts","../src/view/utils.ts","../src/base/utils/event-manager.ts","../src/view/context.ts","../node_modules/core-js/internals/global.js","../node_modules/core-js/internals/fails.js","../node_modules/core-js/internals/descriptors.js","../node_modules/core-js/internals/function-bind-native.js","../node_modules/core-js/internals/function-uncurry-this.js","../node_modules/core-js/internals/document-all.js","../node_modules/core-js/internals/is-callable.js","../node_modules/core-js/internals/is-null-or-undefined.js","../node_modules/core-js/internals/require-object-coercible.js","../node_modules/core-js/internals/to-object.js","../node_modules/core-js/internals/has-own-property.js","../node_modules/core-js/internals/function-name.js","../node_modules/core-js/internals/define-global-property.js","../node_modules/core-js/internals/shared-store.js","../node_modules/core-js/internals/inspect-source.js","../node_modules/core-js/internals/weak-map-basic-detection.js","../node_modules/core-js/internals/is-object.js","../node_modules/core-js/internals/document-create-element.js","../node_modules/core-js/internals/ie8-dom-define.js","../node_modules/core-js/internals/v8-prototype-define-bug.js","../node_modules/core-js/internals/an-object.js","../node_modules/core-js/internals/function-call.js","../node_modules/core-js/internals/get-built-in.js","../node_modules/core-js/internals/object-is-prototype-of.js","../node_modules/core-js/internals/engine-user-agent.js","../node_modules/core-js/internals/engine-v8-version.js","../node_modules/core-js/internals/symbol-constructor-detection.js","../node_modules/core-js/internals/use-symbol-as-uid.js","../node_modules/core-js/internals/is-symbol.js","../node_modules/core-js/internals/try-to-string.js","../node_modules/core-js/internals/a-callable.js","../node_modules/core-js/internals/get-method.js","../node_modules/core-js/internals/ordinary-to-primitive.js","../node_modules/core-js/internals/shared.js","../node_modules/core-js/internals/uid.js","../node_modules/core-js/internals/well-known-symbol.js","../node_modules/core-js/internals/to-primitive.js","../node_modules/core-js/internals/to-property-key.js","../node_modules/core-js/internals/object-define-property.js","../node_modules/core-js/internals/create-property-descriptor.js","../node_modules/core-js/internals/create-non-enumerable-property.js","../node_modules/core-js/internals/shared-key.js","../node_modules/core-js/internals/internal-state.js","../node_modules/core-js/internals/make-built-in.js","../node_modules/core-js/internals/define-built-in-accessor.js","../node_modules/core-js/internals/regexp-flags.js","../node_modules/core-js/modules/es.regexp.flags.js","../src/generator/mp4-generator.ts","../src/generator/mp4-box-helper.ts","../src/view/video-listener.ts","../src/view/video-reader.ts","../src/view/view.ts","../src/view/pag-2d-view.ts","../src/view/shader.ts","../src/view/pag-webgl-view.ts","../src/pag-view.ts"],"sourcesContent":["let getTime: () => number;\ntry {\n  getTime = performance.now.bind(performance);\n} catch (e) {\n  getTime = Date.now;\n}\n\nexport class Clock {\n  private startTime: number;\n  private markers: { [key: string]: number };\n\n  public constructor() {\n    this.startTime = getTime();\n    this.markers = {};\n  }\n\n  public reset() {\n    this.startTime = getTime();\n    this.markers = {};\n  }\n\n  public mark(key: string) {\n    if (!key) {\n      console.log('Clock.mark(): An empty marker name was specified!');\n      return;\n    }\n    if (Object.keys(this.markers).find((markerKey) => markerKey === key)) {\n      console.log(`Clock.mark(): The specified marker name '${key}' already exists!`);\n      return;\n    }\n    this.markers[key] = getTime();\n  }\n\n  public measure(makerFrom: string, makerTo: string) {\n    let start;\n    let end;\n    if (!makerFrom) {\n      start = this.startTime;\n    } else {\n      if (!Object.keys(this.markers).find((markerKey) => markerKey === makerFrom)) {\n        console.log(`Clock.measure(): The specified makerFrom '${makerFrom}' does not exist!`);\n        return 0;\n      }\n      start = this.markers[makerFrom];\n    }\n    if (!makerTo) {\n      end = getTime();\n    } else {\n      if (!Object.keys(this.markers).find((markerKey) => markerKey === makerTo)) {\n        console.log(`Clock.measure(): The specified makerTo '${makerTo}' does not exist!`);\n        return 0;\n      }\n      end = this.markers[makerTo];\n    }\n    return end - start;\n  }\n}\n","export const enum CompositionType {\n  Unknown,\n  Vector,\n  Bitmap,\n  Video,\n}\n\nexport const enum TagCode {\n  End = 0,\n  FontTables = 1,\n  VectorCompositionBlock = 2,\n  CompositionAttributes = 3,\n  ImageTables = 4,\n  LayerBlock = 5,\n  LayerAttributes = 6,\n  SolidColor = 7,\n  TextSource = 8,\n  TextPathOption = 9,\n  TextMoreOption = 10,\n  ImageReference = 11,\n  CompositionReference = 12,\n  Transform2D = 13,\n  MaskBlock = 14,\n  ShapeGroup = 15,\n  Rectangle = 16,\n  Ellipse = 17,\n  PolyStar = 18,\n  ShapePath = 19,\n  Fill = 20,\n  Stroke = 21,\n  GradientFill = 22,\n  GradientStroke = 23,\n  MergePaths = 24,\n  TrimPaths = 25,\n  Repeater = 26,\n  RoundCorners = 27,\n  Performance = 28,\n  DropShadowStyle = 29,\n  InnerShadowStyle = 30,\n  OuterGlowStyle = 31,\n  InnerGlowStyle = 32,\n  BevelAndEmbossStyle = 33,\n  SatinStyle = 34,\n  ColorOverlayStyle = 35,\n  GradientOverlayStyle = 36,\n  StrokeStyle = 37,\n  TintEffect = 38,\n  FillEffect = 39,\n  StrokeEffect = 40,\n  TritoneEffect = 41,\n  DropShadowEffect = 42,\n  RadialWipeEffect = 43,\n  DisplacementMapEffect = 44,\n  BitmapCompositionBlock = 45,\n  BitmapSequence = 46,\n  ImageBytes = 47,\n  ImageBytes2 = 48,\n  ImageBytes3 = 49,\n  VideoCompositionBlock = 50,\n  VideoSequence = 51,\n  LayerAttributesV2 = 52,\n  // add new tags here...\n  Count,\n}\n","import { TagCode } from '../types';\n\nimport type { ByteArray } from '../utils/byte-array';\n\nexport interface TagHeader {\n  code: TagCode;\n  length: number;\n}\n\nexport const readTagHeader = (byteBuffer: ByteArray): TagHeader => {\n  const codeAndLength: number = byteBuffer.readUint16();\n  let length: number = (codeAndLength & 63) >>> 0;\n  const code: number = codeAndLength >> 6;\n  if (length === 63) {\n    length = byteBuffer.readUint32();\n  }\n  if (byteBuffer.context.tagLevel < code) {\n    byteBuffer.context.tagLevel = code;\n  }\n  return { code, length };\n};\n\nexport function readTags<T>(byteArray: ByteArray, parameter: T, reader: Function) {\n  let header = readTagHeader(byteArray);\n  while (header.code !== TagCode.End) {\n    const tagBytes = byteArray.readBytes(header.length);\n    reader(tagBytes, header.code, parameter);\n    if (byteArray.context.tagLevel < tagBytes.context.tagLevel) {\n      byteArray.context.tagLevel = tagBytes.context.tagLevel;\n    }\n    header = readTagHeader(byteArray);\n  }\n}\n","export const ZERO_ID = 0;\nexport const ZERO_TIME = 0;\nexport const OPAQUE = 255;\nexport const TRANSPARENT = 0;\n\n/**\n * Default WebGL ContextAttributes\n */\nexport const WEBGL_CONTEXT_ATTRIBUTES = {\n  alpha: true,\n  depth: false,\n  stencil: false,\n  antialias: true,\n};\n\n// 混合模式\nexport const enum BlendMode {\n  Normal = 0,\n  Multiply = 1,\n  Screen = 2,\n  Overlay = 3,\n  Darken = 4,\n  Lighten = 5,\n  ColorDodge = 6,\n  ColorBurn = 7,\n  HardLight = 8,\n  SoftLight = 9,\n  Difference = 10,\n  Exclusion = 11,\n  Hue = 12,\n  Saturation = 13,\n  Color = 14,\n  Luminosity = 15,\n\n  // modes used only when rendering.\n  DestinationIn = 21,\n  DestinationOut = 22,\n  DestinationATop = 23,\n  SourceIn = 24,\n  SourceOut = 25,\n  Xor = 26,\n}\n\n// 路径动作\nexport const enum PathVerb {\n  MoveTo,\n  LineTo,\n  CurveTo,\n  Close,\n}\n\n// 关键帧的差值器类型\nexport const enum KeyframeInterpolationType {\n  None = 0,\n  Linear = 1,\n  Bezier = 2,\n  Hold = 3,\n}\n\n// 段落对齐\nexport const enum ParagraphJustification {\n  LeftJustify = 0,\n  CenterJustify = 1,\n  RightJustify = 2,\n  FullJustifyLastLineLeft = 3,\n  FullJustifyLastLineRight = 4,\n  FullJustifyLastLineCenter = 5,\n  FullJustifyLastLineFull = 6,\n}\n\nexport const IS_IOS = navigator && /(ios|ipad|iphone)/.test(navigator.userAgent.toLowerCase());\n","export interface Color {\n  red: number; // in the range [0 - 255]\n  green: number;\n  blue: number;\n}\n\nexport const Black: Color = { red: 0, green: 0, blue: 0 };\nexport const White: Color = { red: 255, green: 255, blue: 255 };\nexport const Red: Color = { red: 255, green: 0, blue: 0 };\nexport const Green: Color = { red: 0, green: 255, blue: 0 };\nexport const Blue: Color = { red: 0, green: 0, blue: 255 };\n","export const verifyFailed = () => {\n  console.error('PAG Verify Failed!');\n};\n\nexport const verifyAndReturn = (expression: boolean): boolean => {\n  if (expression) {\n    return true;\n  }\n  console.error('PAG Verify Failed!');\n  return false;\n};\n","import { ZERO_ID, ZERO_TIME } from '../constant';\nimport { Color, White } from './color';\nimport { CompositionType } from '../codec/types';\nimport { TimeRange } from './time-range';\nimport { verifyAndReturn } from './utils/verify';\n\nexport class Composition {\n  private static cacheIDCount = 1;\n\n  /**\n   * A unique identifier for this item.\n   */\n  public id: number = ZERO_ID;\n  /**\n   * The width of the Composition.\n   */\n  public width = 0;\n  /**\n   * The height of the item.\n   */\n  public height = 0;\n  /**\n   * The total duration of the item.\n   */\n  public duration: number = ZERO_TIME;\n  /**\n   * The frame rate of the Composition.\n   */\n  public frameRate = 30;\n  /**\n   * The background color of the composition.\n   */\n  public backgroundColor: Color = White;\n  public cacheID = 0;\n\n  public constructor() {\n    this.cacheID = Composition.cacheIDCount;\n    Composition.cacheIDCount += 1;\n  }\n\n  /**\n   * The type of the Composition.\n   */\n  public type(): CompositionType {\n    return CompositionType.Unknown;\n  }\n\n  /**\n   * Returns the static time ranges of this composition.\n   */\n  public getStaticTimeRanges(): Array<TimeRange> {\n    return [];\n  }\n\n  public verify(): boolean {\n    return verifyAndReturn(this.width > 0 && this.height > 0 && this.duration > 0 && this.frameRate > 0);\n  }\n}\n","import { Composition } from './composition';\nimport { CompositionType } from '../codec/types';\nimport { TimeRange } from './time-range';\nimport { VideoSequence } from './video-sequence';\nimport { verifyFailed } from './utils/verify';\n\nexport class VideoComposition extends Composition {\n  public hasAlpha = false;\n  public sequences: Array<VideoSequence> = [];\n\n  private staticTimeRanges: Array<TimeRange> = [];\n  private staticTimeRangeUpdated = false;\n\n  public type(): CompositionType {\n    return CompositionType.Video;\n  }\n\n  public getStaticTimeRanges(): Array<TimeRange> {\n    if (!this.staticTimeRangeUpdated) {\n      this.staticTimeRangeUpdated = true;\n      this.updateStaticTimeRanges();\n    }\n    return this.staticTimeRanges;\n  }\n\n  public updateStaticTimeRanges(): void {\n    if (this.duration <= 1) return;\n    if (this.sequences.length > 0) {\n      let sequence = this.sequences[0];\n      for (let i = 1; i < this.sequences.length; i++) {\n        const item = this.sequences[i];\n        if (item.frameRate > sequence.frameRate) sequence = item;\n      }\n      const timeScale = this.frameRate / sequence.frameRate;\n      for (const timeRange of sequence.staticTimeRanges) {\n        timeRange.start = Math.round(timeRange.start * timeScale);\n        timeRange.end = Math.round(timeRange.end * timeScale);\n        this.staticTimeRanges.push(timeRange);\n      }\n    } else {\n      const range: TimeRange = { start: 0, end: this.duration - 1 };\n      this.staticTimeRanges.push(range);\n    }\n  }\n\n  public hasImageContent(): boolean {\n    return true;\n  }\n\n  public verify(): boolean {\n    if (!super.verify() || this.sequences.length <= 0) {\n      verifyFailed();\n      return false;\n    }\n    for (const sequence of this.sequences) {\n      if (!sequence || !sequence.verify()) {\n        verifyFailed();\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","export class Ratio {\n  public numerator = 1;\n  public denominator = 1;\n\n  public constructor(numerator: number, denominator: number) {\n    this.numerator = numerator;\n    this.denominator = denominator;\n  }\n\n  public value(): number {\n    return this.numerator / this.denominator;\n  }\n}\n\nexport const DefaultRatio = new Ratio(1, 1);\n","export class Point {\n  public x: number;\n  public y: number;\n  public constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nexport const ZERO_POINT = new Point(0, 0);\n","import { TimeRange } from './time-range';\nimport { VectorComposition } from './vector-composition';\nimport { Ratio, DefaultRatio } from './ratio';\nimport { BlendMode, ZERO_ID, ZERO_TIME } from '../constant';\nimport { Transform2D } from './transform-2d';\nimport { Property } from './property';\nimport { Mask } from './mask';\nimport { Effect } from './effects/effect';\nimport { Point } from './point';\nimport { verifyFailed } from './utils/verify';\nimport { AnimatableProperty } from './animatable-property';\n\nexport const enum LayerStyleType {\n  Unknown,\n  DropShadow,\n  Stroke,\n}\n\nexport class LayerStyle {\n  public type(): LayerStyleType {\n    return LayerStyleType.Unknown;\n  }\n\n  public excludeVaryingRanges(_timeRanges: Array<TimeRange>): void {}\n\n  public gotoFrame(_time: number): void {}\n\n  public verify(): boolean {\n    return false;\n  }\n}\n\nexport const enum TrackMatteType {\n  None = 0,\n  Alpha = 1,\n  AlphaInverted = 2,\n  Luma = 3,\n  LumaInverted = 4,\n}\n\nexport const enum LayerType {\n  Unknown,\n  undefined,\n  Solid,\n  Text,\n  Shape,\n  Image,\n  PreCompose,\n}\n\nexport class Layer {\n  /**\n   * Te id of the layer.\n   */\n  public id = 0;\n  /**\n   * The parent of this layer.\n   */\n  public parent: Layer | undefined = undefined; // layer reference\n\n  public containingComposition: VectorComposition | undefined = undefined; // composition reference\n\n  /**\n   * The time stretch percentage of the layer.\n   */\n  public stretch: Ratio = DefaultRatio;\n  /**\n   * The start time of the layer, indicates the start position of the visible range. It could be a negative value.\n   */\n  public startTime = ZERO_ID;\n  /**\n   * The duration of the layer, indicates the length of the visible range.\n   */\n  public duration: number = ZERO_TIME;\n  /**\n   * When true, the layer' automatic orientation is enabled.\n   */\n  public autoOrientation = false;\n  /**\n   * The transformation of the layer.\n   */\n  public transform: Transform2D | undefined = undefined;\n  /**\n   * When false, the layer should be skipped during the rendering loop.\n   */\n  public isActive = true;\n  /**\n   * The blending mode of the layer.\n   */\n  public blendMode: BlendMode = BlendMode.Normal;\n  /**\n   * If layer has a track matte, specifies the way it is applied.\n   */\n  public trackMatteType: TrackMatteType = TrackMatteType.None;\n  public trackMatteLayer: Layer | undefined = undefined;\n  public timeRemap: Property<number> | undefined = undefined;\n  public masks: Array<Mask> | undefined = undefined;\n  public effects: Array<Effect> | undefined = undefined;\n  public layerStyles: Array<LayerStyle> | undefined = undefined;\n\n  public layerCache: Cache | undefined = undefined;\n\n  private maxScale: Point | undefined = undefined;\n\n  public type(): LayerType {\n    return LayerType.Unknown;\n  }\n\n  public excludeVaryingRanges(timeRanges: Array<TimeRange>): void {\n    this.transform?.excludeVaryingRanges(timeRanges);\n    if (this.timeRemap !== undefined) {\n      this.timeRemap.excludeVaryingRanges(timeRanges);\n    }\n    if (this.masks !== undefined) {\n      for (const mask of this.masks) {\n        mask.excludeVaryingRanges(timeRanges);\n      }\n    }\n    if (this.effects !== undefined && this.effects.length > 0) {\n      for (const effect of this.effects) {\n        effect.excludeVaryingRanges(timeRanges);\n      }\n    }\n    if (this.layerStyles !== undefined && this.layerStyles.length > 0) {\n      for (const layerStyle of this.layerStyles) {\n        layerStyle.excludeVaryingRanges(timeRanges);\n      }\n    }\n  }\n\n  public gotoFrame(frame: number): void {\n    this.transform?.gotoFrame(frame);\n    if (this.timeRemap !== undefined) {\n      this.timeRemap.gotoFrame(frame);\n    }\n    if (this.masks !== undefined && this.masks.length > 0) {\n      for (const mask of this.masks) {\n        mask.gotoFrame(frame);\n      }\n    }\n    if (this.effects !== undefined && this.effects.length > 0) {\n      for (const effect of this.effects) {\n        effect.gotoFrame(frame);\n      }\n    }\n    if (this.layerStyles !== undefined && this.layerStyles.length > 0) {\n      for (const layerStyle of this.layerStyles) {\n        layerStyle.gotoFrame(frame);\n      }\n    }\n  }\n\n  public verify(): boolean {\n    if (!this.containingComposition || this.duration <= 0 || !this.transform) {\n      verifyFailed();\n      return false;\n    }\n    if (!this.transform.verify()) {\n      verifyFailed();\n      return false;\n    }\n    if (this.masks && this.masks.length > 0) {\n      for (const mask of this.masks) {\n        if (!mask || !mask.verify()) {\n          verifyFailed();\n          return false;\n        }\n      }\n    }\n\n    if (this.layerStyles && this.layerStyles.length > 0) {\n      for (const layerStyle of this.layerStyles) {\n        if (!layerStyle || !layerStyle.verify()) {\n          verifyFailed();\n          return false;\n        }\n      }\n    }\n\n    if (this.effects && this.effects.length > 0) {\n      for (const effect of this.effects) {\n        if (!effect || !effect.verify()) {\n          verifyFailed();\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  public getMaxScaleFactor(): Point {\n    if (this.maxScale !== undefined) {\n      return this.maxScale;\n    }\n    this.maxScale = new Point(1, 1);\n    const property = this.transform!.scale;\n    if (property.animatable()) {\n      const { keyframes } = property as AnimatableProperty<Point>;\n      let scaleX = Math.abs(keyframes[0].startValue!.x);\n      let scaleY = Math.abs(keyframes[0].startValue!.y);\n      if (keyframes !== undefined && keyframes.length > 0) {\n        for (const keyframe of keyframes) {\n          const x = Math.abs(keyframe.endValue!.x);\n          const y = Math.abs(keyframe.endValue!.y);\n          if (scaleX < x) {\n            scaleX = x;\n          }\n          if (scaleY < y) {\n            scaleY = y;\n          }\n        }\n      }\n      this.maxScale.x = scaleX;\n      this.maxScale.y = scaleY;\n    } else {\n      this.maxScale.x = Math.abs(property.value.x);\n      this.maxScale.y = Math.abs(property.value.y);\n    }\n    if (this.parent !== undefined) {\n      const parentScale = this.parent.getMaxScaleFactor();\n      this.maxScale.x *= parentScale.x;\n      this.maxScale.y *= parentScale.y;\n    }\n    return this.maxScale;\n  }\n}\n","import { Color } from '../base/color';\nimport { Composition } from '../base/composition';\nimport { Ratio } from '../base/ratio';\nimport { ByteArray } from './utils/byte-array';\nimport { Point } from '../base/point';\nimport { Layer } from '../base/layer';\nimport { Mask } from '../base/mask';\n\nexport const SPATIAL_PRECISION = 0.05;\nexport const BEZIER_PRECISION = 0.005;\n\nexport const readRatio = (byteArray: ByteArray): Ratio => {\n  const numeratorValue: number = byteArray.readEncodeInt32();\n  const denominatorValue: number = byteArray.readEncodedUint32();\n  const ration: Ratio = new Ratio(numeratorValue, denominatorValue);\n  return ration;\n};\n\nexport const readColor = (byteArray: ByteArray): Color => {\n  const redNum: number = byteArray.readUint8();\n  const greenNum: number = byteArray.readUint8();\n  const blueNum: number = byteArray.readUint8();\n  const color: Color = { red: redNum, green: greenNum, blue: blueNum };\n  return color;\n};\n\nexport const readTime = (byteArray: ByteArray): number => byteArray.readEncodedUint64();\n\nexport const readFloat = (byteArray: ByteArray): number => byteArray.readFloat32();\n\nexport const readBoolean = (byteArray: ByteArray): boolean => byteArray.readBitBoolean();\n\nexport const readEnum = (byteArray: ByteArray): number => byteArray.readUint8();\n\nexport const readID = (byteArray: ByteArray): number => byteArray.readEncodedUint32();\n\nexport const readLayerID = (byteArray: ByteArray): Layer => {\n  const id = byteArray.readEncodedUint32();\n  if (id === 0) throw new Error('Layer ID is 0');\n  const layer: Layer = new Layer();\n  layer.id = id;\n  return layer;\n};\n\nexport const readMaskID = (byteArray: ByteArray): Mask => {\n  const id: number = byteArray.readEncodedUint32();\n  if (id === 0) throw new Error('Mask ID is 0');\n  const mask: Mask = new Mask();\n  mask.id = id;\n  return mask;\n};\n\nexport const readCompositionID = (byteArray: ByteArray): Composition => {\n  const id: number = byteArray.readEncodedUint32();\n  if (id === 0) throw new Error('Composition ID is 0');\n  const composition: Composition = new Composition();\n  composition.id = id;\n  return composition;\n};\n\nexport const readString = (byteArray: ByteArray): string => byteArray.readUTF8String();\n\nexport function ReadOpacity(byteArray: ByteArray): number {\n  return byteArray.readUint8();\n}\n\nexport const readPoint = (byteArray: ByteArray): Point => {\n  const x: number = byteArray.readFloat32();\n  const y: number = byteArray.readFloat32();\n  return new Point(x, y);\n};\n","import { Composition } from '../../base/composition';\nimport { readColor, readTime } from '../data-types';\nimport { ByteArray } from '../utils/byte-array';\n\nexport const readCompositionAttributes = (byteArray: ByteArray, composition: Composition) => {\n  composition.width = byteArray.readEncodeInt32();\n  composition.height = byteArray.readEncodeInt32();\n  composition.duration = readTime(byteArray);\n  composition.frameRate = byteArray.readFloat32();\n  composition.backgroundColor = readColor(byteArray);\n};\n","import { Composition } from '../base/composition';\n\nexport class Context {\n  public tagLevel = 0;\n  public compositions: Array<Composition> = [];\n\n  private errorMessages: string[] = [];\n\n  public throwException(message: string) {\n    this.errorMessages.push(message);\n  }\n\n  public releaseCompositions(): Array<Composition> {\n    const compositions = this.compositions.slice();\n    this.compositions = [];\n    return compositions;\n  }\n}\n","export const ErrorMessage = {\n  PAGDecodeError: 'PAG file decode error!',\n};\n","import { Context } from '../context';\nimport { ErrorMessage } from '../../base/utils/error-map';\n\nconst LENGTH_FOR_STORE_NUM_BITS = 5;\n\nexport class ByteArray {\n  public context: Context;\n\n  private readonly littleEndian: boolean;\n  private dataView: DataView;\n  private _position = 0;\n  private bitPosition = 0;\n\n  public constructor(buffer: ArrayBuffer, littleEndian?: boolean) {\n    this.dataView = new DataView(buffer);\n    this.littleEndian = !!littleEndian;\n    this.context = new Context();\n  }\n\n  public get length(): number {\n    return this.dataView.byteLength;\n  }\n\n  public get bytesAvailable(): number {\n    return this.dataView.byteLength - this._position;\n  }\n\n  public data(): ArrayBuffer {\n    return this.dataView.buffer;\n  }\n\n  public get position(): number {\n    return this._position;\n  }\n\n  public alignWithBytes() {\n    this.bitPosition = this._position * 8;\n  }\n\n  public readBoolean(): boolean {\n    const value = this.dataView.getInt8(this._position);\n    this._position += 1;\n    this.positonChanged();\n    return Boolean(value);\n  }\n\n  public readChar(): string {\n    if (this._position >= this.length) throw new Error(ErrorMessage.PAGDecodeError);\n    const value = this.dataView.getInt8(this._position);\n    this._position += 1;\n    this.positonChanged();\n    return String.fromCharCode(value);\n  }\n\n  public readUint8(): number {\n    if (this._position >= this.length) throw new Error(ErrorMessage.PAGDecodeError);\n    const value = this.dataView.getUint8(this._position);\n    this._position += 1;\n    this.positonChanged();\n    return value;\n  }\n\n  public readInt8(): number {\n    if (this._position >= this.length) throw new Error(ErrorMessage.PAGDecodeError);\n    const value = this.dataView.getInt8(this._position);\n    this._position += 1;\n    this.positonChanged();\n    return value;\n  }\n\n  public readInt16(): number {\n    if (this._position >= this.length - 1) throw new Error(ErrorMessage.PAGDecodeError);\n    const value = this.dataView.getInt16(this._position, this.littleEndian);\n    this._position += 2;\n    this.positonChanged();\n    return value;\n  }\n\n  public readUint16(): number {\n    if (this._position >= this.length - 1) throw new Error(ErrorMessage.PAGDecodeError);\n    const value = this.dataView.getUint16(this._position, this.littleEndian);\n    this._position += 2;\n    this.positonChanged();\n    return value;\n  }\n\n  public readInt24(): number {\n    if (this._position >= this.length - 2) throw new Error(ErrorMessage.PAGDecodeError);\n    const left = this.dataView.getInt16(this._position, this.littleEndian);\n    const right = this.dataView.getInt8(this._position + 2);\n    this._position += 3;\n    this.positonChanged();\n    return this.littleEndian ? left + 2 ** 16 * right : 2 ** 16 * left + right;\n  }\n\n  public readUint24(): number {\n    if (this._position >= this.length - 2) throw new Error(ErrorMessage.PAGDecodeError);\n    const left = this.dataView.getUint16(this._position, this.littleEndian);\n    const right = this.dataView.getUint8(this._position + 2);\n    this._position += 3;\n    this.positonChanged();\n    return this.littleEndian ? left + 2 ** 16 * right : 2 ** 16 * left + right;\n  }\n\n  public readInt32(): number {\n    if (this._position >= this.length - 3) throw new Error(ErrorMessage.PAGDecodeError);\n    const value = this.dataView.getInt32(this._position, this.littleEndian);\n    this._position += 4;\n    this.positonChanged();\n    return value;\n  }\n\n  public readUint32(): number {\n    if (this._position >= this.length - 3) throw new Error(ErrorMessage.PAGDecodeError);\n    const value = this.dataView.getUint32(this._position, this.littleEndian);\n    this._position += 4;\n    this.positonChanged();\n    return value;\n  }\n\n  public readInt64(): number {\n    if (this._position >= this.length - 7) throw new Error(ErrorMessage.PAGDecodeError);\n    const left = this.dataView.getInt32(this._position, this.littleEndian);\n    const right = this.dataView.getInt32(this._position + 4, this.littleEndian);\n    this._position += 8;\n    this.positonChanged();\n    return this.littleEndian ? left + 2 ** 32 * right : 2 ** 32 * left + right;\n  }\n\n  public readUint64(): number {\n    if (this._position >= this.length - 7) throw new Error(ErrorMessage.PAGDecodeError);\n    const left = this.dataView.getUint32(this._position, this.littleEndian);\n    const right = this.dataView.getUint32(this._position + 4, this.littleEndian);\n    this._position += 8;\n    this.positonChanged();\n    return this.littleEndian ? left + 2 ** 32 * right : 2 ** 32 * left + right;\n  }\n\n  public readFloat32(): number {\n    if (this._position >= this.length - 3) throw new Error(ErrorMessage.PAGDecodeError);\n    const value = this.dataView.getFloat32(this._position, this.littleEndian);\n    this._position += 4;\n    this.positonChanged();\n    return value;\n  }\n\n  public readDouble(): number {\n    if (this._position >= this.length - 7) throw new Error(ErrorMessage.PAGDecodeError);\n    const value = this.dataView.getFloat64(this._position, this.littleEndian);\n    this._position += 8;\n    this.positonChanged();\n    return value;\n  }\n\n  public readUTF8String(): string {\n    if (this._position >= this.length) throw new Error(ErrorMessage.PAGDecodeError);\n    let encoded = '';\n    let dataLength = 0;\n    for (let i = this._position; i < this.length; i++) {\n      if (this.dataView.getUint8(i) === 0) {\n        break;\n      }\n      encoded += `%${this.dataView.getUint8(i).toString(16)}`;\n      dataLength += 1;\n    }\n    this._position += dataLength;\n    this.positonChanged();\n    return decodeURIComponent(encoded);\n  }\n\n  public readEncodedUint32(): number {\n    const valueMask = 127;\n    const hasNext = 128;\n    let value = 0;\n    let byte = 0;\n    for (let i = 0; i < 32; i += 7) {\n      if (this._position >= this.length) {\n        throw Error('readEncodedUint32 End of file was encountered.');\n      }\n      byte = this.dataView.getUint8(this._position);\n      this._position += 1;\n      value |= (byte & valueMask) << i;\n      if ((byte & hasNext) === 0) {\n        break;\n      }\n    }\n    this.positonChanged();\n    return value;\n  }\n\n  public readEncodeInt32(): number {\n    const data = this.readEncodedUint32();\n    const value = data >> 1;\n    return (data & 1) > 0 ? -value : value;\n  }\n\n  public readEncodedUint64(): number {\n    const valueMask = 127;\n    const hasNext = 128;\n    let value = 0;\n    let byte = 0;\n    for (let i = 0; i < 64; i += 7) {\n      if (this._position >= this.length) {\n        throw Error('readEncodedUint64 End of file was encountered.');\n      }\n      byte = this.dataView.getUint8(this._position);\n      this._position += 1;\n      value |= (byte & valueMask) << i;\n      if ((byte & hasNext) === 0) {\n        break;\n      }\n    }\n    this.positonChanged();\n    return value;\n  }\n\n  public readEncodeInt64(): number {\n    const data = this.readEncodedUint64();\n    const value = data << 0;\n    return (data & 1) > 0 ? -value : value;\n  }\n\n  public readBytes(length?: number): ByteArray {\n    const len = length || this.length - this._position;\n    if (this._position > this.length - len) throw new Error(ErrorMessage.PAGDecodeError);\n    const newBuffer = this.dataView.buffer.slice(this._position, this._position + len);\n    this._position += len;\n    this.positonChanged();\n    return new ByteArray(newBuffer, this.littleEndian);\n  }\n\n  public readUBits(numBits: number): number {\n    const bitMasks: number[] = [0, 1, 3, 7, 15, 31, 63, 127, 255];\n    let value = 0;\n    if (this.bitPosition > this.length * 8 - numBits) throw new Error(ErrorMessage.PAGDecodeError);\n    let pos = 0;\n    while (pos < numBits) {\n      const bytePosition = Math.floor(this.bitPosition * 0.125);\n      const bitPosition = this.bitPosition % 8;\n      let byte = this.dataView.getUint8(bytePosition) >> bitPosition;\n      const bitLength = Math.min(8 - bitPosition, numBits - pos);\n      byte &= bitMasks[bitLength];\n      value |= byte << pos;\n      pos += bitLength;\n      this.bitPosition += bitLength;\n    }\n    this.bitPositionChanged();\n    return value;\n  }\n\n  public readBits(numBits: number): number {\n    let value = this.readUBits(numBits);\n    value <<= 32 - numBits;\n    const data = value << 0;\n    return data >> (32 - numBits);\n  }\n\n  public readNumBits(): number {\n    return this.readUBits(LENGTH_FOR_STORE_NUM_BITS) + 1;\n  }\n\n  public readInt32List(count: number): number[] {\n    const numBits = this.readNumBits();\n    const value = new Array(count);\n    for (let i = 0; i < count; i++) {\n      value[i] = this.readBits(numBits);\n    }\n    return value;\n  }\n\n  public readUint32List(count: number): number[] {\n    const numBits = this.readNumBits();\n    const value = new Array(count);\n    for (let i = 0; i < count; i++) {\n      value[i] = this.readUBits(numBits);\n    }\n    return value;\n  }\n\n  public readBitBoolean() {\n    return this.readUBits(1) !== 0;\n  }\n\n  public readFloatList(count: number, precision: number): number[] {\n    const numBits = this.readNumBits();\n    const value = new Array(count);\n    for (let i = 0; i < count; i++) {\n      value[i] = this.readBits(numBits) * precision;\n    }\n    return value;\n  }\n\n  private bitPositionChanged() {\n    this._position = Math.ceil(this.bitPosition * 0.125);\n  }\n\n  private positonChanged() {\n    this.bitPosition = this._position * 8;\n  }\n}\n","import { ByteArray } from '../codec/utils/byte-array';\n\nexport class ByteData {\n  public data: ByteArray;\n  public length = 0;\n\n  public constructor(data: ByteArray, length: number) {\n    this.data = data;\n    this.length = length;\n  }\n}\n","import { ByteArray } from '../codec/utils/byte-array';\nimport { ByteData } from './byte-data';\n\nexport class VideoFrame {\n  public isKeyframe = false;\n  public frame = 0;\n  public fileBytes: ByteData = new ByteData(new ByteArray(new ArrayBuffer(0)), 0);\n}\n","import { Composition } from './composition';\nimport { verifyAndReturn } from './utils/verify';\n\nexport class Sequence {\n  public composition: Composition | undefined = undefined;\n  public id = 0;\n  public width = 0;\n  public height = 0;\n  public frameRate = 0;\n  public frameCount = 0;\n  public isKeyFrameFlags: Array<boolean> = [];\n\n  public verify() {\n    return verifyAndReturn(this.composition !== undefined && this.width > 0 && this.height > 0 && this.frameRate > 0);\n  }\n}\n","import { ByteData } from './byte-data';\nimport { Sequence } from './sequence';\nimport { TimeRange } from './time-range';\nimport { verifyFailed } from './utils/verify';\nimport { VideoFrame } from './video-frame';\n\nexport class VideoSequence extends Sequence {\n  public alphaStartX = 0;\n  public alphaStartY = 0;\n  public frames: Array<VideoFrame> = [];\n  public headers: Array<ByteData> = [];\n  public staticTimeRanges: Array<TimeRange> = [];\n\n  public verify(): boolean {\n    if (!super.verify() || this.frames.length <= 0) {\n      verifyFailed();\n      return false;\n    }\n    for (const frame of this.frames) {\n      if (!frame || !frame.fileBytes) {\n        verifyFailed();\n        return false;\n      }\n    }\n    for (const header of this.headers) {\n      if (!header) {\n        verifyFailed();\n        return false;\n      }\n    }\n    return true;\n  }\n  // The exact total width and height of the picture were not recorded when the video sequence frame\n  // was exported，You need to do the calculation yourself with width and alphaStartX，\n  // If an odd size is encountered, the exporter plugin automatically increments by one，\n  // This matches the rules for exporter plugin。\n  public getVideoWidth() {\n    let videoWidth = this.alphaStartX + this.width;\n    if (videoWidth % 2 === 1) {\n      videoWidth += 1;\n    }\n    return videoWidth;\n  }\n\n  public getVideoHeight() {\n    let videoHeight = this.alphaStartY + this.height;\n    if (videoHeight % 2 === 1) {\n      videoHeight += 1;\n    }\n    return videoHeight;\n  }\n}\n","export const memcpy = (dst: ArrayBuffer, dstOffset: number, src: ArrayBuffer, srcOffset: number, num: number) => {\n  if (\n    dstOffset >= dst.byteLength ||\n    srcOffset >= src.byteLength ||\n    src.byteLength - srcOffset > dst.byteLength - dstOffset ||\n    num > src.byteLength\n  )\n    return;\n  const dstUint8Array = new Uint8Array(dst);\n  const srcUint8Array = new Uint8Array(src, srcOffset, num);\n  dstUint8Array.set(srcUint8Array, dstOffset);\n};\n\nexport const concatUint8Arrays = (arrays: Array<Uint8Array>) => {\n  let totalLength = 0;\n  for (const arr of arrays) {\n    totalLength += arr.byteLength;\n  }\n  const result = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const arr of arrays) {\n    result.set(arr, offset);\n    offset += arr.byteLength;\n  }\n  return result;\n};\n","import { ByteData } from '../base/byte-data';\nimport { ByteArray } from './utils/byte-array';\nimport { memcpy } from './utils/byte-utils';\n\nexport const readByteDataWithStartCode = (byteArray: ByteArray) => {\n  const length = byteArray.readEncodedUint32();\n  const bytes = byteArray.readBytes(length);\n  if (length === 0) throw new Error('Read start code with length 0!');\n  const data = new ArrayBuffer(length + 4);\n  const dataView = new DataView(data);\n  dataView.setUint32(0, length);\n  memcpy(data, 4, bytes.data(), 0, length);\n  return new ByteData(new ByteArray(data), length + 4);\n};\n","import { TimeRange } from '../../base/time-range';\nimport { VideoFrame } from '../../base/video-frame';\nimport { VideoSequence } from '../../base/video-sequence';\nimport { readTime } from '../data-types';\nimport { readByteDataWithStartCode } from '../nalu-start-code';\nimport { ByteArray } from '../utils/byte-array';\n\nexport const readVideoSequence = (byteArray: ByteArray, hasAlpha: boolean): VideoSequence => {\n  const videoSequence = new VideoSequence();\n  videoSequence.width = byteArray.readEncodeInt32();\n  videoSequence.height = byteArray.readEncodeInt32();\n  videoSequence.frameRate = byteArray.readFloat32();\n  if (hasAlpha) {\n    videoSequence.alphaStartX = byteArray.readEncodeInt32();\n    videoSequence.alphaStartY = byteArray.readEncodeInt32();\n  }\n\n  const sps = readByteDataWithStartCode(byteArray);\n  const pps = readByteDataWithStartCode(byteArray);\n  videoSequence.headers.push(sps, pps);\n\n  videoSequence.frameCount = byteArray.readEncodedUint32();\n  for (let i = 0; i < videoSequence.frameCount; i++) {\n    const videoFrame = new VideoFrame();\n    videoFrame.isKeyframe = byteArray.readBitBoolean();\n    videoSequence.frames.push(videoFrame);\n  }\n  for (let i = 0; i < videoSequence.frameCount; i++) {\n    const videoFrame = videoSequence.frames[i];\n    videoFrame.frame = readTime(byteArray);\n    videoFrame.fileBytes = readByteDataWithStartCode(byteArray);\n  }\n\n  if (byteArray.bytesAvailable > 0) {\n    const count = byteArray.readEncodedUint32();\n    for (let i = 0; i < count; i++) {\n      const staticTimeRange: TimeRange = { start: 0, end: 0 };\n      staticTimeRange.start = readTime(byteArray);\n      staticTimeRange.end = readTime(byteArray);\n      videoSequence.staticTimeRanges.push(staticTimeRange);\n    }\n  }\n\n  return videoSequence;\n};\n","import { VideoComposition } from '../../base/video-composition';\nimport { TagCode } from '../types';\nimport { ByteArray } from '../utils/byte-array';\nimport { readCompositionAttributes } from './composition-attributes';\nimport { readTags } from './tag-header';\nimport { readVideoSequence } from './video-sequence-tag';\n\nexport const readVideoComposition = (byteArray: ByteArray): VideoComposition => {\n  const composition = new VideoComposition();\n  composition.id = byteArray.readEncodedUint32();\n  composition.hasAlpha = byteArray.readBoolean();\n  const parameter = { composition, hasAlpha: composition.hasAlpha };\n  readTags(byteArray, parameter, ReadTagsOfVideoComposition);\n  return composition;\n};\n\nexport const ReadTagsOfVideoComposition = (\n  byteArray: ByteArray,\n  code: TagCode,\n  parameter: { composition: VideoComposition; hasAlpha: boolean },\n) => {\n  const { composition } = parameter;\n  switch (code) {\n    case TagCode.CompositionAttributes:\n      readCompositionAttributes(byteArray, composition);\n      break;\n    case TagCode.VideoSequence: {\n      const sequence = readVideoSequence(byteArray, parameter.hasAlpha);\n      sequence.composition = composition;\n      composition.sequences.push(sequence);\n      break;\n    }\n    default:\n      break;\n  }\n};\n","import { Mask } from '../mask';\nimport { Property } from '../property';\nimport { TimeRange } from '../time-range';\n\nexport const enum EffectType {\n  Unknown,\n  Tint,\n  Fill,\n  Stroke,\n  Tritone,\n  DropShadow,\n  RadialWipe,\n  DisplacementMap,\n}\n\nexport class Effect {\n  public effectOpacity: Property<number> | undefined;\n  public maskReferences: Array<Mask> | undefined; // mask reference\n\n  public type(): EffectType {\n    return EffectType.Unknown;\n  }\n\n  public excludeVaryingRanges(_timeRanges: Array<TimeRange>): void {}\n\n  public gotoFrame(_time: number): void {}\n\n  public verify(): boolean {\n    return false;\n  }\n}\n","export interface TimeRange {\n  start: number;\n  end: number;\n}\n\nexport function subtractFromTimeRanges(timeRanges: Array<TimeRange>, startTime: number, endTime: number) {\n  if (endTime < startTime) {\n    return;\n  }\n  const size = timeRanges.length;\n  for (let i = size - 1; i >= 0; i--) {\n    const timeRange = timeRanges[i];\n    if (timeRange.end < startTime || timeRange.start > endTime) {\n      continue;\n    }\n    if (timeRange.start < startTime && timeRange.end > endTime) {\n      const range = { start: endTime + 1, end: timeRange.end };\n      timeRange.end = startTime - 1;\n      if (range.end > range.start) {\n        timeRanges.splice(i + 1, 0, range);\n      }\n      if (timeRange.end <= timeRange.start) {\n        timeRanges.splice(i, 1);\n      }\n      break;\n    }\n    if (timeRange.start >= startTime && timeRange.end <= endTime) {\n      timeRanges.splice(i, 1);\n    } else if (timeRange.start < startTime) {\n      timeRange.end = startTime - 1;\n      if (timeRange.end <= timeRange.start) {\n        timeRanges.splice(i, 1);\n      }\n    } else {\n      timeRange.start = endTime + 1;\n      if (timeRange.end <= timeRange.start) {\n        timeRanges.splice(i, 1);\n      }\n    }\n  }\n}\n\nexport function splitTimeRangesAt(timeRanges: Array<TimeRange>, startTime: number) {\n  const size = timeRanges.length;\n  for (let i = size - 1; i >= 0; i--) {\n    const timeRange = timeRanges[i];\n    if (timeRange.start === startTime || timeRange.end <= startTime) {\n      break;\n    }\n    if (timeRange.start < startTime && timeRange.end > startTime) {\n      const range = { start: startTime, end: timeRange.end };\n      timeRange.end = startTime - 1;\n      if (range.end > range.start) {\n        timeRanges.splice(i + 1, 0, range);\n      }\n      if (timeRange.end <= timeRange.start) {\n        timeRanges.splice(i, 1);\n      }\n      break;\n    }\n  }\n}\n\nfunction findTimeRangeAt(timeRanges: Array<TimeRange>, position: number, start: number, end: number): number {\n  if (start > end) {\n    return -1;\n  }\n  const index = Math.ceil((start + end) * 0.5);\n  const timeRange = timeRanges[index];\n  if (timeRange.start > position) {\n    return findTimeRangeAt(timeRanges, position, start, index - 1);\n  }\n  if (timeRange.end < position) {\n    return findTimeRangeAt(timeRanges, position, index + 1, end);\n  }\n  return index;\n}\n\nexport function convertFrameByStaticTimeRanges(timeRanges: Array<TimeRange>, frame: number): number {\n  const index = findTimeRangeAt(timeRanges, frame, 0, timeRanges.length - 1);\n  return index !== -1 ? timeRanges[index].start : frame;\n}\n","import { CompositionType } from '../codec/types';\nimport { Composition } from './composition';\nimport { Layer } from './layer';\nimport { splitTimeRangesAt, TimeRange } from './time-range';\nimport { verifyFailed } from './utils/verify';\n\nexport class VectorComposition extends Composition {\n  public layers: Array<Layer> = [];\n\n  private staticTimeRanges: Array<TimeRange> = [];\n  private staticTimeRangeUpdated = false;\n\n  public type(): CompositionType {\n    return CompositionType.Vector;\n  }\n\n  /**\n   * Returns the static time ranges of this composition.\n   */\n  public getStaticTimeRanges(): Array<TimeRange> {\n    if (!this.staticTimeRangeUpdated) {\n      this.staticTimeRangeUpdated = true;\n      this.updateStaticTimeRanges();\n    }\n    return this.staticTimeRanges;\n  }\n\n  public verify(): boolean {\n    if (!super.verify()) {\n      verifyFailed();\n      return false;\n    }\n    for (const layer of this.layers) {\n      if (!layer || !layer.verify()) {\n        verifyFailed();\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private updateStaticTimeRanges() {\n    if (this.duration > 1) {\n      const range = { start: 0, end: this.duration - 1 };\n      this.staticTimeRanges = [range];\n      for (const layer of this.layers) {\n        if (this.staticTimeRanges.length <= 0) {\n          break;\n        }\n        layer.excludeVaryingRanges(this.staticTimeRanges);\n        splitTimeRangesAt(this.staticTimeRanges, layer.startTime);\n        splitTimeRangesAt(this.staticTimeRanges, layer.startTime + layer.duration);\n      }\n    }\n  }\n}\n","import { TimeRange } from './time-range';\n\nexport class Property<T> {\n  public value: T;\n\n  public constructor(value: T) {\n    this.value = value;\n  }\n\n  public animatable(): boolean {\n    return false;\n  }\n\n  public excludeVaryingRanges(_timeRanges: Array<TimeRange>): void {}\n\n  public gotoFrame(_time: number): void {}\n}\n","import { OPAQUE } from '../constant';\nimport { Point, ZERO_POINT } from './point';\nimport { Property } from './property';\n\nimport type { TimeRange } from './time-range';\n\nexport class Transform2D {\n  public static createDefaultTransform2D() {\n    const transform = new Transform2D();\n\n    return transform;\n  }\n\n  public anchorPoint: Property<Point>; // spatial\n  public position: Property<Point>; // spatial\n  public xPosition: Property<number>;\n  public yPosition: Property<number>;\n  public scale: Property<Point>; // multidimensional\n  public rotation: Property<number>;\n  public opacity: Property<number>;\n\n  public constructor() {\n    this.anchorPoint = new Property<Point>(ZERO_POINT);\n    this.position = new Property<Point>(ZERO_POINT);\n    this.xPosition = new Property<number>(0);\n    this.yPosition = new Property<number>(0);\n    this.scale = new Property<Point>(new Point(1, 1));\n    this.rotation = new Property<number>(0);\n    this.opacity = new Property<number>(OPAQUE);\n  }\n\n  public excludeVaryingRanges(timeRanges: Array<TimeRange>): void {\n    this.anchorPoint.excludeVaryingRanges(timeRanges);\n    if (this.position !== undefined) {\n      this.position.excludeVaryingRanges(timeRanges);\n    } else {\n      this.xPosition.excludeVaryingRanges(timeRanges);\n      this.yPosition.excludeVaryingRanges(timeRanges);\n    }\n    this.scale.excludeVaryingRanges(timeRanges);\n    this.rotation.excludeVaryingRanges(timeRanges);\n    this.opacity.excludeVaryingRanges(timeRanges);\n  }\n\n  public gotoFrame(frame: number): void {\n    this.anchorPoint.gotoFrame(frame);\n    if (this.position !== undefined) {\n      this.position.gotoFrame(frame);\n    } else {\n      this.xPosition.gotoFrame(frame);\n      this.yPosition.gotoFrame(frame);\n    }\n    this.scale.gotoFrame(frame);\n    this.rotation.gotoFrame(frame);\n    this.opacity.gotoFrame(frame);\n  }\n\n  public verify(): boolean {\n    return (\n      this.anchorPoint !== undefined &&\n      (this.position !== undefined || (this.xPosition !== undefined && this.yPosition !== undefined)) &&\n      this.scale !== undefined &&\n      this.rotation !== undefined &&\n      this.opacity !== undefined\n    );\n  }\n}\n","import { ZERO_TIME } from '../constant';\nimport { Composition } from './composition';\nimport { Layer, LayerType } from './layer';\nimport { TimeRange } from './time-range';\nimport { Transform2D } from './transform-2d';\n\nexport class PreComposeLayer extends Layer {\n  public static wrap(composition: Composition) {\n    const layer = new PreComposeLayer();\n    layer.duration = composition.duration;\n    const transform = new Transform2D();\n    layer.transform = transform;\n    layer.composition = composition;\n    return layer;\n  }\n\n  /**\n   * composition reference\n   */\n  public composition: Composition | undefined = undefined;\n\n  /**\n   * Indicates when the first frame of the composition shows in the layer's timeline. It could be a negative value.\n   */\n  public compositionStartTime: number = ZERO_TIME;\n\n  private staticTimeRanges: Array<TimeRange> | undefined = undefined;\n  private staticTimeRangeUpdated = false;\n\n  public type(): LayerType {\n    return LayerType.PreCompose;\n  }\n\n  public excludeVaryingRanges(timeRanges: Array<TimeRange>): void {\n    super.excludeVaryingRanges(timeRanges);\n    if (!timeRanges || timeRanges.length === 0) {\n      return;\n    }\n    this.updateStaticTimeRanges();\n  }\n\n  public gotoFrame(frame: number): void {\n    super.gotoFrame(frame);\n  }\n\n  public verify(): boolean {\n    if (!super.verify()) {\n      return false;\n    }\n    if (this.composition) {\n      return true;\n    }\n    return false;\n  }\n\n  private updateStaticTimeRanges(): void {\n    if (this.staticTimeRangeUpdated) {\n      return;\n    }\n    this.staticTimeRangeUpdated = true;\n    const ranges = this.composition?.getStaticTimeRanges();\n    if (!ranges) return;\n    for (let i = ranges.length - 1; i >= 0; i--) {\n      const range: TimeRange = ranges[i];\n      range.start += this.compositionStartTime;\n      range.end += this.compositionStartTime;\n      if (range.end <= this.startTime) {\n        ranges.pop();\n      } else if (range.start < this.startTime) {\n        range.start = 0;\n      } else if (range.start >= this.startTime + this.duration - 1) {\n        ranges.pop();\n      } else if (range.end > this.startTime + this.duration - 1) {\n        range.end = this.startTime + this.duration - 1;\n      }\n    }\n    this.staticTimeRanges = ranges;\n  }\n}\n","import { Layer, LayerType } from './layer';\nimport { ShapeElement } from './shape-element';\nimport { TimeRange } from './time-range';\n\nexport class ShapeLayer extends Layer {\n  private contents: Array<ShapeElement> = [];\n\n  public type(): LayerType {\n    return LayerType.Shape;\n  }\n\n  public excludeVaryingRanges(timeRanges: Array<TimeRange>) {\n    super.excludeVaryingRanges(timeRanges);\n    for (const element of this.contents) {\n      element.excludeVaryingRanges(timeRanges);\n    }\n  }\n\n  public gotoFrame(frame: number) {\n    super.gotoFrame(frame);\n    for (const element of this.contents) {\n      element.gotoFrame(frame);\n    }\n  }\n\n  public verify(): boolean {\n    if (!super.verify()) {\n      return false;\n    }\n\n    for (const element of this.contents) {\n      if (element === undefined || !element.verify()) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import { Black, Color } from './color';\nimport { Layer, LayerType } from './layer';\nimport { TimeRange } from './time-range';\nimport { verifyAndReturn, verifyFailed } from './utils/verify';\n\nexport class SolidLayer extends Layer {\n  public solidColor: Color = Black;\n  public width = 0;\n  public height = 0;\n\n  public type(): LayerType {\n    return LayerType.Solid;\n  }\n\n  public excludeVaryingRanges(timeRanges: Array<TimeRange>) {\n    super.excludeVaryingRanges(timeRanges);\n  }\n\n  public gotoFrame(frame: number) {\n    super.gotoFrame(frame);\n  }\n\n  public verify(): boolean {\n    if (!super.verify()) {\n      verifyFailed();\n      return false;\n    }\n    return verifyAndReturn(this.width > 0 && this.height > 0);\n  }\n}\n","import { Layer, LayerType } from './layer';\n\nexport class UnDefinedLayer extends Layer {\n  public type(): LayerType {\n    return LayerType.undefined;\n  }\n}\n","import { KeyframeInterpolationType } from '../constant';\nimport { Point, ZERO_POINT } from './point';\n\nexport class Keyframe<T> {\n  public startValue: T | undefined;\n  public endValue: T | undefined;\n  public startTime = 0;\n  public endTime = 0;\n  public interpolationType: KeyframeInterpolationType = KeyframeInterpolationType.Hold; // 插补类型\n  public bezierOut: Array<Point> = [];\n  public bezierIn: Array<Point> = [];\n  public spatialOut: Point = ZERO_POINT;\n  public spatialIn: Point = ZERO_POINT;\n\n  public initialize(): void {}\n\n  public getValue(_time: number): any {\n    return this.startValue;\n  }\n\n  public containsTime(time: number): boolean {\n    return time >= this.startTime && time < this.endTime;\n  }\n}\n","import { KeyframeInterpolationType } from '../constant';\nimport { Keyframe } from './keyframe';\nimport { Property } from './property';\nimport { splitTimeRangesAt, subtractFromTimeRanges, TimeRange } from './time-range';\n\nexport class AnimatableProperty<T> extends Property<T> {\n  private lastKeyframeIndex = 0;\n\n  public constructor(public keyframes: Array<Keyframe<T>>) {\n    if (!keyframes || keyframes.length === 0) throw new Error('keyframes is required');\n    if (keyframes[0].startValue === undefined) throw new Error('startValue is required');\n    super(keyframes[0].startValue);\n    for (const keyframe of keyframes) {\n      keyframe.initialize();\n    }\n  }\n\n  public animatable(): boolean {\n    return true;\n  }\n\n  public excludeVaryingRanges(timeRanges: Array<TimeRange>): void {\n    for (const keyframe of this.keyframes) {\n      switch (keyframe.interpolationType) {\n        case KeyframeInterpolationType.Bezier:\n        case KeyframeInterpolationType.Linear:\n          subtractFromTimeRanges(timeRanges, keyframe.startTime, keyframe.endTime - 1);\n          break;\n        default:\n          splitTimeRangesAt(timeRanges, keyframe.startTime);\n          splitTimeRangesAt(timeRanges, keyframe.endTime);\n          break;\n      }\n    }\n  }\n\n  public gotoFrame(frame: number): void {\n    let lastKeyframe = this.keyframes[this.lastKeyframeIndex];\n    if (lastKeyframe.containsTime(frame)) {\n      this.value = lastKeyframe.getValue(frame);\n      return;\n    }\n    if (frame < lastKeyframe.startTime) {\n      while (this.lastKeyframeIndex > 0) {\n        this.lastKeyframeIndex -= 1;\n        if (this.keyframes[this.lastKeyframeIndex].containsTime(frame)) {\n          break;\n        }\n      }\n    } else {\n      while (this.lastKeyframeIndex < this.keyframes.length - 1) {\n        this.lastKeyframeIndex += 1;\n        if (this.keyframes[this.lastKeyframeIndex].containsTime(frame)) {\n          break;\n        }\n      }\n    }\n    lastKeyframe = this.keyframes[this.lastKeyframeIndex];\n    if (lastKeyframe.startValue !== undefined && frame <= lastKeyframe.startTime) {\n      this.value = lastKeyframe.startValue;\n    } else if (lastKeyframe.endValue !== undefined && frame >= lastKeyframe.endTime) {\n      this.value = lastKeyframe.endValue;\n    } else {\n      this.value = lastKeyframe.getValue(frame);\n    }\n  }\n}\n","import { TagCode } from './types';\nimport { ByteArray } from './utils/byte-array';\nimport { Keyframe } from '../base/keyframe';\nimport { Property } from '../base/property';\nimport { BEZIER_PRECISION, readTime } from './data-types';\nimport { KeyframeInterpolationType } from '../constant';\nimport { AnimatableProperty } from '../base/animatable-property';\n\nexport const enum AttributeType {\n  Value,\n  FixedValue, // always exists, no need to store a flag.\n  SimpleProperty,\n  DiscreteProperty,\n  MultiDimensionProperty,\n  SpatialProperty,\n  BitFlag, // save bool value as a flag\n  Custom, // save a flag to indicate whether it should trigger a custom reading / writing action.\n}\n\nexport interface AttributeFlag {\n  /**\n   * Indicates whether or not this value is exist.\n   */\n  exist: boolean;\n  /**\n   * Indicates whether or not the size of this property's keyframes is greater than zero.\n   */\n  animatable: boolean;\n  /**\n   * Indicates whether or not this property has spatial values.\n   */\n  hasSpatial: boolean;\n}\n\nexport const readTagBlock = <T>(byteArray: ByteArray, parameter: T, blockConfig: BlockConfig) => {\n  const tagConfig: BlockConfig = blockConfig;\n  const flags: Array<AttributeFlag> = [];\n  if (!tagConfig.configs || tagConfig.configs.length === 0) {\n    return parameter;\n  }\n  for (const config of tagConfig.configs) {\n    const flag = readAttributeFlag(byteArray, config);\n    flags.push(flag);\n  }\n  byteArray.alignWithBytes();\n  let index = 0;\n  for (const config of tagConfig.configs) {\n    const flag = flags[index];\n    const target = config.key;\n    config.readAttribute(byteArray, flag, parameter as any as Object, target);\n    index += 1;\n  }\n  return parameter;\n};\n\nexport class BlockConfig {\n  public tagCode: TagCode = TagCode.End;\n  public configs: Array<BaseAttribute> = [];\n\n  public constructor(tagCode: TagCode) {\n    this.tagCode = tagCode;\n  }\n}\n\nexport class BaseAttribute {\n  public attributeType: AttributeType;\n  public defaultValue: any;\n  public key: string;\n\n  public constructor(key: string, attributeType: AttributeType, defaultValue: any) {\n    this.attributeType = attributeType;\n    this.defaultValue = defaultValue;\n    this.key = key;\n  }\n\n  public readAttribute(_byteArray: ByteArray, _flag: AttributeFlag, _targetClass: object, _target: string) {}\n\n  public readValue(_byteArray: ByteArray): any {\n    return undefined;\n  }\n\n  public readValueList(_byteArray: ByteArray, _list: Array<any>, _count: number) {}\n\n  public dimensionality(): number {\n    return 1;\n  }\n\n  public newKeyframe(_flag: AttributeFlag): Keyframe<any> {\n    return new Keyframe<any>();\n  }\n}\n\nexport const readAttribute = (\n  byteArray: ByteArray,\n  flag: AttributeFlag,\n  targetClass: { [key: string]: any },\n  target: string,\n  config: BaseAttribute,\n) => {\n  if (config.attributeType === AttributeType.BitFlag) {\n    targetClass[target] = flag.exist;\n  } else if (config.attributeType === AttributeType.FixedValue) {\n    targetClass[target] = config.readValue(byteArray);\n  } else if (config.attributeType === AttributeType.Value) {\n    targetClass[target] = readValue(byteArray, config, flag);\n  } else {\n    targetClass[target] = readProperty(byteArray, config, flag);\n  }\n};\n\nexport const readProperty = <T>(byteArray: ByteArray, config: BaseAttribute, flag: AttributeFlag): any => {\n  let property: Property<T>;\n  if (flag.exist) {\n    if (flag.animatable) {\n      const keyframes: Array<Keyframe<T>> = readKeyframes(byteArray, config, flag);\n      if (!keyframes || keyframes.length === 0) {\n        throw new Error('Wrong number of keyframes!');\n      }\n      readTimeAndValue(byteArray, keyframes, config);\n      readTimeEase(byteArray, keyframes, config);\n      if (flag.hasSpatial) {\n        readSpatialEase(byteArray, keyframes);\n      }\n      property = new AnimatableProperty<T>(keyframes);\n    } else {\n      property = new Property<T>(readValue(byteArray, config, flag));\n    }\n  } else {\n    property = new Property<T>(config.defaultValue);\n  }\n  return property;\n};\n\nexport const readValue = (byteArray: ByteArray, config: BaseAttribute, flag: AttributeFlag): any => {\n  if (flag.exist) {\n    return config.readValue(byteArray);\n  }\n  return config.defaultValue;\n};\n\nexport const readAttributeFlag = (byteArray: ByteArray, config: BaseAttribute): AttributeFlag => {\n  const flag: AttributeFlag = { exist: false, animatable: false, hasSpatial: false };\n  const { attributeType } = config;\n  if (attributeType === AttributeType.FixedValue) {\n    flag.exist = true;\n    return flag;\n  }\n  flag.exist = byteArray.readBitBoolean();\n  if (\n    !flag.exist ||\n    attributeType === AttributeType.Value ||\n    attributeType === AttributeType.BitFlag ||\n    attributeType === AttributeType.Custom\n  ) {\n    return flag;\n  }\n  flag.animatable = byteArray.readBitBoolean();\n  if (!flag.animatable || attributeType !== AttributeType.SpatialProperty) {\n    return flag;\n  }\n  flag.hasSpatial = byteArray.readBitBoolean();\n  return flag;\n};\n\nexport const readKeyframes = <T>(\n  byteArray: ByteArray,\n  config: BaseAttribute,\n  flag: AttributeFlag,\n): Array<Keyframe<T>> => {\n  const keyframes: Array<any> = [];\n  const numFrames: number = byteArray.readEncodedUint32();\n  for (let i = 0; i < numFrames; i++) {\n    let keyframe: Keyframe<T>;\n    if (config.attributeType === AttributeType.DiscreteProperty) {\n      keyframe = new Keyframe<T>();\n    } else {\n      const interpolationType = byteArray.readUBits(2) as KeyframeInterpolationType;\n      if (interpolationType === KeyframeInterpolationType.Hold) {\n        keyframe = new Keyframe<T>();\n      } else {\n        keyframe = config.newKeyframe(flag);\n        keyframe.interpolationType = interpolationType;\n      }\n    }\n    keyframes.push(keyframe);\n  }\n\n  return keyframes;\n};\n\nconst readTimeAndValue = <T>(byteArray: ByteArray, keyframes: Array<Keyframe<T>>, config: BaseAttribute) => {\n  const numFrames: number = keyframes.length;\n  keyframes[0].startTime = readTime(byteArray);\n  for (let i = 0; i < numFrames; i++) {\n    const time: number = readTime(byteArray);\n    keyframes[i].endTime = time;\n    if (i < numFrames - 1) {\n      keyframes[i + 1].startTime = time;\n    }\n  }\n  const list: Array<T> = [];\n  config.readValueList(byteArray, list, numFrames + 1);\n  let index = 0;\n  keyframes[0].startValue = list[index];\n  index += 1;\n  for (let i = 0; i < numFrames; i++) {\n    const value = list[index];\n    index += 1;\n    keyframes[i].endValue = value;\n    if (i < numFrames - 1) {\n      keyframes[i + 1].startValue = value;\n    }\n  }\n};\n\nconst readTimeEase = <T>(byteArray: ByteArray, keyframes: Array<Keyframe<T>>, config: BaseAttribute) => {\n  const dimensionality: number =\n    config.attributeType === AttributeType.MultiDimensionProperty ? config.dimensionality() : 1;\n  const numBits: number = byteArray.readNumBits();\n  for (const keyframe of keyframes) {\n    if (keyframe.interpolationType !== KeyframeInterpolationType.Bezier) {\n      continue;\n    }\n    let x: number;\n    let y: number;\n    for (let i = 0; i < dimensionality; i++) {\n      x = byteArray.readBits(numBits) * BEZIER_PRECISION;\n      y = byteArray.readBits(numBits) * BEZIER_PRECISION;\n      keyframe.bezierOut.push({ x, y });\n      x = byteArray.readBits(numBits) * BEZIER_PRECISION;\n      y = byteArray.readBits(numBits) * BEZIER_PRECISION;\n      keyframe.bezierIn.push({ x, y });\n    }\n  }\n};\n\nconst readSpatialEase = <T>(_byteArray: ByteArray, _keyframes: Array<Keyframe<T>>) => {};\n","import { SolidLayer } from '../../base/solid-layer';\nimport { readColor } from '../data-types';\nimport { ByteArray } from '../utils/byte-array';\n\nexport function readSolidColor(byteArray: ByteArray, layer: SolidLayer) {\n  layer.solidColor = readColor(byteArray);\n  layer.width = byteArray.readEncodeInt32();\n  layer.height = byteArray.readEncodeInt32();\n}\n","export function interpolateFloat(a: number, b: number, t: number): number {\n  return a + (b - a) * t;\n}\n","export class Interpolator {\n  public getInterpolation(input: number): number {\n    return input;\n  }\n}\n","import { KeyframeInterpolationType } from '../../constant';\nimport { Keyframe } from '../keyframe';\nimport { Point } from '../point';\nimport { interpolateFloat } from '../utils/interpolate';\nimport { Interpolator } from '../utils/interpolator';\n\nexport class MultiDimensionPointKeyframe extends Keyframe<Point> {\n  private xInterpolator: Interpolator | undefined;\n  private yInterpolator: Interpolator | undefined;\n\n  public initialize(): void {\n    super.initialize();\n    if (this.interpolationType === KeyframeInterpolationType.Bezier) {\n      // todo sun bezier\n    } else {\n      this.xInterpolator = new Interpolator();\n      this.yInterpolator = new Interpolator();\n    }\n  }\n\n  public getValue(time: number): Point {\n    const progress = (time - this.startTime) / (this.endTime - this.startTime);\n    const xProgress = this.xInterpolator?.getInterpolation(progress) ?? progress;\n    const yProgress = this.yInterpolator?.getInterpolation(progress) ?? progress;\n    const x = interpolateFloat(this.startValue!.x, this.endValue!.x, xProgress);\n    const y = interpolateFloat(this.startValue!.y, this.endValue!.y, yProgress);\n    return { x, y };\n  }\n}\n","import { KeyframeInterpolationType } from '../../constant';\nimport { Keyframe } from '../keyframe';\nimport { interpolateFloat } from '../utils/interpolate';\nimport { Interpolator } from '../utils/interpolator';\n\nexport class SingleEaseKeyframe<T> extends Keyframe<T> {\n  private interpolator: Interpolator | undefined;\n\n  public initialize() {\n    if (this.interpolationType === KeyframeInterpolationType.Bezier) {\n      // Bazier相关\n    } else {\n      this.interpolator = new Interpolator();\n    }\n  }\n\n  public getProgress(time: number): number {\n    const progress = (time - this.startTime) / (this.endTime - this.startTime);\n    return this.interpolator?.getInterpolation(progress) ?? progress;\n  }\n\n  public getValue(time: number): number {\n    const progress = this.getProgress(time);\n    return interpolateFloat(this.startValue as any as number, this.endValue as any as number, progress);\n  }\n}\n","import { Color } from '../base/color';\nimport { Composition } from '../base/composition';\nimport { Keyframe } from '../base/keyframe';\nimport { MultiDimensionPointKeyframe } from '../base/keyframes/multi-dimension-point-keyframe';\nimport { SingleEaseKeyframe } from '../base/keyframes/single-ease-keyframe';\nimport { Layer } from '../base/layer';\nimport { Point } from '../base/point';\nimport { Ratio } from '../base/ratio';\nimport { AttributeFlag, AttributeType, BaseAttribute, readAttribute } from './attribute-helper';\nimport {\n  readColor,\n  readCompositionID,\n  readLayerID,\n  readPoint,\n  readRatio,\n  readTime,\n  SPATIAL_PRECISION,\n} from './data-types';\nimport { ByteArray } from './utils/byte-array';\n\nexport interface BaseAttributeConfig<T> {\n  newKeyframe: (flag: AttributeFlag) => Keyframe<T>;\n}\n\nexport class FloatAttributeConfig extends BaseAttribute implements BaseAttributeConfig<number> {\n  public constructor(key: string, attributeType: AttributeType, defaultValue: any) {\n    super(key, attributeType, defaultValue);\n  }\n\n  public readAttribute(byteArray: ByteArray, flag: AttributeFlag, targetClass: object, target: string) {\n    readAttribute(byteArray, flag, targetClass, target, this);\n  }\n\n  public readValue(byteArray: ByteArray): number {\n    return byteArray.readFloat32();\n  }\n\n  public readValueList(byteArray: ByteArray, list: Array<number>, count: number) {\n    for (let i = 0; i < count; i++) {\n      list.push(this.readValue(byteArray));\n    }\n  }\n\n  public dimensionality(): number {\n    return 1;\n  }\n\n  public newKeyframe(_flag: AttributeFlag): Keyframe<number> {\n    return new SingleEaseKeyframe<number>();\n  }\n}\n\nexport class BOOLAttributeConfig extends BaseAttribute implements BaseAttributeConfig<Boolean> {\n  public constructor(key: string, attributeType: AttributeType, defaultValue: any) {\n    super(key, attributeType, defaultValue);\n  }\n\n  public readAttribute(byteArray: ByteArray, flag: AttributeFlag, targetClass: object, target: string) {\n    readAttribute(byteArray, flag, targetClass, target, this);\n  }\n\n  public readValue(byteArray: ByteArray): boolean {\n    return byteArray.readBoolean();\n  }\n\n  public readValueList(byteArray: ByteArray, list: Array<boolean>, count: number) {\n    for (let i = 0; i < count; i++) {\n      list.push(byteArray.readBitBoolean());\n    }\n  }\n\n  public dimensionality(): number {\n    return 1;\n  }\n\n  public newKeyframe(_flag: AttributeFlag): Keyframe<boolean> {\n    return new Keyframe<boolean>();\n  }\n}\n\nexport class Uint8AttributeConfig extends BaseAttribute implements BaseAttributeConfig<number> {\n  public constructor(key: string, attributeType: AttributeType, defaultValue: number) {\n    super(key, attributeType, defaultValue);\n  }\n\n  public readAttribute(byteArray: ByteArray, flag: AttributeFlag, targetClass: object, target: string) {\n    readAttribute(byteArray, flag, targetClass, target, this);\n  }\n\n  public readValue(byteArray: ByteArray): number {\n    return byteArray.readUint8();\n  }\n\n  public readValueList(byteArray: ByteArray, list: Array<number>, count: number) {\n    const valueList = byteArray.readUint32List(count);\n    for (let i = 0; i < count; i++) {\n      list.push(valueList[i]);\n    }\n  }\n\n  public dimensionality(): number {\n    return 1;\n  }\n\n  public newKeyframe(_flag: AttributeFlag): Keyframe<number> {\n    return new SingleEaseKeyframe<number>();\n  }\n}\n\nexport class AttributeConfigUint32 extends BaseAttribute implements BaseAttributeConfig<number> {\n  public constructor(key: string, attributeType: AttributeType, defaultValue: any) {\n    super(key, attributeType, defaultValue);\n  }\n\n  public readAttribute(byteArray: ByteArray, flag: AttributeFlag, targetClass: object, target: string) {\n    readAttribute(byteArray, flag, targetClass, target, this);\n  }\n\n  public readValue(byteArray: ByteArray): number {\n    return byteArray.readEncodedUint32();\n  }\n\n  public readValueList(byteArray: ByteArray, list: Array<number>, count: number) {\n    // eslint-disable-next-line no-param-reassign\n    list = byteArray.readUint32List(count);\n  }\n\n  public dimensionality(): number {\n    return 1;\n  }\n\n  public newKeyframe(_flag: AttributeFlag): Keyframe<number> {\n    return new SingleEaseKeyframe<number>();\n  }\n}\n\nexport class TimeAttributeConfig extends BaseAttribute implements BaseAttributeConfig<number> {\n  public constructor(key: string, attributeType: AttributeType, defaultValue: any) {\n    super(key, attributeType, defaultValue);\n  }\n\n  public readAttribute(byteArray: ByteArray, flag: AttributeFlag, targetClass: object, target: string) {\n    readAttribute(byteArray, flag, targetClass, target, this);\n  }\n\n  public readValue(byteArray: ByteArray): number {\n    return readTime(byteArray);\n  }\n\n  public readValueList(byteArray: ByteArray, list: Array<number>, count: number) {\n    for (let i = 0; i < count; i++) {\n      list[i] = this.readValue(byteArray);\n    }\n  }\n\n  public dimensionality(): number {\n    return 1;\n  }\n\n  public newKeyframe(_flag: AttributeFlag): Keyframe<number> {\n    return new SingleEaseKeyframe<number>();\n  }\n}\n\nexport class PointAttributeConfig extends BaseAttribute implements BaseAttributeConfig<Point> {\n  public constructor(key: string, attributeType: AttributeType, defaultValue: any) {\n    super(key, attributeType, defaultValue);\n  }\n\n  public readAttribute(byteArray: ByteArray, flag: AttributeFlag, targetClass: object, target: string) {\n    readAttribute(byteArray, flag, targetClass, target, this);\n  }\n\n  public readValue(byteArray: ByteArray): Point {\n    return readPoint(byteArray);\n  }\n\n  public readValueList(byteArray: ByteArray, list: Array<Point>, count: number) {\n    if (this.attributeType === AttributeType.SpatialProperty) {\n      const values: number[] = byteArray.readFloatList(count * 2, SPATIAL_PRECISION);\n      for (let i = 0; i < count; i++) {\n        list[i] || (list[i] = new Point(0, 0));\n        list[i].x = values[i];\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        list[i] = readPoint(byteArray);\n      }\n    }\n  }\n\n  public dimensionality(): number {\n    return 2;\n  }\n\n  public newKeyframe(_flag: AttributeFlag): Keyframe<Point> {\n    switch (this.attributeType) {\n      case AttributeType.MultiDimensionProperty:\n        return new MultiDimensionPointKeyframe();\n      default:\n        return new SingleEaseKeyframe<Point>();\n    }\n  }\n}\n\nexport class ColorAttributeConfig extends BaseAttribute implements BaseAttributeConfig<Color> {\n  public constructor(key: string, attributeType: AttributeType, defaultValue: any) {\n    super(key, attributeType, defaultValue);\n  }\n\n  public readAttribute(byteArray: ByteArray, flag: AttributeFlag, targetClass: object, target: string) {\n    readAttribute(byteArray, flag, targetClass, target, this);\n  }\n\n  public readValue(byteArray: ByteArray): Color {\n    return readColor(byteArray);\n  }\n\n  public readValueList(byteArray: ByteArray, list: Array<Color>, count: number) {\n    for (let i = 0; i < count; i++) {\n      list[i] = this.readValue(byteArray);\n    }\n  }\n\n  public dimensionality(): number {\n    return 3;\n  }\n\n  public newKeyframe(_flag: AttributeFlag): Keyframe<Color> {\n    return new SingleEaseKeyframe<Color>();\n  }\n}\n\nexport class RatioAttributeConfig extends BaseAttribute implements BaseAttributeConfig<Ratio> {\n  public constructor(key: string, attributeType: AttributeType, defaultValue: any) {\n    super(key, attributeType, defaultValue);\n  }\n\n  public readAttribute(byteArray: ByteArray, flag: AttributeFlag, targetClass: object, target: string) {\n    readAttribute(byteArray, flag, targetClass, target, this);\n  }\n\n  public readValue(byteArray: ByteArray): Ratio {\n    return readRatio(byteArray);\n  }\n\n  public readValueList(byteArray: ByteArray, list: Array<Ratio>, count: number) {\n    for (let i = 0; i < count; i++) {\n      list[i] = this.readValue(byteArray);\n    }\n  }\n\n  public dimensionality(): number {\n    return 1;\n  }\n\n  public newKeyframe(_flag: AttributeFlag): Keyframe<Ratio> {\n    return new SingleEaseKeyframe<Ratio>();\n  }\n}\n\nexport class StringAttributeConfig extends BaseAttribute implements BaseAttributeConfig<string> {\n  public constructor(key: string, attributeType: AttributeType, defaultValue: any) {\n    super(key, attributeType, defaultValue);\n  }\n\n  public readAttribute(byteArray: ByteArray, flag: AttributeFlag, targetClass: object, target: string) {\n    readAttribute(byteArray, flag, targetClass, target, this);\n  }\n\n  public readValue(byteArray: ByteArray): string {\n    return byteArray.readUTF8String();\n  }\n\n  public readValueList(byteArray: ByteArray, list: Array<string>, count: number) {\n    for (let i = 0; i < count; i++) {\n      list[i] = this.readValue(byteArray);\n    }\n  }\n\n  public dimensionality(): number {\n    return 1;\n  }\n\n  public newKeyframe(_flag: AttributeFlag): Keyframe<string> {\n    return new SingleEaseKeyframe<string>();\n  }\n}\n\nexport class LayerAttributeConfig extends BaseAttribute implements BaseAttributeConfig<Layer> {\n  public constructor(key: string, attributeType: AttributeType, defaultValue: any) {\n    super(key, attributeType, defaultValue);\n  }\n\n  public readAttribute(byteArray: ByteArray, flag: AttributeFlag, targetClass: object, target: string) {\n    readAttribute(byteArray, flag, targetClass, target, this);\n  }\n\n  public readValue(byteArray: ByteArray): Layer {\n    return readLayerID(byteArray);\n  }\n\n  public readValueList(byteArray: ByteArray, list: Array<Layer>, count: number) {\n    for (let i = 0; i < count; i++) {\n      list[i] = this.readValue(byteArray);\n    }\n  }\n\n  public dimensionality(): number {\n    return 1;\n  }\n\n  public newKeyframe(_flag: AttributeFlag): Keyframe<Layer> {\n    return new SingleEaseKeyframe<Layer>();\n  }\n}\n\nexport class CompositionAttributeConfig extends BaseAttribute implements BaseAttributeConfig<Composition> {\n  public constructor(key: string, attributeType: AttributeType, defaultValue: any) {\n    super(key, attributeType, defaultValue);\n  }\n\n  public readAttribute(byteArray: ByteArray, flag: AttributeFlag, targetClass: object, target: string) {\n    readAttribute(byteArray, flag, targetClass, target, this);\n  }\n\n  public readValue(byteArray: ByteArray): Composition {\n    return readCompositionID(byteArray);\n  }\n\n  public readValueList(byteArray: ByteArray, list: Array<Composition>, count: number) {\n    for (let i = 0; i < count; i++) {\n      list[i] = this.readValue(byteArray);\n    }\n  }\n\n  public dimensionality(): number {\n    return 1;\n  }\n\n  public newKeyframe(_flag: AttributeFlag): Keyframe<Composition> {\n    return new SingleEaseKeyframe<Composition>();\n  }\n}\n","import { TrackMatteType } from '../../base/layer';\nimport { Point, ZERO_POINT } from '../../base/point';\nimport { DefaultRatio } from '../../base/ratio';\nimport { BlendMode, OPAQUE, ZERO_TIME } from '../../constant';\nimport { TagCode } from '../types';\nimport { AttributeType, BlockConfig } from '../attribute-helper';\nimport {\n  BOOLAttributeConfig,\n  FloatAttributeConfig,\n  LayerAttributeConfig,\n  PointAttributeConfig,\n  RatioAttributeConfig,\n  StringAttributeConfig,\n  TimeAttributeConfig,\n  Uint8AttributeConfig,\n} from '../attributes';\n\nexport const readBlockConfigOfLayerAttributes: BlockConfig = {\n  tagCode: TagCode.LayerAttributes,\n  configs: [\n    new BOOLAttributeConfig('isActive', AttributeType.BitFlag, true),\n    new BOOLAttributeConfig('autoOrientation', AttributeType.BitFlag, false),\n    new LayerAttributeConfig('parent', AttributeType.Value, undefined),\n    new RatioAttributeConfig('stretch', AttributeType.Value, DefaultRatio),\n    new TimeAttributeConfig('startTime', AttributeType.Value, ZERO_TIME),\n    new Uint8AttributeConfig('blendMode', AttributeType.Value, BlendMode.Normal),\n    new Uint8AttributeConfig('trackMatteType', AttributeType.Value, TrackMatteType.None),\n    new FloatAttributeConfig('timeRemap', AttributeType.SimpleProperty, 0),\n    new TimeAttributeConfig('duration', AttributeType.FixedValue, ZERO_TIME),\n  ],\n};\n\nexport const readBlockConfigOfLayerAttributesV2: BlockConfig = {\n  tagCode: TagCode.LayerAttributesV2,\n  configs: [\n    new BOOLAttributeConfig('isActive', AttributeType.BitFlag, true),\n    new BOOLAttributeConfig('autoOrientation', AttributeType.BitFlag, false),\n    new LayerAttributeConfig('parent', AttributeType.Value, undefined),\n    new RatioAttributeConfig('stretch', AttributeType.Value, DefaultRatio),\n    new TimeAttributeConfig('startTime', AttributeType.Value, ZERO_TIME),\n    new Uint8AttributeConfig('blendMode', AttributeType.Value, BlendMode.Normal),\n    new Uint8AttributeConfig('trackMatteType', AttributeType.Value, TrackMatteType.None),\n    new FloatAttributeConfig('timeRemap', AttributeType.SimpleProperty, 0),\n    new TimeAttributeConfig('duration', AttributeType.FixedValue, ZERO_TIME),\n    new StringAttributeConfig('name', AttributeType.Value, ''),\n  ],\n};\n\nexport const readBlockConfigOfTransform2D: BlockConfig = {\n  tagCode: TagCode.Transform2D,\n  configs: [\n    new PointAttributeConfig('anchorPoint', AttributeType.SpatialProperty, ZERO_POINT),\n    new PointAttributeConfig('position', AttributeType.SpatialProperty, ZERO_POINT),\n    new FloatAttributeConfig('xPosition', AttributeType.SimpleProperty, 0),\n    new FloatAttributeConfig('yPosition', AttributeType.SimpleProperty, 0),\n    new PointAttributeConfig('scale', AttributeType.MultiDimensionProperty, new Point(1, 1)),\n    new FloatAttributeConfig('rotation', AttributeType.SimpleProperty, 0),\n    new Uint8AttributeConfig('opacity', AttributeType.SimpleProperty, OPAQUE),\n  ],\n};\n\nexport const readBlockConfigOfMask: BlockConfig = {\n  tagCode: TagCode.MaskBlock,\n  configs: [],\n};\n","import { ByteArray } from '../utils/byte-array';\nimport { PreComposeLayer } from '../../base/pre-compose-layer';\nimport { Composition } from '../../base/composition';\nimport { readTime } from '../data-types';\n\nexport function readCompositionReference(byteArray: ByteArray, layer: PreComposeLayer) {\n  const id = byteArray.readEncodedUint32();\n  if (id > 0) {\n    layer.composition = new Composition();\n    layer.composition.id = id;\n  }\n  layer.compositionStartTime = readTime(byteArray);\n}\n","import { Layer, LayerType } from '../../base/layer';\nimport { ZERO_POINT } from '../../base/point';\nimport { PreComposeLayer } from '../../base/pre-compose-layer';\nimport { ShapeLayer } from '../../base/shape-layer';\nimport { SolidLayer } from '../../base/solid-layer';\nimport { Transform2D } from '../../base/transform-2d';\nimport { UnDefinedLayer } from '../../base/un-defined-layer';\nimport { TagCode } from '../types';\nimport { readTagBlock } from '../attribute-helper';\nimport { ByteArray } from '../utils/byte-array';\nimport { readSolidColor } from './solid-layer';\nimport {\n  readBlockConfigOfLayerAttributes,\n  readBlockConfigOfLayerAttributesV2,\n  readBlockConfigOfTransform2D,\n} from './tag-attributes';\nimport { readTags } from './tag-header';\nimport { readCompositionReference } from './read-composition-reference';\nimport { Property } from '../../base/property';\n\nexport const readLayer = (byteArray: ByteArray): Layer => {\n  const layerType: LayerType = byteArray.readUint8();\n  let layer: Layer;\n  switch (layerType) {\n    case LayerType.undefined:\n      layer = new UnDefinedLayer();\n      break;\n    case LayerType.Solid:\n      layer = new SolidLayer();\n      break;\n    case LayerType.Shape:\n      layer = new ShapeLayer();\n      break;\n    case LayerType.PreCompose:\n      layer = new PreComposeLayer();\n      break;\n    default:\n      layer = new Layer();\n      break;\n  }\n  layer.id = byteArray.readEncodedUint32();\n  readTags(byteArray, layer, readTagsOfLayer);\n  return layer;\n};\n\nexport const readTagsOfLayer = (byteArray: ByteArray, code: TagCode, layer: Layer) => {\n  switch (code) {\n    case TagCode.LayerAttributes:\n      readTagBlock(byteArray, layer, readBlockConfigOfLayerAttributes);\n      if (layer.duration <= 0) layer.duration = 1;\n      break;\n    case TagCode.LayerAttributesV2:\n      readTagBlock(byteArray, layer, readBlockConfigOfLayerAttributesV2);\n      if (layer.duration <= 0) layer.duration = 1;\n      break;\n    case TagCode.Transform2D:\n      layer.transform = new Transform2D();\n      readTagBlock(byteArray, layer.transform, readBlockConfigOfTransform2D);\n      // hasPosition || (!hasXPosition && !hasXPosition)\n      if (\n        layer.transform.position.animatable() ||\n        layer.transform.position.value !== ZERO_POINT ||\n        (!(layer.transform.xPosition.animatable() || layer.transform.xPosition.value !== 0) &&\n          !(layer.transform.yPosition.animatable() || layer.transform.yPosition.value !== 0))\n      ) {\n        layer.transform.xPosition = new Property(0);\n        layer.transform.yPosition = new Property(0);\n      } else {\n        layer.transform.position = new Property(ZERO_POINT);\n      }\n      break;\n    case TagCode.SolidColor:\n      if (layer.type() === LayerType.Solid) {\n        readSolidColor(byteArray, layer as SolidLayer);\n      }\n      break;\n    case TagCode.CompositionReference:\n      if (layer.type() === LayerType.PreCompose) {\n        readCompositionReference(byteArray, layer as PreComposeLayer);\n      }\n      break;\n    default:\n      break;\n  }\n};\n","import { EffectType } from '../../base/effects/effect';\nimport { FillEffect } from '../../base/effects/fill-effect';\nimport { StrokeEffect } from '../../base/effects/stroke-effect';\nimport { Layer, LayerType, TrackMatteType } from '../../base/layer';\nimport { Mask } from '../../base/mask';\nimport { TextLayer } from '../../base/text-layer';\nimport { VectorComposition } from '../../base/vector-composition';\nimport { TagCode } from '../types';\nimport { ByteArray } from '../utils/byte-array';\nimport { readCompositionAttributes } from './composition-attributes';\nimport { readLayer } from './layer-tag';\nimport { readTags } from './tag-header';\n\nexport const readVectorComposition = (byteArray: ByteArray): VectorComposition => {\n  const composition = new VectorComposition();\n  composition.id = byteArray.readEncodedUint32();\n  readTags(byteArray, composition, readTagsOfVectorComposition);\n  installArrayLayerReference(composition.layers);\n  return composition;\n};\n\nexport const readTagsOfVectorComposition = (byteArray: ByteArray, code: TagCode, composition: VectorComposition) => {\n  switch (code) {\n    case TagCode.CompositionAttributes:\n      readCompositionAttributes(byteArray, composition);\n      break;\n    case TagCode.LayerBlock:\n      composition.layers.push(readLayer(byteArray));\n      break;\n    default:\n      break;\n  }\n};\n\nexport const installArrayLayerReference = (layers: Array<Layer>) => {\n  if (layers && layers.length === 0) {\n    return;\n  }\n  const layerMap = new Map();\n  for (const layer of layers) {\n    if (!layer) {\n      continue;\n    }\n    installLayerReference(layer);\n    layerMap.set(layer.id, layer);\n  }\n\n  let index = 0;\n  for (const layer of layers) {\n    if (!layer) {\n      continue;\n    }\n    if (layer.parent !== undefined) {\n      const ID = layer.parent.id;\n      const result = layerMap.get(ID);\n      if (result !== undefined) {\n        layer.parent = result;\n      }\n    }\n    if (index > 0 && hasTrackMatte(layer.trackMatteType)) {\n      layer.trackMatteLayer = layers[index - 1];\n    }\n    if (layer.effects !== undefined && layer.effects.length > 0) {\n      for (const effect of layer.effects) {\n        if (!effect) {\n          continue;\n        }\n        if (effect.type() === EffectType.DisplacementMap) {\n          // let displacementMapEffect = <DisplacementMapEffect> effect;\n          // if (displacementMapEffect.displacementMapLayer != undefined) {\n          //     let ID = displacementMapEffect.displacementMapLayer.id;\n          //     let result = layerMap.get(ID);\n          //     if (result != undefined) {\n          //         displacementMapEffect.displacementMapLayer = result;\n          //     }\n          // }\n        }\n      }\n    }\n    index += 1;\n  }\n};\n\n/**\n * 将Layer里面的MaskID标识换成真正的Mask\n * @param layer\n */\nconst installLayerReference = (layer: Layer) => {\n  if (!layer || !layer.masks || layer.masks.length === 0) return;\n  const maskMap = new Map();\n  for (const mask of layer.masks) {\n    if (!mask) {\n      continue;\n    }\n    maskMap.set(mask.id, mask);\n  }\n\n  layer.effects?.forEach((effect) => {\n    if (!effect) return;\n    if (effect.maskReferences !== undefined && effect.maskReferences.length > 0) {\n      const maskReferences = new Array<Mask>();\n      effect.maskReferences.forEach((mask) => {\n        const ID = mask.id;\n        const result = maskMap.get(ID);\n        if (result !== undefined) {\n          maskReferences.push(result);\n        }\n      });\n      effect.maskReferences = maskReferences;\n    }\n    switch (effect.type()) {\n      case EffectType.Fill:\n        if ((effect as FillEffect).fillMask !== undefined) {\n          const ID = (effect as FillEffect).fillMask!.id;\n          const result = maskMap.get(ID);\n          if (result !== undefined) {\n            (effect as FillEffect).fillMask = result;\n          }\n        }\n        break;\n      case EffectType.Stroke: {\n        const strokeEffect = effect as StrokeEffect;\n        if (strokeEffect.path !== undefined) {\n          const ID = strokeEffect.path.id;\n          const result = maskMap.get(ID);\n          if (result !== undefined) {\n            strokeEffect.path = result;\n          }\n        }\n        break;\n      }\n      default:\n        break;\n    }\n  });\n\n  if (layer.type() === LayerType.Text) {\n    const { pathOption } = layer as TextLayer;\n    if (pathOption?.path) {\n      const ID = pathOption.path.id;\n      const result = maskMap.get(ID);\n      if (result !== undefined) {\n        pathOption.path = result;\n      }\n    }\n  }\n};\n\nexport const hasTrackMatte = (type: TrackMatteType): boolean => {\n  switch (type) {\n    case TrackMatteType.Alpha:\n    case TrackMatteType.AlphaInverted:\n      return true;\n    default:\n      return false;\n  }\n};\n","import { readVideoComposition } from './video-composition-tag';\nimport { readVectorComposition } from './vector-composition-tag';\nimport { TagCode } from '../types';\n\nimport type { Context } from '../context';\nimport type { ByteArray } from '../utils/byte-array';\n\nexport function readTagsOfFile(byteArray: ByteArray, code: TagCode, context: Context): void {\n  switch (code) {\n    case TagCode.VectorCompositionBlock:\n      context.compositions.push(readVectorComposition(byteArray));\n      break;\n    case TagCode.VideoCompositionBlock:\n      context.compositions.push(readVideoComposition(byteArray));\n      break;\n    default:\n      break;\n  }\n}\n","import { ByteArray } from './codec/utils/byte-array';\nimport { readTags } from './codec/tags/tag-header';\nimport { readTagsOfFile } from './codec/tags/file-tags';\nimport { Composition } from './base/composition';\nimport { CompositionType, TagCode } from './codec/types';\nimport { VectorComposition } from './base/vector-composition';\nimport { LayerType } from './base/layer';\nimport { PreComposeLayer } from './base/pre-compose-layer';\n\nexport const verifyAndMake = (compositions: Array<Composition>) => {\n  let success: boolean = compositions.length > 0;\n  for (const composition of compositions) {\n    if (!composition || !composition.verify()) {\n      success = false;\n      break;\n    }\n  }\n  if (!success) {\n    throw new Error('Verify composition failed!');\n  }\n};\n\n/**\n * 将Layer里面的compositionID标识换成真正的Composition\n */\nexport function installReference(compositions: Array<Composition>) {\n  if (!compositions || compositions.length === 0) return;\n  const compositionMap = new Map();\n  compositions.forEach((composition) => {\n    if (composition) {\n      compositionMap.set(composition.id, composition);\n    }\n  });\n  compositions.forEach((composition) => {\n    if (composition && composition.type() === CompositionType.Vector) {\n      const vectorComposition = composition as VectorComposition;\n      if (vectorComposition.layers && vectorComposition.layers.length > 0) {\n        vectorComposition.layers.forEach((layer) => {\n          layer.containingComposition = vectorComposition;\n          const preComposeLayer = layer as PreComposeLayer;\n          if (preComposeLayer.type() === LayerType.PreCompose && preComposeLayer.composition) {\n            const res = compositionMap.get(preComposeLayer.composition.id);\n            if (res) {\n              preComposeLayer.composition = res;\n            }\n          }\n        });\n      }\n    }\n  });\n}\n\nexport class PAGCodec {\n  public static maxSupportedTagLevel(): number {\n    return TagCode.Count - 1;\n  }\n}\n\n/**\n * Decode PAG File from bytes\n */\nexport const decode = (byteArray: ByteArray) => {\n  const bodyByteArray: ByteArray = readBodyBytes(byteArray);\n  const { context } = bodyByteArray;\n  readTags(bodyByteArray, context, readTagsOfFile);\n  installReference(context.compositions);\n  const compositions = context.releaseCompositions();\n  verifyAndMake(compositions);\n  return { compositions, tagLevel: context.tagLevel };\n};\n\nexport const readBodyBytes = (byteArray: ByteArray): ByteArray => {\n  if (byteArray.length < 11) throw new Error('PAG file is invalid!');\n  const P: number = byteArray.readInt8();\n  const A: number = byteArray.readInt8();\n  const G: number = byteArray.readInt8();\n  if (P !== 80 || A !== 65 || G !== 71) throw new Error('invalid PAG header!');\n  byteArray.readInt8(); // version\n  byteArray.readUint32(); // bodyLength\n  byteArray.readInt8(); // compression\n  return byteArray.readBytes();\n};\n","import { decode } from './pag-codec';\nimport { Composition } from './base/composition';\nimport { LayerType } from './base/layer';\nimport { VectorComposition } from './base/vector-composition';\nimport { ByteArray } from './codec/utils/byte-array';\nimport { CompositionType } from './codec/types';\nimport { TimeRange } from './base/time-range';\nimport { PreComposeLayer } from './base/pre-compose-layer';\nimport { VideoComposition } from './base/video-composition';\n\nexport class PAGFile {\n  public static fromArrayBuffer(arrayBuffer: ArrayBuffer): PAGFile {\n    if (!arrayBuffer || arrayBuffer.byteLength === 0) throw new Error(\"Can't read empty array buffer!\");\n    const byteArray = new ByteArray(arrayBuffer, true);\n    const { compositions, tagLevel } = decode(byteArray);\n    return new PAGFile(compositions, tagLevel);\n  }\n\n  public tagLevel = 1;\n  public mainComposition: Composition;\n  public compositions: Array<Composition> = [];\n  public numLayers = 0;\n  public duration: number;\n  public implDuration: number;\n  public scaledTimeRange: TimeRange = { start: 0, end: 0 };\n\n  public constructor(compositions: Array<Composition>, tagLevel: number) {\n    this.mainComposition = compositions[compositions.length - 1];\n    this.scaledTimeRange.start = 0;\n    this.scaledTimeRange.end = this.mainComposition.duration;\n    this.compositions = compositions;\n    this.duration = this.mainComposition.duration;\n    this.implDuration = (this.mainComposition.duration * 1000) / this.mainComposition.frameRate;\n    for (const composition of compositions) {\n      if (composition.type() !== CompositionType.Vector) {\n        this.numLayers += 1;\n        continue;\n      }\n      for (const layer of (composition as VectorComposition).layers) {\n        if (layer.type() === LayerType.PreCompose) {\n          continue;\n        }\n        this.numLayers += 1;\n      }\n    }\n    this.tagLevel = tagLevel;\n  }\n\n  public getVideoSequence() {\n    const compositionType = this.mainComposition.type();\n    if (compositionType === CompositionType.Video) {\n      return getVideoSequenceFromVideoComposition(this.mainComposition as VideoComposition);\n    } else if (compositionType === CompositionType.Vector) {\n      return getVideoSequenceFromVectorComposition(this.mainComposition as VectorComposition);\n    }\n  }\n}\n\nconst getVideoSequenceFromVideoComposition = (videoComposition: VideoComposition) => {\n  if (!videoComposition.sequences || videoComposition.sequences.length === 0) {\n    throw new Error('PAGFile has no BMP video sequence!');\n  }\n  return videoComposition.sequences[videoComposition.sequences.length - 1];\n};\n\nconst getVideoSequenceFromVectorComposition = (vectorComposition: VectorComposition) => {\n  const videoCompositions = getVideoComposition(vectorComposition);\n  if (videoCompositions.length > 1) throw new Error('PAGFile has more than one BMP video sequence!');\n  if (videoCompositions.length < 1) throw new Error('PAGFile has no BMP video sequence!');\n  const videoComposition = videoCompositions[0];\n  return getVideoSequenceFromVideoComposition(videoComposition);\n};\n\nconst getVideoComposition = (vectorComposition: VectorComposition) => {\n  const videoCompositions: VideoComposition[] = [];\n  vectorComposition.layers.forEach((layer) => {\n    if (layer.type() !== LayerType.PreCompose) return;\n    const { composition } = layer as PreComposeLayer;\n    if (composition?.type() === CompositionType.Video) {\n      videoCompositions.push(composition as VideoComposition);\n      return;\n    }\n    if (composition?.type() === CompositionType.Vector) {\n      videoCompositions.push(...getVideoComposition(composition as VectorComposition));\n    }\n  });\n  return videoCompositions;\n};\n","export interface VideoParam {\n  width: number; // VideoComposition width\n  height: number; // VideoComposition height\n  MP4Width: number; // MP4 width (with alpha)\n  MP4Height: number; // MP4 height (with alpha)\n  sequenceWidth: number; // VideoSequence width (without alpha)\n  sequenceHeight: number; // VideoSequence width (without alpha)\n  hasAlpha: boolean; // Whether the video has alpha\n  alphaStartX: number; // Alpha start x\n  alphaStartY: number; // Alpha start y\n}\n\nexport enum RenderingMode {\n  Canvas2D = '2d',\n  WebGL = 'WebGL',\n}\n\nexport enum EventName {\n  /**\n   * Notifies the start of the animation.\n   */\n  onAnimationStart = 'onAnimationStart',\n  /**\n   * Notifies the end of the animation.\n   */\n  onAnimationEnd = 'onAnimationEnd',\n  /**\n   * Notifies the cancellation of the animation.\n   */\n  onAnimationCancel = 'onAnimationCancel',\n  /**\n   * Notifies the repetition of the animation.\n   */\n  onAnimationRepeat = 'onAnimationRepeat',\n  /**\n   * Notifies the update of the animation.\n   */\n  onAnimationUpdate = 'onAnimationUpdate',\n  /**\n   * Notifies the play of the animation.\n   */\n  onAnimationPlay = 'onAnimationPlay',\n  /**\n   * Notifies the pause of the animation.\n   */\n  onAnimationPause = 'onAnimationPause',\n}\n\nexport enum ScaleMode {\n  None = 'None',\n  /**\n   * 拉伸内容到适应画布\n   */\n  Stretch = 'Stretch',\n  /**\n   * 根据原始比例缩放内容\n   */\n  LetterBox = 'LetterBox',\n  /**\n   * 根据原始比例被缩放适应，一个轴会被裁剪\n   */\n  Zoom = 'Zoom',\n}\n\nexport interface DebugData {\n  FPS?: number;\n  decodePAGFile?: number;\n  createDir?: number;\n  coverMP4?: number;\n  writeFile?: number;\n  createDecoder?: number;\n  getFrame?: number;\n  draw?:number;\n}\n","export function destroyVerify(constructor: any) {\n  let functions = Object.getOwnPropertyNames(constructor.prototype).filter(\n    (name) => name !== 'constructor' && typeof constructor.prototype[name] === 'function',\n  );\n\n  const proxyFn = (target: { [prop: string]: any }, methodName: string) => {\n    const fn = target[methodName];\n    target[methodName] = function (...args: any[]) {\n      if (this['destroyed']) {\n        console.error(`Don't call ${methodName} of the PAGView that is destroyed.`);\n        return;\n      }\n      return fn.call(this, ...args);\n    };\n  };\n  functions.forEach((name) => proxyFn(constructor.prototype, name));\n}\n","import type { PAGFile } from '../pag-file';\nimport type { VideoParam } from '../types';\nimport type { VideoSequence } from '../base/video-sequence';\n\nexport const detectWebGLContext = () => {\n  const canvas: HTMLCanvasElement = document.createElement('canvas');\n  const gl: RenderingContext | null = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n  return !!gl;\n};\n\nexport const createProgram = (gl: WebGLRenderingContext, vertexShaderSource: string, fragmentShaderSource: string) => {\n  const program = gl.createProgram();\n  if (!program) throw new Error('Failed to create program.');\n  const vShader = createShader(gl, vertexShaderSource, gl.VERTEX_SHADER);\n  if (!vShader) throw new Error('Failed to create vertex shader.');\n  gl.attachShader(program, vShader);\n  const fShader = createShader(gl, fragmentShaderSource, gl.FRAGMENT_SHADER);\n  if (!fShader) throw new Error('Failed to create fragment shader.');\n  gl.attachShader(program, fShader);\n  gl.linkProgram(program);\n\n  const programMessage = gl.getProgramInfoLog(program);\n  if (programMessage) console.log(programMessage);\n  const vShaderMessage = gl.getShaderInfoLog(vShader);\n  if (vShaderMessage) console.log(vShaderMessage);\n  const fShaderMessage = gl.getShaderInfoLog(fShader);\n  if (fShaderMessage) console.log(fShaderMessage);\n\n  return program;\n};\n\nconst createShader = (gl: WebGLRenderingContext, source: string, type: GLenum) => {\n  const shader = gl.createShader(type);\n  if (!shader) throw new Error('Failed to create shader.');\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  return shader;\n};\n\nexport const getShaderSourceFromString = (str: string) => str.replace(/^\\s+|\\s+$/g, '');\n\nexport const getVideoParam = (pagFile: PAGFile, videoSequence: VideoSequence) => {\n  const attribute: VideoParam = {\n    width: pagFile.mainComposition.width,\n    height: pagFile.mainComposition.height,\n    hasAlpha: videoSequence.alphaStartX > 0 || videoSequence.alphaStartY > 0,\n    alphaStartX: videoSequence.alphaStartX,\n    alphaStartY: videoSequence.alphaStartY,\n    sequenceWidth: videoSequence.width,\n    sequenceHeight: videoSequence.height,\n    MP4Width:\n      (videoSequence.width + videoSequence.alphaStartX) % 2 === 0\n        ? videoSequence.width + videoSequence.alphaStartX\n        : videoSequence.width + videoSequence.alphaStartX + 1, // Must be even number\n    MP4Height:\n      (videoSequence.height + videoSequence.alphaStartY) % 2 === 0\n        ? videoSequence.height + videoSequence.alphaStartY\n        : videoSequence.height + videoSequence.alphaStartY + 1, // Must be even number\n  };\n  return attribute;\n};\n\nexport const createAndSetupTexture = (gl: WebGLRenderingContext) => {\n  const texture = gl.createTexture();\n  if (!texture) throw new Error('Failed to create texture.');\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n\n  // Set up texture so we can render any size image and so we are\n  // working with pixels.\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n  return texture;\n};\n\n// Get video initiated token on Wechat browser.\nexport const getWechatNetwork = () => {\n  return new Promise<void>((resolve) => {\n    window.WeixinJSBridge.invoke(\n      'getNetworkType',\n      {},\n      () => {\n        resolve();\n      },\n      () => {\n        resolve();\n      },\n    );\n  });\n};\n","export type Listener = (...payload: any) => void;\n\ninterface ListenersMap {\n  [propName: string]: Listener[];\n}\n\nexport class EventManager {\n  private listenersMap: ListenersMap;\n\n  public constructor() {\n    this.listenersMap = {};\n  }\n\n  public on(eventName: string, listener: Listener) {\n    if (this.listenersMap[eventName] === undefined) {\n      this.listenersMap[eventName] = [];\n    }\n    this.listenersMap[eventName].push(listener);\n    return;\n  }\n\n  public off(eventName: string, listener?: Listener) {\n    const listenerList: Listener[] = this.listenersMap[eventName];\n    if (listenerList === undefined) return;\n    if (listener === undefined) {\n      delete this.listenersMap[eventName];\n      return;\n    }\n    const index = listenerList.findIndex((fn: Listener) => fn === listener);\n    listenerList.splice(index, 1);\n    return;\n  }\n\n  public emit(eventName: string, ...payload: any): boolean {\n    const listenerList: Listener[] = this.listenersMap[eventName];\n    if (listenerList === undefined || listenerList.length < 1) return false;\n    for (const listener of listenerList) {\n      listener(...payload);\n    }\n    return true;\n  }\n}\n","import { getVideoParam } from './utils';\nimport { RenderingMode, EventName, ScaleMode } from '../types';\nimport { EventManager, Listener } from '../base/utils/event-manager';\nimport { destroyVerify } from '../decorators';\n\nimport type { PAGFile } from '../pag-file';\nimport type { VideoParam, DebugData } from '../types';\nimport type { VideoSequence } from '../base/video-sequence';\n\nexport interface RenderOptions {\n  renderingMode?: RenderingMode;\n  useScale?: boolean;\n}\n\n@destroyVerify\nexport class Context {\n  protected canvas: HTMLCanvasElement | null;\n  protected canvasSize = { width: 0, height: 0 };\n  protected eventManager: EventManager;\n  protected playing = false;\n  protected videoParam: VideoParam;\n  protected viewportSize = { x: 0, y: 0, width: 0, height: 0, scaleX: 1, scaleY: 1 }; // viewport尺寸 WebGL坐标轴轴心在左下角|Canvas2D坐标轴轴心在左上角\n  protected destroyed = false;\n  protected videoSequence: VideoSequence;\n  protected renderTimer: number | null = null;\n  protected repeatCount = 0; // 设置动画重复的次数。默认值为 0，只播放一次。如为 -1 动画则无限播放。\n\n  private renderingMode: RenderingMode;\n  private viewScaleMode = ScaleMode.LetterBox;\n  private debugData: DebugData = {\n    FPS: 0,\n    decodePAGFile: 0,\n    createDir: 0,\n    coverMP4: 0,\n    writeFile: 0,\n    createDecoder: 0,\n    getFrame: 0,\n    draw: 0,\n  };\n\n  public constructor(pagFile: PAGFile, canvas: HTMLCanvasElement, options: RenderOptions) {\n    const videoSequence = pagFile.getVideoSequence();\n    if (!videoSequence) throw new Error('PAGFile has no BMP video sequence!');\n    delete videoSequence.composition;\n    this.videoSequence = videoSequence;\n    this.canvas = canvas;\n    this.videoParam = getVideoParam(pagFile, videoSequence);\n    this.eventManager = new EventManager();\n    this.renderingMode = options.renderingMode || RenderingMode.WebGL;\n    this.updateSize(options.useScale);\n    this.setScaleMode();\n  }\n  /**\n   * 是否播放中\n   */\n  public isPlaying() {\n    return this.playing;\n  }\n  /**\n   * 是否已经销毁\n   */\n  public isDestroyed() {\n    return this.destroyed;\n  }\n  /**\n   * 动画持续时间\n   */\n  public duration() {\n    return this.videoSequence.frameCount / this.videoSequence.frameRate;\n  }\n  /**\n   * 动画持续时间\n   */\n  public frameRate() {\n    return this.videoSequence.frameRate;\n  }\n  /**\n   * 设置动画重复的次数。默认值为 1，只播放一次。如为 0 动画则无限播放。\n   */\n  public setRepeatCount(repeatCount = 1) {\n    this.repeatCount = repeatCount < 0 ? -1 : repeatCount - 1;\n  }\n\n  /**\n   * 增加事件监听\n   */\n  public addListener(eventName: EventName, listener: Listener) {\n    return this.eventManager.on(eventName, listener);\n  }\n  /**\n   * 移除事件监听\n   */\n  public removeListener(eventName: EventName, listener?: Listener) {\n    return this.eventManager.off(eventName, listener);\n  }\n  /**\n   * 返回当前缩放模式\n   */\n  public scaleMode() {\n    return this.viewScaleMode;\n  }\n  /**\n   * 指定缩放内容的模式\n   */\n  public setScaleMode(scaleMode: ScaleMode = ScaleMode.LetterBox) {\n    this.viewScaleMode = scaleMode;\n    switch (scaleMode) {\n      case ScaleMode.None:\n        this.viewportSize = {\n          x: 0,\n          y: this.renderingMode === RenderingMode.WebGL ? this.canvas!.height - this.videoParam.height : 0,\n          width: this.videoParam.width,\n          height: this.videoParam.height,\n          scaleX: 1,\n          scaleY: 1,\n        };\n        break;\n      case ScaleMode.Stretch:\n        this.viewportSize = {\n          x: 0,\n          y: 0,\n          width: this.canvas!.width,\n          height: this.canvas!.height,\n          scaleX: this.canvas!.width / this.videoParam.sequenceWidth,\n          scaleY: this.canvas!.height / this.videoParam.sequenceHeight,\n        };\n        break;\n      case ScaleMode.LetterBox:\n        {\n          const scaleX = this.canvas!.width / this.videoParam.sequenceWidth;\n          const scaleY = this.canvas!.height / this.videoParam.sequenceHeight;\n          const scale = Math.min(scaleX, scaleY);\n          this.viewportSize = {\n            x: (this.canvas!.width - this.videoParam.sequenceWidth * scale) / 2,\n            y: (this.canvas!.height - this.videoParam.sequenceHeight * scale) / 2,\n            width: this.videoParam.sequenceWidth * scale,\n            height: this.videoParam.sequenceHeight * scale,\n            scaleX: scale,\n            scaleY: scale,\n          };\n        }\n        break;\n      case ScaleMode.Zoom:\n        {\n          const scaleX = this.canvas!.width / this.videoParam.sequenceWidth;\n          const scaleY = this.canvas!.height / this.videoParam.sequenceHeight;\n          const scale = Math.max(scaleX, scaleY);\n          this.viewportSize = {\n            x: (this.canvas!.width - this.videoParam.sequenceWidth * scale) / 2,\n            y: (this.canvas!.height - this.videoParam.sequenceHeight * scale) / 2,\n            width: this.videoParam.sequenceWidth * scale,\n            height: this.videoParam.sequenceHeight * scale,\n            scaleX: scale,\n            scaleY: scale,\n          };\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  public updateSize(useScale = true) {\n    if (!this.canvas) {\n      throw new Error('Canvas element is not found!');\n    }\n    let displaySize: { width: number; height: number };\n    const styleDeclaration = getComputedStyle(this.canvas as HTMLCanvasElement);\n    const computedSize = {\n      width: Number(styleDeclaration.width.replace('px', '')),\n      height: Number(styleDeclaration.height.replace('px', '')),\n    };\n    if (computedSize.width > 0 && computedSize.height > 0) {\n      displaySize = computedSize;\n    } else {\n      const styleSize = {\n        width: Number(this.canvas.style.width.replace('px', '')),\n        height: Number(this.canvas.style.height.replace('px', '')),\n      };\n      if (styleSize.width > 0 && styleSize.height > 0) {\n        displaySize = styleSize;\n      } else {\n        displaySize = {\n          width: this.canvas.width,\n          height: this.canvas.height,\n        };\n      }\n    }\n\n    if (!useScale) {\n      this.canvas!.width = this.canvas!.width || displaySize.width;\n      this.canvas!.height = this.canvas!.height || displaySize.height;\n      console.log('aaa useScale:false this.canvas.width: ' + JSON.stringify(this.canvas.width));\n      console.log('aaa useScale:false this.canvas.height: ' + JSON.stringify(this.canvas.height));\n      return;\n    }\n    this.canvas.style.width = `${displaySize.width}px`;\n    this.canvas.style.height = `${displaySize.height}px`;\n    console.log('aaa displaySize.width: ' + JSON.stringify(displaySize.width));\n    console.log('aaa displaySize.height: ' + JSON.stringify(displaySize.height));\n    console.log('aaa window.devicePixelRatio: ' + JSON.stringify(window.devicePixelRatio));\n    this.canvas.width = displaySize.width * window.devicePixelRatio;\n    this.canvas.height = displaySize.height * window.devicePixelRatio;\n    console.log('aaa this.canvas.width: ' + JSON.stringify(this.canvas.width));\n    console.log('aaa this.canvas.height: ' + JSON.stringify(this.canvas.height));\n  }\n\n  public getDebugData() {\n    return this.debugData;\n  }\n\n  public setDebugData(data: DebugData) {\n    this.debugData = { ...this.debugData, ...data };\n  }\n\n  protected loadContext() {}\n\n  protected clearRender() {}\n}\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-function-prototype-bind -- safe\n  var test = (function () { /* empty */ }).bind();\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return typeof test != 'function' || test.hasOwnProperty('prototype');\n});\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar call = FunctionPrototype.call;\nvar uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);\n\nmodule.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {\n  return function () {\n    return call.apply(fn, arguments);\n  };\n};\n","var documentAll = typeof document == 'object' && document.all;\n\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\n// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing\nvar IS_HTMLDDA = typeof documentAll == 'undefined' && documentAll !== undefined;\n\nmodule.exports = {\n  all: documentAll,\n  IS_HTMLDDA: IS_HTMLDDA\n};\n","var $documentAll = require('../internals/document-all');\n\nvar documentAll = $documentAll.all;\n\n// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\nmodule.exports = $documentAll.IS_HTMLDDA ? function (argument) {\n  return typeof argument == 'function' || argument === documentAll;\n} : function (argument) {\n  return typeof argument == 'function';\n};\n","// we can't use just `it == null` since of `document.all` special case\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec\nmodule.exports = function (it) {\n  return it === null || it === undefined;\n};\n","var isNullOrUndefined = require('../internals/is-null-or-undefined');\n\nvar $TypeError = TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (isNullOrUndefined(it)) throw $TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar $Object = Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return $Object(requireObjectCoercible(argument));\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\n// eslint-disable-next-line es/no-object-hasown -- safe\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject(it), key);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar hasOwn = require('../internals/has-own-property');\n\nvar FunctionPrototype = Function.prototype;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;\n\nvar EXISTS = hasOwn(FunctionPrototype, 'name');\n// additional protection from minified / mangled / dropped function names\nvar PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';\nvar CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));\n\nmodule.exports = {\n  EXISTS: EXISTS,\n  PROPER: PROPER,\n  CONFIGURABLE: CONFIGURABLE\n};\n","var global = require('../internals/global');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nmodule.exports = function (key, value) {\n  try {\n    defineProperty(global, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","var global = require('../internals/global');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || defineGlobalProperty(SHARED, {});\n\nmodule.exports = store;\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar isCallable = require('../internals/is-callable');\nvar store = require('../internals/shared-store');\n\nvar functionToString = uncurryThis(Function.toString);\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\nif (!isCallable(store.inspectSource)) {\n  store.inspectSource = function (it) {\n    return functionToString(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","var global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));\n","var isCallable = require('../internals/is-callable');\nvar $documentAll = require('../internals/document-all');\n\nvar documentAll = $documentAll.all;\n\nmodule.exports = $documentAll.IS_HTMLDDA ? function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it) || it === documentAll;\n} : function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it);\n};\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thanks to IE8 for its funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\n\n// V8 ~ Chrome 36-\n// https://bugs.chromium.org/p/v8/issues/detail?id=3334\nmodule.exports = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(function () { /* empty */ }, 'prototype', {\n    value: 42,\n    writable: false\n  }).prototype != 42;\n});\n","var isObject = require('../internals/is-object');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\n// `Assert: Type(argument) is Object`\nmodule.exports = function (argument) {\n  if (isObject(argument)) return argument;\n  throw $TypeError($String(argument) + ' is not an object');\n};\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar call = Function.prototype.call;\n\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};\n","var global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar aFunction = function (argument) {\n  return isCallable(argument) ? argument : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis({}.isPrototypeOf);\n","module.exports = typeof navigator != 'undefined' && String(navigator.userAgent) || '';\n","var global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar Deno = global.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nmodule.exports = version;\n","/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/engine-v8-version');\nvar fails = require('../internals/fails');\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol();\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  return !String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n","/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\nmodule.exports = NATIVE_SYMBOL\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n","var getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar $Object = Object;\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));\n};\n","var $String = String;\n\nmodule.exports = function (argument) {\n  try {\n    return $String(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};\n","var isCallable = require('../internals/is-callable');\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw $TypeError(tryToString(argument) + ' is not a function');\n};\n","var aCallable = require('../internals/a-callable');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nmodule.exports = function (V, P) {\n  var func = V[P];\n  return isNullOrUndefined(func) ? undefined : aCallable(func);\n};\n","var call = require('../internals/function-call');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\n\nvar $TypeError = TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\n  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  throw $TypeError(\"Can't convert object to primitive value\");\n};\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.30.1',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2014-2023 Denis Pushkarev (zloirock.ru)',\n  license: 'https://github.com/zloirock/core-js/blob/v3.30.1/LICENSE',\n  source: 'https://github.com/zloirock/core-js'\n});\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.0.toString);\n\nmodule.exports = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);\n};\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar hasOwn = require('../internals/has-own-property');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar Symbol = global.Symbol;\nvar WellKnownSymbolsStore = shared('wks');\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol['for'] || Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!hasOwn(WellKnownSymbolsStore, name)) {\n    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol, name)\n      ? Symbol[name]\n      : createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n","var call = require('../internals/function-call');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar getMethod = require('../internals/get-method');\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar $TypeError = TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw $TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n","var toPrimitive = require('../internals/to-primitive');\nvar isSymbol = require('../internals/is-symbol');\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : key + '';\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar anObject = require('../internals/an-object');\nvar toPropertyKey = require('../internals/to-property-key');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = 'enumerable';\nvar CONFIGURABLE = 'configurable';\nvar WRITABLE = 'writable';\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n    var current = $getOwnPropertyDescriptor(O, P);\n    if (current && current[WRITABLE]) {\n      O[P] = Attributes.value;\n      Attributes = {\n        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],\n        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n        writable: false\n      };\n    }\n  } return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw $TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","var NATIVE_WEAK_MAP = require('../internals/weak-map-basic-detection');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar TypeError = global.TypeError;\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  /* eslint-disable no-self-assign -- prototype methods protection */\n  store.get = store.get;\n  store.has = store.has;\n  store.set = store.set;\n  /* eslint-enable no-self-assign -- prototype methods protection */\n  set = function (it, metadata) {\n    if (store.has(it)) throw TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    store.set(it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return store.get(it) || {};\n  };\n  has = function (it) {\n    return store.has(it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (hasOwn(it, STATE)) throw TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return hasOwn(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return hasOwn(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar hasOwn = require('../internals/has-own-property');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar CONFIGURABLE_FUNCTION_NAME = require('../internals/function-name').CONFIGURABLE;\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar enforceInternalState = InternalStateModule.enforce;\nvar getInternalState = InternalStateModule.get;\nvar $String = String;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\nvar stringSlice = uncurryThis(''.slice);\nvar replace = uncurryThis(''.replace);\nvar join = uncurryThis([].join);\n\nvar CONFIGURABLE_LENGTH = DESCRIPTORS && !fails(function () {\n  return defineProperty(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;\n});\n\nvar TEMPLATE = String(String).split('String');\n\nvar makeBuiltIn = module.exports = function (value, name, options) {\n  if (stringSlice($String(name), 0, 7) === 'Symbol(') {\n    name = '[' + replace($String(name), /^Symbol\\(([^)]*)\\)/, '$1') + ']';\n  }\n  if (options && options.getter) name = 'get ' + name;\n  if (options && options.setter) name = 'set ' + name;\n  if (!hasOwn(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {\n    if (DESCRIPTORS) defineProperty(value, 'name', { value: name, configurable: true });\n    else value.name = name;\n  }\n  if (CONFIGURABLE_LENGTH && options && hasOwn(options, 'arity') && value.length !== options.arity) {\n    defineProperty(value, 'length', { value: options.arity });\n  }\n  try {\n    if (options && hasOwn(options, 'constructor') && options.constructor) {\n      if (DESCRIPTORS) defineProperty(value, 'prototype', { writable: false });\n    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable\n    } else if (value.prototype) value.prototype = undefined;\n  } catch (error) { /* empty */ }\n  var state = enforceInternalState(value);\n  if (!hasOwn(state, 'source')) {\n    state.source = join(TEMPLATE, typeof name == 'string' ? name : '');\n  } return value;\n};\n\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n// eslint-disable-next-line no-extend-native -- required\nFunction.prototype.toString = makeBuiltIn(function toString() {\n  return isCallable(this) && getInternalState(this).source || inspectSource(this);\n}, 'toString');\n","var makeBuiltIn = require('../internals/make-built-in');\nvar defineProperty = require('../internals/object-define-property');\n\nmodule.exports = function (target, name, descriptor) {\n  if (descriptor.get) makeBuiltIn(descriptor.get, name, { getter: true });\n  if (descriptor.set) makeBuiltIn(descriptor.set, name, { setter: true });\n  return defineProperty.f(target, name, descriptor);\n};\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.unicodeSets) result += 'v';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","var global = require('../internals/global');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar regExpFlags = require('../internals/regexp-flags');\nvar fails = require('../internals/fails');\n\n// babel-minify and Closure Compiler transpiles RegExp('.', 'd') -> /./d and it causes SyntaxError\nvar RegExp = global.RegExp;\nvar RegExpPrototype = RegExp.prototype;\n\nvar FORCED = DESCRIPTORS && fails(function () {\n  var INDICES_SUPPORT = true;\n  try {\n    RegExp('.', 'd');\n  } catch (error) {\n    INDICES_SUPPORT = false;\n  }\n\n  var O = {};\n  // modern V8 bug\n  var calls = '';\n  var expected = INDICES_SUPPORT ? 'dgimsy' : 'gimsy';\n\n  var addGetter = function (key, chr) {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty(O, key, { get: function () {\n      calls += chr;\n      return true;\n    } });\n  };\n\n  var pairs = {\n    dotAll: 's',\n    global: 'g',\n    ignoreCase: 'i',\n    multiline: 'm',\n    sticky: 'y'\n  };\n\n  if (INDICES_SUPPORT) pairs.hasIndices = 'd';\n\n  for (var key in pairs) addGetter(key, pairs[key]);\n\n  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n  var result = Object.getOwnPropertyDescriptor(RegExpPrototype, 'flags').get.call(O);\n\n  return result !== expected || calls !== expected;\n});\n\n// `RegExp.prototype.flags` getter\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nif (FORCED) defineBuiltInAccessor(RegExpPrototype, 'flags', {\n  configurable: true,\n  get: regExpFlags\n});\n","import type { ByteData } from '../base/byte-data';\nimport type { VideoSequence } from '../base/video-sequence';\n\nconst CORRECTION_UTC = 2082873600; // 1904-01-01 与 1970-1-1 相差的秒数\nconst DEFAULT_VOLUME = 1;\n\nexport interface MP4Flags {\n  isLeading: number;\n  isDependedOn: number;\n  hasRedundancy: number;\n  degradPrio: number;\n  isNonSync: number;\n  dependsOn: number;\n  isKeyFrame: boolean;\n}\n\nexport interface MP4Sample {\n  index: number;\n  size: number;\n  duration: number;\n  cts: number;\n  flags: MP4Flags;\n}\n\nexport interface MP4Track {\n  id: number;\n  type: string;\n  len: number;\n  sps: ByteData[];\n  pps: ByteData[];\n  width: number;\n  height: number;\n  timescale: number;\n  duration: number;\n  samples: MP4Sample[];\n  pts: number[];\n  implicitOffset: number;\n}\n\nexport interface BoxParam {\n  offset: number;\n  timescale: number;\n  duration: number;\n  sequenceNumber: number;\n  nalusBytesLen: number;\n  baseMediaDecodeTime: number;\n  track: MP4Track;\n  videoSequence: VideoSequence;\n  tracks: MP4Track[];\n}\n\nconst getCharCode = (name: string) => {\n  const res = [];\n  for (let index = 0; index < name.length; index++) {\n    res.push(name.charCodeAt(index));\n  }\n  return res;\n};\n\nconst toHexadecimal = (num: number) => [num >> 24, (num >> 16) & 0xff, (num >> 8) & 0xff, num & 0xff];\n\nconst makeBox = (type: number[], ...payload: Uint8Array[]): Uint8Array => {\n  let size = 8;\n  let i = payload.length;\n  const len = i;\n  while (i) {\n    i -= 1;\n    size += payload[i].byteLength;\n  }\n  const result = new Uint8Array(size);\n  result[0] = (size >> 24) & 0xff;\n  result[1] = (size >> 16) & 0xff;\n  result[2] = (size >> 8) & 0xff;\n  result[3] = size & 0xff;\n  result.set(type, 4);\n  // copy the payload into the result\n  for (i = 0, size = 8; i < len; ++i) {\n    // copy payload[i] array @ offset size\n    result.set(payload[i], size);\n    size += payload[i].byteLength;\n  }\n  return result;\n};\n\nexport class MP4Generator {\n  private param: BoxParam;\n\n  public constructor(boxParam: BoxParam) {\n    this.param = boxParam;\n  }\n\n  public ftyp() {\n    return makeBox(\n      getCharCode('ftyp'),\n      new Uint8Array(getCharCode('isom')), // major_brand\n      new Uint8Array([0, 0, 0, 1]), // minor_version\n      new Uint8Array(getCharCode('isom')), // compatible_brands\n      new Uint8Array(getCharCode('iso2')),\n      new Uint8Array(getCharCode('avc1')),\n      new Uint8Array(getCharCode('mp41')),\n    );\n  }\n\n  public moov() {\n    const traks = this.param.tracks.map((track) => this.trak(track)).reverse();\n    return makeBox(getCharCode('moov'), this.mvhd(), ...traks, this.mvex());\n  }\n\n  public moof() {\n    return makeBox(getCharCode('moof'), this.mfhd(), this.traf());\n  }\n\n  public mdat() {\n    const buffer = new Uint8Array(this.param.track.len);\n    let offset = 0;\n    this.param.videoSequence.headers.forEach((header) => {\n      buffer.set(new Uint8Array(header.data.data()), offset);\n      offset += header.length;\n    });\n\n    this.param.videoSequence.frames.forEach((frame, index) => {\n      buffer.set(new Uint8Array(frame.fileBytes.data.data()), offset);\n      offset += frame.fileBytes.length;\n    });\n    return makeBox(getCharCode('mdat'), buffer);\n  }\n\n  private mvhd() {\n    return makeBox(\n      getCharCode('mvhd'),\n      new Uint8Array([\n        0x00, // version 0\n        0x00,\n        0x00,\n        0x00, // flags\n        ...toHexadecimal(CORRECTION_UTC), // creation_time\n        ...toHexadecimal(CORRECTION_UTC), // modification_time\n        ...toHexadecimal(this.param.timescale), // timescale\n        ...toHexadecimal(this.param.duration), // duration\n        0x00,\n        0x01,\n        0x00,\n        0x00, // 1.0 rate\n        0x01,\n        0x00, // 1.0 volume\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x01,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x01,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x40,\n        0x00,\n        0x00,\n        0x00, // transformation: unity matrix\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00, // pre_defined\n        0x00,\n        0x00,\n        0x00,\n        0x02, // next_track_ID\n      ]),\n    );\n  }\n\n  private trak(track: MP4Track) {\n    return makeBox(getCharCode('trak'), this.tkhd(track), this.edts(track), this.mdia(track));\n  }\n\n  private tkhd(track: MP4Track) {\n    return makeBox(\n      getCharCode('tkhd'),\n      new Uint8Array([\n        0x00, // version 0\n        0x00,\n        0x00,\n        0x01, // flags\n        ...toHexadecimal(CORRECTION_UTC), // creation_time\n        ...toHexadecimal(CORRECTION_UTC), // modification_time\n        ...toHexadecimal(track.id), // track_ID\n        0x00,\n        0x00,\n        0x00,\n        0x00, // reserved\n        ...toHexadecimal(track.duration), // duration\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x00, // layer\n        0x00,\n        0x00, // alternate_group\n        (DEFAULT_VOLUME >> 0) & 0xff,\n        (((DEFAULT_VOLUME % 1) * 10) >> 0) & 0xff, // track volume // FIXME\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x01,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x01,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x40,\n        0x00,\n        0x00,\n        0x00, // transformation: unity matrix\n        (track.width >> 8) & 0xff,\n        track.width & 0xff,\n        0x00,\n        0x00, // width\n        (track.height >> 8) & 0xff,\n        track.height & 0xff,\n        0x00,\n        0x00, // height\n      ]),\n    );\n  }\n\n  private edts(track: MP4Track) {\n    return makeBox(getCharCode('edts'), this.elst(track));\n  }\n\n  private elst(track: MP4Track) {\n    return makeBox(\n      getCharCode('elst'),\n      new Uint8Array([\n        0x00, // version\n        0x00,\n        0x00,\n        0x00, // flags\n        ...toHexadecimal(1), // entry_count\n        ...toHexadecimal(track.duration),\n        ...toHexadecimal(track.implicitOffset * Math.floor(track.duration / track.samples.length)),\n        0x00,\n        0x01, // media_rate_integer\n        0x00,\n        0x00, // media_rate_integer\n      ]),\n    );\n  }\n\n  private mdia(track: MP4Track) {\n    return makeBox(getCharCode('mdia'), this.mdhd(), this.hdlr(), this.minf(track));\n  }\n\n  private mdhd() {\n    return makeBox(\n      getCharCode('mdhd'),\n      new Uint8Array([\n        0x00, // version 0\n        0x00,\n        0x00,\n        0x00, // flags\n        ...toHexadecimal(CORRECTION_UTC), // creation_time\n        ...toHexadecimal(CORRECTION_UTC), // modification_time\n        ...toHexadecimal(this.param.timescale), // timescale\n        ...toHexadecimal(0), // duration\n        0x55,\n        0xc4, // 'und' language (undetermined)\n        0x00,\n        0x00,\n      ]),\n    );\n  }\n\n  private hdlr() {\n    return makeBox(\n      getCharCode('hdlr'),\n      new Uint8Array([\n        0x00, // version 0\n        0x00,\n        0x00,\n        0x00, // flags\n        0x00,\n        0x00,\n        0x00,\n        0x00, // pre_defined\n        0x76,\n        0x69,\n        0x64,\n        0x65, // handler_type: 'vide'\n        0x00,\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x00,\n        0x00,\n        0x00,\n        0x00, // reserved\n        0x56,\n        0x69,\n        0x64,\n        0x65,\n        0x6f,\n        0x48,\n        0x61,\n        0x6e,\n        0x64,\n        0x6c,\n        0x65,\n        0x72,\n        0x00, // name: 'VideoHandler'\n      ]),\n    );\n  }\n\n  private minf(track: MP4Track) {\n    return makeBox(getCharCode('minf'), this.vmhd(), this.dinf(), this.stbl(track));\n  }\n\n  private vmhd() {\n    return makeBox(\n      getCharCode('vmhd'),\n      new Uint8Array([\n        0x00, // version\n        0x00,\n        0x00,\n        0x01, // flags\n        0x00,\n        0x00, // graphicsmode\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00,\n        0x00, // opcolor\n      ]),\n    );\n  }\n\n  private dinf() {\n    return makeBox(getCharCode('dinf'), this.dref());\n  }\n\n  private dref() {\n    return makeBox(\n      getCharCode('dref'),\n      new Uint8Array([\n        0x00, // version 0\n        0x00,\n        0x00,\n        0x00, // flags\n        0x00,\n        0x00,\n        0x00,\n        0x01, // entry_count\n        0x00,\n        0x00,\n        0x00,\n        0x0c, // entry_size\n        0x75,\n        0x72,\n        0x6c,\n        0x20, // 'url' type\n        0x00, // version 0\n        0x00,\n        0x00,\n        0x01, // entry_flags\n      ]),\n    );\n  }\n\n  private stbl(track: MP4Track) {\n    return makeBox(\n      getCharCode('stbl'),\n      this.stsd(track),\n      this.stts(track),\n      this.ctts(track),\n      this.stss(track),\n      this.stsc(),\n      this.stsz(),\n      this.stco(),\n    );\n  }\n\n  private stsd(track: MP4Track) {\n    const data = [\n      0x00, // version 0\n      0x00,\n      0x00,\n      0x00, // flags\n      0x00,\n      0x00,\n      0x00,\n      0x01, // entry_count\n    ];\n    return makeBox(getCharCode('stsd'), new Uint8Array(data), this.avc1(track));\n  }\n\n  private avc1(track: MP4Track) {\n    const data = [\n      0x00,\n      0x00,\n      0x00, // reserved\n      0x00,\n      0x00,\n      0x00, // reserved\n      0x00,\n      0x01, // data_reference_index\n      0x00,\n      0x00, // pre_defined\n      0x00,\n      0x00, // reserved\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00, // pre_defined\n      (track.width >> 8) & 0xff,\n      track.width & 0xff, // width\n      (track.height >> 8) & 0xff,\n      track.height & 0xff, // height\n      0x00,\n      0x48,\n      0x00,\n      0x00, // horizresolution\n      0x00,\n      0x48,\n      0x00,\n      0x00, // vertresolution\n      0x00,\n      0x00,\n      0x00,\n      0x00, // reserved\n      0x00,\n      0x01, // frame_count\n      0x12,\n      0x62,\n      0x69,\n      0x6e,\n      0x65, // binelpro.ru\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00, // compressorname\n      0x00,\n      0x18, // depth = 24\n      0xff,\n      0xff,\n    ];\n    return makeBox(getCharCode('avc1'), new Uint8Array(data), this.avcc(track));\n  }\n\n  private avcc(track: MP4Track) {\n    let sps: number[] = [];\n    let pps: number[] = [];\n\n    track.sps.forEach((byteData) => {\n      const len = byteData.length - 4;\n      sps.push((len >>> 8) & 0xff);\n      sps.push(len & 0xff);\n      sps = sps.concat(Array.prototype.slice.call(new Uint8Array(byteData.data.data(), 4)));\n    });\n    track.pps.forEach((byteData) => {\n      const len = byteData.length - 4;\n      pps.push((len >>> 8) & 0xff);\n      pps.push(len & 0xff);\n      pps = pps.concat(Array.prototype.slice.call(new Uint8Array(byteData.data.data(), 4)));\n    });\n\n    const data = [\n      0x01, // version\n      sps[3], // profile\n      sps[4], // profile compat\n      sps[5], // level\n      0xfc | 3, // lengthSizeMinusOne, hard-coded to 4 bytes\n      0xe0 | track.sps.length, // 3bit reserved (111) + numOfSequenceParameterSets\n    ]\n      .concat(sps)\n      .concat([track.pps.length]) // numOfPictureParameterSets\n      .concat(pps);\n\n    return makeBox(getCharCode('avcC'), new Uint8Array(data));\n  }\n\n  private stts(track: MP4Track) {\n    return makeBox(\n      getCharCode('stts'),\n      new Uint8Array([\n        0x00, // version\n        0x00,\n        0x00,\n        0x00, // flags\n        ...toHexadecimal(1), // entry_count\n        ...toHexadecimal(track.samples.length), // sample_count\n        ...toHexadecimal(Math.floor(track.duration / track.samples.length)), // sample_offset\n      ]),\n    );\n  }\n\n  private ctts(track: MP4Track) {\n    const sampleCount = track.pts.length;\n    const sampleDelta = Math.floor(track.duration / sampleCount);\n    const data = [\n      0x00, // version\n      0x00,\n      0x00,\n      0x00, // flags\n      ...toHexadecimal(sampleCount), // entry_count\n    ];\n    for (let i = 0; i < sampleCount; i++) {\n      data.push(...toHexadecimal(1)); // sample_count\n      const dts = i * sampleDelta;\n      const pts = (track.pts[i] + track.implicitOffset) * sampleDelta;\n      data.push(...toHexadecimal(pts - dts)); // sample_offset\n    }\n    return makeBox(getCharCode('ctts'), new Uint8Array(data));\n  }\n\n  private stss(track: MP4Track) {\n    const iFrames = track.samples.filter((sample) => sample.flags.isKeyFrame).map((sample) => sample.index + 1);\n    const data = [\n      0x00, // version\n      0x00,\n      0x00,\n      0x00, // flags\n      ...toHexadecimal(iFrames.length),\n    ];\n    iFrames.forEach((iFrame) => {\n      data.push(...toHexadecimal(iFrame));\n    });\n    return makeBox(getCharCode('stss'), new Uint8Array(data));\n  }\n\n  private stsc() {\n    return makeBox(\n      getCharCode('stsc'),\n      new Uint8Array([\n        0x00, // version\n        0x00,\n        0x00,\n        0x00, // flags\n        0x00,\n        0x00,\n        0x00,\n        0x00, // entry_count\n      ]),\n    );\n  }\n\n  private stsz() {\n    return makeBox(\n      getCharCode('stsz'),\n      new Uint8Array([\n        0x00, // version\n        0x00,\n        0x00,\n        0x00, // flags\n        0x00,\n        0x00,\n        0x00,\n        0x00, // sample_size\n        0x00,\n        0x00,\n        0x00,\n        0x00, // sample_count\n      ]),\n    );\n  }\n\n  private stco() {\n    return makeBox(\n      getCharCode('stco'),\n      new Uint8Array([\n        0x00, // version\n        0x00,\n        0x00,\n        0x00, // flags\n        0x00,\n        0x00,\n        0x00,\n        0x00, // entry_count\n      ]),\n    );\n  }\n\n  private mvex() {\n    const trexs = this.param.tracks.map((track) => this.trex(track)).reverse();\n    return makeBox(getCharCode('mvex'), ...trexs);\n  }\n\n  private trex(track: MP4Track) {\n    return makeBox(\n      getCharCode('trex'),\n      new Uint8Array([\n        0x00, // version 0\n        0x00,\n        0x00,\n        0x00, // flags\n        track.id >> 24,\n        (track.id >> 16) & 0xff,\n        (track.id >> 8) & 0xff,\n        track.id & 0xff, // track_ID\n        0x00,\n        0x00,\n        0x00,\n        0x01, // default_sample_description_index\n        0x00,\n        0x00,\n        0x00,\n        0x00, // default_sample_duration\n        0x00,\n        0x00,\n        0x00,\n        0x00, // default_sample_size\n        0x00,\n        0x01,\n        0x00,\n        0x01, // default_sample_flags\n      ]),\n    );\n  }\n\n  private mfhd() {\n    return makeBox(\n      getCharCode('mfhd'),\n      new Uint8Array([\n        0x00,\n        0x00,\n        0x00,\n        0x00, // flags\n        this.param.sequenceNumber >> 24,\n        (this.param.sequenceNumber >> 16) & 0xff,\n        (this.param.sequenceNumber >> 8) & 0xff,\n        this.param.sequenceNumber & 0xff, // sequence_number\n      ]),\n    );\n  }\n\n  private traf() {\n    const sdtp = this.sdtp();\n    this.param.offset = sdtp.length + 72; // tfhd + tfdt + traf header + mfhd + moof header + mdat header\n    return makeBox(getCharCode('traf'), this.tfhd(), this.tfdt(), this.trun(), sdtp);\n  }\n\n  private tfhd() {\n    return makeBox(\n      getCharCode('tfhd'),\n      new Uint8Array([\n        0x00, // version 0\n        0x00,\n        0x00,\n        0x00, // flags\n        ...toHexadecimal(this.param.track.id), // track_ID\n      ]),\n    );\n  }\n\n  private tfdt() {\n    return makeBox(\n      getCharCode('tfdt'),\n      new Uint8Array([\n        0x00, // version 0\n        0x00,\n        0x00,\n        0x00, // flags\n        ...toHexadecimal(this.param.baseMediaDecodeTime), // baseMediaDecodeTime\n      ]),\n    );\n  }\n\n  private trun() {\n    const samples = this.param.track.samples || [];\n    const len = samples.length;\n    const arraylen = 12 + 16 * len;\n    this.param.offset += 8 + arraylen;\n    const data = [\n      0x00, // version 0\n      0x00,\n      0x0f,\n      0x01, // flags\n      ...toHexadecimal(len), // sample_count\n      ...toHexadecimal(this.param.offset), // data_offset\n    ];\n    this.param.track.samples.forEach((sample) => {\n      const paddingValue = 0;\n      const { duration, size, flags, cts } = sample;\n      data.push(...toHexadecimal(duration)); // sample_duration\n      data.push(...toHexadecimal(size)); // sample_size\n      data.push((flags.isLeading << 2) | flags.dependsOn);\n      data.push((flags.isDependedOn << 6) | (flags.hasRedundancy << 4) | (paddingValue << 1) | flags.isNonSync);\n      data.push(flags.degradPrio & (0xf0 << 8));\n      data.push(flags.degradPrio & 0x0f); // sample_flags\n      data.push(...toHexadecimal(cts)); // sample_composition_time_offset\n    });\n    return makeBox(getCharCode('trun'), new Uint8Array(data));\n  }\n\n  private sdtp() {\n    const buffer = new Uint8Array(4 + this.param.track.samples.length);\n    this.param.track.samples.forEach((sample, index) => {\n      buffer[index + 4] = (sample.flags.dependsOn << 4) | (sample.flags.isDependedOn << 2) | sample.flags.hasRedundancy;\n    });\n    return makeBox(getCharCode('sdtp'), buffer);\n  }\n}\n","import { VideoFrame } from '../base/video-frame';\nimport { VideoSequence } from '../base/video-sequence';\nimport { concatUint8Arrays } from '../codec/utils/byte-utils';\nimport { IS_IOS } from '../constant';\nimport { BoxParam, MP4Generator, MP4Track } from './mp4-generator';\n\nconst SEQUENCE_NUMBER = 1;\nconst BASE_MEDIA_DECODE_TIME = 0;\nconst BASE_MEDIA_TIME_SCALE = 6000;\n\nexport const coverToMp4 = (videoSequence: VideoSequence) => {\n  const sequence = IS_IOS ? getVirtualSequence(videoSequence) : videoSequence;\n  const mp4Track = makeMp4Track(sequence);\n  if (!mp4Track || mp4Track.len === 0) throw new Error('mp4Track is empty');\n  const boxParam: BoxParam = {\n    offset: 0,\n    tracks: [mp4Track],\n    track: mp4Track,\n    duration: mp4Track.duration,\n    timescale: mp4Track.timescale,\n    sequenceNumber: SEQUENCE_NUMBER,\n    baseMediaDecodeTime: BASE_MEDIA_DECODE_TIME,\n    nalusBytesLen: mp4Track.len,\n    videoSequence: sequence,\n  };\n  const mp4Generator = new MP4Generator(boxParam);\n  const ftyp = mp4Generator.ftyp();\n  const moov = mp4Generator.moov();\n  const moof = mp4Generator.moof();\n  const mdat = mp4Generator.mdat();\n\n  return concatUint8Arrays([ftyp, moov, moof, mdat]);\n};\n\nconst makeMp4Track = (videoSequence: VideoSequence) => {\n  if (videoSequence.headers.length < 2) throw new Error('Bad header data in video sequence!');\n  if (videoSequence.frames.length === 0) throw new Error('There is no frame data in the video sequence!');\n  const mp4Track: MP4Track = {\n    id: 1,\n    type: 'video',\n    timescale: BASE_MEDIA_TIME_SCALE,\n    duration: Math.floor((videoSequence.frames.length * BASE_MEDIA_TIME_SCALE) / videoSequence.frameRate),\n    width: videoSequence.getVideoWidth(),\n    height: videoSequence.getVideoHeight(),\n    sps: [videoSequence.headers[0]],\n    pps: [videoSequence.headers[1]],\n    implicitOffset: getImplicitOffset(videoSequence.frames),\n    len: 0,\n    pts: [],\n    samples: [],\n  };\n\n  const headerLen = videoSequence.headers.reduce((pre, cur) => pre + cur.length, 0);\n  const sampleDelta = mp4Track.duration / videoSequence.frames.length;\n  videoSequence.frames.forEach((frame, index) => {\n    let sampleSize = frame.fileBytes.length ?? 0;\n    if (index === 0) {\n      sampleSize += headerLen;\n    }\n    mp4Track.len += sampleSize;\n    mp4Track.pts.push(frame.frame);\n    mp4Track.samples.push({\n      index,\n      size: sampleSize,\n      duration: sampleDelta,\n      cts: (frame.frame + mp4Track.implicitOffset - index) * sampleDelta,\n      flags: {\n        isKeyFrame: frame.isKeyframe,\n        isNonSync: frame.isKeyframe ? 0 : 1,\n        dependsOn: frame.isKeyframe ? 2 : 1,\n        isLeading: 0,\n        isDependedOn: 0,\n        hasRedundancy: 0,\n        degradPrio: 0,\n      },\n    });\n  });\n  return mp4Track;\n};\n\nconst getImplicitOffset = (videoFrames: VideoFrame[]) => {\n  return Math.max(...videoFrames.map((videoFrame, index) => index - videoFrame.frame));\n};\n\nconst getVirtualSequence = (videoSequence: VideoSequence): VideoSequence => {\n  const len = videoSequence.frames.length;\n  for (let index = 0; index < videoSequence.frames.length; index++) {\n    const frame = { ...videoSequence.frames[index] };\n    if (frame.isKeyframe && index > 0) {\n      break;\n    }\n    frame.frame += len;\n    videoSequence.frames.push(frame);\n  }\n  return videoSequence;\n};\n","type K = keyof HTMLVideoElementEventMap;\n\nlet eventHandlers: {\n  [key in K]?: {\n    node: HTMLVideoElement;\n    handler: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => void;\n    capture: boolean;\n  }[];\n} = {};\n\nexport const addListener = (\n  node: HTMLVideoElement,\n  event: K,\n  handler: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => void,\n  capture = false,\n) => {\n  if (!(event in eventHandlers)) {\n    eventHandlers[event] = [];\n  }\n  eventHandlers[event]?.push({ node: node, handler: handler, capture: capture });\n  node.addEventListener(event, handler, capture);\n};\n\nexport const removeListener = (\n  targetNode: HTMLElement,\n  event: K,\n  targetHandler?: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => void,\n) => {\n  if (!(event in eventHandlers)) return;\n  if (targetHandler) {\n    eventHandlers[event]\n      ?.filter(({ node, handler }) => node === targetNode && handler === targetHandler)\n      .forEach(({ node, handler, capture }) => node.removeEventListener(event, handler, capture));\n    eventHandlers[event] = eventHandlers[event]?.filter(\n      ({ node, handler }) => !(node === targetNode && handler === targetHandler),\n    );\n  } else {\n    eventHandlers[event]\n      ?.filter(({ node }) => node === targetNode)\n      .forEach(({ node, handler, capture }) => node.removeEventListener(event, handler, capture));\n    eventHandlers[event] = eventHandlers[event]?.filter(({ node }) => node !== targetNode);\n  }\n};\n\nexport const removeAllListeners = (targetNode: HTMLElement) => {\n  Object.keys(eventHandlers).forEach((event) => {\n    const videoEvent = event as K;\n    eventHandlers[videoEvent]\n      ?.filter(({ node }) => node === targetNode)\n      .forEach(({ node, handler, capture }) => node.removeEventListener(videoEvent, handler, capture));\n\n    eventHandlers[videoEvent] = eventHandlers[videoEvent]?.filter(({ node }) => node !== targetNode);\n  });\n};\n","import { Clock } from '../base/utils/clock';\nimport { destroyVerify } from '../decorators';\nimport { coverToMp4 } from '../generator/mp4-box-helper';\nimport { getWechatNetwork } from './utils';\nimport { addListener, removeAllListeners, removeListener } from './video-listener';\n\nimport type { VideoSequence } from '../base/video-sequence';\n\ndeclare global {\n  interface Window {\n    WeixinJSBridge?: any;\n  }\n}\n\ntype K = keyof HTMLVideoElementEventMap;\n\nconst IS_WECHAT = navigator && /MicroMessenger/i.test(navigator.userAgent);\n\nconst playVideoElement = async (videoElement: HTMLVideoElement) => {\n  if (IS_WECHAT && window.WeixinJSBridge) {\n    await getWechatNetwork();\n  }\n  try {\n    await videoElement.play();\n  } catch (error: any) {\n    throw new Error(error.message);\n  }\n};\n\n@destroyVerify\nexport class VideoReader {\n  public static create(videoSequence: VideoSequence) {\n    const videoReader = new VideoReader(videoSequence);\n    const debugData = videoReader.load(videoSequence);\n    return { videoReader: videoReader, debugData: debugData };\n  }\n\n  protected destroyed = false;\n  protected frameRate = 0;\n\n  private _duration: number;\n  private videoElement: HTMLVideoElement | undefined;\n\n  public constructor(videoSequence: VideoSequence) {\n    this._duration = videoSequence.frameCount / videoSequence.frameRate;\n    this.frameRate = videoSequence.frameRate;\n  }\n\n  public getVideoElement(): HTMLVideoElement {\n    return this.videoElement as HTMLVideoElement;\n  }\n\n  public progress() {\n    return Math.round((this.videoElement!.currentTime / this._duration) * 100) / 100;\n  }\n\n  public duration() {\n    return this._duration;\n  }\n\n  public currentTime() {\n    return this.videoElement!.currentTime || 0;\n  }\n\n  public start() {\n    return playVideoElement(this.videoElement as HTMLVideoElement);\n  }\n\n  public pause() {\n    this.videoElement?.pause();\n  }\n\n  public seek(time: number) {\n    return new Promise<void>((resolve) => {\n      const seekCallback = () => {\n        removeListener(this.videoElement as HTMLVideoElement, 'seeked', seekCallback);\n        resolve();\n      };\n      addListener(this.videoElement as HTMLVideoElement, 'seeked', seekCallback);\n      this.videoElement!.currentTime = time;\n    });\n  }\n\n  public addListener(event: K, handler: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => void) {\n    addListener(this.videoElement as HTMLVideoElement, event, handler);\n  }\n\n  public removeAllListeners() {\n    removeAllListeners(this.videoElement as HTMLVideoElement);\n  }\n\n  public getFrameData(callback: any): any {\n    // NOP\n  }\n\n  public clearCallback() {\n    // NOP\n  }\n\n  public destroy() {\n    this.removeAllListeners();\n    this.videoElement = undefined;\n    this.destroyed = true;\n  }\n\n  protected load(videoSequence: VideoSequence): any {\n    this.videoElement = document.createElement('video');\n    this.videoElement.style.display = 'none';\n    this.videoElement.muted = true;\n    this.videoElement.playsInline = true;\n    const clock = new Clock();\n    const mp4Data = coverToMp4(videoSequence);\n    clock.mark('coverMP4');\n    this.videoElement.src = URL.createObjectURL(new Blob([mp4Data], { type: 'video/mp4' }));\n    this.videoElement.load();\n    return {\n      coverMP4: clock.measure('', 'coverMP4'),\n    };\n  }\n}\n","import { Context, RenderOptions } from './context';\nimport { getWechatNetwork } from './utils';\nimport { EventName } from '../types';\nimport { IS_IOS } from '../constant';\nimport { destroyVerify } from '../decorators';\n\nimport type { PAGFile } from '../pag-file';\nimport { VideoReader } from './video-reader';\nimport { VideoSequence } from '../base/video-sequence';\nimport { Clock } from '../base/utils/clock';\n\ndeclare global {\n  interface Window {\n    WeixinJSBridge?: any;\n  }\n}\n\nconst IS_WECHAT = navigator && /MicroMessenger/i.test(navigator.userAgent);\n\nexport const playVideoElement = async (videoElement: HTMLVideoElement) => {\n  if (IS_WECHAT && window.WeixinJSBridge) {\n    await getWechatNetwork();\n  }\n  try {\n    await videoElement.play();\n  } catch (error: any) {\n    throw new Error(error.message);\n  }\n};\n\n@destroyVerify\nexport class View extends Context {\n  protected videoReader: VideoReader;\n  protected fpsBuffer: number[] = [];\n  protected currentFrame = -1;\n  protected needSeek = false;\n\n  public constructor(pagFile: PAGFile, canvas: HTMLCanvasElement, options: RenderOptions) {\n    super(pagFile, canvas, options);\n    this.videoReader = this.createVideoReader(this.videoSequence);\n  }\n\n  /**\n   * 开始播放\n   */\n  public async play() {\n    if (this.playing) return;\n    this.playing = true;\n    await this.videoReader.start();\n    await this.flushLoop();\n    if (this.getProgress() === 0) {\n      this.eventManager.emit(EventName.onAnimationStart);\n    }\n    this.eventManager.emit(EventName.onAnimationPlay);\n  }\n  /**\n   * 暂停播放\n   */\n  public pause() {\n    if (!this.playing) return;\n    this.videoReader.pause();\n    this.clearTimer();\n    this.playing = false;\n    this.eventManager.emit(EventName.onAnimationPause);\n  }\n  /**\n   * 停止播放\n   */\n  public stop() {\n    this.videoReader.pause();\n    this.videoReader.seek(0);\n    this.clearRender();\n    this.playing = false;\n    this.eventManager.emit(EventName.onAnimationCancel);\n  }\n  /**\n   * 销毁播放实例\n   */\n  public destroy() {\n    this.clearTimer();\n    this.clearRender();\n    this.canvas = null;\n    this.videoReader.destroy();\n    this.destroyed = true;\n  }\n  /**\n   * 返回当前播放进度位置，取值范围为 0.0 到 1.0。\n   */\n  public getProgress() {\n    return this.currentFrame / this.videoSequence.frameCount;\n  }\n  /**\n   * 设置播放进度位置，取值范围为 0.0 到 1.0。\n   */\n  public setProgress(progress: number) {\n    if (progress < 0 || progress > 1) throw new Error('progress must be between 0.0 and 1.0!');\n    const currentFrame = Math.round(progress * this.videoSequence.frameCount);\n    if (this.currentFrame !== currentFrame) {\n      this.needSeek = true;\n      this.currentFrame = currentFrame;\n    }\n  }\n  /**\n   * 渲染当前进度画面\n   */\n  public flush() {\n    return this.flushInternal(true);\n  }\n\n  protected draw() {}\n\n  protected createVideoReader(videoSequence: VideoSequence) {\n    const { videoReader, debugData } = VideoReader.create(videoSequence);\n    this.setDebugData(debugData);\n    if (!IS_IOS) {\n      videoReader.addListener('ended', () => {\n        this.repeat();\n      });\n    }\n    return videoReader;\n  }\n\n  protected async repeat() {\n    // 循环结束\n    if (this.repeatCount === 0) {\n      this.setProgress(1);\n      await this.flushInternal(true);\n      this.videoReader.pause();\n      this.clearTimer();\n      this.playing = false;\n      this.eventManager.emit('onAnimationEnd');\n      return false;\n    }\n    // 次数循环\n    this.repeatCount -= 1;\n    if (IS_IOS) {\n      await this.videoReader.seek(0);\n    } else {\n      this.videoReader.start();\n    }\n    this.eventManager.emit('onAnimationRepeat');\n    return true;\n  }\n\n  protected flushLoop() {\n    this.renderTimer = window.requestAnimationFrame(() => {\n      this.flushLoop();\n    });\n    if (IS_IOS && this.duration() - this.videoReader.currentTime() <= 1 / this.frameRate()) {\n      this.repeat();\n    }\n    return this.flushInternal(false);\n  }\n\n  protected clearTimer() {\n    if (this.renderTimer) {\n      window.cancelAnimationFrame(this.renderTimer);\n      this.renderTimer = null;\n    }\n  }\n\n  protected updateFPS() {\n    let now: number;\n    try {\n      now = performance.now();\n    } catch (e) {\n      now = Date.now();\n    }\n    this.fpsBuffer = this.fpsBuffer.filter((value) => now - value <= 1000);\n    this.fpsBuffer.push(now);\n    this.setDebugData({ FPS: this.fpsBuffer.length });\n  }\n\n  protected async flushInternal(sync: boolean) {\n    const clock = new Clock();\n    if (this.needSeek) {\n      if (sync) {\n        await this.videoReader.seek(this.currentFrame / this.frameRate());\n      } else {\n        this.videoReader.seek(this.currentFrame / this.frameRate());\n      }\n      this.needSeek = false;\n    } else {\n      this.currentFrame = Math.floor(this.videoReader.currentTime() * this.frameRate());\n    }\n    this.draw();\n    clock.mark('draw');\n    this.setDebugData({ draw: clock.measure('', 'draw') });\n    this.updateFPS();\n    this.eventManager.emit(EventName.onAnimationUpdate);\n  }\n}\n","import { destroyVerify } from '../decorators';\nimport { PAGFile } from '../pag-file';\nimport { RenderOptions } from './context';\nimport { View } from './view';\n\n@destroyVerify\nexport class PAG2dView extends View {\n  private context: CanvasRenderingContext2D;\n  private renderCanvas2D: HTMLCanvasElement;\n  private renderCanvas2DContext: CanvasRenderingContext2D;\n\n  public constructor(pagFile: PAGFile, canvas: HTMLCanvasElement, options: RenderOptions) {\n    super(pagFile, canvas, options);\n    const context = this.canvas?.getContext('2d');\n    if (!context) throw new Error(\"Can't get 2d context!\");\n    this.context = context;\n    this.renderCanvas2D = document.createElement('canvas');\n    this.renderCanvas2D.width = this.videoParam.MP4Width;\n    this.renderCanvas2D.height = this.videoParam.MP4Height;\n    const renderCanvas2DContext = this.renderCanvas2D.getContext('2d');\n    if (!renderCanvas2DContext) throw new Error(\"Can't get 2d context!\");\n    this.renderCanvas2DContext = renderCanvas2DContext;\n  }\n\n  protected override draw() {\n    if (this.videoParam.hasAlpha) {\n      this.renderCanvas2DContext.clearRect(0, 0, this.renderCanvas2D.width, this.renderCanvas2D.height);\n      this.renderCanvas2DContext.drawImage(\n        this.videoReader.getVideoElement(),\n        0,\n        0,\n        this.renderCanvas2D.width,\n        this.renderCanvas2D.height,\n      );\n      const frameOne = this.renderCanvas2DContext.getImageData(\n        0,\n        0,\n        this.videoParam.sequenceWidth,\n        this.videoParam.sequenceHeight,\n      );\n      const frameTwo = this.renderCanvas2DContext.getImageData(\n        this.videoParam.alphaStartX,\n        this.videoParam.alphaStartY,\n        this.videoParam.sequenceWidth,\n        this.videoParam.sequenceHeight,\n      );\n      const length = frameOne.data.length / 4;\n      for (let i = 0; i < length; i++) {\n        frameOne.data[i * 4 + 3] = frameTwo.data[i * 4 + 0];\n      }\n      this.renderCanvas2DContext.clearRect(0, 0, this.renderCanvas2D.width, this.renderCanvas2D.height);\n      this.renderCanvas2DContext.putImageData(\n        frameOne,\n        0,\n        0,\n        0,\n        0,\n        this.videoParam.sequenceWidth,\n        this.videoParam.sequenceHeight,\n      );\n      this.context.clearRect(0, 0, this.canvas!.width, this.canvas!.height);\n      this.context.drawImage(\n        this.renderCanvas2D,\n        0,\n        0,\n        this.videoParam.sequenceWidth,\n        this.videoParam.sequenceHeight,\n        this.viewportSize.x,\n        this.viewportSize.y,\n        this.viewportSize.width,\n        this.viewportSize.height,\n      );\n    } else {\n      this.context.drawImage(\n        this.videoReader.getVideoElement(),\n        0,\n        0,\n        this.videoParam.MP4Width,\n        this.videoParam.MP4Height,\n        this.viewportSize.x,\n        this.viewportSize.y,\n        this.viewportSize.width,\n        this.viewportSize.height,\n      );\n    }\n  }\n\n  protected override clearRender() {\n    this.context.clearRect(0, 0, this.canvas!.width, this.canvas!.height);\n  }\n}\n","export const VERTEX_2D_SHADER = `\n      attribute vec2 a_position;\n      attribute vec2 a_texCoord;\n      \n      uniform vec2 u_resolution;\n      uniform vec2 u_scale;\n      \n      varying vec2 v_texCoord;\n    \n      \n      void main() {\n         // convert the rectangle from pixels to 0.0 to 1.0\n         vec2 zeroToOne = a_position / u_resolution;\n      \n         // convert from 0->1 to 0->2\n         vec2 zeroToTwo = zeroToOne * 2.0;\n      \n         // convert from 0->2 to -1->+1 (clipspace)\n         vec2 clipSpace = zeroToTwo - 1.0;\n      \n         gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\n      \n         // pass the texCoord to the fragment shader\n         // The GPU will interpolate this value between points.\n         v_texCoord = a_texCoord / u_scale;\n      }\n        `;\n\nexport const FRAGMENT_2D_SHADER = `\n      precision mediump float;\n      // our texture\n      uniform sampler2D u_image;\n      \n      // the texCoords passed in from the vertex shader.\n      varying vec2 v_texCoord;\n      \n      void main() {\n         gl_FragColor = texture2D(u_image, v_texCoord);\n      }\n         `;\nexport const FRAGMENT_2D_SHADER_TRANSPARENT = `\n      precision mediump float;\n      // our texture\n      uniform sampler2D u_image;\n      \n      // the texCoords passed in from the vertex shader.\n      varying vec2 v_texCoord;\n      uniform vec2 v_alphaStart;\n      \n      void main() {\n         vec4 color = texture2D(u_image, v_texCoord);\n         vec4 alpha = texture2D(u_image, vec2(v_texCoord.x + v_alphaStart.x, v_texCoord.y + v_alphaStart.y));\n         gl_FragColor = vec4(color.rgb * alpha.r, alpha.r);\n      }     \n         `;\n","import { WEBGL_CONTEXT_ATTRIBUTES } from '../constant';\nimport { destroyVerify } from '../decorators';\nimport { PAGFile } from '../pag-file';\nimport { RenderOptions } from './context';\nimport { FRAGMENT_2D_SHADER, FRAGMENT_2D_SHADER_TRANSPARENT, VERTEX_2D_SHADER } from './shader';\nimport { createAndSetupTexture, createProgram, detectWebGLContext, getShaderSourceFromString } from './utils';\nimport { View } from './view';\n\n@destroyVerify\nexport class PAGWebGLView extends View {\n  protected gl: WebGLRenderingContext;\n  protected scale: { x: number; y: number } = { x: 1, y: 1 };\n\n  private program: WebGLProgram;\n  private positionLocation = 0;\n  private texcoordLocation = 0;\n  private alphaStartLocation: WebGLUniformLocation | null = null;\n  private scaleLocation: WebGLUniformLocation | null = null;\n  private resolutionLocation: WebGLUniformLocation | null = null;\n  private positionBuffer: WebGLBuffer | null = null;\n  private texcoordBuffer: WebGLBuffer | null = null;\n  private originalVideoTexture: WebGLTexture | null = null;\n  private renderingTexture: WebGLTexture | null = null;\n  private renderingFbo: WebGLFramebuffer | null = null;\n\n  public constructor(pagFile: PAGFile, canvas: HTMLCanvasElement, options: RenderOptions) {\n    super(pagFile, canvas, options);\n    const gl = this.canvas?.getContext('webgl', {\n      ...WEBGL_CONTEXT_ATTRIBUTES,\n    });\n    if (!gl) throw new Error(\"Can't get WebGL context!\");\n    this.gl = gl;\n    if (this.videoParam.hasAlpha) {\n      this.program = createProgram(\n        this.gl,\n        getShaderSourceFromString(VERTEX_2D_SHADER),\n        getShaderSourceFromString(FRAGMENT_2D_SHADER_TRANSPARENT),\n      );\n    } else {\n      this.program = createProgram(\n        this.gl,\n        getShaderSourceFromString(VERTEX_2D_SHADER),\n        getShaderSourceFromString(FRAGMENT_2D_SHADER),\n      );\n    }\n    this.loadContext();\n  }\n\n  protected override loadContext() {\n    // look up where the vertex data needs to go.\n    if (!this.program) throw new Error('program is not initialized');\n    this.positionLocation = this.gl.getAttribLocation(this.program, 'a_position');\n    if (this.positionLocation === -1) throw new Error('unable to get attribute location for a_position');\n    this.scaleLocation = this.gl.getUniformLocation(this.program, 'u_scale');\n    if (this.scaleLocation === -1) throw new Error('unable to get attribute location for u_scale');\n    this.texcoordLocation = this.gl.getAttribLocation(this.program, 'a_texCoord');\n    if (this.texcoordLocation === -1) throw new Error('unable to get attribute location for a_texCoord');\n    if (this.videoParam.hasAlpha) {\n      this.alphaStartLocation = this.gl.getUniformLocation(this.program, 'v_alphaStart');\n      if (!this.alphaStartLocation) throw new Error('unable to get attribute location for v_alphaStart');\n    }\n    this.resolutionLocation = this.gl.getUniformLocation(this.program, 'u_resolution');\n    if (this.positionLocation === -1) throw new Error('unable to get attribute location for u_resolution');\n\n    // Create a buffer to put three 2d clip space points in\n    this.positionBuffer = this.gl.createBuffer();\n\n    // Bind it to ARRAY_BUFFER (think of it as ARRAY_BUFFER = positionBuffer)\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.positionBuffer);\n    // Set a rectangle the same size as the image.\n    this.setRectangle(this.gl, 0, 0, this.videoParam.MP4Width, this.videoParam.MP4Height);\n\n    // provide texture coordinates for the rectangle.\n    this.texcoordBuffer = this.gl.createBuffer();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.texcoordBuffer);\n    this.gl.bufferData(\n      this.gl.ARRAY_BUFFER,\n      new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]),\n      this.gl.STATIC_DRAW,\n    );\n\n    // Create texture and attach them to framebuffer.\n    this.renderingTexture = createAndSetupTexture(this.gl);\n    // make the texture the same size as the sequence.\n    this.gl.texImage2D(\n      this.gl.TEXTURE_2D,\n      0,\n      this.gl.RGBA,\n      this.videoParam.sequenceWidth,\n      this.videoParam.sequenceHeight,\n      0,\n      this.gl.RGBA,\n      this.gl.UNSIGNED_BYTE,\n      null,\n    );\n    // Create a framebuffer\n    this.renderingFbo = this.gl.createFramebuffer();\n    if (!this.renderingFbo) throw new Error('unable to create framebuffer');\n    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.renderingFbo);\n    // Attach a texture to it.\n    this.gl.framebufferTexture2D(\n      this.gl.FRAMEBUFFER,\n      this.gl.COLOR_ATTACHMENT0,\n      this.gl.TEXTURE_2D,\n      this.renderingTexture,\n      0,\n    );\n\n    // Create a texture and put the video in it.\n    this.originalVideoTexture = createAndSetupTexture(this.gl);\n  }\n\n  protected override draw() {\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.originalVideoTexture);\n    // Upload the video into the texture.\n    this.texImage2D();\n    // Clear the canvas\n    this.gl.clearColor(0, 0, 0, 0);\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n\n    // Tell it to use our program (pair of shaders)\n    this.gl.useProgram(this.program);\n\n    // Turn on the position attribute\n    this.gl.enableVertexAttribArray(this.positionLocation);\n\n    // Bind the position buffer\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.positionBuffer);\n\n    // Tell the position attribute how to get data out of positionBuffer (ARRAY_BUFFER)\n    const size = 2; // 2 components per iteration\n    const type: number = this.gl.FLOAT; // the data is 32bit floats\n    const normalize = false; // don't normalize the data\n    const stride = 0; // 0 = move forward size * sizeof(type) each iteration to get the next position\n    const offset = 0; // start at the beginning of the buffer\n    this.gl.vertexAttribPointer(this.positionLocation, size, type, normalize, stride, offset);\n\n    // Turn on the teccord attribute\n    this.gl.enableVertexAttribArray(this.texcoordLocation);\n\n    // Bind the position buffer.\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.texcoordBuffer);\n\n    this.gl.vertexAttribPointer(this.texcoordLocation, size, type, normalize, stride, offset);\n\n    if (this.videoParam.hasAlpha) {\n      this.gl.uniform2f(\n        this.alphaStartLocation,\n        this.videoParam.alphaStartX / this.videoParam.MP4Width / this.scale.x,\n        this.videoParam.alphaStartY / this.videoParam.MP4Height / this.scale.y,\n      );\n    }\n\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.originalVideoTexture);\n    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.renderingFbo);\n    this.gl.uniform2f(this.resolutionLocation, this.videoParam.sequenceWidth, this.videoParam.sequenceHeight);\n    this.gl.uniform2f(this.scaleLocation, this.scale.x, this.scale.y);\n    console.log('aaa this.videoParam.sequenceWidth: '+ JSON.stringify(this.videoParam.sequenceWidth));\n    console.log('aaa this.videoParam.sequenceHeight: '+ JSON.stringify(this.videoParam.sequenceHeight));\n    this.gl.viewport(0, 0, this.videoParam.sequenceWidth, this.videoParam.sequenceHeight);\n    const primitiveType: number = this.gl.TRIANGLES;\n    const count = 6;\n    this.gl.drawArrays(primitiveType, offset, count);\n    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\n    this.gl.uniform2f(this.resolutionLocation, this.videoParam.sequenceWidth, this.videoParam.sequenceHeight);\n    console.log('aaa this.viewportSize.width: '+ JSON.stringify(this.viewportSize.width));\n    console.log('aaa this.viewportSize.height: '+ JSON.stringify(this.viewportSize.height));\n    this.gl.viewport(this.viewportSize.x, this.viewportSize.y, this.viewportSize.width, this.viewportSize.height);\n    // const dpr = window.devicePixelRatio || 1;\n    // debugger\n    // this.gl.viewport(\n    //   this.viewportSize.x * dpr,\n    //   this.viewportSize.y * dpr,\n    //   this.viewportSize.width * dpr,\n    //   this.viewportSize.height * dpr,\n    // );\n    this.gl.drawArrays(primitiveType, offset, count);\n  }\n\n  protected override clearRender() {\n    this.gl.clearColor(0, 0, 0, 0);\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n  }\n\n  protected detectWebGLContext() {\n    return detectWebGLContext();\n  }\n\n  protected texImage2D() {\n    this.gl.texImage2D(\n      this.gl.TEXTURE_2D,\n      0,\n      this.gl.RGBA,\n      this.gl.RGBA,\n      this.gl.UNSIGNED_BYTE,\n      this.videoReader.getVideoElement(),\n    );\n  }\n\n  private setRectangle(gl: WebGLRenderingContext, x: number, y: number, width: number, height: number) {\n    const x1: number = x;\n    const x2: number = x + width;\n    const y1: number = y;\n    const y2: number = y + height;\n    // const dpr = window.devicePixelRatio || 1;\n    // const x1: number = x * dpr;\n    // const x2: number = (x + width) * dpr;\n    // const y1: number = y * dpr;\n    // const y2: number = (y + height) * dpr;\n    // debugger\n    console.log('aaa x1: '+ JSON.stringify(x1));\n    console.log('aaa x2: '+ JSON.stringify(x2));\n    console.log('aaa y1: '+ JSON.stringify(y1));\n    console.log('aaa y2: '+ JSON.stringify(y2));\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([x1, y1, x2, y1, x1, y2, x1, y2, x2, y1, x2, y2]), gl.STATIC_DRAW);\n  }\n}\n","import { Clock } from './base/utils/clock';\nimport { PAGFile } from './pag-file';\nimport { RenderingMode } from './types';\nimport { PAG2dView } from './view/pag-2d-view';\nimport { PAGWebGLView } from './view/pag-webgl-view';\n\nimport type { RenderOptions } from './view/context';\nimport type { View } from './view/view';\n\nexport class PAGView {\n  /**\n   * 实例化一个 PAGView 对象\n   * @param data PAG文件数据\n   * @param canvas 渲染画板\n   * @param options 渲染选项\n   * @returns PAGView 对象\n   */\n  public static init(data: ArrayBuffer, canvas: HTMLCanvasElement, options: RenderOptions = {}) {\n    const opts = {\n      renderingMode: RenderingMode.WebGL,\n      ...options,\n    };\n    const clock = new Clock();\n    const pagFile = PAGFile.fromArrayBuffer(data);\n    clock.mark('decode');\n    let pagView: View;\n    if (opts.renderingMode === RenderingMode.WebGL) {\n      pagView = new PAGWebGLView(pagFile, canvas, opts);\n    } else {\n      pagView = new PAG2dView(pagFile, canvas, opts);\n    }\n    pagView.setDebugData({ decodePAGFile: clock.measure('', 'decode') });\n    return pagView;\n  }\n}\n"],"names":["getTime","performance","now","bind","e","Date","Clock","constructor","startTime","markers","reset","mark","key","console","log","Object","keys","find","markerKey","measure","makerFrom","makerTo","start","end","CompositionType","CompositionType2","TagCode","TagCode2","readTagHeader","byteBuffer","codeAndLength","readUint16","length","code","readUint32","context","tagLevel","readTags","byteArray","parameter","reader","header","End","tagBytes","readBytes","ZERO_ID","ZERO_TIME","OPAQUE","WEBGL_CONTEXT_ATTRIBUTES","alpha","depth","stencil","antialias","BlendMode","KeyframeInterpolationType","IS_IOS","navigator","test","userAgent","toLowerCase","Black","red","green","blue","White","verifyFailed","error","verifyAndReturn","expression","_Composition","id","width","height","duration","frameRate","backgroundColor","cacheID","cacheIDCount","type","Unknown","getStaticTimeRanges","verify","Composition","VideoComposition","arguments","hasAlpha","sequences","staticTimeRanges","staticTimeRangeUpdated","Video","updateStaticTimeRanges","sequence","i","item","timeScale","timeRange","Math","round","push","range","hasImageContent","Ratio","numerator","denominator","value","DefaultRatio","Point","x","y","ZERO_POINT","TrackMatteType","LayerType","LayerType2","Layer","parent","containingComposition","stretch","autoOrientation","transform","isActive","blendMode","Normal","trackMatteType","trackMatteLayer","timeRemap","masks","effects","layerStyles","layerCache","maxScale","excludeVaryingRanges","timeRanges","_a","mask","effect","layerStyle","gotoFrame","frame","getMaxScaleFactor","property","scale","animatable","keyframes","scaleX","abs","startValue","scaleY","keyframe","endValue","parentScale","SPATIAL_PRECISION","BEZIER_PRECISION","readRatio","numeratorValue","readEncodeInt32","denominatorValue","readEncodedUint32","ration","readColor","redNum","readUint8","greenNum","blueNum","color","readTime","readEncodedUint64","readLayerID","Error","layer","readPoint","readFloat32","readCompositionAttributes","composition","Context","compositions","errorMessages","throwException","message","releaseCompositions","slice","ErrorMessage","PAGDecodeError","LENGTH_FOR_STORE_NUM_BITS","ByteArray","buffer","littleEndian","_position","bitPosition","dataView","DataView","byteLength","bytesAvailable","data","position","alignWithBytes","readBoolean","getInt8","positonChanged","Boolean","readChar","String","fromCharCode","getUint8","readInt8","readInt16","getInt16","getUint16","readInt24","left","right","readUint24","readInt32","getInt32","getUint32","readInt64","readUint64","getFloat32","readDouble","getFloat64","readUTF8String","encoded","dataLength","toString","decodeURIComponent","valueMask","hasNext","byte","readEncodeInt64","len","newBuffer","readUBits","numBits","bitMasks","pos","bytePosition","floor","bitLength","min","bitPositionChanged","readBits","readNumBits","readInt32List","count","Array","readUint32List","readBitBoolean","readFloatList","precision","ceil","ByteData","VideoFrame","isKeyframe","fileBytes","ArrayBuffer","Sequence","frameCount","isKeyFrameFlags","VideoSequence","alphaStartX","alphaStartY","frames","headers","getVideoWidth","videoWidth","getVideoHeight","videoHeight","memcpy","dst","dstOffset","src","srcOffset","num","dstUint8Array","Uint8Array","srcUint8Array","set","concatUint8Arrays","arrays","totalLength","arr","result","offset","readByteDataWithStartCode","bytes","setUint32","readVideoSequence","videoSequence","sps","pps","videoFrame","staticTimeRange","readVideoComposition","ReadTagsOfVideoComposition","CompositionAttributes","EffectType","EffectType2","subtractFromTimeRanges","endTime","size","splice","splitTimeRangesAt","VectorComposition","layers","Vector","Property","_timeRanges","_time","Transform2D","createDefaultTransform2D","anchorPoint","xPosition","yPosition","rotation","opacity","PreComposeLayer","compositionStartTime","wrap","PreCompose","ranges","pop","ShapeLayer","contents","Shape","element","SolidLayer","solidColor","Solid","UnDefinedLayer","undefined","Keyframe","interpolationType","Hold","bezierOut","bezierIn","spatialOut","spatialIn","initialize","getValue","containsTime","time","AnimatableProperty","lastKeyframeIndex","Bezier","Linear","lastKeyframe","AttributeType","AttributeType2","readTagBlock","blockConfig","tagConfig","flags","configs","config","flag","readAttributeFlag","index","target","readAttribute","BaseAttribute","attributeType","defaultValue","_byteArray","_flag","_targetClass","_target","readValue","readValueList","_list","_count","dimensionality","newKeyframe","targetClass","exist","readProperty","readKeyframes","readTimeAndValue","readTimeEase","hasSpatial","numFrames","list","readSolidColor","interpolateFloat","a","b","t","Interpolator","getInterpolation","input","MultiDimensionPointKeyframe","xInterpolator","yInterpolator","_b","_c","_d","progress","xProgress","yProgress","SingleEaseKeyframe","interpolator","getProgress","FloatAttributeConfig","BOOLAttributeConfig","Uint8AttributeConfig","valueList","TimeAttributeConfig","PointAttributeConfig","SpatialProperty","values","MultiDimensionProperty","RatioAttributeConfig","StringAttributeConfig","LayerAttributeConfig","readBlockConfigOfLayerAttributes","tagCode","LayerAttributes","BitFlag","Value","None","SimpleProperty","FixedValue","readBlockConfigOfLayerAttributesV2","LayerAttributesV2","readBlockConfigOfTransform2D","MaskBlock","readCompositionReference","readLayer","layerType","readTagsOfLayer","SolidColor","CompositionReference","readVectorComposition","readTagsOfVectorComposition","installArrayLayerReference","LayerBlock","layerMap","Map","installLayerReference","ID","get","hasTrackMatte","DisplacementMap","maskMap","forEach","maskReferences","Fill","fillMask","Stroke","strokeEffect","path","Text","pathOption","Alpha","AlphaInverted","readTagsOfFile","VectorCompositionBlock","VideoCompositionBlock","verifyAndMake","success","installReference","compositionMap","vectorComposition","preComposeLayer","res","decode","bodyByteArray","readBodyBytes","P","A","G","PAGFile","numLayers","scaledTimeRange","mainComposition","implDuration","fromArrayBuffer","arrayBuffer","getVideoSequence","compositionType","getVideoSequenceFromVideoComposition","getVideoSequenceFromVectorComposition","videoComposition","videoCompositions","getVideoComposition","RenderingMode","EventName","ScaleMode","destroyVerify","functions","getOwnPropertyNames","prototype","filter","name","proxyFn","methodName","fn","_len","args","_key","call","detectWebGLContext","canvas","document","createElement","gl","getContext","createProgram","vertexShaderSource","fragmentShaderSource","program","vShader","createShader","VERTEX_SHADER","attachShader","fShader","FRAGMENT_SHADER","linkProgram","programMessage","getProgramInfoLog","vShaderMessage","getShaderInfoLog","fShaderMessage","source","shader","shaderSource","compileShader","getShaderSourceFromString","str","replace","getVideoParam","pagFile","attribute","sequenceWidth","sequenceHeight","MP4Width","MP4Height","createAndSetupTexture","texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","getWechatNetwork","Promise","resolve","window","WeixinJSBridge","invoke","EventManager","listenersMap","on","eventName","listener","off","listenerList","findIndex","emit","payload","options","canvasSize","playing","viewportSize","destroyed","renderTimer","repeatCount","viewScaleMode","LetterBox","debugData","FPS","decodePAGFile","createDir","coverMP4","writeFile","createDecoder","getFrame","draw","videoParam","eventManager","renderingMode","WebGL","updateSize","useScale","setScaleMode","isPlaying","isDestroyed","setRepeatCount","addListener","removeListener","scaleMode","Stretch","Zoom","max","displaySize","styleDeclaration","getComputedStyle","computedSize","Number","styleSize","style","JSON","stringify","devicePixelRatio","getDebugData","setDebugData","__spreadValues","loadContext","clearRender","__decorateClass","global","fails","require$$0","NATIVE_BIND","FunctionPrototype","documentAll","$documentAll","isCallable","isNullOrUndefined","$TypeError","requireObjectCoercible","$Object","toObject","uncurryThis","require$$1","DESCRIPTORS","hasOwn","EXISTS","CONFIGURABLE","defineProperty","defineGlobalProperty","store","require$$2","inspectSource","WeakMap","isObject","$String","anObject","getBuiltIn","NATIVE_SYMBOL","USE_SYMBOL_AS_UID","require$$3","isSymbol","tryToString","aCallable","getMethod","ordinaryToPrimitive","sharedModule","uid","shared","require$$4","require$$5","Symbol","wellKnownSymbol","toPrimitive","toPropertyKey","createPropertyDescriptor","createNonEnumerableProperty","sharedKey","require$$6","TypeError","require$$7","makeBuiltIn","makeBuiltInModule","defineBuiltInAccessor","CORRECTION_UTC","DEFAULT_VOLUME","getCharCode","charCodeAt","toHexadecimal","makeBox","MP4Generator","boxParam","param","ftyp","moov","traks","tracks","map","track","trak","reverse","mvhd","mvex","moof","mfhd","traf","mdat","timescale","tkhd","edts","mdia","elst","implicitOffset","samples","mdhd","hdlr","minf","vmhd","dinf","stbl","dref","stsd","stts","ctts","stss","stsc","stsz","stco","avc1","avcc","byteData","concat","sampleCount","pts","sampleDelta","dts","iFrames","sample","isKeyFrame","iFrame","trexs","trex","sequenceNumber","sdtp","tfhd","tfdt","trun","baseMediaDecodeTime","arraylen","paddingValue","cts","isLeading","dependsOn","isDependedOn","hasRedundancy","isNonSync","degradPrio","SEQUENCE_NUMBER","BASE_MEDIA_DECODE_TIME","BASE_MEDIA_TIME_SCALE","coverToMp4","getVirtualSequence","mp4Track","makeMp4Track","nalusBytesLen","mp4Generator","getImplicitOffset","headerLen","reduce","pre","cur","sampleSize","videoFrames","eventHandlers","node","event","handler","capture","addEventListener","targetNode","targetHandler","_ref","_ref2","removeEventListener","_ref3","_ref4","_ref5","_ref6","removeAllListeners","videoEvent","_ref7","_ref8","_ref9","IS_WECHAT","playVideoElement","videoElement","play","VideoReader","_duration","create","videoReader","load","getVideoElement","currentTime","pause","seek","seekCallback","getFrameData","callback","clearCallback","destroy","display","muted","playsInline","clock","mp4Data","URL","createObjectURL","Blob","View","fpsBuffer","currentFrame","needSeek","createVideoReader","flushLoop","onAnimationStart","onAnimationPlay","clearTimer","onAnimationPause","stop","onAnimationCancel","setProgress","flush","flushInternal","repeat","requestAnimationFrame","cancelAnimationFrame","updateFPS","sync","onAnimationUpdate","PAG2dView","renderCanvas2D","renderCanvas2DContext","clearRect","drawImage","frameOne","getImageData","frameTwo","putImageData","VERTEX_2D_SHADER","FRAGMENT_2D_SHADER","FRAGMENT_2D_SHADER_TRANSPARENT","PAGWebGLView","positionLocation","texcoordLocation","alphaStartLocation","scaleLocation","resolutionLocation","positionBuffer","texcoordBuffer","originalVideoTexture","renderingTexture","renderingFbo","getAttribLocation","getUniformLocation","createBuffer","bindBuffer","ARRAY_BUFFER","setRectangle","bufferData","Float32Array","STATIC_DRAW","texImage2D","RGBA","UNSIGNED_BYTE","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","clearColor","clear","COLOR_BUFFER_BIT","useProgram","enableVertexAttribArray","FLOAT","normalize","stride","vertexAttribPointer","uniform2f","viewport","primitiveType","TRIANGLES","drawArrays","x1","x2","y1","y2","PAGView","init","opts","pagView"],"mappings":"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"}