{"version":3,"file":"libpag.worker.js","sources":["../src/worker/events.ts","../src/worker/utils.ts","../src/constant.ts","../src/utils/video-listener.ts","../src/utils/ua.ts","../src/pag-module.ts","../src/core/bitmap-image.ts","../src/worker/video-reader.ts","../src/utils/type-utils.ts","../src/core/video-reader.ts","../src/utils/common.ts","../src/utils/decorators.ts","../src/worker/pag-file.ts","../src/utils/canvas.ts","../src/worker/pag-view.ts","../src/worker/pag-image.ts","../src/worker/client.ts"],"sourcesContent":["export enum WorkerMessageType {\n  PAGInit = 'PAGInit',\n  // PAGView static methods\n  PAGView_init = 'PAGView.init',\n  // PAGView instance methods\n  PAGView_duration = 'PAGView.duration',\n  PAGView_play = 'PAGView.play',\n  PAGView_pause = 'PAGView.pause',\n  PAGView_stop = 'PAGView.stop',\n  PAGView_setRepeatCount = 'PAGView.setRepeatCount',\n  PAGView_getProgress = 'PAGView.getProgress',\n  PAGView_currentFrame = 'PAGView.currentFrame',\n  PAGView_setProgress = 'PAGView.setProgress',\n  PAGView_scaleMode = 'PAGView.scaleMode',\n  PAGView_setScaleMode = 'PAGView.setScaleMode',\n  PAGView_flush = 'PAGView.flush',\n  PAGView_getDebugData = 'PAGView.getDebugData',\n  PAGView_destroy = 'PAGView.destroy',\n  // PAGFile static methods\n  PAGFile_load = 'PAGFile.load',\n  // PAGFile instance methods\n  PAGFile_getTextData = 'PAGFile.getTextData',\n  PAGFile_replaceText = 'PAGFile.replaceText',\n  PAGFile_replaceImage = 'PAGFile.replaceImage',\n  PAGFile_destroy = 'PAGFile.destroy',\n  // PAGImage static methods\n  PAGImage_fromSource = 'PAGImage.fromSource',\n  PAGImage_destroy = 'PAGImage.destroy',\n  // VideoReader static methods\n  VideoReader_constructor = 'VideoReader.constructor',\n  // VideoReader instance methods\n  VideoReader_prepare = 'VideoReader.prepare',\n  VideoReader_play = 'VideoReader.play',\n  VideoReader_pause = 'VideoReader.pause',\n  VideoReader_stop = 'VideoReader.stop',\n  VideoReader_getError = 'VideoReader.getError',\n  // Binding video reader\n  PAGModule_linkVideoReader = 'PAGModule.linkVideoReader',\n  // TextDocument instance methods\n  TextDocument_delete = 'TextDocument.delete',\n}\n","import type { WorkerMessage } from './worker';\n\nlet messageCount = 0;\nconst generateMessageName = (name: string) => `${name}_${messageCount++}`;\n\nexport interface WorkerInterface {\n  postMessage: (message: any, transfer: Transferable[]) => void;\n  addEventListener: (type: string, listener: (event: MessageEvent) => void) => void;\n  removeEventListener: (type: string, listener: (event: MessageEvent) => void) => void;\n}\n\nexport const postMessage = <T>(\n  worker: WorkerInterface,\n  message: WorkerMessage,\n  callback: (...args: any[]) => T,\n  transfer: (OffscreenCanvas | Transferable)[] = [],\n): Promise<T> => {\n  return new Promise((resolve) => {\n    const name = generateMessageName(message.name);\n    const handle = (event: MessageEvent<WorkerMessage>) => {\n      if (event.data.name === name) {\n        worker.removeEventListener('message', handle);\n        resolve(callback(...event.data.args));\n      }\n    };\n    worker.addEventListener('message', handle);\n    worker.postMessage({ name, args: message.args }, transfer);\n  });\n};\n","/**\n * VideoDecode wait frame num.\n */\nexport const VIDEO_DECODE_WAIT_FRAME = 3;\n/**\n * VideoDecode seek timeout frame num.\n */\nexport const VIDEO_DECODE_SEEK_TIMEOUT_FRAME = 12;\n/**\n * NAL unit length. [ 0, 0, 0, 1 ]\n */\nexport const NALU_HEADER_LENGTH = 4;\n/**\n * Web safe font.\n */\nexport const WEB_SAFE_FONT = 'Arial';\n/**\n * Default render canvas size.\n */\nexport const DEFAULT_CANVAS_SIZE = 2560;\n/**\n * Default WebGL ContextAttributes\n */\nexport const WEBGL_CONTEXT_ATTRIBUTES = {\n  depth: false,\n  stencil: false,\n  antialias: false,\n};\n\nexport const VIDEO_PLAYBACK_RATE_MIN = 0.125;\nexport const VIDEO_PLAYBACK_RATE_MAX = 4;\n\nexport const CANVAS_POOL_MAX_SIZE = 10;\n","type K = keyof HTMLVideoElementEventMap;\n\nlet eventHandlers: {\n  [key in K]?: {\n    node: HTMLVideoElement;\n    handler: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any;\n    capture: boolean;\n  }[];\n} = {};\n\nexport const addListener = (\n  node: HTMLVideoElement,\n  event: K,\n  handler: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any,\n  capture = false,\n) => {\n  if (!(event in eventHandlers)) {\n    eventHandlers[event] = [];\n  }\n  eventHandlers[event]?.push({ node: node, handler: handler, capture: capture });\n  node.addEventListener(event, handler, capture);\n};\n\nexport const removeListener = (\n  targetNode: HTMLElement,\n  event: K,\n  targetHandler: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any,\n) => {\n  if (!(event in eventHandlers)) return;\n  eventHandlers[event]\n    ?.filter(({ node, handler }) => node === targetNode && handler === targetHandler)\n    .forEach(({ node, handler, capture }) => node.removeEventListener(event, handler, capture));\n};\n\nexport const removeAllListeners = (targetNode: HTMLElement, event: K) => {\n  if (!(event in eventHandlers)) return;\n  eventHandlers[event]\n    ?.filter(({ node }) => node === targetNode)\n    .forEach(({ node, handler, capture }) => node.removeEventListener(event, handler, capture));\n\n  eventHandlers[event] = eventHandlers[event]?.filter(({ node }) => node !== targetNode);\n};\n","const nav = navigator?.userAgent || '';\nexport const ANDROID = /android|adr/i.test(nav);\nexport const MOBILE = /(mobile)/i.test(nav) && ANDROID;\nexport const MACOS = !(/(mobile)/i.test(nav) || MOBILE) && /Mac OS X/i.test(nav);\nexport const IPHONE = /(iphone|ipad|ipod)/i.test(nav);\nexport const WECHAT = /MicroMessenger/i.test(nav);\nexport const SAFARI_OR_IOS_WEBVIEW =  /^((?!chrome|android).)*safari/i.test(nav) || IPHONE;\nexport const WORKER = typeof globalThis.importScripts === 'function';\n","import type { PAG } from './types';\n\nexport let PAGModule: PAG;\n\nexport const setPAGModule = (module: PAG) => {\n  PAGModule = module;\n};\n\nexport const getPAGModule = () => PAGModule;\n","export class BitmapImage {\n  public bitmap: ImageBitmap | null;\n\n  public constructor(bitmap: ImageBitmap | null) {\n    this.bitmap = bitmap;\n  }\n\n  public setBitmap(bitmap: ImageBitmap) {\n    if (this.bitmap) {\n      this.bitmap.close();\n    }\n    this.bitmap = bitmap;\n  }\n}\n","import { WorkerMessageType } from './events';\nimport { postMessage } from './utils';\n\nimport type { EmscriptenGL } from '../types';\nimport { BitmapImage } from '../core/bitmap-image';\n\nexport class WorkerVideoReader {\n  public bitmap: ImageBitmap | null = null;\n  public isSought = false;\n  public isPlaying = false;\n\n  private proxyId: number;\n  private bitmapImage: BitmapImage = new BitmapImage(null);\n\n  public constructor(proxyId: number) {\n    this.proxyId = proxyId;\n  }\n\n  public prepare(targetFrame: number, playbackRate: number) {\n    return new Promise<void>((resolve) => {\n      postMessage(\n        self,\n        { name: WorkerMessageType.VideoReader_prepare, args: [this.proxyId, targetFrame, playbackRate] },\n        (res) => {\n          this.bitmapImage.setBitmap(res);\n          resolve();\n        },\n      );\n    });\n  }\n\n  public getVideo() {\n    return this.bitmapImage;\n  }\n\n  public onDestroy() {\n    self.postMessage({ name: 'VideoReader.onDestroy', args: [this.proxyId] });\n  }\n\n  public play() {\n    return new Promise<void>((resolve) => {\n      postMessage(self, { name: WorkerMessageType.VideoReader_play, args: [this.proxyId] }, () => {\n        resolve();\n      });\n    });\n  }\n\n  public pause() {\n    postMessage(self, { name: WorkerMessageType.VideoReader_pause, args: [this.proxyId] }, () => {});\n  }\n\n  public stop() {\n    postMessage(self, { name: WorkerMessageType.VideoReader_stop, args: [this.proxyId] }, () => {});\n  }\n\n  public getError() {\n    return new Promise<any>((resolve) => {\n      postMessage(self, { name: WorkerMessageType.VideoReader_getError, args: [this.proxyId] }, (res) => {\n        resolve(res);\n      });\n    });\n  }\n}\n","import { PAGModule } from '../pag-module';\nimport { LayerType, Vector } from '../types';\n\nimport type { PAGLayer } from '../pag-layer';\nimport type { PAGImageLayer } from '../pag-image-layer';\nimport type { PAGSolidLayer } from '../pag-solid-layer';\nimport type { PAGTextLayer } from '../pag-text-layer';\n\nconst rewindData = (fn: (...args: any[]) => any, scope: any, ...args: any[]) => {\n  if (PAGModule.Asyncify.currData !== null) {\n    const currData = PAGModule.Asyncify.currData;\n    PAGModule.Asyncify.currData = null;\n    const ret = fn.call(scope, ...args);\n    PAGModule.Asyncify.currData = currData;\n    return ret;\n  } else {\n    return fn.call(scope, ...args);\n  }\n};\n\nexport const proxyVector = <T extends (...args: any) => any>(\n  vector: Vector<any>,\n  process: T,\n): Vector<ReturnType<T>> => {\n  const proxy = new Proxy(vector, {\n    get(target, property, receiver) {\n      switch (property) {\n        case 'get':\n          return (index: number) => {\n            const wasmIns = rewindData(target.get, target, index);\n            return !wasmIns ? wasmIns : process(wasmIns);\n          };\n        case 'push_back':\n          return (value: ReturnType<T>) => {\n            rewindData(target.push_back, target, value.wasmIns || value);\n            return undefined;\n          };\n        case 'size':\n          return () => {\n            return rewindData(target.size, target);\n          };\n        default:\n          return Reflect.get(target, property, receiver);\n      }\n    },\n  });\n  return proxy;\n};\n\nexport const layer2typeLayer = (wasmIns: any): PAGSolidLayer | PAGTextLayer | PAGImageLayer | PAGLayer => {\n  switch (rewindData(wasmIns._layerType, wasmIns)) {\n    case LayerType.Solid:\n      return new PAGModule.PAGSolidLayer(wasmIns);\n    case LayerType.Text:\n      return new PAGModule.PAGTextLayer(wasmIns);\n    case LayerType.Image:\n      return new PAGModule.PAGImageLayer(wasmIns);\n    default:\n      return new PAGModule.PAGLayer(wasmIns);\n  }\n};\n\nexport const getLayerTypeName = (layerType: LayerType) => {\n  switch (layerType) {\n    case LayerType.Solid:\n      return 'Solid';\n    case LayerType.Text:\n      return 'Text';\n    case LayerType.Shape:\n      return 'Shape';\n    case LayerType.Image:\n      return 'Image';\n    case LayerType.PreCompose:\n      return 'PreCompose';\n    default:\n      return 'Unknown';\n  }\n};\n\nexport const getWasmIns = (value: any) => {\n  if (value?.wasmIns) {\n    return value.wasmIns;\n  }\n  return value;\n};\n\nexport const isInstanceOf = (value: any, type: any) => typeof type !== 'undefined' && value instanceof type;\n","import {\n  VIDEO_DECODE_WAIT_FRAME,\n  VIDEO_DECODE_SEEK_TIMEOUT_FRAME,\n  VIDEO_PLAYBACK_RATE_MAX,\n  VIDEO_PLAYBACK_RATE_MIN,\n} from '../constant';\nimport { addListener, removeListener, removeAllListeners } from '../utils/video-listener';\nimport { IPHONE, WECHAT, SAFARI_OR_IOS_WEBVIEW, WORKER } from '../utils/ua';\nimport { PAGModule } from '../pag-module';\nimport { WorkerMessageType } from '../worker/events';\nimport { WorkerVideoReader } from '../worker/video-reader';\nimport { postMessage } from '../worker/utils';\n\nimport type { TimeRange, VideoReader as VideoReaderInterfaces } from '../interfaces';\nimport type { PAGPlayer } from '../pag-player';\nimport { isInstanceOf } from '../utils/type-utils';\n\nconst UHD_RESOLUTION = 3840;\n\n// Get video initiated token on Wechat browser.\nconst getWechatNetwork = () => {\n  return new Promise<void>((resolve) => {\n    window.WeixinJSBridge.invoke(\n      'getNetworkType',\n      {},\n      () => {\n        resolve();\n      },\n      () => {\n        resolve();\n      },\n    );\n  });\n};\n\nconst waitVideoCanPlay = (videoElement: HTMLVideoElement) => {\n  return new Promise((resolve) => {\n    const canplayHandle = () => {\n      removeListener(videoElement, 'canplay', canplayHandle);\n      clearTimeout(timer);\n      resolve(true);\n    };\n    addListener(videoElement, 'canplay', canplayHandle);\n    const timer = setTimeout(() => {\n      removeListener(videoElement, 'canplay', canplayHandle);\n      resolve(false);\n    }, 1000);\n  });\n};\n\nexport class VideoReader {\n  public static async create(\n    source: Uint8Array | HTMLVideoElement,\n    width: number,\n    height: number,\n    frameRate: number,\n    staticTimeRanges: TimeRange[],\n  ): Promise<VideoReaderInterfaces> {\n    if (WORKER) {\n      const proxyId = await new Promise<number>((resolve) => {\n        // TODO: source as HTMLVideoElement in WebWorker version.\n        const uint8Array = source as Uint8Array;\n        const buffer = uint8Array.buffer.slice(uint8Array.byteOffset, uint8Array.byteOffset + uint8Array.byteLength);\n        postMessage(\n          self,\n          {\n            name: WorkerMessageType.VideoReader_constructor,\n            args: [buffer, width, height, frameRate, staticTimeRanges, true],\n          },\n          (res) => {\n            resolve(res);\n          },\n          [buffer],\n        );\n      });\n      const videoReader = new WorkerVideoReader(proxyId);\n      PAGModule.currentPlayer?.linkVideoReader(videoReader);\n      return videoReader;\n    }\n    return new VideoReader(source, width, height, frameRate, staticTimeRanges);\n  }\n\n  public isSought = false;\n  public isPlaying = false;\n  public bitmap: ImageBitmap | null = null;\n\n  private videoEl: HTMLVideoElement | null = null;\n  private frameRate = 0;\n  private canplay = false;\n  private staticTimeRanges: StaticTimeRanges | null = null;\n  private disablePlaybackRate = false;\n  private error: any = null;\n  private player: PAGPlayer | null = null;\n  private width = 0;\n  private height = 0;\n  private bitmapCanvas: OffscreenCanvas | null = null;\n  private bitmapCtx: OffscreenCanvasRenderingContext2D | null = null;\n\n  public constructor(\n    source: Uint8Array | HTMLVideoElement,\n    width: number,\n    height: number,\n    frameRate: number,\n    staticTimeRanges: TimeRange[],\n    isWorker = false,\n  ) {\n    if (isInstanceOf(source, globalThis.HTMLVideoElement)) {\n      this.videoEl = source as HTMLVideoElement;\n      this.canplay = true;\n    } else {\n      this.videoEl = document.createElement('video');\n      this.videoEl.style.display = 'none';\n      this.videoEl.muted = true;\n      this.videoEl.playsInline = true;\n      this.videoEl.preload = 'auto'; // use load() will make a bug on Chrome.\n      this.videoEl.width = width;\n      this.videoEl.height = height;\n      waitVideoCanPlay(this.videoEl).then(() => {\n        this.canplay = true;\n      });\n      const blob = new Blob([source as Uint8Array], { type: 'video/mp4' });\n      this.videoEl.src = URL.createObjectURL(blob);\n      if (IPHONE) {\n        // use load() will make a bug on Chrome.\n        this.videoEl.load();\n      }\n    }\n    this.frameRate = frameRate;\n    this.width = width;\n    this.height = height;\n    this.staticTimeRanges = new StaticTimeRanges(staticTimeRanges);\n    if (UHD_RESOLUTION < width || UHD_RESOLUTION < height) {\n      this.disablePlaybackRate = true;\n    }\n    if (!isWorker) {\n      this.linkPlayer(PAGModule.currentPlayer);\n    }\n  }\n\n  public async prepare(targetFrame: number, playbackRate: number) {\n    console.log('aaa js -------- prepare: '+ JSON.stringify(targetFrame));\n    this.setError(null); // reset error\n    this.isSought = false; // reset seek status\n    const { currentTime } = this.videoEl!;\n    const targetTime = targetFrame / this.frameRate;\n    if (currentTime === 0 && targetTime === 0) {\n      if (!this.canplay && !SAFARI_OR_IOS_WEBVIEW) {\n        await waitVideoCanPlay(this.videoEl!);\n      } else {\n        try {\n          await this.play();\n        } catch (e) {\n          this.setError(e);\n        }\n        await new Promise<void>((resolve) => {\n          requestAnimationFrame(() => {\n            this.pause();\n            resolve();\n          });\n        });\n      }\n    } else {\n      if (Math.round(targetTime * this.frameRate) === Math.round(currentTime * this.frameRate)) {\n        // Current frame\n      } else if (this.staticTimeRanges?.contains(targetFrame)) {\n        // Static frame\n        console.log('aaa seek 1: targetTime='+ JSON.stringify(targetTime), 'currentTime='+ JSON.stringify(currentTime));\n        await this.seek(targetTime, false);\n        return;\n      } else if (Math.abs(currentTime - targetTime) < (1 / this.frameRate) * VIDEO_DECODE_WAIT_FRAME) {\n        // Within tolerable frame rate deviation\n      } else {\n        // Seek and play\n        this.isSought = true;\n        console.log('aaa seek 2: targetTime='+ JSON.stringify(targetTime), 'currentTime='+ JSON.stringify(currentTime));\n        await this.seek(targetTime);\n        return;\n      }\n    }\n\n    const targetPlaybackRate = Math.min(Math.max(playbackRate, VIDEO_PLAYBACK_RATE_MIN), VIDEO_PLAYBACK_RATE_MAX);\n    if (!this.disablePlaybackRate && this.videoEl!.playbackRate !== targetPlaybackRate) {\n      this.videoEl!.playbackRate = targetPlaybackRate;\n    }\n\n    if (this.isPlaying && this.videoEl!.paused) {\n      try {\n        await this.play();\n      } catch (e) {\n        this.setError(e);\n      }\n    }\n  }\n\n  public getVideo() {\n    return this.videoEl;\n  }\n\n  // Only work in web worker version\n  public async generateBitmap() {\n    // Batter than createImageBitmap from video element in benchmark\n    if (!this.bitmapCanvas) {\n      this.bitmapCanvas = new OffscreenCanvas(this.width, this.height);\n      this.bitmapCanvas!.width = this.width;\n      this.bitmapCanvas!.height = this.height;\n      this.bitmapCtx = this.bitmapCanvas.getContext('2d') as OffscreenCanvasRenderingContext2D | null;\n    }\n    this.bitmapCtx?.fillRect(0, 0, this.width, this.height);\n    this.bitmapCtx?.drawImage(this.videoEl as HTMLVideoElement, 0, 0, this.width, this.height);\n    this.bitmap = await createImageBitmap(this.bitmapCanvas);\n    return this.bitmap;\n  }\n\n  public async play() {\n    if (!this.videoEl!.paused) return;\n    if (WECHAT && window.WeixinJSBridge) {\n      await getWechatNetwork();\n    }\n    if (document.visibilityState !== 'visible') {\n      const visibilityHandle = () => {\n        if (document.visibilityState === 'visible') {\n          if (this.videoEl) this.videoEl.play();\n          window.removeEventListener('visibilitychange', visibilityHandle);\n        }\n      };\n      window.addEventListener('visibilitychange', visibilityHandle);\n      throw new Error('The play() request was interrupted because the document was hidden!');\n    }\n    await this.videoEl?.play();\n  }\n\n  public pause() {\n    this.isPlaying = false;\n    if (this.videoEl!.paused) return;\n    this.videoEl?.pause();\n  }\n\n  public stop() {\n    this.isPlaying = false;\n    if (!this.videoEl!.paused) {\n      this.videoEl?.pause();\n    }\n    this.videoEl!.currentTime = 0;\n  }\n\n  public getError() {\n    return this.error;\n  }\n\n  public onDestroy() {\n    if (this.player) {\n      this.player.unlinkVideoReader(this);\n    }\n    removeAllListeners(this.videoEl!, 'playing');\n    removeAllListeners(this.videoEl!, 'timeupdate');\n    this.videoEl = null;\n    this.bitmapCanvas = null;\n    this.bitmapCtx = null;\n  }\n\n  private seek(targetTime: number, play = true) {\n    return new Promise<void>((resolve) => {\n      let isCallback = false;\n      let timer: any = null;\n      const setVideoState = async () => {\n        if (play && this.videoEl!.paused) {\n          try {\n            await this.play();\n          } catch (e) {\n            this.setError(e);\n          }\n        } else if (!play && !this.videoEl!.paused) {\n          this.videoEl?.pause();\n        }\n      };\n      const seekCallback = async () => {\n        if (!this.videoEl) {\n          this.setError(new Error(\"Video element doesn't exist!\"));\n          resolve();\n          return;\n        }\n        removeListener(this.videoEl, 'seeked', seekCallback);\n        await setVideoState();\n        isCallback = true;\n        clearTimeout(timer);\n        timer = null;\n        resolve();\n      };\n      if (!this.videoEl) {\n        this.setError(new Error(\"Video element doesn't exist!\"));\n        resolve();\n        return;\n      }\n      addListener(this.videoEl, 'seeked', seekCallback);\n      this.videoEl!.currentTime = targetTime;\n      // Timeout\n      timer = setTimeout(() => {\n        if (!isCallback) {\n          if (!this.videoEl) {\n            this.setError(new Error(\"Video element doesn't exist!\"));\n            resolve();\n            return;\n          } else {\n            removeListener(this.videoEl, 'seeked', seekCallback);\n            setVideoState();\n            resolve();\n          }\n        }\n      }, (1000 / this.frameRate) * VIDEO_DECODE_SEEK_TIMEOUT_FRAME);\n    });\n  }\n\n  private setError(e: any) {\n    this.error = e;\n  }\n\n  private linkPlayer(player: PAGPlayer | null) {\n    this.player = player;\n    if (player) {\n      player.linkVideoReader(this);\n    }\n  }\n}\n\nexport class StaticTimeRanges {\n  private timeRanges: TimeRange[];\n\n  public constructor(timeRanges: TimeRange[]) {\n    this.timeRanges = timeRanges;\n  }\n\n  public contains(targetFrame: number) {\n    if (this.timeRanges.length === 0) return false;\n    for (let timeRange of this.timeRanges) {\n      if (timeRange.start <= targetFrame && targetFrame < timeRange.end) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","import { isInstanceOf } from './type-utils';\n\nexport const readFile = (file: File) =>\n  new Promise<ArrayBuffer | null>((resolve) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      resolve(reader.result as ArrayBuffer | null);\n    };\n    reader.onerror = () => {\n      console.error((reader.error as DOMException).message);\n    };\n    reader.readAsArrayBuffer(file);\n  });\n\nexport const transferToArrayBuffer = (data: File | Blob | ArrayBuffer) => {\n  if (isInstanceOf(data, globalThis.File)) {\n    return readFile(data as File);\n  } else if (isInstanceOf(data, globalThis.Blob)) {\n    return readFile(new File([data as Blob], ''));\n  } else if (isInstanceOf(data, globalThis.ArrayBuffer)) {\n    return Promise.resolve(data as ArrayBuffer);\n  }\n  return Promise.resolve(null);\n};\n\nexport const concatUint8Arrays = (arrays: Array<Uint8Array>) => {\n  let totalLength = 0;\n  for (const arr of arrays) {\n    totalLength += arr.byteLength;\n  }\n  const result = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const arr of arrays) {\n    result.set(arr, offset);\n    offset += arr.byteLength;\n  }\n  return result;\n};\n","import { PAGModule } from '../pag-module';\n\nexport function wasmAwaitRewind(constructor: any) {\n  const ignoreStaticFunctions = ['length', 'name', 'prototype', 'wasmAsyncMethods'];\n  let staticFunctions = Object.getOwnPropertyNames(constructor).filter(\n    (name) => ignoreStaticFunctions.indexOf(name) === -1,\n  );\n  if (constructor.wasmAsyncMethods && constructor.wasmAsyncMethods.length > 0) {\n    staticFunctions = staticFunctions.filter((name) => constructor.wasmAsyncMethods.indexOf(name) === -1);\n  }\n\n  let functions = Object.getOwnPropertyNames(constructor.prototype).filter(\n    (name) => name !== 'constructor' && typeof constructor.prototype[name] === 'function',\n  );\n  if (constructor.prototype.wasmAsyncMethods && constructor.prototype.wasmAsyncMethods.length > 0) {\n    functions = functions.filter((name) => constructor.prototype.wasmAsyncMethods.indexOf(name) === -1);\n  }\n\n  const proxyFn = (target: { [prop: string]: (...args: any[]) => any }, methodName: string) => {\n    const fn = target[methodName];\n    target[methodName] = function (...args) {\n      if (PAGModule.Asyncify.currData !== null) {\n        const currData = PAGModule.Asyncify.currData;\n        PAGModule.Asyncify.currData = null;\n        const ret = fn.call(this, ...args);\n        PAGModule.Asyncify.currData = currData;\n        return ret;\n      } else {\n        return fn.call(this, ...args);\n      }\n    };\n  };\n\n  staticFunctions.forEach((name) => proxyFn(constructor, name));\n  functions.forEach((name) => proxyFn(constructor.prototype, name));\n}\n\nexport function wasmAsyncMethod(target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n  if (!target.wasmAsyncMethods) {\n    target.wasmAsyncMethods = [];\n  }\n  target.wasmAsyncMethods.push(propertyKey);\n}\n\nexport function destroyVerify(constructor: any) {\n  let functions = Object.getOwnPropertyNames(constructor.prototype).filter(\n    (name) => name !== 'constructor' && typeof constructor.prototype[name] === 'function',\n  );\n\n  const proxyFn = (target: { [prop: string]: any }, methodName: string) => {\n    const fn = target[methodName];\n    target[methodName] = function (...args: any[]) {\n      if (this['isDestroyed']) {\n        console.error(`Don't call ${methodName} of the ${constructor.name} that is destroyed.`);\n        return;\n      }\n      return fn.call(this, ...args);\n    };\n  };\n  functions.forEach((name) => proxyFn(constructor.prototype, name));\n}\n","import { WorkerMessageType } from './events';\nimport { postMessage } from './utils';\nimport { transferToArrayBuffer } from '../utils/common';\nimport { destroyVerify } from '../utils/decorators';\n\nimport type { WorkerPAGImage } from './pag-image';\nimport type { TextDocument } from '../types';\n\n@destroyVerify\nexport class WorkerPAGFile {\n  /**\n   * Load pag file from file.\n   */\n  public static async load(worker: Worker, data: File | Blob | ArrayBuffer) {\n    const buffer = await transferToArrayBuffer(data);\n    if (!buffer)\n      throw new Error(\n        'Initialize PAGFile data type error, please put check data type must to be File ｜ Blob | ArrayBuffer!',\n      );\n    return await postMessage(\n      worker,\n      { name: WorkerMessageType.PAGFile_load, args: [data] },\n      (key) => new WorkerPAGFile(worker, key),\n    );\n  }\n\n  public key: number;\n  public worker: Worker;\n  public isDestroyed = false;\n\n  public constructor(worker: Worker, key: number) {\n    this.worker = worker;\n    this.key = key;\n  }\n  /**\n   * Get a text data of the specified index. The index ranges from 0 to numTexts - 1.\n   * Note: It always returns the default text data.\n   */\n  public getTextData(editableTextIndex: number) {\n    return postMessage(\n      this.worker,\n      { name: WorkerMessageType.PAGFile_getTextData, args: [this.key, editableTextIndex] },\n      (res: TextDocument & { key: number }) => {\n        res.delete = () => {\n          return postMessage(\n            this.worker,\n            { name: WorkerMessageType.TextDocument_delete, args: [res.key] },\n            () => undefined,\n          );\n        };\n        return res;\n      },\n    );\n  }\n  /**\n   * Replace the text data of the specified index. The index ranges from 0 to PAGFile.numTexts - 1.\n   * Passing in null for the textData parameter will reset it to default text data.\n   */\n  public replaceText(editableTextIndex: number, textData: TextDocument & { [prop: string]: any }): Promise<void> {\n    const textDocument: { [prop: string]: any } = {};\n    for (const key in textData) {\n      if (key !== 'delete') {\n        textDocument[key] = textData[key];\n      }\n    }\n    return postMessage(\n      this.worker,\n      { name: WorkerMessageType.PAGFile_replaceText, args: [this.key, editableTextIndex, textDocument] },\n      () => undefined,\n    );\n  }\n  /**\n   * Replace the image content of the specified index with a PAGImage object. The index ranges from\n   * 0 to PAGFile.numImages - 1. Passing in null for the image parameter will reset it to default\n   * image content.\n   */\n  public replaceImage(editableImageIndex: number, pagImage: WorkerPAGImage) {\n    return postMessage(\n      this.worker,\n      { name: WorkerMessageType.PAGFile_replaceImage, args: [this.key, editableImageIndex, pagImage.key] },\n      () => undefined,\n    );\n  }\n\n  public destroy(): Promise<void> {\n    return postMessage(this.worker, { name: WorkerMessageType.PAGFile_destroy, args: [this.key] }, () => {\n      this.isDestroyed = true;\n    });\n  }\n}\n","import { CANVAS_POOL_MAX_SIZE } from '../constant';\nimport { isInstanceOf } from './type-utils';\nimport { SAFARI_OR_IOS_WEBVIEW, WORKER } from './ua';\n\nconst canvasPool = new Array<HTMLCanvasElement | OffscreenCanvas>();\n\nexport const isOffscreenCanvas = (element: any) => isInstanceOf(element, globalThis.OffscreenCanvas);\n\nexport const isCanvas = (element: any) =>\n  isOffscreenCanvas(element) || isInstanceOf(element, globalThis.HTMLCanvasElement);\n\nexport const getCanvas2D = (width: number, height: number) => {\n  let canvas = canvasPool.pop() || createCanvas2D();\n  if (canvas !== null) {\n    canvas.width = width;\n    canvas.height = height;\n  }\n  return canvas;\n};\n\nexport const releaseCanvas2D = (canvas: HTMLCanvasElement | OffscreenCanvas) => {\n  if (canvasPool.length < CANVAS_POOL_MAX_SIZE) {\n    canvasPool.push(canvas);\n  }\n};\n\nconst createCanvas2D = () => {\n  /**\n   * Safari browser does not support OffscreenCanvas before version 16.4.\n   * After version 16.4, OffscreenCanvas is supported, but type checking errors still exist for WebGL interfaces on OffscreenCanvas.\n   * Therefore, HTMLCanvas Element is used uniformly in Safari.\n   */\n  if (SAFARI_OR_IOS_WEBVIEW && !WORKER) {\n    return document.createElement('canvas');\n  }\n  try {\n    const offscreenCanvas = new OffscreenCanvas(0, 0);\n    const context = offscreenCanvas.getContext('2d') as OffscreenCanvasRenderingContext2D;\n    if (typeof context.measureText === 'function') return offscreenCanvas;\n    return document.createElement('canvas');\n  } catch (err) {\n    return document.createElement('canvas');\n  }\n};\n\nexport const calculateDisplaySize = (canvas: HTMLCanvasElement) => {\n  const styleDeclaration = globalThis.getComputedStyle(canvas, null);\n  const computedSize = {\n    width: Number(styleDeclaration.width.replace('px', '')),\n    height: Number(styleDeclaration.height.replace('px', '')),\n  };\n  if (computedSize.width > 0 && computedSize.height > 0) {\n    return computedSize;\n  } else {\n    const styleSize = {\n      width: Number(canvas.style.width.replace('px', '')),\n      height: Number(canvas.style.height.replace('px', '')),\n    };\n    if (styleSize.width > 0 && styleSize.height > 0) {\n      return styleSize;\n    } else {\n      return {\n        width: canvas.width,\n        height: canvas.height,\n      };\n    }\n  }\n};\n","import { WorkerMessageType } from './events';\nimport { postMessage } from './utils';\nimport { calculateDisplaySize } from '../utils/canvas';\nimport { destroyVerify } from '../utils/decorators';\n\nimport type { WorkerPAGFile } from './pag-file';\nimport type { PAGViewOptions } from '../pag-view';\nimport type { DebugData, PAGScaleMode } from '../types';\n\n@destroyVerify\nexport class WorkerPAGView {\n  /**\n   * Create pag view.\n   * @param file pag file.\n   * @param canvas target render canvas.\n   * @param initOptions pag view options\n   * @returns\n   */\n  public static init(file: WorkerPAGFile, canvas: HTMLCanvasElement, initOptions?: PAGViewOptions) {\n    const options = {\n      ...{\n        useScale: true,\n        useCanvas2D: false,\n        firstFrame: true,\n      },\n      ...initOptions,\n    };\n    if (options.useScale) {\n      resizeCanvas(canvas);\n    }\n    const offscreen = canvas.transferControlToOffscreen();\n    return postMessage(\n      file.worker,\n      { name: WorkerMessageType.PAGView_init, args: [file.key, offscreen, initOptions] },\n      (key: number) => new WorkerPAGView(file.worker, key),\n      [offscreen],\n    );\n  }\n\n  public key: number;\n  public worker: Worker;\n  public isDestroyed = false;\n\n  public constructor(worker: Worker, key: number) {\n    this.worker = worker;\n    this.key = key;\n  }\n  /**\n   * The duration of current composition in microseconds.\n   */\n  public duration() {\n    return postMessage(\n      this.worker,\n      { name: WorkerMessageType.PAGView_duration, args: [this.key] },\n      (res: number) => res,\n    );\n  }\n  /**\n   * Start the animation.\n   */\n  public play() {\n    return postMessage(this.worker, { name: WorkerMessageType.PAGView_play, args: [this.key] }, () => undefined);\n  }\n  /**\n   * Pause the animation.\n   */\n  public pause(): Promise<void> {\n    return postMessage(this.worker, { name: WorkerMessageType.PAGView_pause, args: [this.key] }, () => undefined);\n  }\n  /**\n   * Stop the animation.\n   */\n  public stop(): Promise<void> {\n    return postMessage(this.worker, { name: WorkerMessageType.PAGView_stop, args: [this.key] }, () => undefined);\n  }\n  /**\n   * Set the number of times the animation will repeat. The default is 1, which means the animation\n   * will play only once. 0 means the animation will play infinity times.\n   */\n  public setRepeatCount(repeatCount: number): Promise<void> {\n    return postMessage(\n      this.worker,\n      { name: WorkerMessageType.PAGView_setRepeatCount, args: [this.key, repeatCount] },\n      () => undefined,\n    );\n  }\n  /**\n   * Returns the current progress of play position, the value is from 0.0 to 1.0. It is applied only\n   * when the composition is not null.\n   */\n  public getProgress() {\n    return postMessage(\n      this.worker,\n      { name: WorkerMessageType.PAGView_getProgress, args: [this.key] },\n      (res: number) => res,\n    );\n  }\n  /**\n   * Returns the current frame.\n   */\n  public currentFrame() {\n    return postMessage(\n      this.worker,\n      { name: WorkerMessageType.PAGView_currentFrame, args: [this.key] },\n      (res: number) => res,\n    );\n  }\n  /**\n   * Set the progress of play position, the value is from 0.0 to 1.0.\n   */\n  public setProgress(progress: number) {\n    return postMessage(\n      this.worker,\n      {\n        name: WorkerMessageType.PAGView_setProgress,\n        args: [this.key, progress],\n      },\n      () => undefined,\n    );\n  }\n  /**\n   * Returns the current scale mode.\n   */\n  public scaleMode() {\n    return postMessage(\n      this.worker,\n      { name: WorkerMessageType.PAGView_scaleMode, args: [this.key] },\n      (res: number) => res,\n    );\n  }\n  /**\n   * Specifies the rule of how to scale the pag content to fit the surface size. The matrix\n   * changes when this method is called.\n   */\n  public setScaleMode(value: PAGScaleMode): Promise<void> {\n    return postMessage(\n      this.worker,\n      { name: WorkerMessageType.PAGView_setScaleMode, args: [this.key, value] },\n      () => undefined,\n    );\n  }\n  /**\n   * Call this method to render current position immediately. If the play() method is already\n   * called, there is no need to call it. Returns true if the content has changed.\n   */\n  public flush() {\n    return postMessage(this.worker, { name: WorkerMessageType.PAGView_flush, args: [this.key] }, (res: boolean) => res);\n  }\n\n  public getDebugData() {\n    return postMessage(\n      this.worker,\n      { name: WorkerMessageType.PAGView_getDebugData, args: [this.key] },\n      (res: DebugData) => res,\n    );\n  }\n\n  public destroy() {\n    postMessage(this.worker, { name: WorkerMessageType.PAGView_destroy, args: [this.key] }, () => {\n      this.isDestroyed = true;\n    });\n  }\n}\n\nconst resizeCanvas = (canvas: HTMLCanvasElement) => {\n  const displaySize = calculateDisplaySize(canvas);\n  canvas.style.width = `${displaySize.width}px`;\n  canvas.style.height = `${displaySize.height}px`;\n  canvas.width = displaySize.width * globalThis.devicePixelRatio;\n  canvas.height = displaySize.height * globalThis.devicePixelRatio;\n};\n","import { destroyVerify } from '../utils/decorators';\nimport { isInstanceOf } from '../utils/type-utils';\nimport { WorkerMessageType } from './events';\nimport { postMessage } from './utils';\n\n@destroyVerify\nexport class WorkerPAGImage {\n  public static async fromSource(worker: Worker, source: TexImageSource) {\n    const width = isInstanceOf(source, globalThis.HTMLVideoElement)\n      ? (source as HTMLVideoElement).videoWidth\n      : source.width;\n    const height = isInstanceOf(source, globalThis.HTMLVideoElement)\n      ? (source as HTMLVideoElement).videoHeight\n      : source.height;\n    const canvas = new OffscreenCanvas(width, height);\n    canvas.width = source.width;\n    canvas.height = source.height;\n    const ctx = canvas.getContext('2d') as OffscreenCanvasRenderingContext2D;\n    ctx.drawImage(source as CanvasImageSource, 0, 0, source.width, source.height);\n    const bitmap = await createImageBitmap(canvas);\n    return postMessage(\n      worker,\n      { name: WorkerMessageType.PAGImage_fromSource, args: [bitmap] },\n      (key: number) => new WorkerPAGImage(worker, key),\n      [bitmap],\n    );\n  }\n\n  public worker: Worker;\n  public key: number;\n  public isDestroyed = false;\n\n  public constructor(worker: Worker, key: number) {\n    this.worker = worker;\n    this.key = key;\n  }\n\n  public destroy(): Promise<void> {\n    return postMessage(this.worker, { name: WorkerMessageType.PAGImage_destroy, args: [this.key] }, () => {\n      this.isDestroyed = true;\n    });\n  }\n}\n","import { WorkerMessageType } from './events';\nimport { postMessage } from './utils';\nimport { VideoReader } from '../core/video-reader';\nimport { WorkerPAGFile } from './pag-file';\nimport { WorkerPAGView } from './pag-view';\nimport { WorkerPAGImage } from './pag-image';\n\nimport type { WorkerMessage } from './worker';\nimport type { ModuleOption } from '../pag';\nimport type { TimeRange } from '../interfaces';\n\nexport const MAX_ACTIVE_WORKER_CONTEXTS = 4;\n\nconst videoReaders: VideoReader[] = [];\n\nexport interface PAGWorkerOptions {\n  /**\n   * Link to wasm file and libpag core script.\n   */\n  locateFile?: (file: 'libpag.wasm' | 'libpag.js') => string;\n  /**\n   * Configure for worker.\n   */\n  workerOptions?: WorkerOptions;\n}\n\nexport const createPAGWorker = (pagWorkerOptions: PAGWorkerOptions = {}) => {\n  let scriptUrl = pagWorkerOptions.locateFile ? pagWorkerOptions.locateFile('libpag.js') : 'libpag.js';\n  const option: { fileUrl?: string } & ModuleOption = {};\n  if (pagWorkerOptions.locateFile) {\n    option.fileUrl = pagWorkerOptions.locateFile('libpag.wasm');\n  }\n  const worker = new Worker(scriptUrl, pagWorkerOptions.workerOptions);\n  return postMessage(worker, { name: WorkerMessageType.PAGInit, args: [option] }, () => {\n    addGlobalWorkerListener(worker);\n    return worker;\n  });\n};\n\nconst addGlobalWorkerListener = (worker: Worker) => {\n  const handle = (event: MessageEvent<WorkerMessage>) => {\n    if (event.data.name.includes(WorkerMessageType.VideoReader_constructor)) {\n      const videoReader = new VideoReader(\n        ...(event.data.args as [Uint8Array, number, number, number, TimeRange[], boolean]),\n      );\n      videoReaders.push(videoReader);\n      worker.postMessage({ name: event.data.name, args: [videoReaders.length - 1] });\n      return;\n    }\n    if (event.data.name.includes(WorkerMessageType.VideoReader_prepare)) {\n      const [proxyId, targetFrame, playbackRate] = event.data.args as [number, number, number];\n      videoReaders[proxyId].prepare(targetFrame, playbackRate).then(() => {\n        videoReaders[proxyId].generateBitmap().then((bitmap) => {\n          worker.postMessage({ name: event.data.name, args: [bitmap] }, [bitmap]);\n        });\n      });\n    }\n    if (event.data.name.includes(WorkerMessageType.VideoReader_play)) {\n      videoReaders[event.data.args[0]].play().then((res) => {\n        worker.postMessage({ name: event.data.name, args: [res] });\n      });\n    }\n    if (event.data.name.includes(WorkerMessageType.VideoReader_pause)) {\n      videoReaders[event.data.args[0]].pause();\n    }\n    if (event.data.name.includes(WorkerMessageType.VideoReader_stop)) {\n      videoReaders[event.data.args[0]].stop();\n    }\n    if (event.data.name.includes(WorkerMessageType.VideoReader_getError)) {\n      worker.postMessage({ name: event.data.name, args: [videoReaders[event.data.args[0]].getError()] });\n    }\n  };\n  worker.addEventListener('message', handle);\n};\n\nexport { WorkerPAGFile, WorkerPAGView, WorkerPAGImage };\n"],"names":["WorkerMessageType","WorkerPAGFile","__decorateClass","WorkerPAGView","WorkerPAGImage"],"mappings":"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"}