{"version":3,"file":"libpag.worker.esm.js","sources":["../src/worker/events.ts","../src/worker/utils.ts","../src/constant.ts","../src/utils/video-listener.ts","../src/utils/ua.ts","../src/pag-module.ts","../../third_party/tgfx/web/src/core/bitmap-image.ts","../src/worker/video-reader.ts","../src/utils/type-utils.ts","../src/core/video-reader.ts","../src/utils/common.ts","../src/utils/decorators.ts","../src/worker/pag-file.ts","../src/utils/canvas.ts","../src/worker/pag-view.ts","../src/worker/pag-image.ts","../src/worker/client.ts"],"sourcesContent":["export enum WorkerMessageType {\n  PAGInit = 'PAGInit',\n  // PAGView static methods\n  PAGView_init = 'PAGView.init',\n  // PAGView instance methods\n  PAGView_duration = 'PAGView.duration',\n  PAGView_play = 'PAGView.play',\n  PAGView_pause = 'PAGView.pause',\n  PAGView_stop = 'PAGView.stop',\n  PAGView_setRepeatCount = 'PAGView.setRepeatCount',\n  PAGView_getProgress = 'PAGView.getProgress',\n  PAGView_currentFrame = 'PAGView.currentFrame',\n  PAGView_setProgress = 'PAGView.setProgress',\n  PAGView_scaleMode = 'PAGView.scaleMode',\n  PAGView_setScaleMode = 'PAGView.setScaleMode',\n  PAGView_flush = 'PAGView.flush',\n  PAGView_getDebugData = 'PAGView.getDebugData',\n  PAGView_destroy = 'PAGView.destroy',\n  // PAGFile static methods\n  PAGFile_load = 'PAGFile.load',\n  // PAGFile instance methods\n  PAGFile_getTextData = 'PAGFile.getTextData',\n  PAGFile_replaceText = 'PAGFile.replaceText',\n  PAGFile_replaceImage = 'PAGFile.replaceImage',\n  PAGFile_destroy = 'PAGFile.destroy',\n  // PAGImage static methods\n  PAGImage_fromSource = 'PAGImage.fromSource',\n  PAGImage_destroy = 'PAGImage.destroy',\n  // VideoReader static methods\n  VideoReader_constructor = 'VideoReader.constructor',\n  // VideoReader instance methods\n  VideoReader_prepare = 'VideoReader.prepare',\n  VideoReader_play = 'VideoReader.play',\n  VideoReader_pause = 'VideoReader.pause',\n  VideoReader_stop = 'VideoReader.stop',\n  VideoReader_getError = 'VideoReader.getError',\n  // Binding video reader\n  PAGModule_linkVideoReader = 'PAGModule.linkVideoReader',\n  // TextDocument instance methods\n  TextDocument_delete = 'TextDocument.delete',\n}\n","import type { WorkerMessage } from './worker';\n\nlet messageCount = 0;\nconst generateMessageName = (name: string) => `${name}_${messageCount++}`;\n\nexport interface WorkerInterface {\n  postMessage: (message: any, transfer: Transferable[]) => void;\n  addEventListener: (type: string, listener: (event: MessageEvent) => void) => void;\n  removeEventListener: (type: string, listener: (event: MessageEvent) => void) => void;\n}\n\nexport const postMessage = <T>(\n  worker: WorkerInterface,\n  message: WorkerMessage,\n  callback: (...args: any[]) => T,\n  transfer: (OffscreenCanvas | Transferable)[] = [],\n): Promise<T> => {\n  return new Promise((resolve) => {\n    const name = generateMessageName(message.name);\n    const handle = (event: MessageEvent<WorkerMessage>) => {\n      if (event.data.name === name) {\n        worker.removeEventListener('message', handle);\n        resolve(callback(...event.data.args));\n      }\n    };\n    worker.addEventListener('message', handle);\n    worker.postMessage({ name, args: message.args }, transfer);\n  });\n};\n","/**\n * VideoDecode wait frame num.\n */\nexport const VIDEO_DECODE_WAIT_FRAME = 3;\n/**\n * VideoDecode seek timeout frame num.\n */\nexport const VIDEO_DECODE_SEEK_TIMEOUT_FRAME = 12;\n/**\n * NAL unit length. [ 0, 0, 0, 1 ]\n */\nexport const NALU_HEADER_LENGTH = 4;\n/**\n * Web safe font.\n */\nexport const WEB_SAFE_FONT = 'Arial';\n/**\n * Default render canvas size.\n */\nexport const DEFAULT_CANVAS_SIZE = 2560;\n/**\n * Default WebGL ContextAttributes\n */\nexport const WEBGL_CONTEXT_ATTRIBUTES = {\n  depth: false,\n  stencil: false,\n  antialias: false,\n};\n\nexport const VIDEO_PLAYBACK_RATE_MIN = 0.125;\nexport const VIDEO_PLAYBACK_RATE_MAX = 4;\n\nexport const CANVAS_POOL_MAX_SIZE = 10;\n","type K = keyof HTMLVideoElementEventMap;\n\nlet eventHandlers: {\n  [key in K]?: {\n    node: HTMLVideoElement;\n    handler: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any;\n    capture: boolean;\n  }[];\n} = {};\n\nexport const addListener = (\n  node: HTMLVideoElement,\n  event: K,\n  handler: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any,\n  capture = false,\n) => {\n  if (!(event in eventHandlers)) {\n    eventHandlers[event] = [];\n  }\n  eventHandlers[event]?.push({ node: node, handler: handler, capture: capture });\n  node.addEventListener(event, handler, capture);\n};\n\nexport const removeListener = (\n  targetNode: HTMLElement,\n  event: K,\n  targetHandler: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any,\n) => {\n  if (!(event in eventHandlers)) return;\n  eventHandlers[event]\n    ?.filter(({ node, handler }) => node === targetNode && handler === targetHandler)\n    .forEach(({ node, handler, capture }) => node.removeEventListener(event, handler, capture));\n};\n\nexport const removeAllListeners = (targetNode: HTMLElement, event: K) => {\n  if (!(event in eventHandlers)) return;\n  eventHandlers[event]\n    ?.filter(({ node }) => node === targetNode)\n    .forEach(({ node, handler, capture }) => node.removeEventListener(event, handler, capture));\n\n  eventHandlers[event] = eventHandlers[event]?.filter(({ node }) => node !== targetNode);\n};\n","const nav = navigator?.userAgent || '';\nexport const ANDROID = /android|adr/i.test(nav);\nexport const MOBILE = /(mobile)/i.test(nav) && ANDROID;\nexport const MACOS = !(/(mobile)/i.test(nav) || MOBILE) && /Mac OS X/i.test(nav);\nexport const IPHONE = /(iphone|ipad|ipod)/i.test(nav);\nexport const WECHAT = /MicroMessenger/i.test(nav);\nexport const SAFARI_OR_IOS_WEBVIEW = /^((?!chrome|android).)*safari/i.test(nav) || IPHONE;\nexport const WORKER = typeof (globalThis as any).importScripts === 'function';\n","import type { PAG } from './types';\n\nexport let PAGModule: PAG;\n\nexport const setPAGModule = (module: PAG) => {\n  PAGModule = module;\n};\n\nexport const getPAGModule = () => PAGModule;\n","/////////////////////////////////////////////////////////////////////////////////////////////////\n//\n//  Tencent is pleased to support the open source community by making tgfx available.\n//\n//  Copyright (C) 2023 THL A29 Limited, a Tencent company. All rights reserved.\n//\n//  Licensed under the BSD 3-Clause License (the \"License\"); you may not use this file except\n//  in compliance with the License. You may obtain a copy of the License at\n//\n//      https://opensource.org/licenses/BSD-3-Clause\n//\n//  unless required by applicable law or agreed to in writing, software distributed under the\n//  license is distributed on an \"as is\" basis, without warranties or conditions of any kind,\n//  either express or implied. see the license for the specific language governing permissions\n//  and limitations under the license.\n//\n/////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport class BitmapImage {\n    public bitmap: ImageBitmap | null;\n\n    public constructor(bitmap: ImageBitmap | null) {\n        this.bitmap = bitmap;\n    }\n\n    public setBitmap(bitmap: ImageBitmap) {\n        if (this.bitmap) {\n            this.bitmap.close();\n        }\n        this.bitmap = bitmap;\n    }\n}\n","import { WorkerMessageType } from './events';\nimport { postMessage } from './utils';\n\nimport { BitmapImage } from '@tgfx/core/bitmap-image';\n\nexport class WorkerVideoReader {\n  public bitmap: ImageBitmap | null = null;\n  public isSought = false;\n  public isPlaying = false;\n\n  private proxyId: number;\n  private bitmapImage: BitmapImage = new BitmapImage(null);\n\n  public constructor(proxyId: number) {\n    this.proxyId = proxyId;\n  }\n\n  public prepare(targetFrame: number, playbackRate: number) {\n    return new Promise<void>((resolve) => {\n      postMessage(\n        self,\n        { name: WorkerMessageType.VideoReader_prepare, args: [this.proxyId, targetFrame, playbackRate] },\n        (res) => {\n          this.bitmapImage.setBitmap(res);\n          resolve();\n        },\n      );\n    });\n  }\n\n  public getVideo() {\n    return this.bitmapImage;\n  }\n\n  public onDestroy() {\n    self.postMessage({ name: 'VideoReader.onDestroy', args: [this.proxyId] });\n  }\n\n  public play() {\n    return new Promise<void>((resolve) => {\n      postMessage(self, { name: WorkerMessageType.VideoReader_play, args: [this.proxyId] }, () => {\n        resolve();\n      });\n    });\n  }\n\n  public pause() {\n    postMessage(self, { name: WorkerMessageType.VideoReader_pause, args: [this.proxyId] }, () => {});\n  }\n\n  public stop() {\n    postMessage(self, { name: WorkerMessageType.VideoReader_stop, args: [this.proxyId] }, () => {});\n  }\n\n  public getError() {\n    return new Promise<any>((resolve) => {\n      postMessage(self, { name: WorkerMessageType.VideoReader_getError, args: [this.proxyId] }, (res) => {\n        resolve(res);\n      });\n    });\n  }\n}\n","import { PAGModule } from '../pag-module';\nimport { LayerType, Vector } from '../types';\n\nimport type { PAGLayer } from '../pag-layer';\nimport type { PAGImageLayer } from '../pag-image-layer';\nimport type { PAGSolidLayer } from '../pag-solid-layer';\nimport type { PAGTextLayer } from '../pag-text-layer';\n\nconst rewindData = (fn: (...args: any[]) => any, scope: any, ...args: any[]) => {\n  if (PAGModule.Asyncify.currData !== null) {\n    const currData = PAGModule.Asyncify.currData;\n    PAGModule.Asyncify.currData = null;\n    const ret = fn.call(scope, ...args);\n    PAGModule.Asyncify.currData = currData;\n    return ret;\n  } else {\n    return fn.call(scope, ...args);\n  }\n};\n\nexport const proxyVector = <T extends (...args: any) => any>(\n  vector: Vector<any>,\n  process: T,\n): Vector<ReturnType<T>> => {\n  const proxy = new Proxy(vector, {\n    get(target, property, receiver) {\n      switch (property) {\n        case 'get':\n          return (index: number) => {\n            const wasmIns = rewindData(target.get, target, index);\n            return !wasmIns ? wasmIns : process(wasmIns);\n          };\n        case 'push_back':\n          return (value: ReturnType<T>) => {\n            rewindData(target.push_back, target, value.wasmIns || value);\n            return undefined;\n          };\n        case 'size':\n          return () => {\n            return rewindData(target.size, target);\n          };\n        default:\n          return Reflect.get(target, property, receiver);\n      }\n    },\n  });\n  return proxy;\n};\n\nexport const layer2typeLayer = (wasmIns: any): PAGSolidLayer | PAGTextLayer | PAGImageLayer | PAGLayer => {\n  switch (rewindData(wasmIns._layerType, wasmIns)) {\n    case LayerType.Solid:\n      return new PAGModule.PAGSolidLayer(wasmIns);\n    case LayerType.Text:\n      return new PAGModule.PAGTextLayer(wasmIns);\n    case LayerType.Image:\n      return new PAGModule.PAGImageLayer(wasmIns);\n    default:\n      return new PAGModule.PAGLayer(wasmIns);\n  }\n};\n\nexport const getLayerTypeName = (layerType: LayerType) => {\n  switch (layerType) {\n    case LayerType.Solid:\n      return 'Solid';\n    case LayerType.Text:\n      return 'Text';\n    case LayerType.Shape:\n      return 'Shape';\n    case LayerType.Image:\n      return 'Image';\n    case LayerType.PreCompose:\n      return 'PreCompose';\n    default:\n      return 'Unknown';\n  }\n};\n\nexport const getWasmIns = (value: any) => {\n  if (value?.wasmIns) {\n    return value.wasmIns;\n  }\n  return value;\n};\n\nexport const isInstanceOf = (value: any, type: any) => typeof type !== 'undefined' && value instanceof type;\n","import {\n  VIDEO_DECODE_WAIT_FRAME,\n  VIDEO_DECODE_SEEK_TIMEOUT_FRAME,\n  VIDEO_PLAYBACK_RATE_MAX,\n  VIDEO_PLAYBACK_RATE_MIN,\n} from '../constant';\nimport { addListener, removeListener, removeAllListeners } from '../utils/video-listener';\nimport { IPHONE, WECHAT, SAFARI_OR_IOS_WEBVIEW, WORKER } from '../utils/ua';\nimport { PAGModule } from '../pag-module';\nimport { WorkerMessageType } from '../worker/events';\nimport { WorkerVideoReader } from '../worker/video-reader';\nimport { postMessage } from '../worker/utils';\n\nimport type { TimeRange, VideoReader as VideoReaderInterfaces } from '../interfaces';\nimport type { PAGPlayer } from '../pag-player';\nimport { isInstanceOf } from '../utils/type-utils';\n\nconst UHD_RESOLUTION = 3840;\n\n// Get video initiated token on Wechat browser.\nconst getWechatNetwork = () => {\n  return new Promise<void>((resolve) => {\n    window.WeixinJSBridge.invoke(\n      'getNetworkType',\n      {},\n      () => {\n        resolve();\n      },\n      () => {\n        resolve();\n      },\n    );\n  });\n};\n\nconst waitVideoCanPlay = (videoElement: HTMLVideoElement) => {\n  return new Promise((resolve) => {\n    const canplayHandle = () => {\n      removeListener(videoElement, 'canplay', canplayHandle);\n      clearTimeout(timer);\n      resolve(true);\n    };\n    addListener(videoElement, 'canplay', canplayHandle);\n    const timer = setTimeout(() => {\n      removeListener(videoElement, 'canplay', canplayHandle);\n      resolve(false);\n    }, 1000);\n  });\n};\n\nexport class VideoReader {\n  public static async create(\n    source: Uint8Array | HTMLVideoElement,\n    width: number,\n    height: number,\n    frameRate: number,\n    staticTimeRanges: TimeRange[],\n  ): Promise<VideoReaderInterfaces> {\n    if (WORKER) {\n      const proxyId = await new Promise<number>((resolve) => {\n        // TODO: source as HTMLVideoElement in WebWorker version.\n        const uint8Array = source as Uint8Array;\n        const buffer = uint8Array.buffer.slice(uint8Array.byteOffset, uint8Array.byteOffset + uint8Array.byteLength);\n        postMessage(\n          self,\n          {\n            name: WorkerMessageType.VideoReader_constructor,\n            args: [buffer, width, height, frameRate, staticTimeRanges, true],\n          },\n          (res) => {\n            resolve(res);\n          },\n          [buffer],\n        );\n      });\n      const videoReader = new WorkerVideoReader(proxyId);\n      PAGModule.currentPlayer?.linkVideoReader(videoReader);\n      return videoReader;\n    }\n    return new VideoReader(source, width, height, frameRate, staticTimeRanges);\n  }\n\n  public isSought = false;\n  public isPlaying = false;\n  public bitmap: ImageBitmap | null = null;\n\n  private videoEl: HTMLVideoElement | null = null;\n  private frameRate = 0;\n  private canplay = false;\n  private staticTimeRanges: StaticTimeRanges | null = null;\n  private disablePlaybackRate = false;\n  private error: any = null;\n  private player: PAGPlayer | null = null;\n  private width = 0;\n  private height = 0;\n  private bitmapCanvas: OffscreenCanvas | null = null;\n  private bitmapCtx: OffscreenCanvasRenderingContext2D | null = null;\n  private seeking = false; // 标记是否正在进行seek操作\n  private pendingSeek = null; // 存储待处理的seek请求\n  private seekAttempts = 0; // 记录seek尝试的次数\n  private maxSeekAttempts = 3; // 最大seek尝试次数\n\n  public constructor(\n    source: Uint8Array | HTMLVideoElement,\n    width: number,\n    height: number,\n    frameRate: number,\n    staticTimeRanges: TimeRange[],\n    isWorker = false,\n  ) {\n    if (isInstanceOf(source, globalThis.HTMLVideoElement)) {\n      this.videoEl = source as HTMLVideoElement;\n      this.canplay = true;\n    } else {\n      this.videoEl = document.createElement('video');\n      this.videoEl.style.display = 'none';\n      this.videoEl.muted = true;\n      this.videoEl.playsInline = true;\n      this.videoEl.preload = 'auto'; // use load() will make a bug on Chrome.\n      this.videoEl.width = width;\n      this.videoEl.height = height;\n      waitVideoCanPlay(this.videoEl).then(() => {\n        this.canplay = true;\n      });\n      const blob = new Blob([source as Uint8Array], { type: 'video/mp4' });\n      this.videoEl.src = URL.createObjectURL(blob);\n      if (IPHONE) {\n        // use load() will make a bug on Chrome.\n        this.videoEl.load();\n      }\n    }\n    this.frameRate = frameRate;\n    this.width = width;\n    this.height = height;\n    this.staticTimeRanges = new StaticTimeRanges(staticTimeRanges);\n    if (UHD_RESOLUTION < width || UHD_RESOLUTION < height) {\n      this.disablePlaybackRate = true;\n    }\n    if (!isWorker) {\n      this.linkPlayer(PAGModule.currentPlayer);\n    }\n  }\n\n  public async prepare(targetFrame: number, playbackRate: number) {\n    this.setError(null); // reset error\n    this.isSought = false; // reset seek status\n    const { currentTime } = this.videoEl!;\n    const targetTime = targetFrame / this.frameRate;\n    if (currentTime === 0 && targetTime === 0) {\n      if (!this.canplay && !SAFARI_OR_IOS_WEBVIEW) {\n        await waitVideoCanPlay(this.videoEl!);\n      } else {\n        try {\n          await this.play();\n        } catch (e) {\n          this.setError(e);\n        }\n        await new Promise<void>((resolve) => {\n          requestAnimationFrame(() => {\n            this.pause();\n            resolve();\n          });\n        });\n      }\n    } else {\n      if (Math.round(targetTime * this.frameRate) === Math.round(currentTime * this.frameRate)) {\n        // Current frame\n      } else if (this.staticTimeRanges?.contains(targetFrame)) {\n        // Static frame\n        await this.seek(targetTime, false);\n        return;\n      } else if (Math.abs(currentTime - targetTime) < (1 / this.frameRate) * VIDEO_DECODE_WAIT_FRAME) {\n        // Within tolerable frame rate deviation\n      } else {\n        // Seek and play\n        this.isSought = true;\n        await this.seek(targetTime);\n        return;\n      }\n    }\n\n    const targetPlaybackRate = Math.min(Math.max(playbackRate, VIDEO_PLAYBACK_RATE_MIN), VIDEO_PLAYBACK_RATE_MAX);\n    if (!this.disablePlaybackRate && this.videoEl!.playbackRate !== targetPlaybackRate) {\n      this.videoEl!.playbackRate = targetPlaybackRate;\n    }\n\n    if (this.isPlaying && this.videoEl!.paused) {\n      try {\n        await this.play();\n      } catch (e) {\n        this.setError(e);\n      }\n    }\n  }\n\n  public getVideo() {\n    return this.videoEl;\n  }\n\n  // Only work in web worker version\n  public async generateBitmap() {\n    // Batter than createImageBitmap from video element in benchmark\n    if (!this.bitmapCanvas) {\n      this.bitmapCanvas = new OffscreenCanvas(this.width, this.height);\n      this.bitmapCanvas!.width = this.width;\n      this.bitmapCanvas!.height = this.height;\n      this.bitmapCtx = this.bitmapCanvas.getContext('2d') as OffscreenCanvasRenderingContext2D | null;\n    }\n    this.bitmapCtx?.fillRect(0, 0, this.width, this.height);\n    this.bitmapCtx?.drawImage(this.videoEl as HTMLVideoElement, 0, 0, this.width, this.height);\n    this.bitmap = await createImageBitmap(this.bitmapCanvas);\n    return this.bitmap;\n  }\n\n  public async play() {\n    if (!this.videoEl!.paused) return;\n    if (WECHAT && window.WeixinJSBridge) {\n      await getWechatNetwork();\n    }\n    if (document.visibilityState !== 'visible') {\n      const visibilityHandle = () => {\n        if (document.visibilityState === 'visible') {\n          if (this.videoEl) this.videoEl.play();\n          window.removeEventListener('visibilitychange', visibilityHandle);\n        }\n      };\n      window.addEventListener('visibilitychange', visibilityHandle);\n      throw new Error('The play() request was interrupted because the document was hidden!');\n    }\n    await this.videoEl?.play();\n  }\n\n  public pause() {\n    this.isPlaying = false;\n    if (this.videoEl!.paused) return;\n    this.videoEl?.pause();\n  }\n\n  public stop() {\n    this.isPlaying = false;\n    if (!this.videoEl!.paused) {\n      this.videoEl?.pause();\n    }\n    this.videoEl!.currentTime = 0;\n  }\n\n  public getError() {\n    return this.error;\n  }\n\n  public onDestroy() {\n    if (this.player) {\n      this.player.unlinkVideoReader(this);\n    }\n    removeAllListeners(this.videoEl!, 'playing');\n    removeAllListeners(this.videoEl!, 'timeupdate');\n    this.videoEl = null;\n    this.bitmapCanvas = null;\n    this.bitmapCtx = null;\n  }\n\n  private async seek(targetTime: number, play = true) {\n    console.log(`Seek requested: targetTime=${targetTime}, play=${play}, timedout=${(1000 / this.frameRate) * VIDEO_DECODE_SEEK_TIMEOUT_FRAME};`);\n    if (this.seeking) {\n      console.log(`Seek in progress, queuing new seek to targetTime=${targetTime}`);\n      // 如果当前正在进行seek操作，存储这个请求以便后续处理\n      this.pendingSeek = { targetTime, play };\n      return;\n    }\n\n    this.seeking = true; // 标记正在进行seek操作\n\n    return new Promise<void>((resolve, reject) => {\n      if (!this.videoEl) {\n        console.error('Seek error: Video element is not initialized.');\n        this.seeking = false; // 重置seek状态\n        reject(new Error('Video element is not initialized.'));\n        return;\n      }\n\n      const onSeeked = () => {\n        console.log(`Seek to targetTime=${targetTime} completed.`);\n        removeListener(this.videoEl!, 'seeked', onSeeked);\n        clearTimeout(seekTimeout);\n        this.seeking = false; // 重置seek状态\n\n        if (play) {\n          this.videoEl?.play().catch((e) => {\n            console.error('Play error after seek:', e);\n            this.setError(e);\n          });\n        } else if (!play && !this.videoEl!.paused) {\n          this.videoEl?.pause();\n        }\n\n        resolve();\n\n        // 如果有待处理的seek请求，立即执行它\n        if (this.pendingSeek) {\n          const { targetTime, play } = this.pendingSeek;\n          this.pendingSeek = null; // 清空待处理的seek请求\n          console.log(`Executing queued seek to targetTime=${targetTime}`);\n          this.seek(targetTime, play); // 执行新的seek操作\n        }\n      };\n\n      const onCanPlay = () => {\n        console.log(`Can play, performing seek to targetTime=${targetTime}`);\n        removeListener(this.videoEl!, 'canplay', onCanPlay);\n        this.videoEl!.currentTime = targetTime;\n        addListener(this.videoEl!, 'seeked', onSeeked);\n      };\n\n      const seekTimeout = setTimeout(() => {\n        console.error('Seek operation timed out: ', (1000 / this.frameRate) * VIDEO_DECODE_SEEK_TIMEOUT_FRAME);\n        removeListener(this.videoEl!, 'canplay', onCanPlay);\n        removeListener(this.videoEl!, 'seeked', onSeeked);\n        this.seeking = false; // 重置seek状态\n      }, (1000 / this.frameRate) * VIDEO_DECODE_SEEK_TIMEOUT_FRAME);\n\n      // Check if we need to wait for 'canplay' event before seeking.\n      if (this.videoEl.readyState < HTMLMediaElement.HAVE_FUTURE_DATA) {\n        console.log('Waiting for video to have future data before seeking.');\n        addListener(this.videoEl, 'canplay', onCanPlay);\n      } else {\n        // We already have enough data to perform the seek.\n        console.log(`Video ready, performing seek to targetTime=${targetTime}`);\n        this.videoEl!.currentTime = targetTime;\n        addListener(this.videoEl, 'seeked', onSeeked);\n      }\n    });\n  }\n\n  private setError(e: any) {\n    this.error = e;\n  }\n\n  private linkPlayer(player: PAGPlayer | null) {\n    this.player = player;\n    if (player) {\n      player.linkVideoReader(this);\n    }\n  }\n}\n\nexport class StaticTimeRanges {\n  private timeRanges: TimeRange[];\n\n  public constructor(timeRanges: TimeRange[]) {\n    this.timeRanges = timeRanges;\n  }\n\n  public contains(targetFrame: number) {\n    if (this.timeRanges.length === 0) return false;\n    for (let timeRange of this.timeRanges) {\n      if (timeRange.start <= targetFrame && targetFrame < timeRange.end) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","import { isInstanceOf } from './type-utils';\n\nexport const readFile = (file: File) =>\n  new Promise<ArrayBuffer | null>((resolve) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      resolve(reader.result as ArrayBuffer | null);\n    };\n    reader.onerror = () => {\n      console.error((reader.error as DOMException).message);\n    };\n    reader.readAsArrayBuffer(file);\n  });\n\nexport const transferToArrayBuffer = (data: File | Blob | ArrayBuffer) => {\n  if (isInstanceOf(data, globalThis.File)) {\n    return readFile(data as File);\n  } else if (isInstanceOf(data, globalThis.Blob)) {\n    return readFile(new File([data as Blob], ''));\n  } else if (isInstanceOf(data, globalThis.ArrayBuffer)) {\n    return Promise.resolve(data as ArrayBuffer);\n  }\n  return Promise.resolve(null);\n};\n\nexport const concatUint8Arrays = (arrays: Array<Uint8Array>) => {\n  let totalLength = 0;\n  for (const arr of arrays) {\n    totalLength += arr.byteLength;\n  }\n  const result = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const arr of arrays) {\n    result.set(arr, offset);\n    offset += arr.byteLength;\n  }\n  return result;\n};\n","import { PAGModule } from '../pag-module';\n\nexport function wasmAwaitRewind(constructor: any) {\n  const ignoreStaticFunctions = ['length', 'name', 'prototype', 'wasmAsyncMethods'];\n  let staticFunctions = Object.getOwnPropertyNames(constructor).filter(\n    (name) => ignoreStaticFunctions.indexOf(name) === -1,\n  );\n  if (constructor.wasmAsyncMethods && constructor.wasmAsyncMethods.length > 0) {\n    staticFunctions = staticFunctions.filter((name) => constructor.wasmAsyncMethods.indexOf(name) === -1);\n  }\n\n  let functions = Object.getOwnPropertyNames(constructor.prototype).filter(\n    (name) => name !== 'constructor' && typeof constructor.prototype[name] === 'function',\n  );\n  if (constructor.prototype.wasmAsyncMethods && constructor.prototype.wasmAsyncMethods.length > 0) {\n    functions = functions.filter((name) => constructor.prototype.wasmAsyncMethods.indexOf(name) === -1);\n  }\n\n  const proxyFn = (target: { [prop: string]: (...args: any[]) => any }, methodName: string) => {\n    const fn = target[methodName];\n    target[methodName] = function (...args) {\n      if (PAGModule.Asyncify.currData !== null) {\n        const currData = PAGModule.Asyncify.currData;\n        PAGModule.Asyncify.currData = null;\n        const ret = fn.call(this, ...args);\n        PAGModule.Asyncify.currData = currData;\n        return ret;\n      } else {\n        return fn.call(this, ...args);\n      }\n    };\n  };\n\n  staticFunctions.forEach((name) => proxyFn(constructor, name));\n  functions.forEach((name) => proxyFn(constructor.prototype, name));\n}\n\nexport function wasmAsyncMethod(target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n  if (!target.wasmAsyncMethods) {\n    target.wasmAsyncMethods = [];\n  }\n  target.wasmAsyncMethods.push(propertyKey);\n}\n\nexport function destroyVerify(constructor: any) {\n  let functions = Object.getOwnPropertyNames(constructor.prototype).filter(\n    (name) => name !== 'constructor' && typeof constructor.prototype[name] === 'function',\n  );\n\n  const proxyFn = (target: { [prop: string]: any }, methodName: string) => {\n    const fn = target[methodName];\n    target[methodName] = function (...args: any[]) {\n      if (this['isDestroyed']) {\n        console.error(`Don't call ${methodName} of the ${constructor.name} that is destroyed.`);\n        return;\n      }\n      return fn.call(this, ...args);\n    };\n  };\n  functions.forEach((name) => proxyFn(constructor.prototype, name));\n}\n","import { WorkerMessageType } from './events';\nimport { postMessage } from './utils';\nimport { transferToArrayBuffer } from '../utils/common';\nimport { destroyVerify } from '../utils/decorators';\n\nimport type { WorkerPAGImage } from './pag-image';\nimport type { TextDocument } from '../types';\n\n@destroyVerify\nexport class WorkerPAGFile {\n  /**\n   * Load pag file from file.\n   */\n  public static async load(worker: Worker, data: File | Blob | ArrayBuffer) {\n    const buffer = await transferToArrayBuffer(data);\n    if (!buffer)\n      throw new Error(\n        'Initialize PAGFile data type error, please put check data type must to be File ｜ Blob | ArrayBuffer!',\n      );\n    return await postMessage(\n      worker,\n      { name: WorkerMessageType.PAGFile_load, args: [data] },\n      (key) => new WorkerPAGFile(worker, key),\n    );\n  }\n\n  public key: number;\n  public worker: Worker;\n  public isDestroyed = false;\n\n  public constructor(worker: Worker, key: number) {\n    this.worker = worker;\n    this.key = key;\n  }\n  /**\n   * Get a text data of the specified index. The index ranges from 0 to numTexts - 1.\n   * Note: It always returns the default text data.\n   */\n  public getTextData(editableTextIndex: number) {\n    return postMessage(\n      this.worker,\n      { name: WorkerMessageType.PAGFile_getTextData, args: [this.key, editableTextIndex] },\n      (res: TextDocument & { key: number }) => {\n        res.delete = () => {\n          return postMessage(\n            this.worker,\n            { name: WorkerMessageType.TextDocument_delete, args: [res.key] },\n            () => undefined,\n          );\n        };\n        return res;\n      },\n    );\n  }\n  /**\n   * Replace the text data of the specified index. The index ranges from 0 to PAGFile.numTexts - 1.\n   * Passing in null for the textData parameter will reset it to default text data.\n   */\n  public replaceText(editableTextIndex: number, textData: TextDocument & { [prop: string]: any }): Promise<void> {\n    const textDocument: { [prop: string]: any } = {};\n    for (const key in textData) {\n      if (key !== 'delete') {\n        textDocument[key] = textData[key];\n      }\n    }\n    return postMessage(\n      this.worker,\n      { name: WorkerMessageType.PAGFile_replaceText, args: [this.key, editableTextIndex, textDocument] },\n      () => undefined,\n    );\n  }\n  /**\n   * Replace the image content of the specified index with a PAGImage object. The index ranges from\n   * 0 to PAGFile.numImages - 1. Passing in null for the image parameter will reset it to default\n   * image content.\n   */\n  public replaceImage(editableImageIndex: number, pagImage: WorkerPAGImage) {\n    return postMessage(\n      this.worker,\n      { name: WorkerMessageType.PAGFile_replaceImage, args: [this.key, editableImageIndex, pagImage.key] },\n      () => undefined,\n    );\n  }\n\n  public destroy(): Promise<void> {\n    return postMessage(this.worker, { name: WorkerMessageType.PAGFile_destroy, args: [this.key] }, () => {\n      this.isDestroyed = true;\n    });\n  }\n}\n","export const calculateDisplaySize = (canvas: HTMLCanvasElement) => {\n  const styleDeclaration = globalThis.getComputedStyle(canvas, null);\n  const computedSize = {\n    width: Number(styleDeclaration.width.replace('px', '')),\n    height: Number(styleDeclaration.height.replace('px', '')),\n  };\n  if (computedSize.width > 0 && computedSize.height > 0) {\n    return computedSize;\n  } else {\n    const styleSize = {\n      width: Number(canvas.style.width.replace('px', '')),\n      height: Number(canvas.style.height.replace('px', '')),\n    };\n    if (styleSize.width > 0 && styleSize.height > 0) {\n      return styleSize;\n    } else {\n      return {\n        width: canvas.width,\n        height: canvas.height,\n      };\n    }\n  }\n};\n","import { WorkerMessageType } from './events';\nimport { postMessage } from './utils';\nimport { destroyVerify } from '../utils/decorators';\nimport { calculateDisplaySize } from '../utils/canvas';\n\nimport type { WorkerPAGFile } from './pag-file';\nimport type { PAGViewOptions } from '../pag-view';\nimport type { DebugData, PAGScaleMode } from '../types';\n\n@destroyVerify\nexport class WorkerPAGView {\n  /**\n   * Create pag view.\n   * @param file pag file.\n   * @param canvas target render canvas.\n   * @param initOptions pag view options\n   * @returns\n   */\n  public static init(file: WorkerPAGFile, canvas: HTMLCanvasElement, initOptions?: PAGViewOptions) {\n    const options = {\n      ...{\n        useScale: true,\n        useCanvas2D: false,\n        firstFrame: true,\n      },\n      ...initOptions,\n    };\n    if (options.useScale) {\n      resizeCanvas(canvas);\n    }\n    const offscreen = canvas.transferControlToOffscreen();\n    return postMessage(\n      file.worker,\n      { name: WorkerMessageType.PAGView_init, args: [file.key, offscreen, initOptions] },\n      (key: number) => new WorkerPAGView(file.worker, key),\n      [offscreen],\n    );\n  }\n\n  public key: number;\n  public worker: Worker;\n  public isDestroyed = false;\n\n  public constructor(worker: Worker, key: number) {\n    this.worker = worker;\n    this.key = key;\n  }\n  /**\n   * The duration of current composition in microseconds.\n   */\n  public duration() {\n    return postMessage(\n      this.worker,\n      { name: WorkerMessageType.PAGView_duration, args: [this.key] },\n      (res: number) => res,\n    );\n  }\n  /**\n   * Start the animation.\n   */\n  public play() {\n    return postMessage(this.worker, { name: WorkerMessageType.PAGView_play, args: [this.key] }, () => undefined);\n  }\n  /**\n   * Pause the animation.\n   */\n  public pause(): Promise<void> {\n    return postMessage(this.worker, { name: WorkerMessageType.PAGView_pause, args: [this.key] }, () => undefined);\n  }\n  /**\n   * Stop the animation.\n   */\n  public stop(): Promise<void> {\n    return postMessage(this.worker, { name: WorkerMessageType.PAGView_stop, args: [this.key] }, () => undefined);\n  }\n  /**\n   * Set the number of times the animation will repeat. The default is 1, which means the animation\n   * will play only once. 0 means the animation will play infinity times.\n   */\n  public setRepeatCount(repeatCount: number): Promise<void> {\n    return postMessage(\n      this.worker,\n      { name: WorkerMessageType.PAGView_setRepeatCount, args: [this.key, repeatCount] },\n      () => undefined,\n    );\n  }\n  /**\n   * Returns the current progress of play position, the value is from 0.0 to 1.0. It is applied only\n   * when the composition is not null.\n   */\n  public getProgress() {\n    return postMessage(\n      this.worker,\n      { name: WorkerMessageType.PAGView_getProgress, args: [this.key] },\n      (res: number) => res,\n    );\n  }\n  /**\n   * Returns the current frame.\n   */\n  public currentFrame() {\n    return postMessage(\n      this.worker,\n      { name: WorkerMessageType.PAGView_currentFrame, args: [this.key] },\n      (res: number) => res,\n    );\n  }\n  /**\n   * Set the progress of play position, the value is from 0.0 to 1.0.\n   */\n  public setProgress(progress: number) {\n    return postMessage(\n      this.worker,\n      {\n        name: WorkerMessageType.PAGView_setProgress,\n        args: [this.key, progress],\n      },\n      () => undefined,\n    );\n  }\n  /**\n   * Returns the current scale mode.\n   */\n  public scaleMode() {\n    return postMessage(\n      this.worker,\n      { name: WorkerMessageType.PAGView_scaleMode, args: [this.key] },\n      (res: number) => res,\n    );\n  }\n  /**\n   * Specifies the rule of how to scale the pag content to fit the surface size. The matrix\n   * changes when this method is called.\n   */\n  public setScaleMode(value: PAGScaleMode): Promise<void> {\n    return postMessage(\n      this.worker,\n      { name: WorkerMessageType.PAGView_setScaleMode, args: [this.key, value] },\n      () => undefined,\n    );\n  }\n  /**\n   * Call this method to render current position immediately. If the play() method is already\n   * called, there is no need to call it. Returns true if the content has changed.\n   */\n  public flush() {\n    return postMessage(this.worker, { name: WorkerMessageType.PAGView_flush, args: [this.key] }, (res: boolean) => res);\n  }\n\n  public getDebugData() {\n    return postMessage(\n      this.worker,\n      { name: WorkerMessageType.PAGView_getDebugData, args: [this.key] },\n      (res: DebugData) => res,\n    );\n  }\n\n  public destroy() {\n    postMessage(this.worker, { name: WorkerMessageType.PAGView_destroy, args: [this.key] }, () => {\n      this.isDestroyed = true;\n    });\n  }\n}\n\nconst resizeCanvas = (canvas: HTMLCanvasElement) => {\n  const displaySize = calculateDisplaySize(canvas);\n  canvas.style.width = `${displaySize.width}px`;\n  canvas.style.height = `${displaySize.height}px`;\n  canvas.width = displaySize.width * globalThis.devicePixelRatio;\n  canvas.height = displaySize.height * globalThis.devicePixelRatio;\n};\n","import { destroyVerify } from '../utils/decorators';\nimport { isInstanceOf } from '../utils/type-utils';\nimport { WorkerMessageType } from './events';\nimport { postMessage } from './utils';\n\n@destroyVerify\nexport class WorkerPAGImage {\n  public static async fromSource(worker: Worker, source: TexImageSource) {\n    const width = isInstanceOf(source, globalThis.HTMLVideoElement)\n      ? (source as HTMLVideoElement).videoWidth\n      : source.width;\n    const height = isInstanceOf(source, globalThis.HTMLVideoElement)\n      ? (source as HTMLVideoElement).videoHeight\n      : source.height;\n    const canvas = new OffscreenCanvas(width, height);\n    canvas.width = source.width;\n    canvas.height = source.height;\n    const ctx = canvas.getContext('2d') as OffscreenCanvasRenderingContext2D;\n    ctx.drawImage(source as CanvasImageSource, 0, 0, source.width, source.height);\n    const bitmap = await createImageBitmap(canvas);\n    return postMessage(\n      worker,\n      { name: WorkerMessageType.PAGImage_fromSource, args: [bitmap] },\n      (key: number) => new WorkerPAGImage(worker, key),\n      [bitmap],\n    );\n  }\n\n  public worker: Worker;\n  public key: number;\n  public isDestroyed = false;\n\n  public constructor(worker: Worker, key: number) {\n    this.worker = worker;\n    this.key = key;\n  }\n\n  public destroy(): Promise<void> {\n    return postMessage(this.worker, { name: WorkerMessageType.PAGImage_destroy, args: [this.key] }, () => {\n      this.isDestroyed = true;\n    });\n  }\n}\n","import { WorkerMessageType } from './events';\nimport { postMessage } from './utils';\nimport { VideoReader } from '../core/video-reader';\nimport { WorkerPAGFile } from './pag-file';\nimport { WorkerPAGView } from './pag-view';\nimport { WorkerPAGImage } from './pag-image';\n\nimport type { WorkerMessage } from './worker';\nimport type { ModuleOption } from '../pag';\nimport type { TimeRange } from '../interfaces';\n\nexport const MAX_ACTIVE_WORKER_CONTEXTS = 4;\n\nconst videoReaders: VideoReader[] = [];\n\nexport interface PAGWorkerOptions {\n  /**\n   * Link to wasm file and libpag core script.\n   */\n  locateFile?: (file: 'libpag.wasm' | 'libpag.js') => string;\n  /**\n   * Configure for worker.\n   */\n  workerOptions?: WorkerOptions;\n}\n\nexport const createPAGWorker = (pagWorkerOptions: PAGWorkerOptions = {}) => {\n  let scriptUrl = pagWorkerOptions.locateFile ? pagWorkerOptions.locateFile('libpag.js') : 'libpag.js';\n  const option: { fileUrl?: string } & ModuleOption = {};\n  if (pagWorkerOptions.locateFile) {\n    option.fileUrl = pagWorkerOptions.locateFile('libpag.wasm');\n  }\n  const worker = new Worker(scriptUrl, pagWorkerOptions.workerOptions);\n  return postMessage(worker, { name: WorkerMessageType.PAGInit, args: [option] }, () => {\n    addGlobalWorkerListener(worker);\n    return worker;\n  });\n};\n\nconst addGlobalWorkerListener = (worker: Worker) => {\n  const handle = (event: MessageEvent<WorkerMessage>) => {\n    if (event.data.name.includes(WorkerMessageType.VideoReader_constructor)) {\n      const videoReader = new VideoReader(\n        ...(event.data.args as [Uint8Array, number, number, number, TimeRange[], boolean]),\n      );\n      videoReaders.push(videoReader);\n      worker.postMessage({ name: event.data.name, args: [videoReaders.length - 1] });\n      return;\n    }\n    if (event.data.name.includes(WorkerMessageType.VideoReader_prepare)) {\n      const [proxyId, targetFrame, playbackRate] = event.data.args as [number, number, number];\n      videoReaders[proxyId].prepare(targetFrame, playbackRate).then(() => {\n        videoReaders[proxyId].generateBitmap().then((bitmap) => {\n          worker.postMessage({ name: event.data.name, args: [bitmap] }, [bitmap]);\n        });\n      });\n    }\n    if (event.data.name.includes(WorkerMessageType.VideoReader_play)) {\n      videoReaders[event.data.args[0]].play().then((res) => {\n        worker.postMessage({ name: event.data.name, args: [res] });\n      });\n    }\n    if (event.data.name.includes(WorkerMessageType.VideoReader_pause)) {\n      videoReaders[event.data.args[0]].pause();\n    }\n    if (event.data.name.includes(WorkerMessageType.VideoReader_stop)) {\n      videoReaders[event.data.args[0]].stop();\n    }\n    if (event.data.name.includes(WorkerMessageType.VideoReader_getError)) {\n      worker.postMessage({ name: event.data.name, args: [videoReaders[event.data.args[0]].getError()] });\n    }\n  };\n  worker.addEventListener('message', handle);\n};\n\nexport { WorkerPAGFile, WorkerPAGView, WorkerPAGImage };\n"],"names":["WorkerMessageType","targetTime","play","__decorateClass"],"mappings":"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"}